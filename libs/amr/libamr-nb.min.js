var opencoreamr=function(){var arguments_=[];var ENVIRONMENT_IS_NODE=typeof process==="object";var ENVIRONMENT_IS_WEB=typeof window==="object";var ENVIRONMENT_IS_WORKER=typeof importScripts==="function";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){print=function(x){process["stdout"].write(x+"\n")};printErr=function(x){process["stderr"].write(x+"\n")};var nodeFS=require("fs");read=function(filename){var ret=nodeFS["readFileSync"](filename).toString();if(!ret&&filename[0]!="/"){filename=__dirname.split("/").slice(0,-1).join("/")+"/src/"+filename;ret=nodeFS["readFileSync"](filename).toString()}return ret};arguments_=process["argv"].slice(2)}else if(ENVIRONMENT_IS_SHELL){if(!this["read"]){read=function(f){snarf(f)}}if(!this["arguments"]){arguments_=scriptArgs}else{arguments_=arguments}}else if(ENVIRONMENT_IS_WEB){print=printErr=function(x){console.log(x)};read=function(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(this["arguments"]){arguments_=arguments}}else if(ENVIRONMENT_IS_WORKER){load=importScripts}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(typeof load=="undefined"&&typeof read!="undefined"){load=function(f){globalEval(read(f))}}if(typeof printErr==="undefined"){printErr=function(){}}if(typeof print==="undefined"){print=printErr}try{this["Module"]=Module}catch(e){this["Module"]=Module={}}if(!Module.arguments){Module.arguments=arguments_}if(Module.print){print=Module.print}var Runtime={stackSave:function(){return STACKTOP},stackRestore:function(stackTop){STACKTOP=stackTop},forceAlign:function(target,quantum){quantum=quantum||4;if(quantum==1)return target;if(isNumber(target)&&isNumber(quantum)){return Math.ceil(target/quantum)*quantum}else if(isNumber(quantum)&&isPowerOfTwo(quantum)){var logg=log2(quantum);return"(((("+target+")+"+(quantum-1)+")>>"+logg+")<<"+logg+")"}return"Math.ceil(("+target+")/"+quantum+")*"+quantum},isNumberType:function(type){return type in Runtime.INT_TYPES||type in Runtime.FLOAT_TYPES},isPointerType:function isPointerType(type){return type[type.length-1]=="*"},isStructType:function isStructType(type){if(isPointerType(type))return false;if(/^\[\d+\ x\ (.*)\]/.test(type))return true;if(/<?{ [^}]* }>?/.test(type))return true;return type[0]=="%"},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{float:0,double:0},bitshift64:function(low,high,op,bits){var ander=Math.pow(2,bits)-1;if(bits<32){switch(op){case"shl":return[low<<bits,high<<bits|(low&ander<<32-bits)>>>32-bits];case"ashr":return[(low>>>bits|(high&ander)<<32-bits)>>0>>>0,high>>bits>>>0];case"lshr":return[(low>>>bits|(high&ander)<<32-bits)>>>0,high>>>bits]}}else if(bits==32){switch(op){case"shl":return[0,low];case"ashr":return[high,(high|0)<0?ander:0];case"lshr":return[high,0]}}else{switch(op){case"shl":return[0,low<<bits-32];case"ashr":return[high>>bits-32>>>0,(high|0)<0?ander:0];case"lshr":return[high>>>bits-32,0]}}abort("unknown bitshift64 op: "+[value,op,bits])},or64:function(x,y){var l=x|0|(y|0);var h=(Math.round(x/4294967296)|Math.round(y/4294967296))*4294967296;return l+h},and64:function(x,y){var l=(x|0)&(y|0);var h=(Math.round(x/4294967296)&Math.round(y/4294967296))*4294967296;return l+h},xor64:function(x,y){var l=(x|0)^(y|0);var h=(Math.round(x/4294967296)^Math.round(y/4294967296))*4294967296;return l+h},getNativeTypeSize:function(type,quantumSize){if(Runtime.QUANTUM_SIZE==1)return 1;var size={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+type];if(!size){if(type[type.length-1]=="*"){size=Runtime.QUANTUM_SIZE}else if(type[0]=="i"){var bits=parseInt(type.substr(1));assert(bits%8==0);size=bits/8}}return size},getNativeFieldSize:function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)},dedup:function dedup(items,ident){var seen={};if(ident){return items.filter(function(item){if(seen[item[ident]])return false;seen[item[ident]]=true;return true})}else{return items.filter(function(item){if(seen[item])return false;seen[item]=true;return true})}},set:function set(){var args=typeof arguments[0]==="object"?arguments[0]:arguments;var ret={};for(var i=0;i<args.length;i++){ret[args[i]]=0}return ret},calculateStructAlignment:function calculateStructAlignment(type){type.flatSize=0;type.alignSize=0;var diffs=[];var prev=-1;type.flatIndexes=type.fields.map(function(field){var size,alignSize;if(Runtime.isNumberType(field)||Runtime.isPointerType(field)){size=Runtime.getNativeTypeSize(field);alignSize=size}else if(Runtime.isStructType(field)){size=Types.types[field].flatSize;alignSize=Types.types[field].alignSize}else{throw"Unclear type in struct: "+field+", in "+type.name_+" :: "+dump(Types.types[type.name_])}alignSize=type.packed?1:Math.min(alignSize,Runtime.QUANTUM_SIZE);type.alignSize=Math.max(type.alignSize,alignSize);var curr=Runtime.alignMemory(type.flatSize,alignSize);type.flatSize=curr+size;if(prev>=0){diffs.push(curr-prev)}prev=curr;return curr});type.flatSize=Runtime.alignMemory(type.flatSize,type.alignSize);if(diffs.length==0){type.flatFactor=type.flatSize}else if(Runtime.dedup(diffs).length==1){type.flatFactor=diffs[0]}type.needsFlattening=type.flatFactor!=1;return type.flatIndexes},generateStructInfo:function(struct,typeName,offset){var type,alignment;if(typeName){offset=offset||0;type=(typeof Types==="undefined"?Runtime.typeInfo:Types.types)[typeName];if(!type)return null;assert(type.fields.length===struct.length,"Number of named fields must match the type for "+typeName);alignment=type.flatIndexes}else{var type={fields:struct.map(function(item){return item[0]})};alignment=Runtime.calculateStructAlignment(type)}var ret={__size__:type.flatSize};if(typeName){struct.forEach(function(item,i){if(typeof item==="string"){ret[item]=alignment[i]+offset}else{var key;for(var k in item)key=k;ret[key]=Runtime.generateStructInfo(item[key],type.fields[i],alignment[i])}})}else{struct.forEach(function(item,i){ret[item[1]]=alignment[i]})}return ret},stackAlloc:function stackAlloc(size){var ret=STACKTOP;STACKTOP+=size;STACKTOP=STACKTOP+3>>2<<2;assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack");return ret},staticAlloc:function staticAlloc(size){var ret=STATICTOP;STATICTOP+=size;STATICTOP=STATICTOP+3>>2<<2;if(STATICTOP>=TOTAL_MEMORY)enlargeMemory();return ret},alignMemory:function alignMemory(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:4))*(quantum?quantum:4);return ret},makeBigInt:function makeBigInt(low,high,unsigned){var ret=unsigned?(low>>>0)+(high>>>0)*4294967296:(low>>>0)+(high|0)*4294967296;return ret},QUANTUM_SIZE:4,__dummy__:0};var CorrectionsMonitor={MAX_ALLOWED:0,corrections:0,sigs:{},note:function(type,succeed,sig){if(!succeed){this.corrections++;if(this.corrections>=this.MAX_ALLOWED)abort("\n\nToo many corrections!")}},print:function(){}};var __THREW__=false;var ABORT=false;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD;var tempI64,tempI64b;function abort(text){print(text+":\n"+(new Error).stack);ABORT=true;throw"Assertion: "+text}function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var globalScope=this;function ccall(ident,returnType,argTypes,args){function toC(value,type){if(type=="string"){var ret=STACKTOP;Runtime.stackAlloc(value.length+1);writeStringToMemory(value,ret);return ret}return value}function fromC(value,type){if(type=="string"){return Pointer_stringify(value)}return value}try{var func=eval("_"+ident)}catch(e){try{func=globalScope["Module"]["_"+ident]}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");var i=0;var cArgs=args?args.map(function(arg){return toC(arg,argTypes[i++])}):[];return fromC(func.apply(null,cArgs),returnType)}Module["ccall"]=ccall;function cwrap(ident,returnType,argTypes){return function(){return ccall(ident,returnType,argTypes,Array.prototype.slice.call(arguments))}}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type[type.length-1]==="*")type="i32";switch(type){case"i1":HEAP8[ptr]=value;break;case"i8":HEAP8[ptr]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":HEAP32[ptr>>2]=value;break;case"float":HEAPF32[ptr>>2]=value;break;case"double":tempDoubleF64[0]=value,HEAP32[ptr>>2]=tempDoubleI32[0],HEAP32[ptr+4>>2]=tempDoubleI32[1];break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type[type.length-1]==="*")type="i32";switch(type){case"i1":return HEAP8[ptr];case"i8":return HEAP8[ptr];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return tempDoubleI32[0]=HEAP32[ptr>>2],tempDoubleI32[1]=HEAP32[ptr+4>>2],tempDoubleF64[0];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;function allocate(slab,types,allocator){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length));if(zeroinit){_memset(ret,0,size);return ret}var i=0,type;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}assert(type,"Must know what type to store in allocate!");if(type=="i64")type="i32";setValue(ret+i,curr,type);i+=Runtime.getNativeTypeSize(type)}return ret}Module["allocate"]=allocate;function Pointer_stringify(ptr,length){var nullTerminated=typeof length=="undefined";var ret="";var i=0;var t;var nullByte=String.fromCharCode(0);while(1){t=String.fromCharCode(HEAPU8[ptr+i]);if(nullTerminated&&t==nullByte){break}else{}ret+=t;i+=1;if(!nullTerminated&&i==length){break}}return ret}Module["Pointer_stringify"]=Pointer_stringify;function Array_stringify(array){var ret="";for(var i=0;i<array.length;i++){ret+=String.fromCharCode(array[i])}return ret}Module["Array_stringify"]=Array_stringify;var FUNCTION_TABLE;var PAGE_SIZE=4096;function alignMemoryPage(x){return Math.ceil(x/PAGE_SIZE)*PAGE_SIZE}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32;var STACK_ROOT,STACKTOP,STACK_MAX;var STATICTOP;function enlargeMemory(){printErr("Warning: Enlarging memory arrays, this is not fast! "+[STATICTOP,TOTAL_MEMORY]);assert(STATICTOP>=TOTAL_MEMORY);assert(TOTAL_MEMORY>4);while(TOTAL_MEMORY<=STATICTOP){TOTAL_MEMORY=alignMemoryPage(2*TOTAL_MEMORY)}var oldHEAP8=HEAP8;var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAP8.set(oldHEAP8)}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||10485760;var FAST_MEMORY=Module["FAST_MEMORY"]||2097152;assert(!!Int32Array&&!!Float64Array&&!!new Int32Array(1)["subarray"]&&!!new Int32Array(1)["set"],"Cannot fallback to non-typed array case: Code is too specialized");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,"Typed arrays 2 must be run on a little-endian system");var base=intArrayFromString("(null)");STATICTOP=base.length;for(var i=0;i<base.length;i++){HEAP8[i]=base[i]}Module["HEAP"]=HEAP;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;STACK_ROOT=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_ROOT+TOTAL_STACK;var tempDoublePtr=Runtime.alignMemory(STACK_MAX,8);var tempDoubleI8=HEAP8.subarray(tempDoublePtr);var tempDoubleI32=HEAP32.subarray(tempDoublePtr>>2);var tempDoubleF32=HEAPF32.subarray(tempDoublePtr>>2);var tempDoubleF64=new Float64Array(HEAP8.buffer).subarray(tempDoublePtr>>3);function copyTempFloat(ptr){tempDoubleI8[0]=HEAP8[ptr];tempDoubleI8[1]=HEAP8[ptr+1];tempDoubleI8[2]=HEAP8[ptr+2];tempDoubleI8[3]=HEAP8[ptr+3]}function copyTempDouble(ptr){tempDoubleI8[0]=HEAP8[ptr];tempDoubleI8[1]=HEAP8[ptr+1];tempDoubleI8[2]=HEAP8[ptr+2];tempDoubleI8[3]=HEAP8[ptr+3];tempDoubleI8[4]=HEAP8[ptr+4];tempDoubleI8[5]=HEAP8[ptr+5];tempDoubleI8[6]=HEAP8[ptr+6];tempDoubleI8[7]=HEAP8[ptr+7]}STACK_MAX=tempDoublePtr+8;STATICTOP=alignMemoryPage(STACK_MAX);function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();var func=callback.func;if(typeof func==="number"){func=FUNCTION_TABLE[func]}func(callback.arg===undefined?null:callback.arg)}}var __ATINIT__=[];var __ATEXIT__=[];function initRuntime(){callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);CorrectionsMonitor.print()}function Array_copy(ptr,num){return Array.prototype.slice.call(HEAP8.subarray(ptr,ptr+num));return HEAP.slice(ptr,ptr+num)}Module["Array_copy"]=Array_copy;function TypedArray_copy(ptr,num){var arr=new Uint8Array(num);for(var i=0;i<num;++i){arr[i]=HEAP8[ptr+i]}return arr.buffer}Module["TypedArray_copy"]=TypedArray_copy;function String_len(ptr){var i=0;while(HEAP8[ptr+i])i++;return i}Module["String_len"]=String_len;function String_copy(ptr,addZero){var len=String_len(ptr);if(addZero)len++;var ret=Array_copy(ptr,len);if(addZero)ret[len-1]=0;return ret}Module["String_copy"]=String_copy;function intArrayFromString(stringy,dontAddNull){var ret=[];var t;var i=0;while(i<stringy.length){var chr=stringy.charCodeAt(i);if(chr>255){assert(false,"Character code "+chr+" ("+stringy[i]+")  at offset "+i+" not in 0x00-0xFF.");chr&=255}ret.push(chr);i=i+1}if(!dontAddNull){ret.push(0)}return ret}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){assert(false,"Character code "+chr+" ("+String.fromCharCode(chr)+")  at offset "+i+" not in 0x00-0xFF.");chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var i=0;while(i<string.length){var chr=string.charCodeAt(i);if(chr>255){assert(false,"Character code "+chr+" ("+string[i]+")  at offset "+i+" not in 0x00-0xFF.");chr&=255}HEAP8[buffer+i]=chr;i=i+1}if(!dontAddNull){HEAP8[buffer+i]=0}}Module["writeStringToMemory"]=writeStringToMemory;var STRING_TABLE=[];function unSign(value,bits,ignore,sig){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore,sig){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}function _add_16($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $sum;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $add=$conv+$conv1|0;$sum=$add;var $2=$sum;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$sum=32767;__label__=5;break;case 2:var $4=$sum;var $cmp3=($4|0)<-32768;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:var $5=$pOverflow_addr;HEAP32[$5>>2]=1;$sum=-32768;__label__=4;break;case 4:__label__=5;break;case 5:var $6=$sum;var $conv7=$6&65535;return $conv7;default:assert(0,"bad label: "+__label__)}}function _L_shl($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_shr($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mult($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_mac($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac["X"]=1;function _agc_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $past_gain=$1|0;HEAP16[$past_gain>>1]=4096;$retval=0;__label__=3;break;case 3:var $2=$retval;return $2;default:assert(0,"bad label: "+__label__)}}function _energy_old_Wrapper($in,$l_trm,$pOverflow){var __label__;var $in_addr;var $l_trm_addr;var $pOverflow_addr;var $energy_old_value;$in_addr=$in;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;var $0=$in_addr;var $1=$l_trm_addr;var $2=$pOverflow_addr;var $call=_energy_old($0,$1,$2);$energy_old_value=$call;var $3=$energy_old_value;return $3}function _energy_old($in,$l_trm,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $in_addr;var $l_trm_addr;var $pOverflow_addr;var $s;var $i;var $temp;$in_addr=$in;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;$s=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$l_trm_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $idxprom=$2<<16>>16;var $3=$in_addr;var $arrayidx=$3+($idxprom<<1)|0;var $4=HEAP16[$arrayidx>>1];var $conv3=$4<<16>>16;var $shr=$conv3>>2;var $conv4=$shr&65535;$temp=$conv4;var $5=$s;var $6=$temp;var $7=$temp;var $8=$pOverflow_addr;var $call=_L_mac($5,$6,$7,$8);$s=$call;__label__=3;break;case 3:var $9=$i;var $inc=$9+1&65535;$i=$inc;__label__=1;break;case 4:var $10=$s;return $10;default:assert(0,"bad label: "+__label__)}}function _energy_new_Wrapper($in,$l_trm,$pOverflow){var __label__;var $in_addr;var $l_trm_addr;var $pOverflow_addr;var $energy_new_value;$in_addr=$in;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;var $0=$in_addr;var $1=$l_trm_addr;var $2=$pOverflow_addr;var $call=_energy_new($0,$1,$2);$energy_new_value=$call;var $3=$energy_new_value;return $3}function _energy_new($in,$l_trm,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $in_addr;var $l_trm_addr;var $pOverflow_addr;var $s;var $i;var $ov_save;$in_addr=$in;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;$s=0;var $0=$pOverflow_addr;var $1=HEAP32[$0>>2];$ov_save=$1;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $3=$l_trm_addr;var $conv1=$3<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$s;var $5=$i;var $idxprom=$5<<16>>16;var $6=$in_addr;var $arrayidx=$6+($idxprom<<1)|0;var $7=HEAP16[$arrayidx>>1];var $8=$i;var $idxprom3=$8<<16>>16;var $9=$in_addr;var $arrayidx4=$9+($idxprom3<<1)|0;var $10=HEAP16[$arrayidx4>>1];var $11=$pOverflow_addr;var $call=_L_mac($4,$7,$10,$11);$s=$call;__label__=3;break;case 3:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=1;break;case 4:var $13=$s;var $cmp5=($13|0)!=2147483647;if($cmp5){__label__=5;break}else{__label__=6;break}case 5:var $14=$s;var $shr=$14>>4;$s=$shr;__label__=7;break;case 6:var $15=$ov_save;var $16=$pOverflow_addr;HEAP32[$16>>2]=$15;var $17=$in_addr;var $18=$l_trm_addr;var $19=$pOverflow_addr;var $call7=_energy_old($17,$18,$19);$s=$call7;__label__=7;break;case 7:var $20=$s;return $20;default:assert(0,"bad label: "+__label__)}}_energy_new["X"]=1;function _agc($st,$sig_in,$sig_out,$agc_fac,$l_trm,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $sig_in_addr;var $sig_out_addr;var $agc_fac_addr;var $l_trm_addr;var $pOverflow_addr;var $i;var $exp;var $gain_in;var $gain_out;var $g0;var $gain;var $s;var $L_temp;var $temp;var $p_sig_out;$st_addr=$st;$sig_in_addr=$sig_in;$sig_out_addr=$sig_out;$agc_fac_addr=$agc_fac;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;var $0=$sig_out_addr;var $1=$l_trm_addr;var $2=$pOverflow_addr;var $call=_energy_new($0,$1,$2);$s=$call;var $3=$s;var $cmp=($3|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$st_addr;var $past_gain=$4|0;HEAP16[$past_gain>>1]=0;__label__=10;break;case 2:var $5=$s;var $call1=_norm_l($5);var $conv=$call1<<16>>16;var $sub=$conv-1|0;var $conv2=$sub&65535;$exp=$conv2;var $6=$s;var $7=$exp;var $8=$pOverflow_addr;var $call3=_L_shl($6,$7,$8);$L_temp=$call3;var $9=$L_temp;var $10=$pOverflow_addr;var $call4=_pv_round($9,$10);$gain_out=$call4;var $11=$sig_in_addr;var $12=$l_trm_addr;var $13=$pOverflow_addr;var $call5=_energy_new($11,$12,$13);$s=$call5;var $14=$s;var $cmp6=($14|0)==0;if($cmp6){__label__=3;break}else{__label__=4;break}case 3:$g0=0;__label__=5;break;case 4:var $15=$s;var $call9=_norm_l($15);$i=$call9;var $16=$s;var $17=$i;var $conv10=$17<<16>>16;var $shl=$16<<$conv10;$L_temp=$shl;var $18=$L_temp;var $19=$pOverflow_addr;var $call11=_pv_round($18,$19);$gain_in=$call11;var $20=$i;var $conv12=$20<<16>>16;var $21=$exp;var $conv13=$21<<16>>16;var $sub14=$conv13-$conv12|0;var $conv15=$sub14&65535;$exp=$conv15;var $22=$gain_out;var $23=$gain_in;var $call16=_div_s($22,$23);$temp=$call16;var $24=$temp;var $conv17=$24<<16>>16;$s=$conv17;var $25=$s;var $shl18=$25<<7;$s=$shl18;var $26=$s;var $27=$exp;var $28=$pOverflow_addr;var $call19=_L_shr($26,$27,$28);$s=$call19;var $29=$s;var $30=$pOverflow_addr;var $call20=_Inv_sqrt($29,$30);$s=$call20;var $31=$s;var $shl21=$31<<9;$L_temp=$shl21;var $32=$L_temp;var $add=$32+32768|0;var $shr=$add>>16;var $conv22=$shr&65535;$i=$conv22;var $33=$agc_fac_addr;var $conv23=$33<<16>>16;var $sub24=32767-$conv23|0;var $conv25=$sub24&65535;$temp=$conv25;var $34=$i;var $conv26=$34<<16>>16;var $35=$temp;var $conv27=$35<<16>>16;var $mul=$conv26*$conv27|0;var $shr28=$mul>>15;var $conv29=$shr28&65535;$g0=$conv29;__label__=5;break;case 5:var $36=$st_addr;var $past_gain31=$36|0;var $37=HEAP16[$past_gain31>>1];$gain=$37;var $38=$sig_out_addr;$p_sig_out=$38;$i=0;__label__=6;break;case 6:var $39=$i;var $conv32=$39<<16>>16;var $40=$l_trm_addr;var $conv33=$40<<16>>16;var $cmp34=($conv32|0)<($conv33|0);if($cmp34){__label__=7;break}else{__label__=9;break}case 7:var $41=$gain;var $conv36=$41<<16>>16;var $42=$agc_fac_addr;var $conv37=$42<<16>>16;var $mul38=$conv36*$conv37|0;var $shr39=$mul38>>15;var $conv40=$shr39&65535;$gain=$conv40;var $43=$g0;var $conv41=$43<<16>>16;var $44=$gain;var $conv42=$44<<16>>16;var $add43=$conv42+$conv41|0;var $conv44=$add43&65535;$gain=$conv44;var $45=$p_sig_out;var $46=HEAP16[$45>>1];var $conv45=$46<<16>>16;var $47=$gain;var $conv46=$47<<16>>16;var $mul47=$conv45*$conv46|0;var $shl48=$mul47<<1;$L_temp=$shl48;var $48=$L_temp;var $shr49=$48>>13;var $conv50=$shr49&65535;var $49=$p_sig_out;var $incdec_ptr=$49+2|0;$p_sig_out=$incdec_ptr;HEAP16[$49>>1]=$conv50;__label__=8;break;case 8:var $50=$i;var $inc=$50+1&65535;$i=$inc;__label__=6;break;case 9:var $51=$gain;var $52=$st_addr;var $past_gain51=$52|0;HEAP16[$past_gain51>>1]=$51;__label__=10;break;case 10:;return;default:assert(0,"bad label: "+__label__)}}_agc["X"]=1;function _agc2($sig_in,$sig_out,$l_trm,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $sig_in_addr;var $sig_out_addr;var $l_trm_addr;var $pOverflow_addr;var $i;var $exp;var $gain_in;var $gain_out;var $g0;var $s;var $L_temp;var $temp;$sig_in_addr=$sig_in;$sig_out_addr=$sig_out;$l_trm_addr=$l_trm;$pOverflow_addr=$pOverflow;var $0=$sig_out_addr;var $1=$l_trm_addr;var $2=$pOverflow_addr;var $call=_energy_new($0,$1,$2);$s=$call;var $3=$s;var $cmp=($3|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:__label__=28;break;case 2:var $4=$s;var $call1=_norm_l($4);var $conv=$call1<<16>>16;var $sub=$conv-1|0;var $conv2=$sub&65535;$exp=$conv2;var $5=$s;var $6=$exp;var $7=$pOverflow_addr;var $call3=_L_shl($5,$6,$7);$L_temp=$call3;var $8=$L_temp;var $9=$pOverflow_addr;var $call4=_pv_round($8,$9);$gain_out=$call4;var $10=$sig_in_addr;var $11=$l_trm_addr;var $12=$pOverflow_addr;var $call5=_energy_new($10,$11,$12);$s=$call5;var $13=$s;var $cmp6=($13|0)==0;if($cmp6){__label__=3;break}else{__label__=4;break}case 3:$g0=0;__label__=17;break;case 4:var $14=$s;var $call9=_norm_l($14);$i=$call9;var $15=$s;var $16=$i;var $17=$pOverflow_addr;var $call10=_L_shl($15,$16,$17);$L_temp=$call10;var $18=$L_temp;var $19=$pOverflow_addr;var $call11=_pv_round($18,$19);$gain_in=$call11;var $20=$i;var $conv12=$20<<16>>16;var $21=$exp;var $conv13=$21<<16>>16;var $sub14=$conv13-$conv12|0;var $conv15=$sub14&65535;$exp=$conv15;var $22=$gain_out;var $23=$gain_in;var $call16=_div_s($22,$23);$temp=$call16;var $24=$temp;var $conv17=$24<<16>>16;$s=$conv17;var $25=$s;var $cmp18=($25|0)>16777215;if($cmp18){__label__=5;break}else{__label__=6;break}case 5:$s=2147483647;__label__=10;break;case 6:var $26=$s;var $cmp22=($26|0)<-16777216;if($cmp22){__label__=7;break}else{__label__=8;break}case 7:$s=-2147483648;__label__=9;break;case 8:var $27=$s;var $shl=$27<<7;$s=$shl;__label__=9;break;case 9:__label__=10;break;case 10:var $28=$s;var $29=$exp;var $30=$pOverflow_addr;var $call28=_L_shr($28,$29,$30);$s=$call28;var $31=$s;var $32=$pOverflow_addr;var $call29=_Inv_sqrt($31,$32);$s=$call29;var $33=$s;var $cmp30=($33|0)>4194303;if($cmp30){__label__=11;break}else{__label__=12;break}case 11:$L_temp=2147483647;__label__=16;break;case 12:var $34=$s;var $cmp34=($34|0)<-4194304;if($cmp34){__label__=13;break}else{__label__=14;break}case 13:$L_temp=-2147483648;__label__=15;break;case 14:var $35=$s;var $shl38=$35<<9;$L_temp=$shl38;__label__=15;break;case 15:__label__=16;break;case 16:var $36=$L_temp;var $37=$pOverflow_addr;var $call41=_pv_round($36,$37);$g0=$call41;__label__=17;break;case 17:var $38=$l_trm_addr;var $conv43=$38<<16>>16;var $sub44=$conv43-1|0;var $conv45=$sub44&65535;$i=$conv45;__label__=18;break;case 18:var $39=$i;var $conv46=$39<<16>>16;var $cmp47=($conv46|0)>=0;if($cmp47){__label__=19;break}else{__label__=27;break}case 19:var $40=$i;var $idxprom=$40<<16>>16;var $41=$sig_out_addr;var $arrayidx=$41+($idxprom<<1)|0;var $42=HEAP16[$arrayidx>>1];var $43=$g0;var $44=$pOverflow_addr;var $call49=_L_mult($42,$43,$44);$L_temp=$call49;var $45=$L_temp;var $cmp50=($45|0)>268435455;if($cmp50){__label__=20;break}else{__label__=21;break}case 20:var $46=$i;var $idxprom53=$46<<16>>16;var $47=$sig_out_addr;var $arrayidx54=$47+($idxprom53<<1)|0;HEAP16[$arrayidx54>>1]=32767;__label__=25;break;case 21:var $48=$L_temp;var $cmp56=($48|0)<-268435456;if($cmp56){__label__=22;break}else{__label__=23;break}case 22:var $49=$i;var $idxprom59=$49<<16>>16;var $50=$sig_out_addr;var $arrayidx60=$50+($idxprom59<<1)|0;HEAP16[$arrayidx60>>1]=-32768;__label__=24;break;case 23:var $51=$L_temp;var $shr=$51>>13;var $conv62=$shr&65535;var $52=$i;var $idxprom63=$52<<16>>16;var $53=$sig_out_addr;var $arrayidx64=$53+($idxprom63<<1)|0;HEAP16[$arrayidx64>>1]=$conv62;__label__=24;break;case 24:__label__=25;break;case 25:__label__=26;break;case 26:var $54=$i;var $dec=$54-1&65535;$i=$dec;__label__=18;break;case 27:__label__=28;break;case 28:;return;default:assert(0,"bad label: "+__label__)}}_agc2["X"]=1;function _AMRDecode($state_data,$frame_type,$speech_bits_ptr,$raw_pcm_buffer,$input_format){var __stackBase__=STACKTOP;STACKTOP+=488;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_data_addr;var $frame_type_addr;var $speech_bits_ptr_addr;var $raw_pcm_buffer_addr;var $input_format_addr;var $ets_word_ptr;var $mode;var $modeStore;var $tempInt;var $rx_type;var $dec_ets_input_bfr=__stackBase__;var $i;var $byte_offset;var $decoder_state;$state_data_addr=$state_data;$frame_type_addr=$frame_type;$speech_bits_ptr_addr=$speech_bits_ptr;$raw_pcm_buffer_addr=$raw_pcm_buffer;$input_format_addr=$input_format;$mode=0;$rx_type=7;$byte_offset=-1;var $0=$state_data_addr;var $1=$0;$decoder_state=$1;var $2=$input_format_addr;var $cmp=($2|0)==2;var $conv=$cmp&1;var $3=$input_format_addr;var $cmp1=($3|0)==4;var $conv2=$cmp1&1;var $or=$conv|$conv2;var $tobool=($or|0)!=0;if($tobool){__label__=1;break}else{__label__=21;break}case 1:var $4=$input_format_addr;var $cmp3=($4|0)==2;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $5=$frame_type_addr;var $6=$speech_bits_ptr_addr;var $arraydecay=$dec_ets_input_bfr|0;var $7=$decoder_state;var $decoder_amrState=$7|0;var $common_amr_tbls=$decoder_amrState+1168|0;_wmf_to_ets($5,$6,$arraydecay,$common_amr_tbls);var $8=$frame_type_addr;var $arrayidx=_WmfDecBytesPerFrame+($8<<1)|0;var $9=(tempInt=HEAPU8[$arrayidx]|HEAPU8[$arrayidx+1]<<8,tempInt<<16>>16);$byte_offset=$9;__label__=4;break;case 3:var $10=$frame_type_addr;var $11=$speech_bits_ptr_addr;var $arraydecay6=$dec_ets_input_bfr|0;var $12=$decoder_state;var $decoder_amrState7=$12|0;var $common_amr_tbls8=$decoder_amrState7+1168|0;_if2_to_ets($10,$11,$arraydecay6,$common_amr_tbls8);var $13=$frame_type_addr;var $arrayidx9=_If2DecBytesPerFrame+($13<<1)|0;var $14=(tempInt=HEAPU8[$arrayidx9]|HEAPU8[$arrayidx9+1]<<8,tempInt<<16>>16);$byte_offset=$14;__label__=4;break;case 4:var $15=$frame_type_addr;var $cmp10=$15>>>0<=7;if($cmp10){__label__=5;break}else{__label__=6;break}case 5:var $16=$frame_type_addr;$mode=$16;$rx_type=0;__label__=20;break;case 6:var $17=$frame_type_addr;var $cmp14=($17|0)==8;if($cmp14){__label__=7;break}else{__label__=15;break}case 7:$modeStore=0;$i=0;__label__=8;break;case 8:var $18=$i;var $conv17=$18<<16>>16;var $cmp18=($conv17|0)<3;if($cmp18){__label__=9;break}else{__label__=11;break}case 9:var $19=$i;var $conv20=$19<<16>>16;var $add=$conv20+36|0;var $arrayidx21=$dec_ets_input_bfr+($add<<1)|0;var $20=HEAP16[$arrayidx21>>1];var $conv22=$20<<16>>16;var $21=$i;var $conv23=$21<<16>>16;var $shl=$conv22<<$conv23;$tempInt=$shl;var $22=$tempInt;var $23=$modeStore;var $or24=$23|$22;$modeStore=$or24;__label__=10;break;case 10:var $24=$i;var $inc=$24+1&65535;$i=$inc;__label__=8;break;case 11:var $25=$modeStore;$mode=$25;var $arrayidx25=$dec_ets_input_bfr+70|0;var $26=HEAP16[$arrayidx25>>1];var $conv26=$26<<16>>16;var $cmp27=($conv26|0)==0;if($cmp27){__label__=12;break}else{__label__=13;break}case 12:$rx_type=4;__label__=14;break;case 13:$rx_type=5;__label__=14;break;case 14:__label__=19;break;case 15:var $27=$frame_type_addr;var $cmp33=$27>>>0<15;if($cmp33){__label__=16;break}else{__label__=17;break}case 16:$byte_offset=-1;__label__=18;break;case 17:var $28=$decoder_state;var $prev_mode=$28+1760|0;var $29=HEAP32[$prev_mode>>2];$mode=$29;$rx_type=7;__label__=18;break;case 18:__label__=19;break;case 19:__label__=20;break;case 20:__label__=32;break;case 21:var $30=$input_format_addr;var $cmp41=($30|0)==0;if($cmp41){__label__=22;break}else{__label__=30;break}case 22:var $31=$speech_bits_ptr_addr;var $32=$31;$ets_word_ptr=$32;var $33=$ets_word_ptr;var $34=HEAP16[$33>>1];var $conv44=$34<<16>>16;$rx_type=$conv44;var $35=$ets_word_ptr;var $incdec_ptr=$35+2|0;$ets_word_ptr=$incdec_ptr;$i=0;__label__=23;break;case 23:var $36=$i;var $conv46=$36<<16>>16;var $cmp47=($conv46|0)<244;if($cmp47){__label__=24;break}else{__label__=26;break}case 24:var $37=$ets_word_ptr;var $38=HEAP16[$37>>1];var $39=$i;var $idxprom=$39<<16>>16;var $arrayidx50=$dec_ets_input_bfr+($idxprom<<1)|0;HEAP16[$arrayidx50>>1]=$38;var $40=$ets_word_ptr;var $incdec_ptr51=$40+2|0;$ets_word_ptr=$incdec_ptr51;__label__=25;break;case 25:var $41=$i;var $inc53=$41+1&65535;$i=$inc53;__label__=23;break;case 26:var $42=$rx_type;var $cmp55=($42|0)!=7;if($cmp55){__label__=27;break}else{__label__=28;break}case 27:var $43=$ets_word_ptr;var $44=HEAP16[$43>>1];var $conv58=$44<<16>>16;$mode=$conv58;__label__=29;break;case 28:var $45=$decoder_state;var $prev_mode60=$45+1760|0;var $46=HEAP32[$prev_mode60>>2];$mode=$46;__label__=29;break;case 29:$byte_offset=492;__label__=31;break;case 30:$byte_offset=-1;__label__=31;break;case 31:__label__=32;break;case 32:var $47=$byte_offset;var $conv65=$47<<16>>16;var $cmp66=($conv65|0)!=-1;if($cmp66){__label__=33;break}else{__label__=34;break}case 33:var $48=$decoder_state;var $49=$mode;var $arraydecay69=$dec_ets_input_bfr|0;var $50=$rx_type;var $51=$raw_pcm_buffer_addr;_GSMFrameDecode($48,$49,$arraydecay69,$50,$51);var $52=$mode;var $53=$decoder_state;var $prev_mode70=$53+1760|0;HEAP32[$prev_mode70>>2]=$52;__label__=34;break;case 34:var $54=$byte_offset;STACKTOP=__stackBase__;return $54;default:assert(0,"bad label: "+__label__)}}_AMRDecode["X"]=1;function _AMREncodeInit($pEncStructure,$pSidSyncStructure,$dtx_enable){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pEncStructure_addr;var $pSidSyncStructure_addr;var $dtx_enable_addr;var $enc_init_status;var $sid_sync_init_status;var $init_status;$pEncStructure_addr=$pEncStructure;$pSidSyncStructure_addr=$pSidSyncStructure;$dtx_enable_addr=$dtx_enable;$enc_init_status=0;$sid_sync_init_status=0;$init_status=0;var $0=$pEncStructure_addr;var $1=$dtx_enable_addr;var $call=_GSMInitEncode($0,$1,STRING_TABLE.__str|0);$enc_init_status=$call;var $2=$pSidSyncStructure_addr;var $call1=_sid_sync_init($2);$sid_sync_init_status=$call1;var $3=$enc_init_status;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $4=$sid_sync_init_status;var $conv3=$4<<16>>16;var $cmp4=($conv3|0)!=0;if($cmp4){__label__=2;break}else{__label__=3;break}case 2:$init_status=-1;__label__=3;break;case 3:var $5=$init_status;return $5;default:assert(0,"bad label: "+__label__)}}function _AMREncodeReset($pEncStructure,$pSidSyncStructure){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pEncStructure_addr;var $pSidSyncStructure_addr;var $enc_reset_status;var $sid_sync_reset_status;var $reset_status;$pEncStructure_addr=$pEncStructure;$pSidSyncStructure_addr=$pSidSyncStructure;$enc_reset_status=0;$sid_sync_reset_status=0;$reset_status=0;var $0=$pEncStructure_addr;var $call=_Speech_Encode_Frame_reset($0);$enc_reset_status=$call;var $1=$pSidSyncStructure_addr;var $call1=_sid_sync_reset($1);$sid_sync_reset_status=$call1;var $2=$enc_reset_status;var $conv=$2<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $3=$sid_sync_reset_status;var $conv3=$3<<16>>16;var $cmp4=($conv3|0)!=0;if($cmp4){__label__=2;break}else{__label__=3;break}case 2:$reset_status=-1;__label__=3;break;case 3:var $4=$reset_status;return $4;default:assert(0,"bad label: "+__label__)}}function _AMREncodeExit($pEncStructure,$pSidSyncStructure){var __label__;var $pEncStructure_addr;var $pSidSyncStructure_addr;$pEncStructure_addr=$pEncStructure;$pSidSyncStructure_addr=$pSidSyncStructure;var $0=$pEncStructure_addr;_GSMEncodeFrameExit($0);var $1=$pSidSyncStructure_addr;_sid_sync_exit($1);return}function _AMREncode($pEncState,$pSidSyncState,$mode,$pEncInput,$pEncOutput,$p3gpp_frame_type,$output_format){var __stackBase__=STACKTOP;STACKTOP+=500;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $pEncState_addr;var $pSidSyncState_addr;var $mode_addr;var $pEncInput_addr;var $pEncOutput_addr;var $p3gpp_frame_type_addr;var $output_format_addr;var $ets_output_bfr=__stackBase__;var $ets_output_ptr;var $num_enc_bytes;var $i;var $tx_frame_type=__stackBase__+492;var $usedMode=__stackBase__+496;$pEncState_addr=$pEncState;$pSidSyncState_addr=$pSidSyncState;$mode_addr=$mode;$pEncInput_addr=$pEncInput;$pEncOutput_addr=$pEncOutput;$p3gpp_frame_type_addr=$p3gpp_frame_type;$output_format_addr=$output_format;$num_enc_bytes=-1;HEAP32[$usedMode>>2]=0;var $0=$output_format_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;var $conv1=$cmp&1;var $1=$output_format_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)==1;var $conv4=$cmp3&1;var $or=$conv1|$conv4;var $2=$output_format_addr;var $conv5=$2<<16>>16;var $cmp6=($conv5|0)==3;var $conv7=$cmp6&1;var $or8=$or|$conv7;var $tobool=($or8|0)!=0;if($tobool){__label__=1;break}else{__label__=24;break}case 1:var $3=$pEncState_addr;var $4=$mode_addr;var $5=$pEncInput_addr;var $arraydecay=$ets_output_bfr|0;_GSMEncodeFrame($3,$4,$5,$arraydecay,$usedMode);var $6=$pSidSyncState_addr;var $7=HEAP32[$usedMode>>2];_sid_sync($6,$7,$tx_frame_type);var $8=HEAP32[$tx_frame_type>>2];var $cmp9=($8|0)!=3;if($cmp9){__label__=2;break}else{__label__=14;break}case 2:var $9=HEAP32[$usedMode>>2];var $10=$p3gpp_frame_type_addr;HEAP32[$10>>2]=$9;var $11=$p3gpp_frame_type_addr;var $12=HEAP32[$11>>2];var $cmp12=($12|0)==8;if($cmp12){__label__=3;break}else{__label__=13;break}case 3:var $13=HEAP32[$tx_frame_type>>2];var $cmp15=($13|0)==1;if($cmp15){__label__=4;break}else{__label__=5;break}case 4:var $arrayidx=$ets_output_bfr+70|0;var $14=HEAP16[$arrayidx>>1];var $conv18=$14<<16>>16;var $and=$conv18&0;var $conv19=$and&65535;HEAP16[$arrayidx>>1]=$conv19;__label__=8;break;case 5:var $15=HEAP32[$tx_frame_type>>2];var $cmp20=($15|0)==2;if($cmp20){__label__=6;break}else{__label__=7;break}case 6:var $arrayidx23=$ets_output_bfr+70|0;var $16=HEAP16[$arrayidx23>>1];var $conv24=$16<<16>>16;var $or25=$conv24|1;var $conv26=$or25&65535;HEAP16[$arrayidx23>>1]=$conv26;__label__=7;break;case 7:__label__=8;break;case 8:$i=0;__label__=9;break;case 9:var $17=$i;var $conv28=$17<<16>>16;var $cmp29=($conv28|0)<3;if($cmp29){__label__=10;break}else{__label__=12;break}case 10:var $18=$mode_addr;var $19=$i;var $conv31=$19<<16>>16;var $shr=$18>>>($conv31>>>0);var $and32=$shr&1;var $conv33=$and32&65535;var $20=$i;var $conv34=$20<<16>>16;var $add=$conv34+36|0;var $arrayidx35=$ets_output_bfr+($add<<1)|0;HEAP16[$arrayidx35>>1]=$conv33;__label__=11;break;case 11:var $21=$i;var $inc=$21+1&65535;$i=$inc;__label__=9;break;case 12:__label__=13;break;case 13:__label__=15;break;case 14:var $22=$p3gpp_frame_type_addr;HEAP32[$22>>2]=15;__label__=15;break;case 15:var $23=$output_format_addr;var $conv39=$23<<16>>16;var $cmp40=($conv39|0)==3;if($cmp40){__label__=16;break}else{__label__=17;break}case 16:var $24=$p3gpp_frame_type_addr;var $25=HEAP32[$24>>2];var $arraydecay43=$ets_output_bfr|0;var $26=$pEncOutput_addr;var $27=$pEncState_addr;var $28=$27;var $cod_amr_state=$28+4|0;var $29=HEAP32[$cod_amr_state>>2];var $common_amr_tbls=$29+2392|0;_ets_to_ietf($25,$arraydecay43,$26,$common_amr_tbls);var $30=$p3gpp_frame_type_addr;var $31=HEAP32[$30>>2];var $conv44=$31&65535;var $idxprom=$conv44<<16>>16;var $arrayidx45=_WmfEncBytesPerFrame+($idxprom<<1)|0;var $32=(tempInt=HEAPU8[$arrayidx45]|HEAPU8[$arrayidx45+1]<<8,tempInt<<16>>16);$num_enc_bytes=$32;__label__=23;break;case 17:var $33=$output_format_addr;var $conv47=$33<<16>>16;var $cmp48=($conv47|0)==0;if($cmp48){__label__=18;break}else{__label__=19;break}case 18:var $34=$p3gpp_frame_type_addr;var $35=HEAP32[$34>>2];var $arraydecay51=$ets_output_bfr|0;var $36=$pEncOutput_addr;var $37=$pEncState_addr;var $38=$37;var $cod_amr_state52=$38+4|0;var $39=HEAP32[$cod_amr_state52>>2];var $common_amr_tbls53=$39+2392|0;_ets_to_wmf($35,$arraydecay51,$36,$common_amr_tbls53);var $40=$p3gpp_frame_type_addr;var $41=HEAP32[$40>>2];var $conv54=$41&65535;var $idxprom55=$conv54<<16>>16;var $arrayidx56=_WmfEncBytesPerFrame+($idxprom55<<1)|0;var $42=(tempInt=HEAPU8[$arrayidx56]|HEAPU8[$arrayidx56+1]<<8,tempInt<<16>>16);$num_enc_bytes=$42;__label__=22;break;case 19:var $43=$output_format_addr;var $conv58=$43<<16>>16;var $cmp59=($conv58|0)==1;if($cmp59){__label__=20;break}else{__label__=21;break}case 20:var $44=$p3gpp_frame_type_addr;var $45=HEAP32[$44>>2];var $arraydecay62=$ets_output_bfr|0;var $46=$pEncOutput_addr;var $47=$pEncState_addr;var $48=$47;var $cod_amr_state63=$48+4|0;var $49=HEAP32[$cod_amr_state63>>2];var $common_amr_tbls64=$49+2392|0;_ets_to_if2($45,$arraydecay62,$46,$common_amr_tbls64);var $50=$p3gpp_frame_type_addr;var $51=HEAP32[$50>>2];var $conv65=$51&65535;var $idxprom66=$conv65<<16>>16;var $arrayidx67=_If2EncBytesPerFrame+($idxprom66<<1)|0;var $52=(tempInt=HEAPU8[$arrayidx67]|HEAPU8[$arrayidx67+1]<<8,tempInt<<16>>16);$num_enc_bytes=$52;__label__=21;break;case 21:__label__=22;break;case 22:__label__=23;break;case 23:__label__=35;break;case 24:var $53=$output_format_addr;var $conv72=$53<<16>>16;var $cmp73=($conv72|0)==2;if($cmp73){__label__=25;break}else{__label__=33;break}case 25:var $54=$pEncState_addr;var $55=$mode_addr;var $56=$pEncInput_addr;var $arrayidx76=$ets_output_bfr+2|0;_GSMEncodeFrame($54,$55,$56,$arrayidx76,$usedMode);var $57=HEAP32[$usedMode>>2];var $58=$p3gpp_frame_type_addr;HEAP32[$58>>2]=$57;var $59=$pSidSyncState_addr;var $60=HEAP32[$usedMode>>2];_sid_sync($59,$60,$tx_frame_type);var $61=HEAP32[$tx_frame_type>>2];var $conv77=$61&65535;var $arrayidx78=$ets_output_bfr|0;HEAP16[$arrayidx78>>1]=$conv77;var $62=HEAP32[$tx_frame_type>>2];var $cmp79=($62|0)!=3;if($cmp79){__label__=26;break}else{__label__=27;break}case 26:var $63=$mode_addr;var $conv82=$63&65535;var $arrayidx83=$ets_output_bfr+490|0;HEAP16[$arrayidx83>>1]=$conv82;__label__=28;break;case 27:var $arrayidx85=$ets_output_bfr+490|0;HEAP16[$arrayidx85>>1]=-1;__label__=28;break;case 28:var $arrayidx87=$ets_output_bfr|0;var $64=$arrayidx87;$ets_output_ptr=$64;$i=0;__label__=29;break;case 29:var $65=$i;var $conv89=$65<<16>>16;var $cmp90=($conv89|0)<492;if($cmp90){__label__=30;break}else{__label__=32;break}case 30:var $66=$ets_output_ptr;var $67=HEAP8[$66];var $68=$pEncOutput_addr;var $69=$i;var $conv93=$69<<16>>16;var $add_ptr=$68+$conv93|0;HEAP8[$add_ptr]=$67;var $70=$ets_output_ptr;var $add_ptr94=$70+1|0;$ets_output_ptr=$add_ptr94;__label__=31;break;case 31:var $71=$i;var $inc96=$71+1&65535;$i=$inc96;__label__=29;break;case 32:$num_enc_bytes=492;__label__=34;break;case 33:$num_enc_bytes=-1;__label__=34;break;case 34:__label__=35;break;case 35:var $72=$num_enc_bytes;STACKTOP=__stackBase__;return $72;default:assert(0,"bad label: "+__label__)}}_AMREncode["X"]=1;function _abs_s($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _shl($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl["X"]=1;function _L_mult1($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_sub($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _L_shl2($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _A_Refl($a,$refl,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $a_addr;var $refl_addr;var $pOverflow_addr;var $i;var $j;var $aState=__stackBase__;var $bState=__stackBase__+20;var $normShift;var $normProd;var $L_acc;var $scale;var $L_temp;var $temp;var $mult;var $L_tmp_abs;$a_addr=$a;$refl_addr=$refl;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$a_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $4=$i;var $idxprom2=$4<<16>>16;var $arrayidx3=$aState+($idxprom2<<1)|0;HEAP16[$arrayidx3>>1]=$3;__label__=3;break;case 3:var $5=$i;var $inc=$5+1&65535;$i=$inc;__label__=1;break;case 4:$i=9;__label__=5;break;case 5:var $6=$i;var $conv5=$6<<16>>16;var $cmp6=($conv5|0)>=0;if($cmp6){__label__=6;break}else{__label__=28;break}case 6:var $7=$i;var $idxprom9=$7<<16>>16;var $arrayidx10=$aState+($idxprom9<<1)|0;var $8=HEAP16[$arrayidx10>>1];var $call=_abs_s($8);var $conv11=$call<<16>>16;var $cmp12=($conv11|0)>=4096;if($cmp12){__label__=7;break}else{__label__=12;break}case 7:$i=0;__label__=8;break;case 8:var $9=$i;var $conv15=$9<<16>>16;var $cmp16=($conv15|0)<10;if($cmp16){__label__=9;break}else{__label__=11;break}case 9:var $10=$i;var $idxprom19=$10<<16>>16;var $11=$refl_addr;var $arrayidx20=$11+($idxprom19<<1)|0;HEAP16[$arrayidx20>>1]=0;__label__=10;break;case 10:var $12=$i;var $inc22=$12+1&65535;$i=$inc22;__label__=8;break;case 11:__label__=28;break;case 12:var $13=$i;var $idxprom24=$13<<16>>16;var $arrayidx25=$aState+($idxprom24<<1)|0;var $14=HEAP16[$arrayidx25>>1];var $15=$pOverflow_addr;var $call26=_shl($14,3,$15);var $16=$i;var $idxprom27=$16<<16>>16;var $17=$refl_addr;var $arrayidx28=$17+($idxprom27<<1)|0;HEAP16[$arrayidx28>>1]=$call26;var $18=$i;var $idxprom29=$18<<16>>16;var $19=$refl_addr;var $arrayidx30=$19+($idxprom29<<1)|0;var $20=HEAP16[$arrayidx30>>1];var $21=$i;var $idxprom31=$21<<16>>16;var $22=$refl_addr;var $arrayidx32=$22+($idxprom31<<1)|0;var $23=HEAP16[$arrayidx32>>1];var $24=$pOverflow_addr;var $call33=_L_mult1($20,$23,$24);$L_temp=$call33;var $25=$L_temp;var $26=$pOverflow_addr;var $call34=_L_sub(2147483647,$25,$26);$L_acc=$call34;var $27=$L_acc;var $call35=_norm_l($27);$normShift=$call35;var $28=$normShift;var $conv36=$28<<16>>16;var $sub=15-$conv36|0;var $conv37=$sub&65535;$scale=$conv37;var $29=$L_acc;var $30=$normShift;var $31=$pOverflow_addr;var $call38=_L_shl2($29,$30,$31);$L_acc=$call38;var $32=$L_acc;var $33=$pOverflow_addr;var $call39=_pv_round($32,$33);$normProd=$call39;var $34=$normProd;var $call40=_div_s(16384,$34);$mult=$call40;$j=0;__label__=13;break;case 13:var $35=$j;var $conv42=$35<<16>>16;var $36=$i;var $conv43=$36<<16>>16;var $cmp44=($conv42|0)<($conv43|0);if($cmp44){__label__=14;break}else{__label__=22;break}case 14:var $37=$j;var $idxprom47=$37<<16>>16;var $arrayidx48=$aState+($idxprom47<<1)|0;var $38=HEAP16[$arrayidx48>>1];var $conv49=$38<<16>>16;var $shl=$conv49<<16;$L_acc=$shl;var $39=$L_acc;var $40=$i;var $idxprom50=$40<<16>>16;var $41=$refl_addr;var $arrayidx51=$41+($idxprom50<<1)|0;var $42=HEAP16[$arrayidx51>>1];var $43=$i;var $conv52=$43<<16>>16;var $44=$j;var $conv53=$44<<16>>16;var $sub54=$conv52-$conv53|0;var $sub55=$sub54-1|0;var $arrayidx56=$aState+($sub55<<1)|0;var $45=HEAP16[$arrayidx56>>1];var $46=$pOverflow_addr;var $call57=_L_msu($39,$42,$45,$46);$L_acc=$call57;var $47=$L_acc;var $48=$pOverflow_addr;var $call58=_pv_round($47,$48);$temp=$call58;var $49=$mult;var $50=$temp;var $51=$pOverflow_addr;var $call59=_L_mult1($49,$50,$51);$L_temp=$call59;var $52=$L_temp;var $53=$scale;var $54=$pOverflow_addr;var $call60=_L_shr_r($52,$53,$54);$L_temp=$call60;var $55=$L_temp;var $56=$L_temp;var $cmp61=($56|0)<0;var $conv62=$cmp61&1;var $sub63=$55-$conv62|0;$L_tmp_abs=$sub63;var $57=$L_tmp_abs;var $58=$L_tmp_abs;var $shr=$58>>31;var $xor=$57^$shr;$L_tmp_abs=$xor;var $59=$L_tmp_abs;var $cmp64=($59|0)>32767;if($cmp64){__label__=15;break}else{__label__=20;break}case 15:$i=0;__label__=16;break;case 16:var $60=$i;var $conv68=$60<<16>>16;var $cmp69=($conv68|0)<10;if($cmp69){__label__=17;break}else{__label__=19;break}case 17:var $61=$i;var $idxprom72=$61<<16>>16;var $62=$refl_addr;var $arrayidx73=$62+($idxprom72<<1)|0;HEAP16[$arrayidx73>>1]=0;__label__=18;break;case 18:var $63=$i;var $inc75=$63+1&65535;$i=$inc75;__label__=16;break;case 19:__label__=22;break;case 20:var $64=$L_temp;var $conv78=$64&65535;var $65=$j;var $idxprom79=$65<<16>>16;var $arrayidx80=$bState+($idxprom79<<1)|0;HEAP16[$arrayidx80>>1]=$conv78;__label__=21;break;case 21:var $66=$j;var $inc82=$66+1&65535;$j=$inc82;__label__=13;break;case 22:$j=0;__label__=23;break;case 23:var $67=$j;var $conv85=$67<<16>>16;var $68=$i;var $conv86=$68<<16>>16;var $cmp87=($conv85|0)<($conv86|0);if($cmp87){__label__=24;break}else{__label__=26;break}case 24:var $69=$j;var $idxprom90=$69<<16>>16;var $arrayidx91=$bState+($idxprom90<<1)|0;var $70=HEAP16[$arrayidx91>>1];var $71=$j;var $idxprom92=$71<<16>>16;var $arrayidx93=$aState+($idxprom92<<1)|0;HEAP16[$arrayidx93>>1]=$70;__label__=25;break;case 25:var $72=$j;var $inc95=$72+1&65535;$j=$inc95;__label__=23;break;case 26:__label__=27;break;case 27:var $73=$i;var $dec=$73-1&65535;$i=$dec;__label__=5;break;case 28:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_A_Refl["X"]=1;function _L_msu($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult1($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub($3,$4,$5);$result=$call1;var $6=$result;return $6}function _amrnb_fxp_mac_16_by_16bb($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _Autocorr($x,$m,$r_h,$r_l,$wind,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=480;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $m_addr;var $r_h_addr;var $r_l_addr;var $wind_addr;var $pOverflow_addr;var $i;var $j;var $norm;var $y=__stackBase__;var $sum;var $overfl_shft;var $temp;var $p_x;var $p_y;var $p_y_1;var $p_y_ref;var $p_rh;var $p_rl;var $p_wind;$x_addr=$x;$m_addr=$m;$r_h_addr=$r_h;$r_l_addr=$r_l;$wind_addr=$wind;$pOverflow_addr=$pOverflow;var $arraydecay=$y|0;$p_y=$arraydecay;var $0=$x_addr;$p_x=$0;var $1=$wind_addr;$p_wind=$1;var $2=$pOverflow_addr;$sum=0;$j=0;$i=240;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $4=$p_x;var $incdec_ptr=$4+2|0;$p_x=$incdec_ptr;var $5=HEAP16[$4>>1];var $conv2=$5<<16>>16;var $6=$p_wind;var $incdec_ptr3=$6+2|0;$p_wind=$incdec_ptr3;var $7=HEAP16[$6>>1];var $conv4=$7<<16>>16;var $call=_amrnb_fxp_mac_16_by_16bb($conv2,$conv4,16384);var $shr=$call>>15;var $conv5=$shr&65535;$temp=$conv5;var $8=$temp;var $9=$p_y;var $incdec_ptr6=$9+2|0;$p_y=$incdec_ptr6;HEAP16[$9>>1]=$8;var $10=$temp;var $conv7=$10<<16>>16;var $11=$temp;var $conv8=$11<<16>>16;var $mul=$conv7*$conv8|0;var $shl=$mul<<1;var $12=$sum;var $add=$12+$shl|0;$sum=$add;var $13=$sum;var $cmp9=($13|0)<0;if($cmp9){__label__=3;break}else{__label__=4;break}case 3:$j=1;__label__=6;break;case 4:__label__=5;break;case 5:var $14=$i;var $dec=$14-1&65535;$i=$dec;__label__=1;break;case 6:var $15=$j;var $tobool=$15<<16>>16!=0;if($tobool){__label__=7;break}else{__label__=12;break}case 7:var $16=$i;var $conv12=$16<<16>>16;var $sub=240-$conv12|0;var $arrayidx=$y+($sub<<1)|0;$p_y=$arrayidx;var $17=$i;var $conv13=$17<<16>>16;var $sub14=240-$conv13|0;var $18=$x_addr;var $arrayidx15=$18+($sub14<<1)|0;$p_x=$arrayidx15;var $19=$i;var $conv16=$19<<16>>16;var $sub17=240-$conv16|0;var $20=$wind_addr;var $arrayidx18=$20+($sub17<<1)|0;$p_wind=$arrayidx18;__label__=8;break;case 8:var $21=$i;var $conv20=$21<<16>>16;var $cmp21=($conv20|0)!=0;if($cmp21){__label__=9;break}else{__label__=11;break}case 9:var $22=$p_x;var $incdec_ptr24=$22+2|0;$p_x=$incdec_ptr24;var $23=HEAP16[$22>>1];var $conv25=$23<<16>>16;var $24=$p_wind;var $incdec_ptr26=$24+2|0;$p_wind=$incdec_ptr26;var $25=HEAP16[$24>>1];var $conv27=$25<<16>>16;var $call28=_amrnb_fxp_mac_16_by_16bb($conv25,$conv27,16384);var $shr29=$call28>>15;var $conv30=$shr29&65535;$temp=$conv30;var $26=$temp;var $27=$p_y;var $incdec_ptr31=$27+2|0;$p_y=$incdec_ptr31;HEAP16[$27>>1]=$26;__label__=10;break;case 10:var $28=$i;var $dec33=$28-1&65535;$i=$dec33;__label__=8;break;case 11:__label__=12;break;case 12:$overfl_shft=0;__label__=13;break;case 13:var $29=$j;var $conv36=$29<<16>>16;var $cmp37=($conv36|0)==1;if($cmp37){__label__=14;break}else{__label__=21;break}case 14:var $30=$overfl_shft;var $conv39=$30<<16>>16;var $add40=$conv39+4|0;var $conv41=$add40&65535;$overfl_shft=$conv41;var $arrayidx42=$y|0;$p_y=$arrayidx42;$sum=0;$i=120;__label__=15;break;case 15:var $31=$i;var $conv44=$31<<16>>16;var $cmp45=($conv44|0)!=0;if($cmp45){__label__=16;break}else{__label__=18;break}case 16:var $32=$p_y;var $33=HEAP16[$32>>1];var $conv48=$33<<16>>16;var $shr49=$conv48>>2;var $conv50=$shr49&65535;$temp=$conv50;var $34=$temp;var $35=$p_y;var $incdec_ptr51=$35+2|0;$p_y=$incdec_ptr51;HEAP16[$35>>1]=$34;var $36=$temp;var $conv52=$36<<16>>16;var $37=$temp;var $conv53=$37<<16>>16;var $mul54=$conv52*$conv53|0;var $shl55=$mul54<<1;var $38=$sum;var $add56=$38+$shl55|0;$sum=$add56;var $39=$p_y;var $40=HEAP16[$39>>1];var $conv57=$40<<16>>16;var $shr58=$conv57>>2;var $conv59=$shr58&65535;$temp=$conv59;var $41=$temp;var $42=$p_y;var $incdec_ptr60=$42+2|0;$p_y=$incdec_ptr60;HEAP16[$42>>1]=$41;var $43=$temp;var $conv61=$43<<16>>16;var $44=$temp;var $conv62=$44<<16>>16;var $mul63=$conv61*$conv62|0;var $shl64=$mul63<<1;var $45=$sum;var $add65=$45+$shl64|0;$sum=$add65;__label__=17;break;case 17:var $46=$i;var $dec67=$46-1&65535;$i=$dec67;__label__=15;break;case 18:var $47=$sum;var $cmp69=($47|0)>0;if($cmp69){__label__=19;break}else{__label__=20;break}case 19:$j=0;__label__=20;break;case 20:__label__=13;break;case 21:var $48=$sum;var $add73=$48+1|0;$sum=$add73;var $49=$sum;var $call74=_norm_l($49);$norm=$call74;var $50=$norm;var $conv75=$50<<16>>16;var $51=$sum;var $shl76=$51<<$conv75;$sum=$shl76;var $52=$sum;var $shr77=$52>>16;var $conv78=$shr77&65535;var $53=$r_h_addr;var $arrayidx79=$53|0;HEAP16[$arrayidx79>>1]=$conv78;var $54=$sum;var $shr80=$54>>1;var $55=$r_h_addr;var $arrayidx81=$55|0;var $56=HEAP16[$arrayidx81>>1];var $conv82=$56<<16>>16;var $shl83=$conv82<<15;var $sub84=$shr80-$shl83|0;var $conv85=$sub84&65535;var $57=$r_l_addr;var $arrayidx86=$57|0;HEAP16[$arrayidx86>>1]=$conv85;var $arrayidx87=$y+478|0;$p_y_ref=$arrayidx87;var $58=$m_addr;var $idxprom=$58<<16>>16;var $59=$r_h_addr;var $arrayidx88=$59+($idxprom<<1)|0;$p_rh=$arrayidx88;var $60=$m_addr;var $idxprom89=$60<<16>>16;var $61=$r_l_addr;var $arrayidx90=$61+($idxprom89<<1)|0;$p_rl=$arrayidx90;var $62=$m_addr;$i=$62;__label__=22;break;case 22:var $63=$i;var $conv92=$63<<16>>16;var $cmp93=($conv92|0)>0;if($cmp93){__label__=23;break}else{__label__=31;break}case 23:$sum=0;var $64=$i;var $conv96=$64<<16>>16;var $sub97=240-$conv96|0;var $sub98=$sub97-1|0;var $arrayidx99=$y+($sub98<<1)|0;$p_y=$arrayidx99;var $65=$p_y_ref;$p_y_1=$65;var $66=$i;var $conv100=$66<<16>>16;var $sub101=240-$conv100|0;var $sub102=$sub101-1|0;var $shr103=$sub102>>1;var $conv104=$shr103&65535;$j=$conv104;__label__=24;break;case 24:var $67=$j;var $conv106=$67<<16>>16;var $cmp107=($conv106|0)!=0;if($cmp107){__label__=25;break}else{__label__=27;break}case 25:var $68=$p_y;var $incdec_ptr110=$68-2|0;$p_y=$incdec_ptr110;var $69=HEAP16[$68>>1];var $conv111=$69<<16>>16;var $70=$p_y_1;var $incdec_ptr112=$70-2|0;$p_y_1=$incdec_ptr112;var $71=HEAP16[$70>>1];var $conv113=$71<<16>>16;var $72=$sum;var $call114=_amrnb_fxp_mac_16_by_16bb($conv111,$conv113,$72);$sum=$call114;var $73=$p_y;var $incdec_ptr115=$73-2|0;$p_y=$incdec_ptr115;var $74=HEAP16[$73>>1];var $conv116=$74<<16>>16;var $75=$p_y_1;var $incdec_ptr117=$75-2|0;$p_y_1=$incdec_ptr117;var $76=HEAP16[$75>>1];var $conv118=$76<<16>>16;var $77=$sum;var $call119=_amrnb_fxp_mac_16_by_16bb($conv116,$conv118,$77);$sum=$call119;__label__=26;break;case 26:var $78=$j;var $dec121=$78-1&65535;$j=$dec121;__label__=24;break;case 27:var $79=$p_y;var $incdec_ptr123=$79-2|0;$p_y=$incdec_ptr123;var $80=HEAP16[$79>>1];var $conv124=$80<<16>>16;var $81=$p_y_1;var $incdec_ptr125=$81-2|0;$p_y_1=$incdec_ptr125;var $82=HEAP16[$81>>1];var $conv126=$82<<16>>16;var $83=$sum;var $call127=_amrnb_fxp_mac_16_by_16bb($conv124,$conv126,$83);$sum=$call127;var $84=$i;var $conv128=$84<<16>>16;var $sub129=240-$conv128|0;var $sub130=$sub129-1|0;var $and=$sub130&1;var $tobool131=($and|0)!=0;if($tobool131){__label__=28;break}else{__label__=29;break}case 28:var $85=$p_y;var $incdec_ptr133=$85-2|0;$p_y=$incdec_ptr133;var $86=HEAP16[$85>>1];var $conv134=$86<<16>>16;var $87=$p_y_1;var $incdec_ptr135=$87-2|0;$p_y_1=$incdec_ptr135;var $88=HEAP16[$87>>1];var $conv136=$88<<16>>16;var $89=$sum;var $call137=_amrnb_fxp_mac_16_by_16bb($conv134,$conv136,$89);$sum=$call137;__label__=29;break;case 29:var $90=$norm;var $conv139=$90<<16>>16;var $add140=$conv139+1|0;var $91=$sum;var $shl141=$91<<$add140;$sum=$shl141;var $92=$sum;var $shr142=$92>>16;var $conv143=$shr142&65535;var $93=$p_rh;HEAP16[$93>>1]=$conv143;var $94=$sum;var $shr144=$94>>1;var $95=$p_rh;var $incdec_ptr145=$95-2|0;$p_rh=$incdec_ptr145;var $96=HEAP16[$95>>1];var $conv146=$96<<16>>16;var $shl147=$conv146<<15;var $sub148=$shr144-$shl147|0;var $conv149=$sub148&65535;var $97=$p_rl;var $incdec_ptr150=$97-2|0;$p_rl=$incdec_ptr150;HEAP16[$97>>1]=$conv149;__label__=30;break;case 30:var $98=$i;var $dec152=$98-1&65535;$i=$dec152;__label__=22;break;case 31:var $99=$overfl_shft;var $conv154=$99<<16>>16;var $100=$norm;var $conv155=$100<<16>>16;var $sub156=$conv155-$conv154|0;var $conv157=$sub156&65535;$norm=$conv157;var $101=$norm;STACKTOP=__stackBase__;return $101;default:assert(0,"bad label: "+__label__)}}_Autocorr["X"]=1;function _Az_lsp($a,$lsp,$old_lsp,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=24;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $a_addr;var $lsp_addr;var $old_lsp_addr;var $pOverflow_addr;var $i;var $j;var $nf;var $ip;var $xlow;var $ylow;var $xhigh;var $yhigh;var $xmid;var $ymid;var $xint;var $x;var $y;var $sign;var $exp;var $coef;var $f1=__stackBase__;var $f2=__stackBase__+12;var $L_temp1;var $L_temp2;var $p_f1;var $p_f2;$a_addr=$a;$lsp_addr=$lsp;$old_lsp_addr=$old_lsp;$pOverflow_addr=$pOverflow;var $arraydecay=$f1|0;$p_f1=$arraydecay;var $arraydecay1=$f2|0;$p_f2=$arraydecay1;var $0=$p_f1;HEAP16[$0>>1]=1024;var $1=$p_f2;HEAP16[$1>>1]=1024;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<5;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$a_addr;var $4=$i;var $conv3=$4<<16>>16;var $add_ptr=$3+($conv3<<1)|0;var $add_ptr4=$add_ptr+2|0;var $5=HEAP16[$add_ptr4>>1];var $conv5=$5<<16>>16;$L_temp1=$conv5;var $6=$a_addr;var $add_ptr6=$6+20|0;var $7=$i;var $conv7=$7<<16>>16;var $idx_neg=-$conv7|0;var $add_ptr8=$add_ptr6+($idx_neg<<1)|0;var $8=HEAP16[$add_ptr8>>1];var $conv9=$8<<16>>16;$L_temp2=$conv9;var $9=$L_temp1;var $10=$L_temp2;var $add=$9+$10|0;var $shr=$add>>2;var $conv10=$shr&65535;$x=$conv10;var $11=$L_temp1;var $12=$L_temp2;var $sub=$11-$12|0;var $shr11=$sub>>2;var $conv12=$shr11&65535;$y=$conv12;var $13=$p_f1;var $incdec_ptr=$13+2|0;$p_f1=$incdec_ptr;var $14=HEAP16[$13>>1];var $conv13=$14<<16>>16;var $15=$x;var $conv14=$15<<16>>16;var $sub15=$conv14-$conv13|0;var $conv16=$sub15&65535;$x=$conv16;var $16=$x;var $17=$p_f1;HEAP16[$17>>1]=$16;var $18=$p_f2;var $incdec_ptr17=$18+2|0;$p_f2=$incdec_ptr17;var $19=HEAP16[$18>>1];var $conv18=$19<<16>>16;var $20=$y;var $conv19=$20<<16>>16;var $add20=$conv19+$conv18|0;var $conv21=$add20&65535;$y=$conv21;var $21=$y;var $22=$p_f2;HEAP16[$22>>1]=$21;__label__=3;break;case 3:var $23=$i;var $inc=$23+1&65535;$i=$inc;__label__=1;break;case 4:$nf=0;$ip=0;var $arraydecay22=$f1|0;$coef=$arraydecay22;var $24=HEAP16[(_grid|0)>>1];$xlow=$24;var $25=$xlow;var $26=$coef;var $27=$pOverflow_addr;var $call=_Chebps($25,$26,5,$27);$ylow=$call;$j=0;__label__=5;break;case 5:var $28=$nf;var $conv23=$28<<16>>16;var $cmp24=($conv23|0)<10;if($cmp24){__label__=6;break}else{var $30=0;__label__=7;break}case 6:var $29=$j;var $conv26=$29<<16>>16;var $cmp27=($conv26|0)<60;var $30=$cmp27;__label__=7;break;case 7:var $30;if($30){__label__=8;break}else{__label__=26;break}case 8:var $31=$j;var $inc29=$31+1&65535;$j=$inc29;var $32=$xlow;$xhigh=$32;var $33=$ylow;$yhigh=$33;var $34=$j;var $conv30=$34<<16>>16;var $add_ptr31=(_grid|0)+($conv30<<1)|0;var $35=HEAP16[$add_ptr31>>1];$xlow=$35;var $36=$xlow;var $37=$coef;var $38=$pOverflow_addr;var $call32=_Chebps($36,$37,5,$38);$ylow=$call32;var $39=$ylow;var $conv33=$39<<16>>16;var $40=$yhigh;var $conv34=$40<<16>>16;var $mul=$conv33*$conv34|0;var $cmp35=($mul|0)<=0;if($cmp35){__label__=9;break}else{__label__=25;break}case 9:$i=4;__label__=10;break;case 10:var $41=$i;var $conv38=$41<<16>>16;var $cmp39=($conv38|0)!=0;if($cmp39){__label__=11;break}else{__label__=16;break}case 11:var $42=$xlow;var $conv42=$42<<16>>16;var $shr43=$conv42>>1;var $conv44=$shr43&65535;$x=$conv44;var $43=$xhigh;var $conv45=$43<<16>>16;var $shr46=$conv45>>1;var $conv47=$shr46&65535;$y=$conv47;var $44=$x;var $conv48=$44<<16>>16;var $45=$y;var $conv49=$45<<16>>16;var $add50=$conv48+$conv49|0;var $conv51=$add50&65535;$xmid=$conv51;var $46=$xmid;var $47=$coef;var $48=$pOverflow_addr;var $call52=_Chebps($46,$47,5,$48);$ymid=$call52;var $49=$ylow;var $conv53=$49<<16>>16;var $50=$ymid;var $conv54=$50<<16>>16;var $mul55=$conv53*$conv54|0;var $cmp56=($mul55|0)<=0;if($cmp56){__label__=12;break}else{__label__=13;break}case 12:var $51=$ymid;$yhigh=$51;var $52=$xmid;$xhigh=$52;__label__=14;break;case 13:var $53=$ymid;$ylow=$53;var $54=$xmid;$xlow=$54;__label__=14;break;case 14:__label__=15;break;case 15:var $55=$i;var $dec=$55-1&65535;$i=$dec;__label__=10;break;case 16:var $56=$xhigh;var $conv61=$56<<16>>16;var $57=$xlow;var $conv62=$57<<16>>16;var $sub63=$conv61-$conv62|0;var $conv64=$sub63&65535;$x=$conv64;var $58=$yhigh;var $conv65=$58<<16>>16;var $59=$ylow;var $conv66=$59<<16>>16;var $sub67=$conv65-$conv66|0;var $conv68=$sub67&65535;$y=$conv68;var $60=$y;var $conv69=$60<<16>>16;var $cmp70=($conv69|0)==0;if($cmp70){__label__=17;break}else{__label__=18;break}case 17:var $61=$xlow;$xint=$61;__label__=21;break;case 18:var $62=$y;$sign=$62;var $63=$y;var $call74=_abs_s3($63);$y=$call74;var $64=$y;var $call75=_norm_s($64);$exp=$call75;var $65=$exp;var $conv76=$65<<16>>16;var $66=$y;var $conv77=$66<<16>>16;var $shl=$conv77<<$conv76;var $conv78=$shl&65535;$y=$conv78;var $67=$y;var $call79=_div_s(16383,$67);$y=$call79;var $68=$x;var $conv80=$68<<16>>16;var $69=$y;var $conv81=$69<<16>>16;var $mul82=$conv80*$conv81|0;var $70=$exp;var $conv83=$70<<16>>16;var $sub84=19-$conv83|0;var $shr85=$mul82>>($sub84|0);var $conv86=$shr85&65535;$y=$conv86;var $71=$sign;var $conv87=$71<<16>>16;var $cmp88=($conv87|0)<0;if($cmp88){__label__=19;break}else{__label__=20;break}case 19:var $72=$y;var $conv91=$72<<16>>16;var $sub92=-$conv91|0;var $conv93=$sub92&65535;$y=$conv93;__label__=20;break;case 20:var $73=$xlow;var $conv95=$73<<16>>16;var $74=$ylow;var $conv96=$74<<16>>16;var $75=$y;var $conv97=$75<<16>>16;var $mul98=$conv96*$conv97|0;var $shr99=$mul98>>10;var $sub100=$conv95-$shr99|0;var $conv101=$sub100&65535;$xint=$conv101;__label__=21;break;case 21:var $76=$xint;var $77=$lsp_addr;var $78=$nf;var $conv103=$78<<16>>16;var $add_ptr104=$77+($conv103<<1)|0;HEAP16[$add_ptr104>>1]=$76;var $79=$xint;$xlow=$79;var $80=$nf;var $inc105=$80+1&65535;$nf=$inc105;var $81=$ip;var $conv106=$81<<16>>16;var $cmp107=($conv106|0)==0;if($cmp107){__label__=22;break}else{__label__=23;break}case 22:$ip=1;var $arraydecay110=$f2|0;$coef=$arraydecay110;__label__=24;break;case 23:$ip=0;var $arraydecay112=$f1|0;$coef=$arraydecay112;__label__=24;break;case 24:var $82=$xlow;var $83=$coef;var $84=$pOverflow_addr;var $call114=_Chebps($82,$83,5,$84);$ylow=$call114;__label__=25;break;case 25:__label__=5;break;case 26:var $85=$nf;var $conv116=$85<<16>>16;var $cmp117=($conv116|0)<10;if($cmp117){__label__=27;break}else{__label__=32;break}case 27:$i=5;__label__=28;break;case 28:var $86=$i;var $conv121=$86<<16>>16;var $cmp122=($conv121|0)!=0;if($cmp122){__label__=29;break}else{__label__=31;break}case 29:var $87=$old_lsp_addr;var $incdec_ptr125=$87+2|0;$old_lsp_addr=$incdec_ptr125;var $88=HEAP16[$87>>1];var $89=$lsp_addr;var $incdec_ptr126=$89+2|0;$lsp_addr=$incdec_ptr126;HEAP16[$89>>1]=$88;var $90=$old_lsp_addr;var $incdec_ptr127=$90+2|0;$old_lsp_addr=$incdec_ptr127;var $91=HEAP16[$90>>1];var $92=$lsp_addr;var $incdec_ptr128=$92+2|0;$lsp_addr=$incdec_ptr128;HEAP16[$92>>1]=$91;__label__=30;break;case 30:var $93=$i;var $dec130=$93-1&65535;$i=$dec130;__label__=28;break;case 31:__label__=32;break;case 32:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Az_lsp["X"]=1;function _abs_s3($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _pseudonoise($pShift_reg,$no_bits){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pShift_reg_addr;var $no_bits_addr;var $noise_bits;var $Sn;var $i;var $temp;$pShift_reg_addr=$pShift_reg;$no_bits_addr=$no_bits;$noise_bits=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$no_bits_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=12;break}case 2:var $2=$pShift_reg_addr;var $3=HEAP32[$2>>2];var $and=$3&1;var $cmp3=($and|0)!=0;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:$Sn=1;__label__=5;break;case 4:$Sn=0;__label__=5;break;case 5:var $4=$pShift_reg_addr;var $5=HEAP32[$4>>2];var $and5=$5&268435456;var $cmp6=($and5|0)!=0;if($cmp6){__label__=6;break}else{__label__=7;break}case 6:var $6=$Sn;var $conv9=$6<<16>>16;var $xor=$conv9^1;var $conv10=$xor&65535;$Sn=$conv10;__label__=8;break;case 7:var $7=$Sn;var $conv12=$7<<16>>16;var $xor13=$conv12^0;var $conv14=$xor13&65535;$Sn=$conv14;__label__=8;break;case 8:var $8=$noise_bits;var $conv16=$8<<16>>16;var $shl=$conv16<<1;var $conv17=$shl&65535;$noise_bits=$conv17;var $9=$pShift_reg_addr;var $10=HEAP32[$9>>2];var $and18=$10&1;var $conv19=$and18&65535;$temp=$conv19;var $11=$temp;var $conv20=$11<<16>>16;var $12=$noise_bits;var $conv21=$12<<16>>16;var $or=$conv21|$conv20;var $conv22=$or&65535;$noise_bits=$conv22;var $13=$pShift_reg_addr;var $14=HEAP32[$13>>2];var $shr=$14>>1;HEAP32[$13>>2]=$shr;var $15=$Sn;var $conv23=$15<<16>>16;var $and24=$conv23&1;var $tobool=($and24|0)!=0;if($tobool){__label__=9;break}else{__label__=10;break}case 9:var $16=$pShift_reg_addr;var $17=HEAP32[$16>>2];var $or26=$17|1073741824;HEAP32[$16>>2]=$or26;__label__=10;break;case 10:__label__=11;break;case 11:var $18=$i;var $inc=$18+1&65535;$i=$inc;__label__=1;break;case 12:var $19=$noise_bits;return $19;default:assert(0,"bad label: "+__label__)}}_pseudonoise["X"]=1;function _L_mult4($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_add($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _Chebps($x,$f,$n,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $f_addr;var $n_addr;var $pOverflow_addr;var $i;var $cheb;var $b1_h;var $b1_l;var $t0;var $L_temp;var $p_f;$x_addr=$x;$f_addr=$f;$n_addr=$n;$pOverflow_addr=$pOverflow;var $0=$f_addr;var $arrayidx=$0+2|0;$p_f=$arrayidx;var $1=$pOverflow_addr;$L_temp=16777216;var $2=$x_addr;var $conv=$2<<16>>16;var $shl=$conv<<10;var $3=$p_f;var $incdec_ptr=$3+2|0;$p_f=$incdec_ptr;var $4=HEAP16[$3>>1];var $conv1=$4<<16>>16;var $shl2=$conv1<<14;var $add=$shl+$shl2|0;$t0=$add;var $5=$t0;var $shr=$5>>16;var $conv3=$shr&65535;$b1_h=$conv3;var $6=$t0;var $shr4=$6>>1;var $7=$b1_h;var $conv5=$7<<16>>16;var $shl6=$conv5<<15;var $sub=$shr4-$shl6|0;var $conv7=$sub&65535;$b1_l=$conv7;$i=2;__label__=1;break;case 1:var $8=$i;var $conv8=$8<<16>>16;var $9=$n_addr;var $conv9=$9<<16>>16;var $cmp=($conv8|0)<($conv9|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $10=$b1_h;var $conv11=$10<<16>>16;var $11=$x_addr;var $conv12=$11<<16>>16;var $mul=$conv11*$conv12|0;$t0=$mul;var $12=$b1_l;var $conv13=$12<<16>>16;var $13=$x_addr;var $conv14=$13<<16>>16;var $mul15=$conv13*$conv14|0;var $shr16=$mul15>>15;var $14=$t0;var $add17=$14+$shr16|0;$t0=$add17;var $15=$t0;var $shl18=$15<<2;$t0=$shl18;var $16=$L_temp;var $17=$t0;var $sub19=$17-$16|0;$t0=$sub19;var $18=$p_f;var $incdec_ptr20=$18+2|0;$p_f=$incdec_ptr20;var $19=HEAP16[$18>>1];var $conv21=$19<<16>>16;var $shl22=$conv21<<14;var $20=$t0;var $add23=$20+$shl22|0;$t0=$add23;var $21=$b1_h;var $conv24=$21<<16>>16;var $shl25=$conv24<<16;var $22=$b1_l;var $conv26=$22<<16>>16;var $shl27=$conv26<<1;var $add28=$shl25+$shl27|0;$L_temp=$add28;var $23=$t0;var $shr29=$23>>16;var $conv30=$shr29&65535;$b1_h=$conv30;var $24=$t0;var $shr31=$24>>1;var $25=$b1_h;var $conv32=$25<<16>>16;var $shl33=$conv32<<15;var $sub34=$shr31-$shl33|0;var $conv35=$sub34&65535;$b1_l=$conv35;__label__=3;break;case 3:var $26=$i;var $inc=$26+1&65535;$i=$inc;__label__=1;break;case 4:var $27=$b1_h;var $conv36=$27<<16>>16;var $28=$x_addr;var $conv37=$28<<16>>16;var $mul38=$conv36*$conv37|0;$t0=$mul38;var $29=$b1_l;var $conv39=$29<<16>>16;var $30=$x_addr;var $conv40=$30<<16>>16;var $mul41=$conv39*$conv40|0;var $shr42=$mul41>>15;var $31=$t0;var $add43=$31+$shr42|0;$t0=$add43;var $32=$t0;var $shl44=$32<<1;$t0=$shl44;var $33=$L_temp;var $34=$t0;var $sub45=$34-$33|0;$t0=$sub45;var $35=$p_f;var $36=HEAP16[$35>>1];var $conv46=$36<<16>>16;var $shl47=$conv46<<13;var $37=$t0;var $add48=$37+$shl47|0;$t0=$add48;var $38=$t0;var $add49=$38+33554432|0;var $cmp50=$add49>>>0<67108863;if($cmp50){__label__=5;break}else{__label__=6;break}case 5:var $39=$t0;var $shr52=$39>>10;var $conv53=$shr52&65535;$cheb=$conv53;__label__=10;break;case 6:var $40=$t0;var $cmp54=($40|0)>33554431;if($cmp54){__label__=7;break}else{__label__=8;break}case 7:$cheb=32767;__label__=9;break;case 8:$cheb=-32768;__label__=9;break;case 9:__label__=10;break;case 10:var $41=$cheb;return $41;default:assert(0,"bad label: "+__label__)}}_Chebps["X"]=1;function _Chebps_Wrapper($x,$f,$n,$pOverflow){var __label__;var $x_addr;var $f_addr;var $n_addr;var $pOverflow_addr;$x_addr=$x;$f_addr=$f;$n_addr=$n;$pOverflow_addr=$pOverflow;var $0=$x_addr;var $1=$f_addr;var $2=$n_addr;var $3=$pOverflow_addr;var $call=_Chebps($0,$1,$2,$3);return $call}function _build_CN_code($pSeed,$cod,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pSeed_addr;var $cod_addr;var $pOverflow_addr;var $i;var $j;var $k;var $temp;$pSeed_addr=$pSeed;$cod_addr=$cod;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$cod_addr;var $arrayidx=$2+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:$k=0;__label__=5;break;case 5:var $4=$k;var $conv3=$4<<16>>16;var $cmp4=($conv3|0)<10;if($cmp4){__label__=6;break}else{__label__=11;break}case 6:var $5=$pSeed_addr;var $call=_pseudonoise($5,2);$i=$call;var $6=$i;var $7=$pOverflow_addr;var $call7=_L_mult4($6,10,$7);var $conv8=$call7&65535;$temp=$conv8;var $8=$temp;var $conv9=$8<<16>>16;var $shr=$conv9>>1;var $conv10=$shr&65535;$i=$conv10;var $9=$i;var $10=$k;var $11=$pOverflow_addr;var $call11=_add_16($9,$10,$11);$i=$call11;var $12=$pSeed_addr;var $call12=_pseudonoise($12,1);$j=$call12;var $13=$j;var $conv13=$13<<16>>16;var $cmp14=($conv13|0)>0;if($cmp14){__label__=7;break}else{__label__=8;break}case 7:var $14=$i;var $idxprom16=$14<<16>>16;var $15=$cod_addr;var $arrayidx17=$15+($idxprom16<<1)|0;HEAP16[$arrayidx17>>1]=4096;__label__=9;break;case 8:var $16=$i;var $idxprom18=$16<<16>>16;var $17=$cod_addr;var $arrayidx19=$17+($idxprom18<<1)|0;HEAP16[$arrayidx19>>1]=-4096;__label__=9;break;case 9:__label__=10;break;case 10:var $18=$k;var $inc21=$18+1&65535;$k=$inc21;__label__=5;break;case 11:;return;default:assert(0,"bad label: "+__label__)}}_build_CN_code["X"]=1;function _build_CN_param($pSeed,$n_param,$param_size_table,$parm,$window_200_40_ptr,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pSeed_addr;var $n_param_addr;var $param_size_table_addr;var $parm_addr;var $window_200_40_ptr_addr;var $pOverflow_addr;var $i;var $pTemp;var $L_temp;var $temp;$pSeed_addr=$pSeed;$n_param_addr=$n_param;$param_size_table_addr=$param_size_table;$parm_addr=$parm;$window_200_40_ptr_addr=$window_200_40_ptr;$pOverflow_addr=$pOverflow;var $0=$pSeed_addr;var $1=HEAP16[$0>>1];var $2=$pOverflow_addr;var $call=_L_mult4($1,31821,$2);$L_temp=$call;var $3=$L_temp;var $shr=$3>>1;$L_temp=$shr;var $4=$L_temp;var $5=$pOverflow_addr;var $call1=_L_add($4,13849,$5);var $conv=$call1&65535;var $6=$pSeed_addr;HEAP16[$6>>1]=$conv;var $7=$pSeed_addr;var $8=HEAP16[$7>>1];var $conv2=$8<<16>>16;var $and=$conv2&127;var $9=$window_200_40_ptr_addr;var $arrayidx=$9+($and<<1)|0;$pTemp=$arrayidx;$i=0;__label__=1;break;case 1:var $10=$i;var $conv3=$10<<16>>16;var $11=$n_param_addr;var $conv4=$11<<16>>16;var $cmp=($conv3|0)<($conv4|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $12=$i;var $idxprom=$12<<16>>16;var $13=$param_size_table_addr;var $arrayidx6=$13+($idxprom<<1)|0;var $14=HEAP16[$arrayidx6>>1];var $conv7=$14<<16>>16;var $shl=65535<<$conv7;var $neg=$shl^-1;var $conv8=$neg&65535;$temp=$conv8;var $15=$pTemp;var $incdec_ptr=$15+2|0;$pTemp=$incdec_ptr;var $16=HEAP16[$15>>1];var $conv9=$16<<16>>16;var $17=$temp;var $conv10=$17<<16>>16;var $and11=$conv9&$conv10;var $conv12=$and11&65535;var $18=$i;var $idxprom13=$18<<16>>16;var $19=$parm_addr;var $arrayidx14=$19+($idxprom13<<1)|0;HEAP16[$arrayidx14>>1]=$conv12;__label__=3;break;case 3:var $20=$i;var $inc=$20+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_build_CN_param["X"]=1;function _Bgn_scd_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $frameEnergyHist=$1|0;var $arraydecay=$frameEnergyHist|0;var $2=$arraydecay;_memset($2,0,120,1);var $3=$state_addr;var $bgHangover=$3+120|0;HEAP16[$bgHangover>>1]=0;$retval=0;__label__=3;break;case 3:var $4=$retval;return $4;default:assert(0,"bad label: "+__label__)}}function _L_add5($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _q_p($pInd,$n,$gray_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pInd_addr;var $n_addr;var $gray_ptr_addr;var $tmp;$pInd_addr=$pInd;$n_addr=$n;$gray_ptr_addr=$gray_ptr;var $0=$pInd_addr;var $1=HEAP16[$0>>1];$tmp=$1;var $2=$n_addr;var $conv=$2<<16>>16;var $cmp=($conv|0)<5;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$tmp;var $conv2=$3<<16>>16;var $and=$conv2&8;var $4=$tmp;var $conv3=$4<<16>>16;var $and4=$conv3&7;var $5=$gray_ptr_addr;var $arrayidx=$5+($and4<<1)|0;var $6=HEAP16[$arrayidx>>1];var $conv5=$6<<16>>16;var $or=$and|$conv5;var $conv6=$or&65535;var $7=$pInd_addr;HEAP16[$7>>1]=$conv6;__label__=3;break;case 2:var $8=$tmp;var $conv7=$8<<16>>16;var $and8=$conv7&7;var $9=$gray_ptr_addr;var $arrayidx9=$9+($and8<<1)|0;var $10=HEAP16[$arrayidx9>>1];var $11=$pInd_addr;HEAP16[$11>>1]=$10;__label__=3;break;case 3:;return;default:assert(0,"bad label: "+__label__)}}function _Bgn_scd($st,$ltpGainHist,$speech,$voicedHangover,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $ltpGainHist_addr;var $speech_addr;var $voicedHangover_addr;var $pOverflow_addr;var $i;var $prevVoiced;var $inbgNoise;var $temp;var $ltpLimit;var $frameEnergyMin;var $currEnergy;var $noiseFloor;var $maxEnergy;var $maxEnergyLastPart;var $s;var $L_temp;$st_addr=$st;$ltpGainHist_addr=$ltpGainHist;$speech_addr=$speech;$voicedHangover_addr=$voicedHangover;$pOverflow_addr=$pOverflow;$s=0;$i=159;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)>=0;if($cmp){__label__=2;break}else{__label__=7;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$speech_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $4=$i;var $idxprom3=$4<<16>>16;var $5=$speech_addr;var $arrayidx4=$5+($idxprom3<<1)|0;var $6=HEAP16[$arrayidx4>>1];var $conv5=$6<<16>>16;var $mul=$conv2*$conv5|0;$L_temp=$mul;var $7=$L_temp;var $cmp6=($7|0)!=1073741824;if($cmp6){__label__=3;break}else{__label__=4;break}case 3:var $8=$L_temp;var $shl=$8<<1;$L_temp=$shl;__label__=5;break;case 4:$L_temp=2147483647;__label__=5;break;case 5:var $9=$s;var $10=$L_temp;var $11=$pOverflow_addr;var $call=_L_add5($9,$10,$11);$s=$call;__label__=6;break;case 6:var $12=$i;var $dec=$12-1&65535;$i=$dec;__label__=1;break;case 7:var $13=$s;var $cmp8=($13|0)>536870911;if($cmp8){__label__=8;break}else{__label__=9;break}case 8:$currEnergy=32767;__label__=10;break;case 9:var $14=$s;var $shr=$14>>14;var $conv12=$shr&65535;$currEnergy=$conv12;__label__=10;break;case 10:$frameEnergyMin=32767;$i=59;__label__=11;break;case 11:var $15=$i;var $conv15=$15<<16>>16;var $cmp16=($conv15|0)>=0;if($cmp16){__label__=12;break}else{__label__=16;break}case 12:var $16=$i;var $idxprom19=$16<<16>>16;var $17=$st_addr;var $frameEnergyHist=$17|0;var $arrayidx20=$frameEnergyHist+($idxprom19<<1)|0;var $18=HEAP16[$arrayidx20>>1];var $conv21=$18<<16>>16;var $19=$frameEnergyMin;var $conv22=$19<<16>>16;var $cmp23=($conv21|0)<($conv22|0);if($cmp23){__label__=13;break}else{__label__=14;break}case 13:var $20=$i;var $idxprom26=$20<<16>>16;var $21=$st_addr;var $frameEnergyHist27=$21|0;var $arrayidx28=$frameEnergyHist27+($idxprom26<<1)|0;var $22=HEAP16[$arrayidx28>>1];$frameEnergyMin=$22;__label__=14;break;case 14:__label__=15;break;case 15:var $23=$i;var $dec31=$23-1&65535;$i=$dec31;__label__=11;break;case 16:var $24=$frameEnergyMin;var $conv33=$24<<16>>16;var $shl34=$conv33<<4;$L_temp=$shl34;var $25=$L_temp;var $26=$L_temp;var $conv35=$26&65535;var $conv36=$conv35<<16>>16;var $cmp37=($25|0)!=($conv36|0);if($cmp37){__label__=17;break}else{__label__=21;break}case 17:var $27=$L_temp;var $cmp40=($27|0)>0;if($cmp40){__label__=18;break}else{__label__=19;break}case 18:$noiseFloor=32767;__label__=20;break;case 19:$noiseFloor=-32768;__label__=20;break;case 20:__label__=22;break;case 21:var $28=$L_temp;var $conv46=$28&65535;$noiseFloor=$conv46;__label__=22;break;case 22:var $29=$st_addr;var $frameEnergyHist48=$29|0;var $arrayidx49=$frameEnergyHist48|0;var $30=HEAP16[$arrayidx49>>1];$maxEnergy=$30;$i=55;__label__=23;break;case 23:var $31=$i;var $conv51=$31<<16>>16;var $cmp52=($conv51|0)>=1;if($cmp52){__label__=24;break}else{__label__=28;break}case 24:var $32=$maxEnergy;var $conv55=$32<<16>>16;var $33=$i;var $idxprom56=$33<<16>>16;var $34=$st_addr;var $frameEnergyHist57=$34|0;var $arrayidx58=$frameEnergyHist57+($idxprom56<<1)|0;var $35=HEAP16[$arrayidx58>>1];var $conv59=$35<<16>>16;var $cmp60=($conv55|0)<($conv59|0);if($cmp60){__label__=25;break}else{__label__=26;break}case 25:var $36=$i;var $idxprom63=$36<<16>>16;var $37=$st_addr;var $frameEnergyHist64=$37|0;var $arrayidx65=$frameEnergyHist64+($idxprom63<<1)|0;var $38=HEAP16[$arrayidx65>>1];$maxEnergy=$38;__label__=26;break;case 26:__label__=27;break;case 27:var $39=$i;var $dec68=$39-1&65535;$i=$dec68;__label__=23;break;case 28:var $40=$st_addr;var $frameEnergyHist70=$40|0;var $arrayidx71=$frameEnergyHist70+80|0;var $41=HEAP16[$arrayidx71>>1];$maxEnergyLastPart=$41;$i=41;__label__=29;break;case 29:var $42=$i;var $conv73=$42<<16>>16;var $cmp74=($conv73|0)<60;if($cmp74){__label__=30;break}else{__label__=34;break}case 30:var $43=$maxEnergyLastPart;var $conv77=$43<<16>>16;var $44=$i;var $idxprom78=$44<<16>>16;var $45=$st_addr;var $frameEnergyHist79=$45|0;var $arrayidx80=$frameEnergyHist79+($idxprom78<<1)|0;var $46=HEAP16[$arrayidx80>>1];var $conv81=$46<<16>>16;var $cmp82=($conv77|0)<($conv81|0);if($cmp82){__label__=31;break}else{__label__=32;break}case 31:var $47=$i;var $idxprom85=$47<<16>>16;var $48=$st_addr;var $frameEnergyHist86=$48|0;var $arrayidx87=$frameEnergyHist86+($idxprom85<<1)|0;var $49=HEAP16[$arrayidx87>>1];$maxEnergyLastPart=$49;__label__=32;break;case 32:__label__=33;break;case 33:var $50=$i;var $inc=$50+1&65535;$i=$inc;__label__=29;break;case 34:var $51=$maxEnergy;var $conv91=$51<<16>>16;var $cmp92=($conv91|0)>20;if($cmp92){__label__=35;break}else{__label__=43;break}case 35:var $52=$currEnergy;var $conv94=$52<<16>>16;var $cmp95=($conv94|0)<17578;if($cmp95){__label__=36;break}else{__label__=43;break}case 36:var $53=$currEnergy;var $conv98=$53<<16>>16;var $cmp99=($conv98|0)>20;if($cmp99){__label__=37;break}else{__label__=43;break}case 37:var $54=$currEnergy;var $conv102=$54<<16>>16;var $55=$noiseFloor;var $conv103=$55<<16>>16;var $cmp104=($conv102|0)<($conv103|0);if($cmp104){__label__=39;break}else{__label__=38;break}case 38:var $56=$maxEnergyLastPart;var $conv106=$56<<16>>16;var $cmp107=($conv106|0)<1953;if($cmp107){__label__=39;break}else{__label__=43;break}case 39:var $57=$st_addr;var $bgHangover=$57+120|0;var $58=HEAP16[$bgHangover>>1];var $conv110=$58<<16>>16;var $add=$conv110+1|0;var $cmp111=($add|0)>30;if($cmp111){__label__=40;break}else{__label__=41;break}case 40:var $59=$st_addr;var $bgHangover114=$59+120|0;HEAP16[$bgHangover114>>1]=30;__label__=42;break;case 41:var $60=$st_addr;var $bgHangover116=$60+120|0;var $61=HEAP16[$bgHangover116>>1];var $conv117=$61<<16>>16;var $add118=$conv117+1|0;var $conv119=$add118&65535;HEAP16[$bgHangover116>>1]=$conv119;__label__=42;break;case 42:__label__=44;break;case 43:var $62=$st_addr;var $bgHangover122=$62+120|0;HEAP16[$bgHangover122>>1]=0;__label__=44;break;case 44:var $63=$st_addr;var $bgHangover124=$63+120|0;var $64=HEAP16[$bgHangover124>>1];var $conv125=$64<<16>>16;var $cmp126=($conv125|0)>1;if($cmp126){__label__=45;break}else{__label__=46;break}case 45:$inbgNoise=1;__label__=47;break;case 46:$inbgNoise=0;__label__=47;break;case 47:$i=0;__label__=48;break;case 48:var $65=$i;var $conv132=$65<<16>>16;var $cmp133=($conv132|0)<59;if($cmp133){__label__=49;break}else{__label__=51;break}case 49:var $66=$i;var $conv136=$66<<16>>16;var $add137=$conv136+1|0;var $67=$st_addr;var $frameEnergyHist138=$67|0;var $arrayidx139=$frameEnergyHist138+($add137<<1)|0;var $68=HEAP16[$arrayidx139>>1];var $69=$i;var $idxprom140=$69<<16>>16;var $70=$st_addr;var $frameEnergyHist141=$70|0;var $arrayidx142=$frameEnergyHist141+($idxprom140<<1)|0;HEAP16[$arrayidx142>>1]=$68;__label__=50;break;case 50:var $71=$i;var $inc144=$71+1&65535;$i=$inc144;__label__=48;break;case 51:var $72=$currEnergy;var $73=$st_addr;var $frameEnergyHist146=$73|0;var $arrayidx147=$frameEnergyHist146+118|0;HEAP16[$arrayidx147>>1]=$72;var $74=$st_addr;var $bgHangover148=$74+120|0;var $75=HEAP16[$bgHangover148>>1];var $conv149=$75<<16>>16;var $cmp150=($conv149|0)>15;if($cmp150){__label__=52;break}else{__label__=53;break}case 52:$ltpLimit=16383;__label__=57;break;case 53:var $76=$st_addr;var $bgHangover154=$76+120|0;var $77=HEAP16[$bgHangover154>>1];var $conv155=$77<<16>>16;var $cmp156=($conv155|0)>8;if($cmp156){__label__=54;break}else{__label__=55;break}case 54:$ltpLimit=15565;__label__=56;break;case 55:$ltpLimit=13926;__label__=56;break;case 56:__label__=57;break;case 57:$prevVoiced=0;var $78=$ltpGainHist_addr;var $arrayidx162=$78+8|0;var $call163=_gmed_n($arrayidx162,5);var $conv164=$call163<<16>>16;var $79=$ltpLimit;var $conv165=$79<<16>>16;var $cmp166=($conv164|0)>($conv165|0);if($cmp166){__label__=58;break}else{__label__=59;break}case 58:$prevVoiced=1;__label__=59;break;case 59:var $80=$st_addr;var $bgHangover170=$80+120|0;var $81=HEAP16[$bgHangover170>>1];var $conv171=$81<<16>>16;var $cmp172=($conv171|0)>20;if($cmp172){__label__=60;break}else{__label__=64;break}case 60:var $82=$ltpGainHist_addr;var $call175=_gmed_n($82,9);var $conv176=$call175<<16>>16;var $83=$ltpLimit;var $conv177=$83<<16>>16;var $cmp178=($conv176|0)>($conv177|0);if($cmp178){__label__=61;break}else{__label__=62;break}case 61:$prevVoiced=1;__label__=63;break;case 62:$prevVoiced=0;__label__=63;break;case 63:__label__=64;break;case 64:var $84=$prevVoiced;var $tobool=$84<<16>>16!=0;if($tobool){__label__=65;break}else{__label__=66;break}case 65:var $85=$voicedHangover_addr;HEAP16[$85>>1]=0;__label__=70;break;case 66:var $86=$voicedHangover_addr;var $87=HEAP16[$86>>1];var $conv186=$87<<16>>16;var $add187=$conv186+1|0;var $conv188=$add187&65535;$temp=$conv188;var $88=$temp;var $conv189=$88<<16>>16;var $cmp190=($conv189|0)>10;if($cmp190){__label__=67;break}else{__label__=68;break}case 67:var $89=$voicedHangover_addr;HEAP16[$89>>1]=10;__label__=69;break;case 68:var $90=$temp;var $91=$voicedHangover_addr;HEAP16[$91>>1]=$90;__label__=69;break;case 69:__label__=70;break;case 70:var $92=$inbgNoise;return $92;default:assert(0,"bad label: "+__label__)}}_Bgn_scd["X"]=1;function _code_10i40_35bits($x,$cn,$h,$cod,$y,$indx,$gray_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3412;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $cn_addr;var $h_addr;var $cod_addr;var $y_addr;var $indx_addr;var $gray_ptr_addr;var $pOverflow_addr;var $ipos=__stackBase__;var $pos_max=__stackBase__+20;var $codvec=__stackBase__+32;var $dn=__stackBase__+52;var $sign=__stackBase__+132;var $rr=__stackBase__+212;var $i;$x_addr=$x;$cn_addr=$cn;$h_addr=$h;$cod_addr=$cod;$y_addr=$y;$indx_addr=$indx;$gray_ptr_addr=$gray_ptr;$pOverflow_addr=$pOverflow;var $0=$h_addr;var $1=$x_addr;var $arraydecay=$dn|0;var $2=$pOverflow_addr;_cor_h_x($0,$1,$arraydecay,2,$2);var $arraydecay1=$dn|0;var $3=$cn_addr;var $arraydecay2=$sign|0;var $arraydecay3=$pos_max|0;var $arraydecay4=$ipos|0;var $4=$pOverflow_addr;_set_sign12k2($arraydecay1,$3,$arraydecay2,$arraydecay3,5,$arraydecay4,5,$4);var $5=$h_addr;var $arraydecay5=$sign|0;var $arraydecay6=$rr|0;var $6=$pOverflow_addr;_cor_h($5,$arraydecay5,$arraydecay6,$6);var $arraydecay7=$dn|0;var $arraydecay8=$rr|0;var $arraydecay9=$ipos|0;var $arraydecay10=$pos_max|0;var $arraydecay11=$codvec|0;var $7=$pOverflow_addr;_search_10and8i40(10,5,5,$arraydecay7,$arraydecay8,$arraydecay9,$arraydecay10,$arraydecay11,$7);var $arraydecay12=$codvec|0;var $arraydecay13=$sign|0;var $8=$cod_addr;var $9=$h_addr;var $10=$y_addr;var $11=$indx_addr;var $12=$pOverflow_addr;_build_code($arraydecay12,$arraydecay13,$8,$9,$10,$11,$12);$i=0;__label__=1;break;case 1:var $13=$i;var $conv=$13<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $14=$i;var $idxprom=$14<<16>>16;var $15=$indx_addr;var $arrayidx=$15+($idxprom<<1)|0;var $16=$i;var $17=$gray_ptr_addr;_q_p($arrayidx,$16,$17);__label__=3;break;case 3:var $18=$i;var $inc=$18+1&65535;$i=$inc;__label__=1;break;case 4:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_code_10i40_35bits["X"]=1;function _mult($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _build_code($codvec,$sign,$cod,$h,$y,$indx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $codvec_addr;var $sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $indx_addr;var $pOverflow_addr;var $i;var $k;var $track;var $index;var $_sign=__stackBase__;var $p0;var $p1;var $p2;var $p3;var $p4;var $p5;var $p6;var $p7;var $p8;var $p9;var $s;var $temp;var $p__sign;var $p_y;var $p_codvec;$codvec_addr=$codvec;$sign_addr=$sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$indx_addr=$indx;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$cod_addr;var $2=$1;_memset($2,0,80,1);var $3=$indx_addr;var $4=$3;for(var $$dest=$4,$$stop=$$dest+10;$$dest<$$stop;$$dest++){HEAP8[$$dest]=255};var $arraydecay=$_sign|0;$p__sign=$arraydecay;var $5=$codvec_addr;var $arrayidx=$5|0;$p0=$arrayidx;$k=0;__label__=1;break;case 1:var $6=$k;var $conv=$6<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=19;break}case 2:var $7=$p0;var $incdec_ptr=$7+2|0;$p0=$incdec_ptr;var $8=HEAP16[$7>>1];$i=$8;var $9=$i;var $conv2=$9<<16>>16;var $mul=$conv2*6554|0;var $shr=$mul>>15;var $conv3=$shr&65535;$index=$conv3;var $10=$i;var $conv4=$10<<16>>16;var $11=$index;var $conv5=$11<<16>>16;var $12=$index;var $conv6=$12<<16>>16;var $shl=$conv6<<2;var $add=$conv5+$shl|0;var $sub=$conv4-$add|0;var $conv7=$sub&65535;$track=$conv7;var $13=$i;var $idxprom=$13<<16>>16;var $14=$sign_addr;var $arrayidx8=$14+($idxprom<<1)|0;var $15=HEAP16[$arrayidx8>>1];var $conv9=$15<<16>>16;var $cmp10=($conv9|0)>0;if($cmp10){__label__=3;break}else{__label__=4;break}case 3:var $16=$i;var $idxprom12=$16<<16>>16;var $17=$cod_addr;var $arrayidx13=$17+($idxprom12<<1)|0;var $18=HEAP16[$arrayidx13>>1];var $conv14=$18<<16>>16;var $add15=$conv14+4096|0;var $conv16=$add15&65535;HEAP16[$arrayidx13>>1]=$conv16;var $19=$p__sign;var $incdec_ptr17=$19+2|0;$p__sign=$incdec_ptr17;HEAP16[$19>>1]=8192;__label__=5;break;case 4:var $20=$i;var $idxprom18=$20<<16>>16;var $21=$cod_addr;var $arrayidx19=$21+($idxprom18<<1)|0;var $22=HEAP16[$arrayidx19>>1];var $conv20=$22<<16>>16;var $sub21=$conv20-4096|0;var $conv22=$sub21&65535;HEAP16[$arrayidx19>>1]=$conv22;var $23=$p__sign;var $incdec_ptr23=$23+2|0;$p__sign=$incdec_ptr23;HEAP16[$23>>1]=-8192;var $24=$index;var $conv24=$24<<16>>16;var $add25=$conv24+8|0;var $conv26=$add25&65535;$index=$conv26;__label__=5;break;case 5:var $25=$track;var $idxprom27=$25<<16>>16;var $26=$indx_addr;var $arrayidx28=$26+($idxprom27<<1)|0;$p1=$arrayidx28;var $27=$p1;var $28=HEAP16[$27>>1];$temp=$28;var $29=$temp;var $conv29=$29<<16>>16;var $cmp30=($conv29|0)<0;if($cmp30){__label__=6;break}else{__label__=7;break}case 6:var $30=$index;var $31=$p1;HEAP16[$31>>1]=$30;__label__=17;break;case 7:var $32=$index;var $conv34=$32<<16>>16;var $33=$temp;var $conv35=$33<<16>>16;var $xor=$conv34^$conv35;var $and=$xor&8;var $cmp36=($and|0)==0;if($cmp36){__label__=8;break}else{__label__=12;break}case 8:var $34=$temp;var $conv39=$34<<16>>16;var $35=$index;var $conv40=$35<<16>>16;var $cmp41=($conv39|0)<=($conv40|0);if($cmp41){__label__=9;break}else{__label__=10;break}case 9:var $36=$index;var $37=$p1;var $add_ptr=$37+10|0;HEAP16[$add_ptr>>1]=$36;__label__=11;break;case 10:var $38=$temp;var $39=$p1;var $add_ptr45=$39+10|0;HEAP16[$add_ptr45>>1]=$38;var $40=$index;var $41=$p1;HEAP16[$41>>1]=$40;__label__=11;break;case 11:__label__=16;break;case 12:var $42=$temp;var $conv48=$42<<16>>16;var $and49=$conv48&7;var $43=$index;var $conv50=$43<<16>>16;var $and51=$conv50&7;var $cmp52=($and49|0)<=($and51|0);if($cmp52){__label__=13;break}else{__label__=14;break}case 13:var $44=$temp;var $45=$p1;var $add_ptr55=$45+10|0;HEAP16[$add_ptr55>>1]=$44;var $46=$index;var $47=$p1;HEAP16[$47>>1]=$46;__label__=15;break;case 14:var $48=$index;var $49=$p1;var $add_ptr57=$49+10|0;HEAP16[$add_ptr57>>1]=$48;__label__=15;break;case 15:__label__=16;break;case 16:__label__=17;break;case 17:__label__=18;break;case 18:var $50=$k;var $inc=$50+1&65535;$k=$inc;__label__=1;break;case 19:var $51=$codvec_addr;var $arrayidx61=$51|0;$p_codvec=$arrayidx61;var $52=$h_addr;var $53=$p_codvec;var $incdec_ptr62=$53+2|0;$p_codvec=$incdec_ptr62;var $54=HEAP16[$53>>1];var $conv63=$54<<16>>16;var $idx_neg=-$conv63|0;var $add_ptr64=$52+($idx_neg<<1)|0;$p0=$add_ptr64;var $55=$h_addr;var $56=$p_codvec;var $incdec_ptr65=$56+2|0;$p_codvec=$incdec_ptr65;var $57=HEAP16[$56>>1];var $conv66=$57<<16>>16;var $idx_neg67=-$conv66|0;var $add_ptr68=$55+($idx_neg67<<1)|0;$p1=$add_ptr68;var $58=$h_addr;var $59=$p_codvec;var $incdec_ptr69=$59+2|0;$p_codvec=$incdec_ptr69;var $60=HEAP16[$59>>1];var $conv70=$60<<16>>16;var $idx_neg71=-$conv70|0;var $add_ptr72=$58+($idx_neg71<<1)|0;$p2=$add_ptr72;var $61=$h_addr;var $62=$p_codvec;var $incdec_ptr73=$62+2|0;$p_codvec=$incdec_ptr73;var $63=HEAP16[$62>>1];var $conv74=$63<<16>>16;var $idx_neg75=-$conv74|0;var $add_ptr76=$61+($idx_neg75<<1)|0;$p3=$add_ptr76;var $64=$h_addr;var $65=$p_codvec;var $incdec_ptr77=$65+2|0;$p_codvec=$incdec_ptr77;var $66=HEAP16[$65>>1];var $conv78=$66<<16>>16;var $idx_neg79=-$conv78|0;var $add_ptr80=$64+($idx_neg79<<1)|0;$p4=$add_ptr80;var $67=$h_addr;var $68=$p_codvec;var $incdec_ptr81=$68+2|0;$p_codvec=$incdec_ptr81;var $69=HEAP16[$68>>1];var $conv82=$69<<16>>16;var $idx_neg83=-$conv82|0;var $add_ptr84=$67+($idx_neg83<<1)|0;$p5=$add_ptr84;var $70=$h_addr;var $71=$p_codvec;var $incdec_ptr85=$71+2|0;$p_codvec=$incdec_ptr85;var $72=HEAP16[$71>>1];var $conv86=$72<<16>>16;var $idx_neg87=-$conv86|0;var $add_ptr88=$70+($idx_neg87<<1)|0;$p6=$add_ptr88;var $73=$h_addr;var $74=$p_codvec;var $incdec_ptr89=$74+2|0;$p_codvec=$incdec_ptr89;var $75=HEAP16[$74>>1];var $conv90=$75<<16>>16;var $idx_neg91=-$conv90|0;var $add_ptr92=$73+($idx_neg91<<1)|0;$p7=$add_ptr92;var $76=$h_addr;var $77=$p_codvec;var $incdec_ptr93=$77+2|0;$p_codvec=$incdec_ptr93;var $78=HEAP16[$77>>1];var $conv94=$78<<16>>16;var $idx_neg95=-$conv94|0;var $add_ptr96=$76+($idx_neg95<<1)|0;$p8=$add_ptr96;var $79=$h_addr;var $80=$p_codvec;var $incdec_ptr97=$80+2|0;$p_codvec=$incdec_ptr97;var $81=HEAP16[$80>>1];var $conv98=$81<<16>>16;var $idx_neg99=-$conv98|0;var $add_ptr100=$79+($idx_neg99<<1)|0;$p9=$add_ptr100;var $82=$y_addr;$p_y=$82;$i=40;__label__=20;break;case 20:var $83=$i;var $conv102=$83<<16>>16;var $cmp103=($conv102|0)!=0;if($cmp103){__label__=21;break}else{__label__=23;break}case 21:var $arraydecay106=$_sign|0;$p__sign=$arraydecay106;var $84=$p0;var $incdec_ptr107=$84+2|0;$p0=$incdec_ptr107;var $85=HEAP16[$84>>1];var $conv108=$85<<16>>16;var $86=$p__sign;var $incdec_ptr109=$86+2|0;$p__sign=$incdec_ptr109;var $87=HEAP16[$86>>1];var $conv110=$87<<16>>16;var $mul111=$conv108*$conv110|0;var $shr112=$mul111>>7;$s=$shr112;var $88=$p1;var $incdec_ptr113=$88+2|0;$p1=$incdec_ptr113;var $89=HEAP16[$88>>1];var $conv114=$89<<16>>16;var $90=$p__sign;var $incdec_ptr115=$90+2|0;$p__sign=$incdec_ptr115;var $91=HEAP16[$90>>1];var $conv116=$91<<16>>16;var $mul117=$conv114*$conv116|0;var $shr118=$mul117>>7;var $92=$s;var $add119=$92+$shr118|0;$s=$add119;var $93=$p2;var $incdec_ptr120=$93+2|0;$p2=$incdec_ptr120;var $94=HEAP16[$93>>1];var $conv121=$94<<16>>16;var $95=$p__sign;var $incdec_ptr122=$95+2|0;$p__sign=$incdec_ptr122;var $96=HEAP16[$95>>1];var $conv123=$96<<16>>16;var $mul124=$conv121*$conv123|0;var $shr125=$mul124>>7;var $97=$s;var $add126=$97+$shr125|0;$s=$add126;var $98=$p3;var $incdec_ptr127=$98+2|0;$p3=$incdec_ptr127;var $99=HEAP16[$98>>1];var $conv128=$99<<16>>16;var $100=$p__sign;var $incdec_ptr129=$100+2|0;$p__sign=$incdec_ptr129;var $101=HEAP16[$100>>1];var $conv130=$101<<16>>16;var $mul131=$conv128*$conv130|0;var $shr132=$mul131>>7;var $102=$s;var $add133=$102+$shr132|0;$s=$add133;var $103=$p4;var $incdec_ptr134=$103+2|0;$p4=$incdec_ptr134;var $104=HEAP16[$103>>1];var $conv135=$104<<16>>16;var $105=$p__sign;var $incdec_ptr136=$105+2|0;$p__sign=$incdec_ptr136;var $106=HEAP16[$105>>1];var $conv137=$106<<16>>16;var $mul138=$conv135*$conv137|0;var $shr139=$mul138>>7;var $107=$s;var $add140=$107+$shr139|0;$s=$add140;var $108=$p5;var $incdec_ptr141=$108+2|0;$p5=$incdec_ptr141;var $109=HEAP16[$108>>1];var $conv142=$109<<16>>16;var $110=$p__sign;var $incdec_ptr143=$110+2|0;$p__sign=$incdec_ptr143;var $111=HEAP16[$110>>1];var $conv144=$111<<16>>16;var $mul145=$conv142*$conv144|0;var $shr146=$mul145>>7;var $112=$s;var $add147=$112+$shr146|0;$s=$add147;var $113=$p6;var $incdec_ptr148=$113+2|0;$p6=$incdec_ptr148;var $114=HEAP16[$113>>1];var $conv149=$114<<16>>16;var $115=$p__sign;var $incdec_ptr150=$115+2|0;$p__sign=$incdec_ptr150;var $116=HEAP16[$115>>1];var $conv151=$116<<16>>16;var $mul152=$conv149*$conv151|0;var $shr153=$mul152>>7;var $117=$s;var $add154=$117+$shr153|0;$s=$add154;var $118=$p7;var $incdec_ptr155=$118+2|0;$p7=$incdec_ptr155;var $119=HEAP16[$118>>1];var $conv156=$119<<16>>16;var $120=$p__sign;var $incdec_ptr157=$120+2|0;$p__sign=$incdec_ptr157;var $121=HEAP16[$120>>1];var $conv158=$121<<16>>16;var $mul159=$conv156*$conv158|0;var $shr160=$mul159>>7;var $122=$s;var $add161=$122+$shr160|0;$s=$add161;var $123=$p8;var $incdec_ptr162=$123+2|0;$p8=$incdec_ptr162;var $124=HEAP16[$123>>1];var $conv163=$124<<16>>16;var $125=$p__sign;var $incdec_ptr164=$125+2|0;$p__sign=$incdec_ptr164;var $126=HEAP16[$125>>1];var $conv165=$126<<16>>16;var $mul166=$conv163*$conv165|0;var $shr167=$mul166>>7;var $127=$s;var $add168=$127+$shr167|0;$s=$add168;var $128=$p9;var $incdec_ptr169=$128+2|0;$p9=$incdec_ptr169;var $129=HEAP16[$128>>1];var $conv170=$129<<16>>16;var $130=$p__sign;var $incdec_ptr171=$130+2|0;$p__sign=$incdec_ptr171;var $131=HEAP16[$130>>1];var $conv172=$131<<16>>16;var $mul173=$conv170*$conv172|0;var $shr174=$mul173>>7;var $132=$s;var $add175=$132+$shr174|0;$s=$add175;var $133=$s;var $add176=$133+128|0;var $shr177=$add176>>8;var $conv178=$shr177&65535;var $134=$p_y;var $incdec_ptr179=$134+2|0;$p_y=$incdec_ptr179;HEAP16[$134>>1]=$conv178;__label__=22;break;case 22:var $135=$i;var $dec=$135-1&65535;$i=$dec;__label__=20;break;case 23:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_build_code["X"]=1;function _code_2i40_11bits($x,$h,$T0,$pitch_sharp,$code,$y,$sign,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3444;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $h_addr;var $T0_addr;var $pitch_sharp_addr;var $code_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $codvec=__stackBase__;var $dn=__stackBase__+4;var $dn2=__stackBase__+84;var $dn_sign=__stackBase__+164;var $rr=__stackBase__+244;var $i;var $index;var $sharp;var $tempWord;$x_addr=$x;$h_addr=$h;$T0_addr=$T0;$pitch_sharp_addr=$pitch_sharp;$code_addr=$code;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;var $0=$pitch_sharp_addr;var $conv=$0<<16>>16;var $shl=$conv<<1;var $conv1=$shl&65535;$sharp=$conv1;var $1=$T0_addr;var $conv2=$1<<16>>16;var $cmp=($conv2|0)<40;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $2=$T0_addr;$i=$2;__label__=2;break;case 2:var $3=$i;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<40;if($cmp5){__label__=3;break}else{__label__=5;break}case 3:var $4=$i;var $conv7=$4<<16>>16;var $5=$T0_addr;var $conv8=$5<<16>>16;var $sub=$conv7-$conv8|0;var $6=$h_addr;var $arrayidx=$6+($sub<<1)|0;var $7=HEAP16[$arrayidx>>1];var $8=$sharp;var $9=$pOverflow_addr;var $call=_mult($7,$8,$9);$tempWord=$call;var $10=$i;var $idxprom=$10<<16>>16;var $11=$h_addr;var $arrayidx9=$11+($idxprom<<1)|0;var $12=HEAP16[$arrayidx9>>1];var $13=$tempWord;var $14=$pOverflow_addr;var $call10=_add_16($12,$13,$14);var $15=$i;var $idxprom11=$15<<16>>16;var $16=$h_addr;var $arrayidx12=$16+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$call10;__label__=4;break;case 4:var $17=$i;var $inc=$17+1&65535;$i=$inc;__label__=2;break;case 5:__label__=6;break;case 6:var $18=$h_addr;var $19=$x_addr;var $arraydecay=$dn|0;var $20=$pOverflow_addr;_cor_h_x($18,$19,$arraydecay,1,$20);var $arraydecay13=$dn|0;var $arraydecay14=$dn_sign|0;var $arraydecay15=$dn2|0;_set_sign($arraydecay13,$arraydecay14,$arraydecay15,8);var $21=$h_addr;var $arraydecay16=$dn_sign|0;var $arraydecay17=$rr|0;var $22=$pOverflow_addr;_cor_h($21,$arraydecay16,$arraydecay17,$22);var $arraydecay18=$dn|0;var $arraydecay19=$rr|0;var $arraydecay20=$codvec|0;var $23=$pOverflow_addr;_search_2i40($arraydecay18,$arraydecay19,$arraydecay20,$23);var $arraydecay21=$codvec|0;var $arraydecay22=$dn_sign|0;var $24=$code_addr;var $25=$h_addr;var $26=$y_addr;var $27=$sign_addr;var $28=$pOverflow_addr;var $call23=_build_code6($arraydecay21,$arraydecay22,$24,$25,$26,$27,$28);$index=$call23;var $29=$T0_addr;var $conv24=$29<<16>>16;var $cmp25=($conv24|0)<40;if($cmp25){__label__=7;break}else{__label__=12;break}case 7:var $30=$T0_addr;$i=$30;__label__=8;break;case 8:var $31=$i;var $conv29=$31<<16>>16;var $cmp30=($conv29|0)<40;if($cmp30){__label__=9;break}else{__label__=11;break}case 9:var $32=$i;var $conv33=$32<<16>>16;var $33=$T0_addr;var $conv34=$33<<16>>16;var $sub35=$conv33-$conv34|0;var $34=$code_addr;var $arrayidx36=$34+($sub35<<1)|0;var $35=HEAP16[$arrayidx36>>1];var $36=$sharp;var $37=$pOverflow_addr;var $call37=_mult($35,$36,$37);$tempWord=$call37;var $38=$i;var $idxprom38=$38<<16>>16;var $39=$code_addr;var $arrayidx39=$39+($idxprom38<<1)|0;var $40=HEAP16[$arrayidx39>>1];var $41=$tempWord;var $42=$pOverflow_addr;var $call40=_add_16($40,$41,$42);var $43=$i;var $idxprom41=$43<<16>>16;var $44=$code_addr;var $arrayidx42=$44+($idxprom41<<1)|0;HEAP16[$arrayidx42>>1]=$call40;__label__=10;break;case 10:var $45=$i;var $inc44=$45+1&65535;$i=$inc44;__label__=8;break;case 11:__label__=12;break;case 12:var $46=$index;STACKTOP=__stackBase__;return $46;default:assert(0,"bad label: "+__label__)}}_code_2i40_11bits["X"]=1;function _shl7($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl7["X"]=1;function _L_mac8($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac8["X"]=1;function _search_2i40($dn,$rr,$codvec,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $dn_addr;var $rr_addr;var $codvec_addr;var $pOverflow_addr;var $i0;var $i1;var $ix;var $track1;var $track2;var $ipos=__stackBase__;var $psk;var $ps0;var $ps1;var $sq;var $sq1;var $alpk;var $alp;var $alp_16;var $s;var $alp0;var $alp1;var $i;var $p_codvec;$dn_addr=$dn;$rr_addr=$rr;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;$ix=0;var $0=$codvec_addr;var $arrayidx=$0|0;$p_codvec=$arrayidx;$psk=-1;$alpk=1;$i=0;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)<2;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $3=$p_codvec;var $incdec_ptr=$3+2|0;$p_codvec=$incdec_ptr;HEAP16[$3>>1]=$2;__label__=3;break;case 3:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=1;break;case 4:$track1=0;__label__=5;break;case 5:var $5=$track1;var $conv3=$5<<16>>16;var $cmp4=($conv3|0)<2;if($cmp4){__label__=6;break}else{__label__=24;break}case 6:$track2=0;__label__=7;break;case 7:var $6=$track2;var $conv8=$6<<16>>16;var $cmp9=($conv8|0)<4;if($cmp9){__label__=8;break}else{__label__=22;break}case 8:var $7=$track1;var $idxprom=$7<<16>>16;var $arrayidx12=_startPos1+($idxprom<<1)|0;var $8=HEAP16[$arrayidx12>>1];var $arrayidx13=$ipos|0;HEAP16[$arrayidx13>>1]=$8;var $9=$track2;var $idxprom14=$9<<16>>16;var $arrayidx15=_startPos2+($idxprom14<<1)|0;var $10=HEAP16[$arrayidx15>>1];var $arrayidx16=$ipos+2|0;HEAP16[$arrayidx16>>1]=$10;var $arrayidx17=$ipos|0;var $11=HEAP16[$arrayidx17>>1];$i0=$11;__label__=9;break;case 9:var $12=$i0;var $conv19=$12<<16>>16;var $cmp20=($conv19|0)<40;if($cmp20){__label__=10;break}else{__label__=20;break}case 10:var $13=$i0;var $idxprom23=$13<<16>>16;var $14=$dn_addr;var $arrayidx24=$14+($idxprom23<<1)|0;var $15=HEAP16[$arrayidx24>>1];$ps0=$15;var $16=$i0;var $idxprom25=$16<<16>>16;var $17=$i0;var $idxprom26=$17<<16>>16;var $18=$rr_addr;var $arrayidx27=$18+$idxprom26*80|0;var $arrayidx28=$arrayidx27+($idxprom25<<1)|0;var $19=HEAP16[$arrayidx28>>1];var $conv29=$19<<16>>16;var $shl=$conv29<<14;$alp0=$shl;$sq=-1;$alp=1;var $arrayidx30=$ipos+2|0;var $20=HEAP16[$arrayidx30>>1];$ix=$20;var $arrayidx31=$ipos+2|0;var $21=HEAP16[$arrayidx31>>1];$i1=$21;__label__=11;break;case 11:var $22=$i1;var $conv33=$22<<16>>16;var $cmp34=($conv33|0)<40;if($cmp34){__label__=12;break}else{__label__=16;break}case 12:var $23=$ps0;var $24=$i1;var $idxprom37=$24<<16>>16;var $25=$dn_addr;var $arrayidx38=$25+($idxprom37<<1)|0;var $26=HEAP16[$arrayidx38>>1];var $27=$pOverflow_addr;var $call=_add_16($23,$26,$27);$ps1=$call;var $28=$alp0;var $29=$i1;var $idxprom39=$29<<16>>16;var $30=$i1;var $idxprom40=$30<<16>>16;var $31=$rr_addr;var $arrayidx41=$31+$idxprom40*80|0;var $arrayidx42=$arrayidx41+($idxprom39<<1)|0;var $32=HEAP16[$arrayidx42>>1];var $conv43=$32<<16>>16;var $shl44=$conv43<<14;var $add=$28+$shl44|0;$alp1=$add;var $33=$i1;var $idxprom45=$33<<16>>16;var $34=$i0;var $idxprom46=$34<<16>>16;var $35=$rr_addr;var $arrayidx47=$35+$idxprom46*80|0;var $arrayidx48=$arrayidx47+($idxprom45<<1)|0;var $36=HEAP16[$arrayidx48>>1];var $conv49=$36<<16>>16;var $shl50=$conv49<<15;var $37=$alp1;var $add51=$37+$shl50|0;$alp1=$add51;var $38=$ps1;var $conv52=$38<<16>>16;var $39=$ps1;var $conv53=$39<<16>>16;var $mul=$conv52*$conv53|0;var $shr=$mul>>15;var $conv54=$shr&65535;$sq1=$conv54;var $40=$alp1;var $add55=$40+32768|0;var $shr56=$add55>>16;var $conv57=$shr56&65535;$alp_16=$conv57;var $41=$alp;var $conv58=$41<<16>>16;var $42=$sq1;var $conv59=$42<<16>>16;var $mul60=$conv58*$conv59|0;var $shl61=$mul60<<1;$s=$shl61;var $43=$sq;var $conv62=$43<<16>>16;var $44=$alp_16;var $conv63=$44<<16>>16;var $mul64=$conv62*$conv63|0;var $shl65=$mul64<<1;var $45=$s;var $sub=$45-$shl65|0;$s=$sub;var $46=$s;var $cmp66=($46|0)>0;if($cmp66){__label__=13;break}else{__label__=14;break}case 13:var $47=$sq1;$sq=$47;var $48=$alp_16;$alp=$48;var $49=$i1;$ix=$49;__label__=14;break;case 14:__label__=15;break;case 15:var $50=$i1;var $conv69=$50<<16>>16;var $add70=$conv69+5|0;var $conv71=$add70&65535;$i1=$conv71;__label__=11;break;case 16:var $51=$alpk;var $conv73=$51<<16>>16;var $52=$sq;var $conv74=$52<<16>>16;var $mul75=$conv73*$conv74|0;var $shl76=$mul75<<1;$s=$shl76;var $53=$psk;var $conv77=$53<<16>>16;var $54=$alp;var $conv78=$54<<16>>16;var $mul79=$conv77*$conv78|0;var $shl80=$mul79<<1;var $55=$s;var $sub81=$55-$shl80|0;$s=$sub81;var $56=$s;var $cmp82=($56|0)>0;if($cmp82){__label__=17;break}else{__label__=18;break}case 17:var $57=$sq;$psk=$57;var $58=$alp;$alpk=$58;var $59=$codvec_addr;var $arrayidx85=$59|0;$p_codvec=$arrayidx85;var $60=$i0;var $61=$p_codvec;var $incdec_ptr86=$61+2|0;$p_codvec=$incdec_ptr86;HEAP16[$61>>1]=$60;var $62=$ix;var $63=$p_codvec;HEAP16[$63>>1]=$62;__label__=18;break;case 18:__label__=19;break;case 19:var $64=$i0;var $conv89=$64<<16>>16;var $add90=$conv89+5|0;var $conv91=$add90&65535;$i0=$conv91;__label__=9;break;case 20:__label__=21;break;case 21:var $65=$track2;var $inc94=$65+1&65535;$track2=$inc94;__label__=7;break;case 22:__label__=23;break;case 23:var $66=$track1;var $inc97=$66+1&65535;$track1=$inc97;__label__=5;break;case 24:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_search_2i40["X"]=1;function _build_code6($codvec,$dn_sign,$cod,$h,$y,$sign,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $codvec_addr;var $dn_sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $i;var $j;var $k;var $track;var $index;var $_sign=__stackBase__;var $indx;var $rsign;var $tempWord;var $p0;var $p1;var $s;$codvec_addr=$codvec;$dn_sign_addr=$dn_sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$cod_addr;var $arrayidx=$2+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:$indx=0;$rsign=0;$k=0;__label__=5;break;case 5:var $4=$k;var $conv3=$4<<16>>16;var $cmp4=($conv3|0)<2;if($cmp4){__label__=6;break}else{__label__=28;break}case 6:var $5=$k;var $idxprom7=$5<<16>>16;var $6=$codvec_addr;var $arrayidx8=$6+($idxprom7<<1)|0;var $7=HEAP16[$arrayidx8>>1];$i=$7;var $8=$i;var $idxprom9=$8<<16>>16;var $9=$dn_sign_addr;var $arrayidx10=$9+($idxprom9<<1)|0;var $10=HEAP16[$arrayidx10>>1];$j=$10;var $11=$i;var $conv11=$11<<16>>16;var $mul=$conv11*6554|0;var $shr=$mul>>15;var $conv12=$shr&65535;$index=$conv12;var $12=$index;var $conv13=$12<<16>>16;var $shl=$conv13<<3;var $13=$index;var $conv14=$13<<16>>16;var $shl15=$conv14<<1;var $add=$shl+$shl15|0;var $conv16=$add&65535;$tempWord=$conv16;var $14=$tempWord;var $conv17=$14<<16>>16;var $shr18=$conv17>>1;var $conv19=$shr18&65535;$tempWord=$conv19;var $15=$i;var $conv20=$15<<16>>16;var $16=$tempWord;var $conv21=$16<<16>>16;var $sub=$conv20-$conv21|0;var $conv22=$sub&65535;$track=$conv22;var $17=$track;$tempWord=$17;var $18=$tempWord;var $conv23=$18<<16>>16;var $cmp24=($conv23|0)==0;if($cmp24){__label__=7;break}else{__label__=8;break}case 7:$track=1;var $19=$index;var $conv26=$19<<16>>16;var $shl27=$conv26<<6;var $conv28=$shl27&65535;$index=$conv28;__label__=23;break;case 8:var $20=$track;var $conv29=$20<<16>>16;var $cmp30=($conv29|0)==1;if($cmp30){__label__=9;break}else{__label__=13;break}case 9:var $21=$k;$tempWord=$21;var $22=$tempWord;var $conv33=$22<<16>>16;var $cmp34=($conv33|0)==0;if($cmp34){__label__=10;break}else{__label__=11;break}case 10:$track=0;var $23=$index;var $conv37=$23<<16>>16;var $shl38=$conv37<<1;var $conv39=$shl38&65535;$index=$conv39;__label__=12;break;case 11:$track=1;var $24=$index;var $conv41=$24<<16>>16;var $shl42=$conv41<<6;var $conv43=$shl42&65535;$tempWord=$conv43;var $25=$tempWord;var $conv44=$25<<16>>16;var $add45=$conv44+16|0;var $conv46=$add45&65535;$index=$conv46;__label__=12;break;case 12:__label__=22;break;case 13:var $26=$track;var $conv48=$26<<16>>16;var $cmp49=($conv48|0)==2;if($cmp49){__label__=14;break}else{__label__=15;break}case 14:$track=1;var $27=$index;var $conv52=$27<<16>>16;var $shl53=$conv52<<6;var $conv54=$shl53&65535;$tempWord=$conv54;var $28=$tempWord;var $conv55=$28<<16>>16;var $add56=$conv55+32|0;var $conv57=$add56&65535;$index=$conv57;__label__=21;break;case 15:var $29=$track;var $conv59=$29<<16>>16;var $cmp60=($conv59|0)==3;if($cmp60){__label__=16;break}else{__label__=17;break}case 16:$track=0;var $30=$index;var $conv63=$30<<16>>16;var $shl64=$conv63<<1;var $conv65=$shl64&65535;$tempWord=$conv65;var $31=$tempWord;var $conv66=$31<<16>>16;var $add67=$conv66+1|0;var $conv68=$add67&65535;$index=$conv68;__label__=20;break;case 17:var $32=$track;var $conv70=$32<<16>>16;var $cmp71=($conv70|0)==4;if($cmp71){__label__=18;break}else{__label__=19;break}case 18:$track=1;var $33=$index;var $conv74=$33<<16>>16;var $shl75=$conv74<<6;var $conv76=$shl75&65535;$tempWord=$conv76;var $34=$tempWord;var $conv77=$34<<16>>16;var $add78=$conv77+48|0;var $conv79=$add78&65535;$index=$conv79;__label__=19;break;case 19:__label__=20;break;case 20:__label__=21;break;case 21:__label__=22;break;case 22:__label__=23;break;case 23:var $35=$j;var $conv85=$35<<16>>16;var $cmp86=($conv85|0)>0;if($cmp86){__label__=24;break}else{__label__=25;break}case 24:var $36=$i;var $idxprom89=$36<<16>>16;var $37=$cod_addr;var $arrayidx90=$37+($idxprom89<<1)|0;HEAP16[$arrayidx90>>1]=8191;var $38=$k;var $idxprom91=$38<<16>>16;var $arrayidx92=$_sign+($idxprom91<<1)|0;HEAP16[$arrayidx92>>1]=32767;var $39=$track;var $40=$pOverflow_addr;var $call=_shl7(1,$39,$40);$tempWord=$call;var $41=$rsign;var $42=$tempWord;var $43=$pOverflow_addr;var $call93=_add_16($41,$42,$43);$rsign=$call93;__label__=26;break;case 25:var $44=$i;var $idxprom95=$44<<16>>16;var $45=$cod_addr;var $arrayidx96=$45+($idxprom95<<1)|0;HEAP16[$arrayidx96>>1]=-8192;var $46=$k;var $idxprom97=$46<<16>>16;var $arrayidx98=$_sign+($idxprom97<<1)|0;HEAP16[$arrayidx98>>1]=-32768;__label__=26;break;case 26:var $47=$indx;var $48=$index;var $49=$pOverflow_addr;var $call100=_add_16($47,$48,$49);$indx=$call100;__label__=27;break;case 27:var $50=$k;var $inc102=$50+1&65535;$k=$inc102;__label__=5;break;case 28:var $51=$rsign;var $52=$sign_addr;HEAP16[$52>>1]=$51;var $53=$h_addr;var $54=$codvec_addr;var $arrayidx104=$54|0;var $55=HEAP16[$arrayidx104>>1];var $conv105=$55<<16>>16;var $idx_neg=-$conv105|0;var $add_ptr=$53+($idx_neg<<1)|0;$p0=$add_ptr;var $56=$h_addr;var $57=$codvec_addr;var $arrayidx106=$57+2|0;var $58=HEAP16[$arrayidx106>>1];var $conv107=$58<<16>>16;var $idx_neg108=-$conv107|0;var $add_ptr109=$56+($idx_neg108<<1)|0;$p1=$add_ptr109;$i=0;__label__=29;break;case 29:var $59=$i;var $conv111=$59<<16>>16;var $cmp112=($conv111|0)<40;if($cmp112){__label__=30;break}else{__label__=32;break}case 30:$s=0;var $60=$s;var $61=$p0;var $incdec_ptr=$61+2|0;$p0=$incdec_ptr;var $62=HEAP16[$61>>1];var $arrayidx115=$_sign|0;var $63=HEAP16[$arrayidx115>>1];var $64=$pOverflow_addr;var $call116=_L_mac8($60,$62,$63,$64);$s=$call116;var $65=$s;var $66=$p1;var $incdec_ptr117=$66+2|0;$p1=$incdec_ptr117;var $67=HEAP16[$66>>1];var $arrayidx118=$_sign+2|0;var $68=HEAP16[$arrayidx118>>1];var $69=$pOverflow_addr;var $call119=_L_mac8($65,$67,$68,$69);$s=$call119;var $70=$s;var $71=$pOverflow_addr;var $call120=_pv_round($70,$71);var $72=$i;var $idxprom121=$72<<16>>16;var $73=$y_addr;var $arrayidx122=$73+($idxprom121<<1)|0;HEAP16[$arrayidx122>>1]=$call120;__label__=31;break;case 31:var $74=$i;var $inc124=$74+1&65535;$i=$inc124;__label__=29;break;case 32:var $75=$indx;STACKTOP=__stackBase__;return $75;default:assert(0,"bad label: "+__label__)}}_build_code6["X"]=1;function _mult9($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mult12($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _search_2i4010($subNr,$dn,$rr,$startPos_ptr,$codvec,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $subNr_addr;var $dn_addr;var $rr_addr;var $startPos_ptr_addr;var $codvec_addr;var $pOverflow_addr;var $i0;var $i1;var $ix;var $track1;var $ipos=__stackBase__;var $psk;var $ps0;var $ps1;var $sq;var $sq1;var $alpk;var $alp;var $alp_16;var $s;var $alp0;var $alp1;var $i;var $L_temp;var $p_codvec;$subNr_addr=$subNr;$dn_addr=$dn;$rr_addr=$rr;$startPos_ptr_addr=$startPos_ptr;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;$ix=0;var $0=$codvec_addr;var $arrayidx=$0|0;$p_codvec=$arrayidx;var $1=$pOverflow_addr;$psk=-1;$alpk=1;var $2=$p_codvec;var $incdec_ptr=$2+2|0;$p_codvec=$incdec_ptr;HEAP16[$2>>1]=0;var $3=$p_codvec;HEAP16[$3>>1]=1;$track1=0;__label__=1;break;case 1:var $4=$track1;var $conv=$4<<16>>16;var $cmp=($conv|0)<2;if($cmp){__label__=2;break}else{__label__=16;break}case 2:var $5=$subNr_addr;var $conv2=$5<<16>>16;var $shl=$conv2<<1;var $6=$track1;var $conv3=$6<<16>>16;var $shl4=$conv3<<3;var $add=$shl+$shl4|0;var $conv5=$add&65535;$i=$conv5;var $7=$startPos_ptr_addr;var $8=$i;var $conv6=$8<<16>>16;var $add_ptr=$7+($conv6<<1)|0;var $9=HEAP16[$add_ptr>>1];var $arraydecay=$ipos|0;HEAP16[$arraydecay>>1]=$9;var $10=$startPos_ptr_addr;var $11=$i;var $conv7=$11<<16>>16;var $add_ptr8=$10+($conv7<<1)|0;var $add_ptr9=$add_ptr8+2|0;var $12=HEAP16[$add_ptr9>>1];var $arraydecay10=$ipos|0;var $add_ptr11=$arraydecay10+2|0;HEAP16[$add_ptr11>>1]=$12;var $arraydecay12=$ipos|0;var $13=HEAP16[$arraydecay12>>1];$i0=$13;__label__=3;break;case 3:var $14=$i0;var $conv14=$14<<16>>16;var $cmp15=($conv14|0)<40;if($cmp15){__label__=4;break}else{__label__=14;break}case 4:var $15=$dn_addr;var $16=$i0;var $conv18=$16<<16>>16;var $add_ptr19=$15+($conv18<<1)|0;var $17=HEAP16[$add_ptr19>>1];$ps0=$17;var $18=$i0;var $idxprom=$18<<16>>16;var $19=$i0;var $idxprom20=$19<<16>>16;var $20=$rr_addr;var $arrayidx21=$20+$idxprom20*80|0;var $arrayidx22=$arrayidx21+($idxprom<<1)|0;var $21=HEAP16[$arrayidx22>>1];var $conv23=$21<<16>>16;var $shl24=$conv23<<14;$alp0=$shl24;$sq=-1;$alp=1;var $arraydecay25=$ipos|0;var $add_ptr26=$arraydecay25+2|0;var $22=HEAP16[$add_ptr26>>1];$ix=$22;var $arraydecay27=$ipos|0;var $add_ptr28=$arraydecay27+2|0;var $23=HEAP16[$add_ptr28>>1];$i1=$23;__label__=5;break;case 5:var $24=$i1;var $conv30=$24<<16>>16;var $cmp31=($conv30|0)<40;if($cmp31){__label__=6;break}else{__label__=10;break}case 6:var $25=$ps0;var $conv34=$25<<16>>16;var $26=$i1;var $idxprom35=$26<<16>>16;var $27=$dn_addr;var $arrayidx36=$27+($idxprom35<<1)|0;var $28=HEAP16[$arrayidx36>>1];var $conv37=$28<<16>>16;var $add38=$conv34+$conv37|0;var $conv39=$add38&65535;$ps1=$conv39;var $29=$alp0;var $30=$i1;var $idxprom40=$30<<16>>16;var $31=$i1;var $idxprom41=$31<<16>>16;var $32=$rr_addr;var $arrayidx42=$32+$idxprom41*80|0;var $arrayidx43=$arrayidx42+($idxprom40<<1)|0;var $33=HEAP16[$arrayidx43>>1];var $conv44=$33<<16>>16;var $shl45=$conv44<<14;var $add46=$29+$shl45|0;$alp1=$add46;var $34=$i1;var $idxprom47=$34<<16>>16;var $35=$i0;var $idxprom48=$35<<16>>16;var $36=$rr_addr;var $arrayidx49=$36+$idxprom48*80|0;var $arrayidx50=$arrayidx49+($idxprom47<<1)|0;var $37=HEAP16[$arrayidx50>>1];var $conv51=$37<<16>>16;var $shl52=$conv51<<15;var $38=$alp1;var $add53=$38+$shl52|0;$alp1=$add53;var $39=$ps1;var $conv54=$39<<16>>16;var $40=$ps1;var $conv55=$40<<16>>16;var $mul=$conv54*$conv55|0;var $shr=$mul>>15;var $conv56=$shr&65535;$sq1=$conv56;var $41=$alp1;var $add57=$41+32768|0;var $shr58=$add57>>16;var $conv59=$shr58&65535;$alp_16=$conv59;var $42=$alp;var $conv60=$42<<16>>16;var $43=$sq1;var $conv61=$43<<16>>16;var $mul62=$conv60*$conv61|0;var $shl63=$mul62<<1;$L_temp=$shl63;var $44=$L_temp;var $45=$sq;var $conv64=$45<<16>>16;var $46=$alp_16;var $conv65=$46<<16>>16;var $mul66=$conv64*$conv65|0;var $shl67=$mul66<<1;var $sub=$44-$shl67|0;$s=$sub;var $47=$s;var $cmp68=($47|0)>0;if($cmp68){__label__=7;break}else{__label__=8;break}case 7:var $48=$sq1;$sq=$48;var $49=$alp_16;$alp=$49;var $50=$i1;$ix=$50;__label__=8;break;case 8:__label__=9;break;case 9:var $51=$i1;var $conv70=$51<<16>>16;var $add71=$conv70+5|0;var $conv72=$add71&65535;$i1=$conv72;__label__=5;break;case 10:var $52=$alpk;var $conv73=$52<<16>>16;var $53=$sq;var $conv74=$53<<16>>16;var $mul75=$conv73*$conv74|0;var $shl76=$mul75<<1;$L_temp=$shl76;var $54=$L_temp;var $55=$psk;var $conv77=$55<<16>>16;var $56=$alp;var $conv78=$56<<16>>16;var $mul79=$conv77*$conv78|0;var $shl80=$mul79<<1;var $sub81=$54-$shl80|0;$s=$sub81;var $57=$s;var $cmp82=($57|0)>0;if($cmp82){__label__=11;break}else{__label__=12;break}case 11:var $58=$sq;$psk=$58;var $59=$alp;$alpk=$59;var $60=$codvec_addr;var $arrayidx85=$60|0;$p_codvec=$arrayidx85;var $61=$i0;var $62=$p_codvec;var $incdec_ptr86=$62+2|0;$p_codvec=$incdec_ptr86;HEAP16[$62>>1]=$61;var $63=$ix;var $64=$p_codvec;HEAP16[$64>>1]=$63;__label__=12;break;case 12:__label__=13;break;case 13:var $65=$i0;var $conv89=$65<<16>>16;var $add90=$conv89+5|0;var $conv91=$add90&65535;$i0=$conv91;__label__=3;break;case 14:__label__=15;break;case 15:var $66=$track1;var $inc=$66+1&65535;$track1=$inc;__label__=1;break;case 16:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_search_2i4010["X"]=1;function _code_2i40_9bits($subNr,$x,$h,$T0,$pitch_sharp,$code,$y,$sign,$startPos_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3444;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $subNr_addr;var $x_addr;var $h_addr;var $T0_addr;var $pitch_sharp_addr;var $code_addr;var $y_addr;var $sign_addr;var $startPos_ptr_addr;var $pOverflow_addr;var $codvec=__stackBase__;var $dn=__stackBase__+4;var $dn2=__stackBase__+84;var $dn_sign=__stackBase__+164;var $rr=__stackBase__+244;var $i;var $index;var $sharp;var $temp;var $L_temp;$subNr_addr=$subNr;$x_addr=$x;$h_addr=$h;$T0_addr=$T0;$pitch_sharp_addr=$pitch_sharp;$code_addr=$code;$y_addr=$y;$sign_addr=$sign;$startPos_ptr_addr=$startPos_ptr;$pOverflow_addr=$pOverflow;var $0=$pitch_sharp_addr;var $conv=$0<<16>>16;var $shl=$conv<<1;$L_temp=$shl;var $1=$L_temp;var $2=$L_temp;var $conv1=$2&65535;var $conv2=$conv1<<16>>16;var $cmp=($1|0)!=($conv2|0);if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;var $4=$pitch_sharp_addr;var $conv4=$4<<16>>16;var $cmp5=($conv4|0)>0;var $cond=$cmp5?32767:-32768;var $conv7=$cond&65535;$sharp=$conv7;__label__=3;break;case 2:var $5=$L_temp;var $conv8=$5&65535;$sharp=$conv8;__label__=3;break;case 3:var $6=$T0_addr;var $conv9=$6<<16>>16;var $cmp10=($conv9|0)<40;if($cmp10){__label__=4;break}else{__label__=9;break}case 4:var $7=$T0_addr;$i=$7;__label__=5;break;case 5:var $8=$i;var $conv13=$8<<16>>16;var $cmp14=($conv13|0)<40;if($cmp14){__label__=6;break}else{__label__=8;break}case 6:var $9=$h_addr;var $10=$i;var $conv16=$10<<16>>16;var $add_ptr=$9+($conv16<<1)|0;var $11=$T0_addr;var $conv17=$11<<16>>16;var $idx_neg=-$conv17|0;var $add_ptr18=$add_ptr+($idx_neg<<1)|0;var $12=HEAP16[$add_ptr18>>1];var $13=$sharp;var $14=$pOverflow_addr;var $call=_mult9($12,$13,$14);$temp=$call;var $15=$h_addr;var $16=$i;var $conv19=$16<<16>>16;var $add_ptr20=$15+($conv19<<1)|0;var $17=HEAP16[$add_ptr20>>1];var $18=$temp;var $19=$pOverflow_addr;var $call21=_add_16($17,$18,$19);var $20=$h_addr;var $21=$i;var $conv22=$21<<16>>16;var $add_ptr23=$20+($conv22<<1)|0;HEAP16[$add_ptr23>>1]=$call21;__label__=7;break;case 7:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=5;break;case 8:__label__=9;break;case 9:var $23=$h_addr;var $24=$x_addr;var $arraydecay=$dn|0;var $25=$pOverflow_addr;_cor_h_x($23,$24,$arraydecay,1,$25);var $arraydecay25=$dn|0;var $arraydecay26=$dn_sign|0;var $arraydecay27=$dn2|0;_set_sign($arraydecay25,$arraydecay26,$arraydecay27,8);var $26=$h_addr;var $arraydecay28=$dn_sign|0;var $arraydecay29=$rr|0;var $27=$pOverflow_addr;_cor_h($26,$arraydecay28,$arraydecay29,$27);var $28=$subNr_addr;var $arraydecay30=$dn|0;var $arraydecay31=$rr|0;var $29=$startPos_ptr_addr;var $arraydecay32=$codvec|0;var $30=$pOverflow_addr;_search_2i4010($28,$arraydecay30,$arraydecay31,$29,$arraydecay32,$30);var $31=$subNr_addr;var $arraydecay33=$codvec|0;var $arraydecay34=$dn_sign|0;var $32=$code_addr;var $33=$h_addr;var $34=$y_addr;var $35=$sign_addr;var $36=$pOverflow_addr;var $call35=_build_code11($31,$arraydecay33,$arraydecay34,$32,$33,$34,$35,$36);$index=$call35;var $37=$T0_addr;var $conv36=$37<<16>>16;var $cmp37=($conv36|0)<40;if($cmp37){__label__=10;break}else{__label__=15;break}case 10:var $38=$T0_addr;$i=$38;__label__=11;break;case 11:var $39=$i;var $conv41=$39<<16>>16;var $cmp42=($conv41|0)<40;if($cmp42){__label__=12;break}else{__label__=14;break}case 12:var $40=$code_addr;var $41=$i;var $conv45=$41<<16>>16;var $add_ptr46=$40+($conv45<<1)|0;var $42=$T0_addr;var $conv47=$42<<16>>16;var $idx_neg48=-$conv47|0;var $add_ptr49=$add_ptr46+($idx_neg48<<1)|0;var $43=HEAP16[$add_ptr49>>1];var $44=$sharp;var $45=$pOverflow_addr;var $call50=_mult9($43,$44,$45);$temp=$call50;var $46=$code_addr;var $47=$i;var $conv51=$47<<16>>16;var $add_ptr52=$46+($conv51<<1)|0;var $48=HEAP16[$add_ptr52>>1];var $49=$temp;var $50=$pOverflow_addr;var $call53=_add_16($48,$49,$50);var $51=$code_addr;var $52=$i;var $conv54=$52<<16>>16;var $add_ptr55=$51+($conv54<<1)|0;HEAP16[$add_ptr55>>1]=$call53;__label__=13;break;case 13:var $53=$i;var $inc57=$53+1&65535;$i=$inc57;__label__=11;break;case 14:__label__=15;break;case 15:var $54=$index;STACKTOP=__stackBase__;return $54;default:assert(0,"bad label: "+__label__)}}_code_2i40_9bits["X"]=1;function _build_code11($subNr,$codvec,$dn_sign,$cod,$h,$y,$sign,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $subNr_addr;var $codvec_addr;var $dn_sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $i;var $j;var $k;var $track;var $first;var $index;var $rsign;var $indx;var $_sign=__stackBase__;var $p0;var $p1;var $pt;var $s;$subNr_addr=$subNr;$codvec_addr=$codvec;$dn_sign_addr=$dn_sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;var $0=$subNr_addr;var $conv=$0<<16>>16;var $add_ptr=(_trackTable|0)+($conv<<1)|0;var $1=$subNr_addr;var $conv1=$1<<16>>16;var $shl=$conv1<<2;var $add_ptr2=$add_ptr+($shl<<1)|0;$pt=$add_ptr2;$i=0;__label__=1;break;case 1:var $2=$i;var $conv3=$2<<16>>16;var $cmp=($conv3|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$cod_addr;var $4=$i;var $conv5=$4<<16>>16;var $add_ptr6=$3+($conv5<<1)|0;HEAP16[$add_ptr6>>1]=0;__label__=3;break;case 3:var $5=$i;var $inc=$5+1&65535;$i=$inc;__label__=1;break;case 4:$indx=0;$rsign=0;$k=0;__label__=5;break;case 5:var $6=$k;var $conv8=$6<<16>>16;var $cmp9=($conv8|0)<2;if($cmp9){__label__=6;break}else{__label__=16;break}case 6:var $7=$codvec_addr;var $8=$k;var $conv12=$8<<16>>16;var $add_ptr13=$7+($conv12<<1)|0;var $9=HEAP16[$add_ptr13>>1];$i=$9;var $10=$dn_sign_addr;var $11=$i;var $conv14=$11<<16>>16;var $add_ptr15=$10+($conv14<<1)|0;var $12=HEAP16[$add_ptr15>>1];$j=$12;var $13=$i;var $conv16=$13<<16>>16;var $mul=$conv16*6554|0;var $shr=$mul>>15;$s=$shr;var $14=$s;var $conv17=$14&65535;$index=$conv17;var $15=$i;var $conv18=$15<<16>>16;var $16=$index;var $conv19=$16<<16>>16;var $mul20=$conv19*5|0;var $sub=$conv18-$mul20|0;var $conv21=$sub&65535;$track=$conv21;var $17=$pt;var $18=$track;var $conv22=$18<<16>>16;var $add_ptr23=$17+($conv22<<1)|0;var $19=HEAP16[$add_ptr23>>1];$first=$19;var $20=$k;var $conv24=$20<<16>>16;var $cmp25=($conv24|0)==0;if($cmp25){__label__=7;break}else{__label__=10;break}case 7:$track=0;var $21=$first;var $conv27=$21<<16>>16;var $cmp28=($conv27|0)!=0;if($cmp28){__label__=8;break}else{__label__=9;break}case 8:var $22=$index;var $conv31=$22<<16>>16;var $add=$conv31+64|0;var $conv32=$add&65535;$index=$conv32;__label__=9;break;case 9:__label__=11;break;case 10:$track=1;var $23=$index;var $conv33=$23<<16>>16;var $shl34=$conv33<<3;var $conv35=$shl34&65535;$index=$conv35;__label__=11;break;case 11:var $24=$j;var $conv37=$24<<16>>16;var $cmp38=($conv37|0)>0;if($cmp38){__label__=12;break}else{__label__=13;break}case 12:var $25=$cod_addr;var $26=$i;var $conv41=$26<<16>>16;var $add_ptr42=$25+($conv41<<1)|0;HEAP16[$add_ptr42>>1]=8191;var $arraydecay=$_sign|0;var $27=$k;var $conv43=$27<<16>>16;var $add_ptr44=$arraydecay+($conv43<<1)|0;HEAP16[$add_ptr44>>1]=32767;var $28=$track;var $conv45=$28<<16>>16;var $shl46=1<<$conv45;var $29=$rsign;var $conv47=$29<<16>>16;var $add48=$conv47+$shl46|0;var $conv49=$add48&65535;$rsign=$conv49;__label__=14;break;case 13:var $30=$cod_addr;var $31=$i;var $conv51=$31<<16>>16;var $add_ptr52=$30+($conv51<<1)|0;HEAP16[$add_ptr52>>1]=-8192;var $arraydecay53=$_sign|0;var $32=$k;var $conv54=$32<<16>>16;var $add_ptr55=$arraydecay53+($conv54<<1)|0;HEAP16[$add_ptr55>>1]=-32768;__label__=14;break;case 14:var $33=$index;var $conv57=$33<<16>>16;var $34=$indx;var $conv58=$34<<16>>16;var $add59=$conv58+$conv57|0;var $conv60=$add59&65535;$indx=$conv60;__label__=15;break;case 15:var $35=$k;var $inc62=$35+1&65535;$k=$inc62;__label__=5;break;case 16:var $36=$rsign;var $37=$sign_addr;HEAP16[$37>>1]=$36;var $38=$h_addr;var $39=$codvec_addr;var $40=HEAP16[$39>>1];var $conv64=$40<<16>>16;var $idx_neg=-$conv64|0;var $add_ptr65=$38+($idx_neg<<1)|0;$p0=$add_ptr65;var $41=$h_addr;var $42=$codvec_addr;var $add_ptr66=$42+2|0;var $43=HEAP16[$add_ptr66>>1];var $conv67=$43<<16>>16;var $idx_neg68=-$conv67|0;var $add_ptr69=$41+($idx_neg68<<1)|0;$p1=$add_ptr69;$i=0;__label__=17;break;case 17:var $44=$i;var $conv71=$44<<16>>16;var $cmp72=($conv71|0)<40;if($cmp72){__label__=18;break}else{__label__=20;break}case 18:$s=0;var $45=$p0;var $incdec_ptr=$45+2|0;$p0=$incdec_ptr;var $46=HEAP16[$45>>1];var $arraydecay75=$_sign|0;var $47=HEAP16[$arraydecay75>>1];var $48=$pOverflow_addr;var $call=_L_mult12($46,$47,$48);$s=$call;var $49=$s;var $50=$p1;var $incdec_ptr76=$50+2|0;$p1=$incdec_ptr76;var $51=HEAP16[$50>>1];var $arraydecay77=$_sign|0;var $add_ptr78=$arraydecay77+2|0;var $52=HEAP16[$add_ptr78>>1];var $53=$pOverflow_addr;var $call79=_L_mac13($49,$51,$52,$53);$s=$call79;var $54=$s;var $55=$pOverflow_addr;var $call80=_pv_round($54,$55);var $56=$y_addr;var $57=$i;var $conv81=$57<<16>>16;var $add_ptr82=$56+($conv81<<1)|0;HEAP16[$add_ptr82>>1]=$call80;__label__=19;break;case 19:var $58=$i;var $inc84=$58+1&65535;$i=$inc84;__label__=17;break;case 20:var $59=$indx;STACKTOP=__stackBase__;return $59;default:assert(0,"bad label: "+__label__)}}_build_code11["X"]=1;function _Test_search_2i40($subNr,$dn,$rr,$startPos_ptr,$codvec,$pOverflow){var __label__;var $subNr_addr;var $dn_addr;var $rr_addr;var $startPos_ptr_addr;var $codvec_addr;var $pOverflow_addr;$subNr_addr=$subNr;$dn_addr=$dn;$rr_addr=$rr;$startPos_ptr_addr=$startPos_ptr;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;var $0=$subNr_addr;var $1=$dn_addr;var $2=$rr_addr;var $3=$startPos_ptr_addr;var $4=$codvec_addr;var $5=$pOverflow_addr;_search_2i4010($0,$1,$2,$3,$4,$5);return}function _Test_build_code($subNr,$codvec,$dn_sign,$cod,$h,$y,$sign,$pOverflow){var __label__;var $subNr_addr;var $codvec_addr;var $dn_sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $test_index;$subNr_addr=$subNr;$codvec_addr=$codvec;$dn_sign_addr=$dn_sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;var $0=$subNr_addr;var $1=$codvec_addr;var $2=$dn_sign_addr;var $3=$cod_addr;var $4=$h_addr;var $5=$y_addr;var $6=$sign_addr;var $7=$pOverflow_addr;var $call=_build_code11($0,$1,$2,$3,$4,$5,$6,$7);$test_index=$call;var $8=$test_index;return $8}function _L_mac13($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac13["X"]=1;function _mult14($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _code_3i40_14bits($x,$h,$T0,$pitch_sharp,$code,$y,$sign,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3448;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $h_addr;var $T0_addr;var $pitch_sharp_addr;var $code_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $codvec=__stackBase__;var $dn=__stackBase__+8;var $dn2=__stackBase__+88;var $dn_sign=__stackBase__+168;var $rr=__stackBase__+248;var $i;var $index;var $sharp;var $tempWord;$x_addr=$x;$h_addr=$h;$T0_addr=$T0;$pitch_sharp_addr=$pitch_sharp;$code_addr=$code;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;var $0=$pitch_sharp_addr;var $conv=$0<<16>>16;var $shl=$conv<<1;var $conv1=$shl&65535;$sharp=$conv1;var $1=$T0_addr;var $conv2=$1<<16>>16;var $cmp=($conv2|0)<40;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $2=$T0_addr;$i=$2;__label__=2;break;case 2:var $3=$i;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<40;if($cmp5){__label__=3;break}else{__label__=5;break}case 3:var $4=$i;var $conv7=$4<<16>>16;var $5=$T0_addr;var $conv8=$5<<16>>16;var $sub=$conv7-$conv8|0;var $6=$h_addr;var $arrayidx=$6+($sub<<1)|0;var $7=HEAP16[$arrayidx>>1];var $8=$sharp;var $9=$pOverflow_addr;var $call=_mult14($7,$8,$9);$tempWord=$call;var $10=$i;var $idxprom=$10<<16>>16;var $11=$h_addr;var $arrayidx9=$11+($idxprom<<1)|0;var $12=HEAP16[$arrayidx9>>1];var $13=$tempWord;var $14=$pOverflow_addr;var $call10=_add_16($12,$13,$14);var $15=$i;var $idxprom11=$15<<16>>16;var $16=$h_addr;var $arrayidx12=$16+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$call10;__label__=4;break;case 4:var $17=$i;var $inc=$17+1&65535;$i=$inc;__label__=2;break;case 5:__label__=6;break;case 6:var $18=$h_addr;var $19=$x_addr;var $arraydecay=$dn|0;var $20=$pOverflow_addr;_cor_h_x($18,$19,$arraydecay,1,$20);var $arraydecay13=$dn|0;var $arraydecay14=$dn_sign|0;var $arraydecay15=$dn2|0;_set_sign($arraydecay13,$arraydecay14,$arraydecay15,6);var $21=$h_addr;var $arraydecay16=$dn_sign|0;var $arraydecay17=$rr|0;var $22=$pOverflow_addr;_cor_h($21,$arraydecay16,$arraydecay17,$22);var $arraydecay18=$dn|0;var $arraydecay19=$dn2|0;var $arraydecay20=$rr|0;var $arraydecay21=$codvec|0;var $23=$pOverflow_addr;_search_3i40($arraydecay18,$arraydecay19,$arraydecay20,$arraydecay21,$23);var $arraydecay22=$codvec|0;var $arraydecay23=$dn_sign|0;var $24=$code_addr;var $25=$h_addr;var $26=$y_addr;var $27=$sign_addr;var $28=$pOverflow_addr;var $call24=_build_code15($arraydecay22,$arraydecay23,$24,$25,$26,$27,$28);$index=$call24;var $29=$T0_addr;var $conv25=$29<<16>>16;var $cmp26=($conv25|0)<40;if($cmp26){__label__=7;break}else{__label__=12;break}case 7:var $30=$T0_addr;$i=$30;__label__=8;break;case 8:var $31=$i;var $conv30=$31<<16>>16;var $cmp31=($conv30|0)<40;if($cmp31){__label__=9;break}else{__label__=11;break}case 9:var $32=$i;var $conv34=$32<<16>>16;var $33=$T0_addr;var $conv35=$33<<16>>16;var $sub36=$conv34-$conv35|0;var $34=$code_addr;var $arrayidx37=$34+($sub36<<1)|0;var $35=HEAP16[$arrayidx37>>1];var $36=$sharp;var $37=$pOverflow_addr;var $call38=_mult14($35,$36,$37);$tempWord=$call38;var $38=$i;var $idxprom39=$38<<16>>16;var $39=$code_addr;var $arrayidx40=$39+($idxprom39<<1)|0;var $40=HEAP16[$arrayidx40>>1];var $41=$tempWord;var $42=$pOverflow_addr;var $call41=_add_16($40,$41,$42);var $43=$i;var $idxprom42=$43<<16>>16;var $44=$code_addr;var $arrayidx43=$44+($idxprom42<<1)|0;HEAP16[$arrayidx43>>1]=$call41;__label__=10;break;case 10:var $45=$i;var $inc45=$45+1&65535;$i=$inc45;__label__=8;break;case 11:__label__=12;break;case 12:var $46=$index;STACKTOP=__stackBase__;return $46;default:assert(0,"bad label: "+__label__)}}_code_3i40_14bits["X"]=1;function _search_3i40($dn,$dn2,$rr,$codvec,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $dn_addr;var $dn2_addr;var $rr_addr;var $codvec_addr;var $pOverflow_addr;var $i0;var $i1;var $i2;var $ix;var $ps;var $i;var $pos;var $track1;var $track2;var $ipos=__stackBase__;var $psk;var $ps0;var $ps1;var $sq;var $sq1;var $alpk;var $alp;var $alp_16;var $p_codvec;var $s;var $alp0;var $alp1;$dn_addr=$dn;$dn2_addr=$dn2;$rr_addr=$rr;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;$ix=0;$ps=0;var $0=$codvec_addr;var $arrayidx=$0|0;$p_codvec=$arrayidx;$psk=-1;$alpk=1;$i=0;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)<3;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $3=$p_codvec;var $incdec_ptr=$3+2|0;$p_codvec=$incdec_ptr;HEAP16[$3>>1]=$2;__label__=3;break;case 3:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=1;break;case 4:$track1=1;__label__=5;break;case 5:var $5=$track1;var $conv3=$5<<16>>16;var $cmp4=($conv3|0)<4;if($cmp4){__label__=6;break}else{__label__=36;break}case 6:$track2=2;__label__=7;break;case 7:var $6=$track2;var $conv8=$6<<16>>16;var $cmp9=($conv8|0)<5;if($cmp9){__label__=8;break}else{__label__=34;break}case 8:var $arrayidx12=$ipos|0;HEAP16[$arrayidx12>>1]=0;var $7=$track1;var $arrayidx13=$ipos+2|0;HEAP16[$arrayidx13>>1]=$7;var $8=$track2;var $arrayidx14=$ipos+4|0;HEAP16[$arrayidx14>>1]=$8;$i=0;__label__=9;break;case 9:var $9=$i;var $conv16=$9<<16>>16;var $cmp17=($conv16|0)<3;if($cmp17){__label__=10;break}else{__label__=32;break}case 10:var $arrayidx20=$ipos|0;var $10=HEAP16[$arrayidx20>>1];$i0=$10;__label__=11;break;case 11:var $11=$i0;var $conv22=$11<<16>>16;var $cmp23=($conv22|0)<40;if($cmp23){__label__=12;break}else{__label__=30;break}case 12:var $12=$i0;var $idxprom=$12<<16>>16;var $13=$dn2_addr;var $arrayidx26=$13+($idxprom<<1)|0;var $14=HEAP16[$arrayidx26>>1];var $conv27=$14<<16>>16;var $cmp28=($conv27|0)>=0;if($cmp28){__label__=13;break}else{__label__=28;break}case 13:var $15=$i0;var $idxprom30=$15<<16>>16;var $16=$dn_addr;var $arrayidx31=$16+($idxprom30<<1)|0;var $17=HEAP16[$arrayidx31>>1];$ps0=$17;var $18=$i0;var $idxprom32=$18<<16>>16;var $19=$i0;var $idxprom33=$19<<16>>16;var $20=$rr_addr;var $arrayidx34=$20+$idxprom33*80|0;var $arrayidx35=$arrayidx34+($idxprom32<<1)|0;var $21=HEAP16[$arrayidx35>>1];var $conv36=$21<<16>>16;var $shl=$conv36<<14;$alp0=$shl;$sq=-1;$alp=1;$ps=0;var $arrayidx37=$ipos+2|0;var $22=HEAP16[$arrayidx37>>1];$ix=$22;var $arrayidx38=$ipos+2|0;var $23=HEAP16[$arrayidx38>>1];$i1=$23;__label__=14;break;case 14:var $24=$i1;var $conv40=$24<<16>>16;var $cmp41=($conv40|0)<40;if($cmp41){__label__=15;break}else{__label__=19;break}case 15:var $25=$ps0;var $conv44=$25<<16>>16;var $26=$i1;var $idxprom45=$26<<16>>16;var $27=$dn_addr;var $arrayidx46=$27+($idxprom45<<1)|0;var $28=HEAP16[$arrayidx46>>1];var $conv47=$28<<16>>16;var $add=$conv44+$conv47|0;var $conv48=$add&65535;$ps1=$conv48;var $29=$alp0;var $30=$i1;var $idxprom49=$30<<16>>16;var $31=$i1;var $idxprom50=$31<<16>>16;var $32=$rr_addr;var $arrayidx51=$32+$idxprom50*80|0;var $arrayidx52=$arrayidx51+($idxprom49<<1)|0;var $33=HEAP16[$arrayidx52>>1];var $conv53=$33<<16>>16;var $shl54=$conv53<<14;var $add55=$29+$shl54|0;$alp1=$add55;var $34=$i1;var $idxprom56=$34<<16>>16;var $35=$i0;var $idxprom57=$35<<16>>16;var $36=$rr_addr;var $arrayidx58=$36+$idxprom57*80|0;var $arrayidx59=$arrayidx58+($idxprom56<<1)|0;var $37=HEAP16[$arrayidx59>>1];var $conv60=$37<<16>>16;var $shl61=$conv60<<15;var $38=$alp1;var $add62=$38+$shl61|0;$alp1=$add62;var $39=$ps1;var $conv63=$39<<16>>16;var $40=$ps1;var $conv64=$40<<16>>16;var $mul=$conv63*$conv64|0;var $shr=$mul>>15;var $conv65=$shr&65535;$sq1=$conv65;var $41=$alp1;var $add66=$41+32768|0;var $shr67=$add66>>16;var $conv68=$shr67&65535;$alp_16=$conv68;var $42=$alp;var $conv69=$42<<16>>16;var $43=$sq1;var $conv70=$43<<16>>16;var $mul71=$conv69*$conv70|0;var $shl72=$mul71<<1;$s=$shl72;var $44=$sq;var $conv73=$44<<16>>16;var $45=$alp_16;var $conv74=$45<<16>>16;var $mul75=$conv73*$conv74|0;var $shl76=$mul75<<1;var $46=$s;var $sub=$46-$shl76|0;$s=$sub;var $47=$s;var $cmp77=($47|0)>0;if($cmp77){__label__=16;break}else{__label__=17;break}case 16:var $48=$sq1;$sq=$48;var $49=$ps1;$ps=$49;var $50=$alp_16;$alp=$50;var $51=$i1;$ix=$51;__label__=17;break;case 17:__label__=18;break;case 18:var $52=$i1;var $conv81=$52<<16>>16;var $add82=$conv81+5|0;var $conv83=$add82&65535;$i1=$conv83;__label__=14;break;case 19:var $53=$ix;$i1=$53;var $54=$ps;$ps0=$54;var $55=$alp;var $conv85=$55<<16>>16;var $shl86=$conv85<<14;$alp0=$shl86;$sq=-1;$alp=1;$ps=0;var $arrayidx87=$ipos+4|0;var $56=HEAP16[$arrayidx87>>1];$ix=$56;var $arrayidx88=$ipos+4|0;var $57=HEAP16[$arrayidx88>>1];$i2=$57;__label__=20;break;case 20:var $58=$i2;var $conv90=$58<<16>>16;var $cmp91=($conv90|0)<40;if($cmp91){__label__=21;break}else{__label__=25;break}case 21:var $59=$ps0;var $conv94=$59<<16>>16;var $60=$i2;var $idxprom95=$60<<16>>16;var $61=$dn_addr;var $arrayidx96=$61+($idxprom95<<1)|0;var $62=HEAP16[$arrayidx96>>1];var $conv97=$62<<16>>16;var $add98=$conv94+$conv97|0;var $conv99=$add98&65535;$ps1=$conv99;var $63=$alp0;var $64=$i2;var $idxprom100=$64<<16>>16;var $65=$i2;var $idxprom101=$65<<16>>16;var $66=$rr_addr;var $arrayidx102=$66+$idxprom101*80|0;var $arrayidx103=$arrayidx102+($idxprom100<<1)|0;var $67=HEAP16[$arrayidx103>>1];var $conv104=$67<<16>>16;var $shl105=$conv104<<12;var $add106=$63+$shl105|0;$alp1=$add106;var $68=$i2;var $idxprom107=$68<<16>>16;var $69=$i1;var $idxprom108=$69<<16>>16;var $70=$rr_addr;var $arrayidx109=$70+$idxprom108*80|0;var $arrayidx110=$arrayidx109+($idxprom107<<1)|0;var $71=HEAP16[$arrayidx110>>1];var $conv111=$71<<16>>16;var $shl112=$conv111<<13;var $72=$alp1;var $add113=$72+$shl112|0;$alp1=$add113;var $73=$i2;var $idxprom114=$73<<16>>16;var $74=$i0;var $idxprom115=$74<<16>>16;var $75=$rr_addr;var $arrayidx116=$75+$idxprom115*80|0;var $arrayidx117=$arrayidx116+($idxprom114<<1)|0;var $76=HEAP16[$arrayidx117>>1];var $conv118=$76<<16>>16;var $shl119=$conv118<<13;var $77=$alp1;var $add120=$77+$shl119|0;$alp1=$add120;var $78=$ps1;var $conv121=$78<<16>>16;var $79=$ps1;var $conv122=$79<<16>>16;var $mul123=$conv121*$conv122|0;var $shr124=$mul123>>15;var $conv125=$shr124&65535;$sq1=$conv125;var $80=$alp1;var $add126=$80+32768|0;var $shr127=$add126>>16;var $conv128=$shr127&65535;$alp_16=$conv128;var $81=$alp;var $conv129=$81<<16>>16;var $82=$sq1;var $conv130=$82<<16>>16;var $mul131=$conv129*$conv130|0;var $shl132=$mul131<<1;$s=$shl132;var $83=$sq;var $conv133=$83<<16>>16;var $84=$alp_16;var $conv134=$84<<16>>16;var $mul135=$conv133*$conv134|0;var $shl136=$mul135<<1;var $85=$s;var $sub137=$85-$shl136|0;$s=$sub137;var $86=$s;var $cmp138=($86|0)>0;if($cmp138){__label__=22;break}else{__label__=23;break}case 22:var $87=$sq1;$sq=$87;var $88=$ps1;$ps=$88;var $89=$alp_16;$alp=$89;var $90=$i2;$ix=$90;__label__=23;break;case 23:__label__=24;break;case 24:var $91=$i2;var $conv143=$91<<16>>16;var $add144=$conv143+5|0;var $conv145=$add144&65535;$i2=$conv145;__label__=20;break;case 25:var $92=$ix;$i2=$92;var $93=$alpk;var $94=$sq;var $95=$pOverflow_addr;var $call=_L_mult17($93,$94,$95);$s=$call;var $96=$s;var $97=$psk;var $98=$alp;var $99=$pOverflow_addr;var $call147=_L_msu18($96,$97,$98,$99);$s=$call147;var $100=$s;var $cmp148=($100|0)>0;if($cmp148){__label__=26;break}else{__label__=27;break}case 26:var $101=$sq;$psk=$101;var $102=$alp;$alpk=$102;var $103=$codvec_addr;var $arrayidx151=$103|0;$p_codvec=$arrayidx151;var $104=$i0;var $105=$p_codvec;var $incdec_ptr152=$105+2|0;$p_codvec=$incdec_ptr152;HEAP16[$105>>1]=$104;var $106=$i1;var $107=$p_codvec;var $incdec_ptr153=$107+2|0;$p_codvec=$incdec_ptr153;HEAP16[$107>>1]=$106;var $108=$i2;var $109=$p_codvec;HEAP16[$109>>1]=$108;__label__=27;break;case 27:__label__=28;break;case 28:__label__=29;break;case 29:var $110=$i0;var $conv157=$110<<16>>16;var $add158=$conv157+5|0;var $conv159=$add158&65535;$i0=$conv159;__label__=11;break;case 30:var $arrayidx161=$ipos+4|0;var $111=HEAP16[$arrayidx161>>1];$pos=$111;var $arrayidx162=$ipos+2|0;var $112=HEAP16[$arrayidx162>>1];var $arrayidx163=$ipos+4|0;HEAP16[$arrayidx163>>1]=$112;var $arrayidx164=$ipos|0;var $113=HEAP16[$arrayidx164>>1];var $arrayidx165=$ipos+2|0;HEAP16[$arrayidx165>>1]=$113;var $114=$pos;var $arrayidx166=$ipos|0;HEAP16[$arrayidx166>>1]=$114;__label__=31;break;case 31:var $115=$i;var $inc168=$115+1&65535;$i=$inc168;__label__=9;break;case 32:__label__=33;break;case 33:var $116=$track2;var $conv171=$116<<16>>16;var $add172=$conv171+2|0;var $conv173=$add172&65535;$track2=$conv173;__label__=7;break;case 34:__label__=35;break;case 35:var $117=$track1;var $conv176=$117<<16>>16;var $add177=$conv176+2|0;var $conv178=$add177&65535;$track1=$conv178;__label__=5;break;case 36:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_search_3i40["X"]=1;function _L_mac16($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac16["X"]=1;function _L_mult17($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_sub19($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _mult20($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _build_code15($codvec,$dn_sign,$cod,$h,$y,$sign,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $codvec_addr;var $dn_sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_addr;var $pOverflow_addr;var $i;var $j;var $k;var $track;var $index;var $_sign=__stackBase__;var $indx;var $rsign;var $p0;var $p1;var $p2;var $s;$codvec_addr=$codvec;$dn_sign_addr=$dn_sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_addr=$sign;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$cod_addr;var $arrayidx=$2+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:$indx=0;$rsign=0;$k=0;__label__=5;break;case 5:var $4=$k;var $conv3=$4<<16>>16;var $cmp4=($conv3|0)<3;if($cmp4){__label__=6;break}else{__label__=22;break}case 6:var $5=$k;var $idxprom7=$5<<16>>16;var $6=$codvec_addr;var $arrayidx8=$6+($idxprom7<<1)|0;var $7=HEAP16[$arrayidx8>>1];$i=$7;var $8=$i;var $idxprom9=$8<<16>>16;var $9=$dn_sign_addr;var $arrayidx10=$9+($idxprom9<<1)|0;var $10=HEAP16[$arrayidx10>>1];$j=$10;var $11=$i;var $conv11=$11<<16>>16;var $mul=$conv11*6554|0;var $shr=$mul>>15;var $conv12=$shr&65535;$index=$conv12;var $12=$index;var $conv13=$12<<16>>16;var $mul14=$conv13*5|0;var $shl=$mul14<<1;$s=$shl;var $13=$s;var $shr15=$13>>1;$s=$shr15;var $14=$i;var $conv16=$14<<16>>16;var $15=$s;var $conv17=$15&65535;var $conv18=$conv17<<16>>16;var $sub=$conv16-$conv18|0;var $conv19=$sub&65535;$track=$conv19;var $16=$track;var $conv20=$16<<16>>16;var $cmp21=($conv20|0)==1;if($cmp21){__label__=7;break}else{__label__=8;break}case 7:var $17=$index;var $conv23=$17<<16>>16;var $shl24=$conv23<<4;var $conv25=$shl24&65535;$index=$conv25;__label__=17;break;case 8:var $18=$track;var $conv26=$18<<16>>16;var $cmp27=($conv26|0)==2;if($cmp27){__label__=9;break}else{__label__=10;break}case 9:$track=2;var $19=$index;var $conv30=$19<<16>>16;var $shl31=$conv30<<8;var $conv32=$shl31&65535;$index=$conv32;__label__=16;break;case 10:var $20=$track;var $conv34=$20<<16>>16;var $cmp35=($conv34|0)==3;if($cmp35){__label__=11;break}else{__label__=12;break}case 11:$track=1;var $21=$index;var $conv38=$21<<16>>16;var $shl39=$conv38<<4;var $conv40=$shl39&65535;$index=$conv40;var $22=$index;var $conv41=$22<<16>>16;var $add=$conv41+8|0;var $conv42=$add&65535;$index=$conv42;__label__=15;break;case 12:var $23=$track;var $conv44=$23<<16>>16;var $cmp45=($conv44|0)==4;if($cmp45){__label__=13;break}else{__label__=14;break}case 13:$track=2;var $24=$index;var $conv48=$24<<16>>16;var $shl49=$conv48<<8;var $conv50=$shl49&65535;$index=$conv50;var $25=$index;var $conv51=$25<<16>>16;var $add52=$conv51+128|0;var $conv53=$add52&65535;$index=$conv53;__label__=14;break;case 14:__label__=15;break;case 15:__label__=16;break;case 16:__label__=17;break;case 17:var $26=$j;var $conv57=$26<<16>>16;var $cmp58=($conv57|0)>0;if($cmp58){__label__=18;break}else{__label__=19;break}case 18:var $27=$i;var $idxprom61=$27<<16>>16;var $28=$cod_addr;var $arrayidx62=$28+($idxprom61<<1)|0;HEAP16[$arrayidx62>>1]=8191;var $29=$k;var $idxprom63=$29<<16>>16;var $arrayidx64=$_sign+($idxprom63<<1)|0;HEAP16[$arrayidx64>>1]=32767;var $30=$track;var $conv65=$30<<16>>16;var $shl66=1<<$conv65;var $conv67=$shl66&65535;$track=$conv67;var $31=$track;var $conv68=$31<<16>>16;var $32=$rsign;var $conv69=$32<<16>>16;var $add70=$conv69+$conv68|0;var $conv71=$add70&65535;$rsign=$conv71;__label__=20;break;case 19:var $33=$i;var $idxprom73=$33<<16>>16;var $34=$cod_addr;var $arrayidx74=$34+($idxprom73<<1)|0;HEAP16[$arrayidx74>>1]=-8192;var $35=$k;var $idxprom75=$35<<16>>16;var $arrayidx76=$_sign+($idxprom75<<1)|0;HEAP16[$arrayidx76>>1]=-32768;__label__=20;break;case 20:var $36=$index;var $conv78=$36<<16>>16;var $37=$indx;var $conv79=$37<<16>>16;var $add80=$conv79+$conv78|0;var $conv81=$add80&65535;$indx=$conv81;__label__=21;break;case 21:var $38=$k;var $inc83=$38+1&65535;$k=$inc83;__label__=5;break;case 22:var $39=$rsign;var $40=$sign_addr;HEAP16[$40>>1]=$39;var $41=$h_addr;var $42=$codvec_addr;var $arrayidx85=$42|0;var $43=HEAP16[$arrayidx85>>1];var $conv86=$43<<16>>16;var $idx_neg=-$conv86|0;var $add_ptr=$41+($idx_neg<<1)|0;$p0=$add_ptr;var $44=$h_addr;var $45=$codvec_addr;var $arrayidx87=$45+2|0;var $46=HEAP16[$arrayidx87>>1];var $conv88=$46<<16>>16;var $idx_neg89=-$conv88|0;var $add_ptr90=$44+($idx_neg89<<1)|0;$p1=$add_ptr90;var $47=$h_addr;var $48=$codvec_addr;var $arrayidx91=$48+4|0;var $49=HEAP16[$arrayidx91>>1];var $conv92=$49<<16>>16;var $idx_neg93=-$conv92|0;var $add_ptr94=$47+($idx_neg93<<1)|0;$p2=$add_ptr94;$i=0;__label__=23;break;case 23:var $50=$i;var $conv96=$50<<16>>16;var $cmp97=($conv96|0)<40;if($cmp97){__label__=24;break}else{__label__=26;break}case 24:$s=0;var $51=$s;var $52=$p0;var $incdec_ptr=$52+2|0;$p0=$incdec_ptr;var $53=HEAP16[$52>>1];var $arrayidx100=$_sign|0;var $54=HEAP16[$arrayidx100>>1];var $55=$pOverflow_addr;var $call=_L_mac16($51,$53,$54,$55);$s=$call;var $56=$s;var $57=$p1;var $incdec_ptr101=$57+2|0;$p1=$incdec_ptr101;var $58=HEAP16[$57>>1];var $arrayidx102=$_sign+2|0;var $59=HEAP16[$arrayidx102>>1];var $60=$pOverflow_addr;var $call103=_L_mac16($56,$58,$59,$60);$s=$call103;var $61=$s;var $62=$p2;var $incdec_ptr104=$62+2|0;$p2=$incdec_ptr104;var $63=HEAP16[$62>>1];var $arrayidx105=$_sign+4|0;var $64=HEAP16[$arrayidx105>>1];var $65=$pOverflow_addr;var $call106=_L_mac16($61,$63,$64,$65);$s=$call106;var $66=$s;var $67=$pOverflow_addr;var $call107=_pv_round($66,$67);var $68=$i;var $idxprom108=$68<<16>>16;var $69=$y_addr;var $arrayidx109=$69+($idxprom108<<1)|0;HEAP16[$arrayidx109>>1]=$call107;__label__=25;break;case 25:var $70=$i;var $inc111=$70+1&65535;$i=$inc111;__label__=23;break;case 26:var $71=$indx;STACKTOP=__stackBase__;return $71;default:assert(0,"bad label: "+__label__)}}_build_code15["X"]=1;function _L_msu18($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult17($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub19($3,$4,$5);$result=$call1;var $6=$result;return $6}function _code_4i40_17bits($x,$h,$T0,$pitch_sharp,$code,$y,$sign,$gray_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3448;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $h_addr;var $T0_addr;var $pitch_sharp_addr;var $code_addr;var $y_addr;var $sign_addr;var $gray_ptr_addr;var $pOverflow_addr;var $codvec=__stackBase__;var $dn=__stackBase__+8;var $dn2=__stackBase__+88;var $dn_sign=__stackBase__+168;var $rr=__stackBase__+248;var $i;var $index;var $sharp;var $tempWord;$x_addr=$x;$h_addr=$h;$T0_addr=$T0;$pitch_sharp_addr=$pitch_sharp;$code_addr=$code;$y_addr=$y;$sign_addr=$sign;$gray_ptr_addr=$gray_ptr;$pOverflow_addr=$pOverflow;var $0=$pitch_sharp_addr;var $conv=$0<<16>>16;var $shl=$conv<<1;var $conv1=$shl&65535;$sharp=$conv1;var $1=$T0_addr;var $conv2=$1<<16>>16;var $cmp=($conv2|0)<40;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $2=$T0_addr;$i=$2;__label__=2;break;case 2:var $3=$i;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<40;if($cmp5){__label__=3;break}else{__label__=5;break}case 3:var $4=$i;var $conv7=$4<<16>>16;var $5=$T0_addr;var $conv8=$5<<16>>16;var $sub=$conv7-$conv8|0;var $6=$h_addr;var $arrayidx=$6+($sub<<1)|0;var $7=HEAP16[$arrayidx>>1];var $8=$sharp;var $9=$pOverflow_addr;var $call=_mult20($7,$8,$9);$tempWord=$call;var $10=$i;var $idxprom=$10<<16>>16;var $11=$h_addr;var $arrayidx9=$11+($idxprom<<1)|0;var $12=HEAP16[$arrayidx9>>1];var $13=$tempWord;var $14=$pOverflow_addr;var $call10=_add_16($12,$13,$14);var $15=$i;var $idxprom11=$15<<16>>16;var $16=$h_addr;var $arrayidx12=$16+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$call10;__label__=4;break;case 4:var $17=$i;var $inc=$17+1&65535;$i=$inc;__label__=2;break;case 5:__label__=6;break;case 6:var $18=$h_addr;var $19=$x_addr;var $arraydecay=$dn|0;var $20=$pOverflow_addr;_cor_h_x($18,$19,$arraydecay,1,$20);var $arraydecay13=$dn|0;var $arraydecay14=$dn_sign|0;var $arraydecay15=$dn2|0;_set_sign($arraydecay13,$arraydecay14,$arraydecay15,4);var $21=$h_addr;var $arraydecay16=$dn_sign|0;var $arraydecay17=$rr|0;var $22=$pOverflow_addr;_cor_h($21,$arraydecay16,$arraydecay17,$22);var $arraydecay18=$dn|0;var $arraydecay19=$dn2|0;var $arraydecay20=$rr|0;var $arraydecay21=$codvec|0;var $23=$pOverflow_addr;_search_4i40($arraydecay18,$arraydecay19,$arraydecay20,$arraydecay21,$23);var $arraydecay22=$codvec|0;var $arraydecay23=$dn_sign|0;var $24=$code_addr;var $25=$h_addr;var $26=$y_addr;var $27=$sign_addr;var $28=$gray_ptr_addr;var $29=$pOverflow_addr;var $call24=_build_code21($arraydecay22,$arraydecay23,$24,$25,$26,$27,$28,$29);$index=$call24;var $30=$T0_addr;var $conv25=$30<<16>>16;var $sub26=$conv25-40|0;var $conv27=$sub26&65535;$tempWord=$conv27;var $31=$tempWord;var $conv28=$31<<16>>16;var $cmp29=($conv28|0)<0;if($cmp29){__label__=7;break}else{__label__=12;break}case 7:var $32=$T0_addr;$i=$32;__label__=8;break;case 8:var $33=$i;var $conv33=$33<<16>>16;var $cmp34=($conv33|0)<40;if($cmp34){__label__=9;break}else{__label__=11;break}case 9:var $34=$i;var $conv37=$34<<16>>16;var $35=$T0_addr;var $conv38=$35<<16>>16;var $sub39=$conv37-$conv38|0;var $36=$code_addr;var $arrayidx40=$36+($sub39<<1)|0;var $37=HEAP16[$arrayidx40>>1];var $38=$sharp;var $39=$pOverflow_addr;var $call41=_mult20($37,$38,$39);$tempWord=$call41;var $40=$i;var $idxprom42=$40<<16>>16;var $41=$code_addr;var $arrayidx43=$41+($idxprom42<<1)|0;var $42=HEAP16[$arrayidx43>>1];var $43=$tempWord;var $44=$pOverflow_addr;var $call44=_add_16($42,$43,$44);var $45=$i;var $idxprom45=$45<<16>>16;var $46=$code_addr;var $arrayidx46=$46+($idxprom45<<1)|0;HEAP16[$arrayidx46>>1]=$call44;__label__=10;break;case 10:var $47=$i;var $inc48=$47+1&65535;$i=$inc48;__label__=8;break;case 11:__label__=12;break;case 12:var $48=$index;STACKTOP=__stackBase__;return $48;default:assert(0,"bad label: "+__label__)}}_code_4i40_17bits["X"]=1;function _search_4i40($dn,$dn2,$rr,$codvec,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $dn_addr;var $dn2_addr;var $rr_addr;var $codvec_addr;var $pOverflow_addr;var $i0;var $i1;var $i2;var $i3;var $ix;var $ps;var $i;var $pos;var $track;var $ipos=__stackBase__;var $psk;var $ps0;var $ps1;var $sq;var $sq1;var $alpk;var $alp;var $alp_16;var $p_codvec;var $s;var $alp0;var $alp1;$dn_addr=$dn;$dn2_addr=$dn2;$rr_addr=$rr;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;$ix=0;$ps=0;var $0=$codvec_addr;var $arrayidx=$0|0;$p_codvec=$arrayidx;var $1=$pOverflow_addr;$psk=-1;$alpk=1;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<4;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$i;var $4=$p_codvec;var $incdec_ptr=$4+2|0;$p_codvec=$incdec_ptr;HEAP16[$4>>1]=$3;__label__=3;break;case 3:var $5=$i;var $inc=$5+1&65535;$i=$inc;__label__=1;break;case 4:$track=3;__label__=5;break;case 5:var $6=$track;var $conv3=$6<<16>>16;var $cmp4=($conv3|0)<5;if($cmp4){__label__=6;break}else{__label__=38;break}case 6:var $arrayidx7=$ipos|0;HEAP16[$arrayidx7>>1]=0;var $arrayidx8=$ipos+2|0;HEAP16[$arrayidx8>>1]=1;var $arrayidx9=$ipos+4|0;HEAP16[$arrayidx9>>1]=2;var $7=$track;var $arrayidx10=$ipos+6|0;HEAP16[$arrayidx10>>1]=$7;$i=0;__label__=7;break;case 7:var $8=$i;var $conv12=$8<<16>>16;var $cmp13=($conv12|0)<4;if($cmp13){__label__=8;break}else{__label__=36;break}case 8:var $arrayidx16=$ipos|0;var $9=HEAP16[$arrayidx16>>1];$i0=$9;__label__=9;break;case 9:var $10=$i0;var $conv18=$10<<16>>16;var $cmp19=($conv18|0)<40;if($cmp19){__label__=10;break}else{__label__=34;break}case 10:var $11=$i0;var $idxprom=$11<<16>>16;var $12=$dn2_addr;var $arrayidx22=$12+($idxprom<<1)|0;var $13=HEAP16[$arrayidx22>>1];var $conv23=$13<<16>>16;var $cmp24=($conv23|0)>=0;if($cmp24){__label__=11;break}else{__label__=32;break}case 11:var $14=$i0;var $idxprom26=$14<<16>>16;var $15=$dn_addr;var $arrayidx27=$15+($idxprom26<<1)|0;var $16=HEAP16[$arrayidx27>>1];$ps0=$16;var $17=$i0;var $idxprom28=$17<<16>>16;var $18=$i0;var $idxprom29=$18<<16>>16;var $19=$rr_addr;var $arrayidx30=$19+$idxprom29*80|0;var $arrayidx31=$arrayidx30+($idxprom28<<1)|0;var $20=HEAP16[$arrayidx31>>1];var $conv32=$20<<16>>16;var $shl=$conv32<<14;$alp0=$shl;$sq=-1;$alp=1;$ps=0;var $arrayidx33=$ipos+2|0;var $21=HEAP16[$arrayidx33>>1];$ix=$21;var $arrayidx34=$ipos+2|0;var $22=HEAP16[$arrayidx34>>1];$i1=$22;__label__=12;break;case 12:var $23=$i1;var $conv36=$23<<16>>16;var $cmp37=($conv36|0)<40;if($cmp37){__label__=13;break}else{__label__=17;break}case 13:var $24=$ps0;var $conv40=$24<<16>>16;var $25=$i1;var $idxprom41=$25<<16>>16;var $26=$dn_addr;var $arrayidx42=$26+($idxprom41<<1)|0;var $27=HEAP16[$arrayidx42>>1];var $conv43=$27<<16>>16;var $add=$conv40+$conv43|0;var $conv44=$add&65535;$ps1=$conv44;var $28=$alp0;var $29=$i1;var $idxprom45=$29<<16>>16;var $30=$i1;var $idxprom46=$30<<16>>16;var $31=$rr_addr;var $arrayidx47=$31+$idxprom46*80|0;var $arrayidx48=$arrayidx47+($idxprom45<<1)|0;var $32=HEAP16[$arrayidx48>>1];var $conv49=$32<<16>>16;var $shl50=$conv49<<14;var $add51=$28+$shl50|0;$alp1=$add51;var $33=$i1;var $idxprom52=$33<<16>>16;var $34=$i0;var $idxprom53=$34<<16>>16;var $35=$rr_addr;var $arrayidx54=$35+$idxprom53*80|0;var $arrayidx55=$arrayidx54+($idxprom52<<1)|0;var $36=HEAP16[$arrayidx55>>1];var $conv56=$36<<16>>16;var $shl57=$conv56<<15;var $37=$alp1;var $add58=$37+$shl57|0;$alp1=$add58;var $38=$ps1;var $conv59=$38<<16>>16;var $39=$ps1;var $conv60=$39<<16>>16;var $mul=$conv59*$conv60|0;var $shr=$mul>>15;var $conv61=$shr&65535;$sq1=$conv61;var $40=$alp1;var $add62=$40+32768|0;var $shr63=$add62>>16;var $conv64=$shr63&65535;$alp_16=$conv64;var $41=$alp;var $conv65=$41<<16>>16;var $42=$sq1;var $conv66=$42<<16>>16;var $mul67=$conv65*$conv66|0;var $shl68=$mul67<<1;$s=$shl68;var $43=$sq;var $conv69=$43<<16>>16;var $44=$alp_16;var $conv70=$44<<16>>16;var $mul71=$conv69*$conv70|0;var $shl72=$mul71<<1;var $45=$s;var $sub=$45-$shl72|0;$s=$sub;var $46=$s;var $cmp73=($46|0)>0;if($cmp73){__label__=14;break}else{__label__=15;break}case 14:var $47=$sq1;$sq=$47;var $48=$ps1;$ps=$48;var $49=$alp_16;$alp=$49;var $50=$i1;$ix=$50;__label__=15;break;case 15:__label__=16;break;case 16:var $51=$i1;var $conv77=$51<<16>>16;var $add78=$conv77+5|0;var $conv79=$add78&65535;$i1=$conv79;__label__=12;break;case 17:var $52=$ix;$i1=$52;var $53=$ps;$ps0=$53;var $54=$alp;var $conv81=$54<<16>>16;var $shl82=$conv81<<14;$alp0=$shl82;$sq=-1;$alp=1;$ps=0;var $arrayidx83=$ipos+4|0;var $55=HEAP16[$arrayidx83>>1];$ix=$55;var $arrayidx84=$ipos+4|0;var $56=HEAP16[$arrayidx84>>1];$i2=$56;__label__=18;break;case 18:var $57=$i2;var $conv86=$57<<16>>16;var $cmp87=($conv86|0)<40;if($cmp87){__label__=19;break}else{__label__=23;break}case 19:var $58=$ps0;var $conv90=$58<<16>>16;var $59=$i2;var $idxprom91=$59<<16>>16;var $60=$dn_addr;var $arrayidx92=$60+($idxprom91<<1)|0;var $61=HEAP16[$arrayidx92>>1];var $conv93=$61<<16>>16;var $add94=$conv90+$conv93|0;var $conv95=$add94&65535;$ps1=$conv95;var $62=$alp0;var $63=$i2;var $idxprom96=$63<<16>>16;var $64=$i2;var $idxprom97=$64<<16>>16;var $65=$rr_addr;var $arrayidx98=$65+$idxprom97*80|0;var $arrayidx99=$arrayidx98+($idxprom96<<1)|0;var $66=HEAP16[$arrayidx99>>1];var $conv100=$66<<16>>16;var $shl101=$conv100<<12;var $add102=$62+$shl101|0;$alp1=$add102;var $67=$i2;var $idxprom103=$67<<16>>16;var $68=$i1;var $idxprom104=$68<<16>>16;var $69=$rr_addr;var $arrayidx105=$69+$idxprom104*80|0;var $arrayidx106=$arrayidx105+($idxprom103<<1)|0;var $70=HEAP16[$arrayidx106>>1];var $conv107=$70<<16>>16;var $shl108=$conv107<<13;var $71=$alp1;var $add109=$71+$shl108|0;$alp1=$add109;var $72=$i2;var $idxprom110=$72<<16>>16;var $73=$i0;var $idxprom111=$73<<16>>16;var $74=$rr_addr;var $arrayidx112=$74+$idxprom111*80|0;var $arrayidx113=$arrayidx112+($idxprom110<<1)|0;var $75=HEAP16[$arrayidx113>>1];var $conv114=$75<<16>>16;var $shl115=$conv114<<13;var $76=$alp1;var $add116=$76+$shl115|0;$alp1=$add116;var $77=$ps1;var $conv117=$77<<16>>16;var $78=$ps1;var $conv118=$78<<16>>16;var $mul119=$conv117*$conv118|0;var $shr120=$mul119>>15;var $conv121=$shr120&65535;$sq1=$conv121;var $79=$alp1;var $add122=$79+32768|0;var $shr123=$add122>>16;var $conv124=$shr123&65535;$alp_16=$conv124;var $80=$alp;var $conv125=$80<<16>>16;var $81=$sq1;var $conv126=$81<<16>>16;var $mul127=$conv125*$conv126|0;var $shl128=$mul127<<1;$s=$shl128;var $82=$sq;var $conv129=$82<<16>>16;var $83=$alp_16;var $conv130=$83<<16>>16;var $mul131=$conv129*$conv130|0;var $shl132=$mul131<<1;var $84=$s;var $sub133=$84-$shl132|0;$s=$sub133;var $85=$s;var $cmp134=($85|0)>0;if($cmp134){__label__=20;break}else{__label__=21;break}case 20:var $86=$sq1;$sq=$86;var $87=$ps1;$ps=$87;var $88=$alp_16;$alp=$88;var $89=$i2;$ix=$89;__label__=21;break;case 21:__label__=22;break;case 22:var $90=$i2;var $conv139=$90<<16>>16;var $add140=$conv139+5|0;var $conv141=$add140&65535;$i2=$conv141;__label__=18;break;case 23:var $91=$ix;$i2=$91;var $92=$ps;$ps0=$92;var $93=$alp;var $conv143=$93<<16>>16;var $shl144=$conv143<<16;$alp0=$shl144;$sq=-1;$alp=1;$ps=0;var $arrayidx145=$ipos+6|0;var $94=HEAP16[$arrayidx145>>1];$ix=$94;var $arrayidx146=$ipos+6|0;var $95=HEAP16[$arrayidx146>>1];$i3=$95;__label__=24;break;case 24:var $96=$i3;var $conv148=$96<<16>>16;var $cmp149=($conv148|0)<40;if($cmp149){__label__=25;break}else{__label__=29;break}case 25:var $97=$ps0;var $conv152=$97<<16>>16;var $98=$i3;var $idxprom153=$98<<16>>16;var $99=$dn_addr;var $arrayidx154=$99+($idxprom153<<1)|0;var $100=HEAP16[$arrayidx154>>1];var $conv155=$100<<16>>16;var $add156=$conv152+$conv155|0;var $conv157=$add156&65535;$ps1=$conv157;var $101=$alp0;var $102=$i3;var $idxprom158=$102<<16>>16;var $103=$i3;var $idxprom159=$103<<16>>16;var $104=$rr_addr;var $arrayidx160=$104+$idxprom159*80|0;var $arrayidx161=$arrayidx160+($idxprom158<<1)|0;var $105=HEAP16[$arrayidx161>>1];var $conv162=$105<<16>>16;var $shl163=$conv162<<12;var $add164=$101+$shl163|0;$alp1=$add164;var $106=$i3;var $idxprom165=$106<<16>>16;var $107=$i2;var $idxprom166=$107<<16>>16;var $108=$rr_addr;var $arrayidx167=$108+$idxprom166*80|0;var $arrayidx168=$arrayidx167+($idxprom165<<1)|0;var $109=HEAP16[$arrayidx168>>1];var $conv169=$109<<16>>16;var $shl170=$conv169<<13;var $110=$alp1;var $add171=$110+$shl170|0;$alp1=$add171;var $111=$i3;var $idxprom172=$111<<16>>16;var $112=$i1;var $idxprom173=$112<<16>>16;var $113=$rr_addr;var $arrayidx174=$113+$idxprom173*80|0;var $arrayidx175=$arrayidx174+($idxprom172<<1)|0;var $114=HEAP16[$arrayidx175>>1];var $conv176=$114<<16>>16;var $shl177=$conv176<<13;var $115=$alp1;var $add178=$115+$shl177|0;$alp1=$add178;var $116=$i3;var $idxprom179=$116<<16>>16;var $117=$i0;var $idxprom180=$117<<16>>16;var $118=$rr_addr;var $arrayidx181=$118+$idxprom180*80|0;var $arrayidx182=$arrayidx181+($idxprom179<<1)|0;var $119=HEAP16[$arrayidx182>>1];var $conv183=$119<<16>>16;var $shl184=$conv183<<13;var $120=$alp1;var $add185=$120+$shl184|0;$alp1=$add185;var $121=$ps1;var $conv186=$121<<16>>16;var $122=$ps1;var $conv187=$122<<16>>16;var $mul188=$conv186*$conv187|0;var $shr189=$mul188>>15;var $conv190=$shr189&65535;$sq1=$conv190;var $123=$alp1;var $add191=$123+32768|0;var $shr192=$add191>>16;var $conv193=$shr192&65535;$alp_16=$conv193;var $124=$alp;var $conv194=$124<<16>>16;var $125=$sq1;var $conv195=$125<<16>>16;var $mul196=$conv194*$conv195|0;var $shl197=$mul196<<1;$s=$shl197;var $126=$sq;var $conv198=$126<<16>>16;var $127=$alp_16;var $conv199=$127<<16>>16;var $mul200=$conv198*$conv199|0;var $shl201=$mul200<<1;var $128=$s;var $sub202=$128-$shl201|0;$s=$sub202;var $129=$s;var $cmp203=($129|0)>0;if($cmp203){__label__=26;break}else{__label__=27;break}case 26:var $130=$sq1;$sq=$130;var $131=$ps1;$ps=$131;var $132=$alp_16;$alp=$132;var $133=$i3;$ix=$133;__label__=27;break;case 27:__label__=28;break;case 28:var $134=$i3;var $conv208=$134<<16>>16;var $add209=$conv208+5|0;var $conv210=$add209&65535;$i3=$conv210;__label__=24;break;case 29:var $135=$alpk;var $conv212=$135<<16>>16;var $136=$sq;var $conv213=$136<<16>>16;var $mul214=$conv212*$conv213|0;var $shl215=$mul214<<1;$s=$shl215;var $137=$psk;var $conv216=$137<<16>>16;var $138=$alp;var $conv217=$138<<16>>16;var $mul218=$conv216*$conv217|0;var $shl219=$mul218<<1;var $139=$s;var $sub220=$139-$shl219|0;$s=$sub220;var $140=$s;var $cmp221=($140|0)>0;if($cmp221){__label__=30;break}else{__label__=31;break}case 30:var $141=$sq;$psk=$141;var $142=$alp;$alpk=$142;var $143=$codvec_addr;var $arrayidx224=$143|0;$p_codvec=$arrayidx224;var $144=$i0;var $145=$p_codvec;var $incdec_ptr225=$145+2|0;$p_codvec=$incdec_ptr225;HEAP16[$145>>1]=$144;var $146=$i1;var $147=$p_codvec;var $incdec_ptr226=$147+2|0;$p_codvec=$incdec_ptr226;HEAP16[$147>>1]=$146;var $148=$i2;var $149=$p_codvec;var $incdec_ptr227=$149+2|0;$p_codvec=$incdec_ptr227;HEAP16[$149>>1]=$148;var $150=$ix;var $151=$p_codvec;HEAP16[$151>>1]=$150;__label__=31;break;case 31:__label__=32;break;case 32:__label__=33;break;case 33:var $152=$i0;var $conv231=$152<<16>>16;var $add232=$conv231+5|0;var $conv233=$add232&65535;$i0=$conv233;__label__=9;break;case 34:var $arrayidx235=$ipos+6|0;var $153=HEAP16[$arrayidx235>>1];$pos=$153;var $arrayidx236=$ipos+4|0;var $154=HEAP16[$arrayidx236>>1];var $arrayidx237=$ipos+6|0;HEAP16[$arrayidx237>>1]=$154;var $arrayidx238=$ipos+2|0;var $155=HEAP16[$arrayidx238>>1];var $arrayidx239=$ipos+4|0;HEAP16[$arrayidx239>>1]=$155;var $arrayidx240=$ipos|0;var $156=HEAP16[$arrayidx240>>1];var $arrayidx241=$ipos+2|0;HEAP16[$arrayidx241>>1]=$156;var $157=$pos;var $arrayidx242=$ipos|0;HEAP16[$arrayidx242>>1]=$157;__label__=35;break;case 35:var $158=$i;var $inc244=$158+1&65535;$i=$inc244;__label__=7;break;case 36:__label__=37;break;case 37:var $159=$track;var $inc247=$159+1&65535;$track=$inc247;__label__=5;break;case 38:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_search_4i40["X"]=1;function _L_mac22($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac22["X"]=1;function _build_code21($codvec,$dn_sign,$cod,$h,$y,$sign,$gray_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $codvec_addr;var $dn_sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_addr;var $gray_ptr_addr;var $pOverflow_addr;var $i;var $j;var $k;var $track;var $index;var $_sign=__stackBase__;var $indx;var $rsign;var $p0;var $p1;var $p2;var $p3;var $p_cod;var $s;$codvec_addr=$codvec;$dn_sign_addr=$dn_sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_addr=$sign;$gray_ptr_addr=$gray_ptr;$pOverflow_addr=$pOverflow;var $0=$cod_addr;var $arrayidx=$0|0;$p_cod=$arrayidx;$i=0;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$p_cod;var $incdec_ptr=$2+2|0;$p_cod=$incdec_ptr;HEAP16[$2>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:$indx=0;$rsign=0;$k=0;__label__=5;break;case 5:var $4=$k;var $conv3=$4<<16>>16;var $cmp4=($conv3|0)<4;if($cmp4){__label__=6;break}else{__label__=22;break}case 6:var $5=$k;var $idxprom=$5<<16>>16;var $6=$codvec_addr;var $arrayidx7=$6+($idxprom<<1)|0;var $7=HEAP16[$arrayidx7>>1];$i=$7;var $8=$i;var $idxprom8=$8<<16>>16;var $9=$dn_sign_addr;var $arrayidx9=$9+($idxprom8<<1)|0;var $10=HEAP16[$arrayidx9>>1];$j=$10;var $11=$i;var $conv10=$11<<16>>16;var $mul=$conv10*6554|0;var $shr=$mul>>15;var $conv11=$shr&65535;$index=$conv11;var $12=$index;var $conv12=$12<<16>>16;var $mul13=$conv12*5|0;var $shl=$mul13<<1;$s=$shl;var $13=$s;var $shr14=$13>>1;$s=$shr14;var $14=$i;var $conv15=$14<<16>>16;var $15=$s;var $conv16=$15&65535;var $conv17=$conv16<<16>>16;var $sub=$conv15-$conv17|0;var $conv18=$sub&65535;$track=$conv18;var $16=$index;var $idxprom19=$16<<16>>16;var $17=$gray_ptr_addr;var $arrayidx20=$17+($idxprom19<<1)|0;var $18=HEAP16[$arrayidx20>>1];$index=$18;var $19=$track;var $conv21=$19<<16>>16;var $cmp22=($conv21|0)==1;if($cmp22){__label__=7;break}else{__label__=8;break}case 7:var $20=$index;var $conv24=$20<<16>>16;var $shl25=$conv24<<3;var $conv26=$shl25&65535;$index=$conv26;__label__=17;break;case 8:var $21=$track;var $conv27=$21<<16>>16;var $cmp28=($conv27|0)==2;if($cmp28){__label__=9;break}else{__label__=10;break}case 9:var $22=$index;var $conv31=$22<<16>>16;var $shl32=$conv31<<6;var $conv33=$shl32&65535;$index=$conv33;__label__=16;break;case 10:var $23=$track;var $conv35=$23<<16>>16;var $cmp36=($conv35|0)==3;if($cmp36){__label__=11;break}else{__label__=12;break}case 11:var $24=$index;var $conv39=$24<<16>>16;var $shl40=$conv39<<10;var $conv41=$shl40&65535;$index=$conv41;__label__=15;break;case 12:var $25=$track;var $conv43=$25<<16>>16;var $cmp44=($conv43|0)==4;if($cmp44){__label__=13;break}else{__label__=14;break}case 13:$track=3;var $26=$index;var $conv47=$26<<16>>16;var $shl48=$conv47<<10;var $conv49=$shl48&65535;$index=$conv49;var $27=$index;var $conv50=$27<<16>>16;var $add=$conv50+512|0;var $conv51=$add&65535;$index=$conv51;__label__=14;break;case 14:__label__=15;break;case 15:__label__=16;break;case 16:__label__=17;break;case 17:var $28=$j;var $conv55=$28<<16>>16;var $cmp56=($conv55|0)>0;if($cmp56){__label__=18;break}else{__label__=19;break}case 18:var $29=$i;var $idxprom59=$29<<16>>16;var $30=$cod_addr;var $arrayidx60=$30+($idxprom59<<1)|0;HEAP16[$arrayidx60>>1]=8191;var $31=$k;var $idxprom61=$31<<16>>16;var $arrayidx62=$_sign+($idxprom61<<1)|0;HEAP16[$arrayidx62>>1]=32767;var $32=$track;var $conv63=$32<<16>>16;var $shl64=1<<$conv63;var $conv65=$shl64&65535;$track=$conv65;var $33=$track;var $conv66=$33<<16>>16;var $34=$rsign;var $conv67=$34<<16>>16;var $add68=$conv67+$conv66|0;var $conv69=$add68&65535;$rsign=$conv69;__label__=20;break;case 19:var $35=$i;var $idxprom71=$35<<16>>16;var $36=$cod_addr;var $arrayidx72=$36+($idxprom71<<1)|0;HEAP16[$arrayidx72>>1]=-8192;var $37=$k;var $idxprom73=$37<<16>>16;var $arrayidx74=$_sign+($idxprom73<<1)|0;HEAP16[$arrayidx74>>1]=-32768;__label__=20;break;case 20:var $38=$index;var $conv76=$38<<16>>16;var $39=$indx;var $conv77=$39<<16>>16;var $add78=$conv77+$conv76|0;var $conv79=$add78&65535;$indx=$conv79;__label__=21;break;case 21:var $40=$k;var $inc81=$40+1&65535;$k=$inc81;__label__=5;break;case 22:var $41=$rsign;var $42=$sign_addr;HEAP16[$42>>1]=$41;var $43=$h_addr;var $44=$codvec_addr;var $arrayidx83=$44|0;var $45=HEAP16[$arrayidx83>>1];var $conv84=$45<<16>>16;var $idx_neg=-$conv84|0;var $add_ptr=$43+($idx_neg<<1)|0;$p0=$add_ptr;var $46=$h_addr;var $47=$codvec_addr;var $arrayidx85=$47+2|0;var $48=HEAP16[$arrayidx85>>1];var $conv86=$48<<16>>16;var $idx_neg87=-$conv86|0;var $add_ptr88=$46+($idx_neg87<<1)|0;$p1=$add_ptr88;var $49=$h_addr;var $50=$codvec_addr;var $arrayidx89=$50+4|0;var $51=HEAP16[$arrayidx89>>1];var $conv90=$51<<16>>16;var $idx_neg91=-$conv90|0;var $add_ptr92=$49+($idx_neg91<<1)|0;$p2=$add_ptr92;var $52=$h_addr;var $53=$codvec_addr;var $arrayidx93=$53+6|0;var $54=HEAP16[$arrayidx93>>1];var $conv94=$54<<16>>16;var $idx_neg95=-$conv94|0;var $add_ptr96=$52+($idx_neg95<<1)|0;$p3=$add_ptr96;$i=0;__label__=23;break;case 23:var $55=$i;var $conv98=$55<<16>>16;var $cmp99=($conv98|0)<40;if($cmp99){__label__=24;break}else{__label__=26;break}case 24:$s=0;var $56=$s;var $57=$p0;var $incdec_ptr102=$57+2|0;$p0=$incdec_ptr102;var $58=HEAP16[$57>>1];var $arrayidx103=$_sign|0;var $59=HEAP16[$arrayidx103>>1];var $60=$pOverflow_addr;var $call=_L_mac22($56,$58,$59,$60);$s=$call;var $61=$s;var $62=$p1;var $incdec_ptr104=$62+2|0;$p1=$incdec_ptr104;var $63=HEAP16[$62>>1];var $arrayidx105=$_sign+2|0;var $64=HEAP16[$arrayidx105>>1];var $65=$pOverflow_addr;var $call106=_L_mac22($61,$63,$64,$65);$s=$call106;var $66=$s;var $67=$p2;var $incdec_ptr107=$67+2|0;$p2=$incdec_ptr107;var $68=HEAP16[$67>>1];var $arrayidx108=$_sign+4|0;var $69=HEAP16[$arrayidx108>>1];var $70=$pOverflow_addr;var $call109=_L_mac22($66,$68,$69,$70);$s=$call109;var $71=$s;var $72=$p3;var $incdec_ptr110=$72+2|0;$p3=$incdec_ptr110;var $73=HEAP16[$72>>1];var $arrayidx111=$_sign+6|0;var $74=HEAP16[$arrayidx111>>1];var $75=$pOverflow_addr;var $call112=_L_mac22($71,$73,$74,$75);$s=$call112;var $76=$s;var $77=$pOverflow_addr;var $call113=_pv_round($76,$77);var $78=$i;var $idxprom114=$78<<16>>16;var $79=$y_addr;var $arrayidx115=$79+($idxprom114<<1)|0;HEAP16[$arrayidx115>>1]=$call113;__label__=25;break;case 25:var $80=$i;var $inc117=$80+1&65535;$i=$inc117;__label__=23;break;case 26:var $81=$indx;STACKTOP=__stackBase__;return $81;default:assert(0,"bad label: "+__label__)}}_build_code21["X"]=1;function _code_8i40_31bits($x,$cn,$h,$cod,$y,$indx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=3424;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $x_addr;var $cn_addr;var $h_addr;var $cod_addr;var $y_addr;var $indx_addr;var $pOverflow_addr;var $ipos=__stackBase__;var $pos_max=__stackBase__+16;var $codvec=__stackBase__+24;var $dn=__stackBase__+40;var $sign=__stackBase__+120;var $rr=__stackBase__+200;var $linear_signs=__stackBase__+3400;var $linear_codewords=__stackBase__+3408;$x_addr=$x;$cn_addr=$cn;$h_addr=$h;$cod_addr=$cod;$y_addr=$y;$indx_addr=$indx;$pOverflow_addr=$pOverflow;var $0=$h_addr;var $1=$x_addr;var $arraydecay=$dn|0;var $2=$pOverflow_addr;_cor_h_x2($0,$1,$arraydecay,2,4,4,$2);var $arraydecay1=$dn|0;var $3=$cn_addr;var $arraydecay2=$sign|0;var $arraydecay3=$pos_max|0;var $arraydecay4=$ipos|0;var $4=$pOverflow_addr;_set_sign12k2($arraydecay1,$3,$arraydecay2,$arraydecay3,4,$arraydecay4,4,$4);var $5=$h_addr;var $arraydecay5=$sign|0;var $arraydecay6=$rr|0;var $6=$pOverflow_addr;_cor_h($5,$arraydecay5,$arraydecay6,$6);var $arraydecay7=$dn|0;var $arraydecay8=$rr|0;var $arraydecay9=$ipos|0;var $arraydecay10=$pos_max|0;var $arraydecay11=$codvec|0;var $7=$pOverflow_addr;_search_10and8i40(8,4,4,$arraydecay7,$arraydecay8,$arraydecay9,$arraydecay10,$arraydecay11,$7);var $arraydecay12=$codvec|0;var $arraydecay13=$sign|0;var $8=$cod_addr;var $9=$h_addr;var $10=$y_addr;var $arraydecay14=$linear_signs|0;var $arraydecay15=$linear_codewords|0;var $11=$pOverflow_addr;_build_code23($arraydecay12,$arraydecay13,$8,$9,$10,$arraydecay14,$arraydecay15,$11);var $arraydecay16=$linear_signs|0;var $arraydecay17=$linear_codewords|0;var $12=$indx_addr;var $13=$pOverflow_addr;_compress_code($arraydecay16,$arraydecay17,$12,$13);STACKTOP=__stackBase__;return}_code_8i40_31bits["X"]=1;function _compress10($pos_indxA,$pos_indxB,$pos_indxC,$pOverflow){var __label__;var $pos_indxA_addr;var $pos_indxB_addr;var $pos_indxC_addr;var $pOverflow_addr;var $indx;var $ia;var $ib;var $ic;var $tempWord32;$pos_indxA_addr=$pos_indxA;$pos_indxB_addr=$pos_indxB;$pos_indxC_addr=$pos_indxC;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$pos_indxA_addr;var $conv=$1<<16>>16;var $shr=$conv>>1;var $conv1=$shr&65535;$ia=$conv1;var $2=$pos_indxB_addr;var $conv2=$2<<16>>16;var $shr3=$conv2>>1;var $conv4=$shr3&65535;$ib=$conv4;var $3=$ib;var $conv5=$3<<16>>16;var $mul=$conv5*5|0;var $shl=$mul<<1;$tempWord32=$shl;var $4=$tempWord32;var $shr6=$4>>1;$tempWord32=$shr6;var $5=$tempWord32;var $conv7=$5&65535;$ib=$conv7;var $6=$pos_indxC_addr;var $conv8=$6<<16>>16;var $shr9=$conv8>>1;var $conv10=$shr9&65535;$ic=$conv10;var $7=$ic;var $conv11=$7<<16>>16;var $mul12=$conv11*25|0;var $shl13=$mul12<<1;$tempWord32=$shl13;var $8=$tempWord32;var $shr14=$8>>1;$tempWord32=$shr14;var $9=$tempWord32;var $conv15=$9&65535;$ic=$conv15;var $10=$ic;var $conv16=$10<<16>>16;var $11=$ib;var $conv17=$11<<16>>16;var $add=$conv17+$conv16|0;var $conv18=$add&65535;$ib=$conv18;var $12=$ia;var $conv19=$12<<16>>16;var $13=$ib;var $conv20=$13<<16>>16;var $add21=$conv20+$conv19|0;var $conv22=$add21&65535;$ib=$conv22;var $14=$ib;var $conv23=$14<<16>>16;var $shl24=$conv23<<3;var $conv25=$shl24&65535;$indx=$conv25;var $15=$pos_indxA_addr;var $conv26=$15<<16>>16;var $and=$conv26&1;var $conv27=$and&65535;$ia=$conv27;var $16=$pos_indxB_addr;var $conv28=$16<<16>>16;var $and29=$conv28&1;var $conv30=$and29&65535;var $conv31=$conv30<<16>>16;var $shl32=$conv31<<1;var $conv33=$shl32&65535;$ib=$conv33;var $17=$pos_indxC_addr;var $conv34=$17<<16>>16;var $and35=$conv34&1;var $conv36=$and35&65535;var $conv37=$conv36<<16>>16;var $shl38=$conv37<<2;var $conv39=$shl38&65535;$ic=$conv39;var $18=$ic;var $conv40=$18<<16>>16;var $19=$ib;var $conv41=$19<<16>>16;var $add42=$conv41+$conv40|0;var $conv43=$add42&65535;$ib=$conv43;var $20=$ia;var $conv44=$20<<16>>16;var $21=$ib;var $conv45=$21<<16>>16;var $add46=$conv45+$conv44|0;var $conv47=$add46&65535;$ib=$conv47;var $22=$ib;var $conv48=$22<<16>>16;var $23=$indx;var $conv49=$23<<16>>16;var $add50=$conv49+$conv48|0;var $conv51=$add50&65535;$indx=$conv51;var $24=$indx;return $24}_compress10["X"]=1;function _L_mac24($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac24["X"]=1;function _build_code23($codvec,$sign,$cod,$h,$y,$sign_indx,$pos_indx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=16;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $codvec_addr;var $sign_addr;var $cod_addr;var $h_addr;var $y_addr;var $sign_indx_addr;var $pos_indx_addr;var $pOverflow_addr;var $i;var $j;var $k;var $track;var $sign_index;var $pos_index;var $_sign=__stackBase__;var $p0;var $p1;var $p2;var $p3;var $p4;var $p5;var $p6;var $p7;var $p_cod;var $p_codvec;var $s;$codvec_addr=$codvec;$sign_addr=$sign;$cod_addr=$cod;$h_addr=$h;$y_addr=$y;$sign_indx_addr=$sign_indx;$pos_indx_addr=$pos_indx;$pOverflow_addr=$pOverflow;var $0=$cod_addr;var $arrayidx=$0|0;$p_cod=$arrayidx;var $1=$codvec_addr;var $arrayidx1=$1|0;$p_codvec=$arrayidx1;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$p_cod;var $incdec_ptr=$3+2|0;$p_cod=$incdec_ptr;HEAP16[$3>>1]=0;__label__=3;break;case 3:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=1;break;case 4:$i=0;__label__=5;break;case 5:var $5=$i;var $conv4=$5<<16>>16;var $cmp5=($conv4|0)<4;if($cmp5){__label__=6;break}else{__label__=8;break}case 6:var $6=$i;var $idxprom=$6<<16>>16;var $7=$pos_indx_addr;var $arrayidx8=$7+($idxprom<<1)|0;HEAP16[$arrayidx8>>1]=-1;var $8=$i;var $idxprom9=$8<<16>>16;var $9=$sign_indx_addr;var $arrayidx10=$9+($idxprom9<<1)|0;HEAP16[$arrayidx10>>1]=-1;__label__=7;break;case 7:var $10=$i;var $inc12=$10+1&65535;$i=$inc12;__label__=5;break;case 8:$k=0;__label__=9;break;case 9:var $11=$k;var $conv15=$11<<16>>16;var $cmp16=($conv15|0)<8;if($cmp16){__label__=10;break}else{__label__=27;break}case 10:var $12=$k;var $idxprom19=$12<<16>>16;var $13=$codvec_addr;var $arrayidx20=$13+($idxprom19<<1)|0;var $14=HEAP16[$arrayidx20>>1];$i=$14;var $15=$i;var $idxprom21=$15<<16>>16;var $16=$sign_addr;var $arrayidx22=$16+($idxprom21<<1)|0;var $17=HEAP16[$arrayidx22>>1];$j=$17;var $18=$i;var $conv23=$18<<16>>16;var $shr=$conv23>>2;var $conv24=$shr&65535;$pos_index=$conv24;var $19=$i;var $conv25=$19<<16>>16;var $and=$conv25&3;var $conv26=$and&65535;$track=$conv26;var $20=$j;var $conv27=$20<<16>>16;var $cmp28=($conv27|0)>0;if($cmp28){__label__=11;break}else{__label__=12;break}case 11:var $21=$i;var $idxprom30=$21<<16>>16;var $22=$cod_addr;var $arrayidx31=$22+($idxprom30<<1)|0;var $23=HEAP16[$arrayidx31>>1];var $conv32=$23<<16>>16;var $add=$conv32+8191|0;var $conv33=$add&65535;var $24=$i;var $idxprom34=$24<<16>>16;var $25=$cod_addr;var $arrayidx35=$25+($idxprom34<<1)|0;HEAP16[$arrayidx35>>1]=$conv33;var $26=$k;var $idxprom36=$26<<16>>16;var $arrayidx37=$_sign+($idxprom36<<1)|0;HEAP16[$arrayidx37>>1]=32767;$sign_index=0;__label__=13;break;case 12:var $27=$i;var $idxprom38=$27<<16>>16;var $28=$cod_addr;var $arrayidx39=$28+($idxprom38<<1)|0;var $29=HEAP16[$arrayidx39>>1];var $conv40=$29<<16>>16;var $sub=$conv40-8191|0;var $conv41=$sub&65535;var $30=$i;var $idxprom42=$30<<16>>16;var $31=$cod_addr;var $arrayidx43=$31+($idxprom42<<1)|0;HEAP16[$arrayidx43>>1]=$conv41;var $32=$k;var $idxprom44=$32<<16>>16;var $arrayidx45=$_sign+($idxprom44<<1)|0;HEAP16[$arrayidx45>>1]=-32768;$sign_index=1;__label__=13;break;case 13:var $33=$track;var $idxprom46=$33<<16>>16;var $34=$pos_indx_addr;var $arrayidx47=$34+($idxprom46<<1)|0;var $35=HEAP16[$arrayidx47>>1];var $conv48=$35<<16>>16;var $cmp49=($conv48|0)<0;if($cmp49){__label__=14;break}else{__label__=15;break}case 14:var $36=$pos_index;var $37=$track;var $idxprom52=$37<<16>>16;var $38=$pos_indx_addr;var $arrayidx53=$38+($idxprom52<<1)|0;HEAP16[$arrayidx53>>1]=$36;var $39=$sign_index;var $40=$track;var $idxprom54=$40<<16>>16;var $41=$sign_indx_addr;var $arrayidx55=$41+($idxprom54<<1)|0;HEAP16[$arrayidx55>>1]=$39;__label__=25;break;case 15:var $42=$sign_index;var $conv57=$42<<16>>16;var $43=$track;var $idxprom58=$43<<16>>16;var $44=$sign_indx_addr;var $arrayidx59=$44+($idxprom58<<1)|0;var $45=HEAP16[$arrayidx59>>1];var $conv60=$45<<16>>16;var $xor=$conv57^$conv60;var $and61=$xor&1;var $cmp62=($and61|0)==0;if($cmp62){__label__=16;break}else{__label__=20;break}case 16:var $46=$track;var $idxprom65=$46<<16>>16;var $47=$pos_indx_addr;var $arrayidx66=$47+($idxprom65<<1)|0;var $48=HEAP16[$arrayidx66>>1];var $conv67=$48<<16>>16;var $49=$pos_index;var $conv68=$49<<16>>16;var $cmp69=($conv67|0)<=($conv68|0);if($cmp69){__label__=17;break}else{__label__=18;break}case 17:var $50=$pos_index;var $51=$track;var $conv72=$51<<16>>16;var $add73=$conv72+4|0;var $52=$pos_indx_addr;var $arrayidx74=$52+($add73<<1)|0;HEAP16[$arrayidx74>>1]=$50;__label__=19;break;case 18:var $53=$track;var $idxprom76=$53<<16>>16;var $54=$pos_indx_addr;var $arrayidx77=$54+($idxprom76<<1)|0;var $55=HEAP16[$arrayidx77>>1];var $56=$track;var $conv78=$56<<16>>16;var $add79=$conv78+4|0;var $57=$pos_indx_addr;var $arrayidx80=$57+($add79<<1)|0;HEAP16[$arrayidx80>>1]=$55;var $58=$pos_index;var $59=$track;var $idxprom81=$59<<16>>16;var $60=$pos_indx_addr;var $arrayidx82=$60+($idxprom81<<1)|0;HEAP16[$arrayidx82>>1]=$58;var $61=$sign_index;var $62=$track;var $idxprom83=$62<<16>>16;var $63=$sign_indx_addr;var $arrayidx84=$63+($idxprom83<<1)|0;HEAP16[$arrayidx84>>1]=$61;__label__=19;break;case 19:__label__=24;break;case 20:var $64=$track;var $idxprom87=$64<<16>>16;var $65=$pos_indx_addr;var $arrayidx88=$65+($idxprom87<<1)|0;var $66=HEAP16[$arrayidx88>>1];var $conv89=$66<<16>>16;var $67=$pos_index;var $conv90=$67<<16>>16;var $cmp91=($conv89|0)<=($conv90|0);if($cmp91){__label__=21;break}else{__label__=22;break}case 21:var $68=$track;var $idxprom94=$68<<16>>16;var $69=$pos_indx_addr;var $arrayidx95=$69+($idxprom94<<1)|0;var $70=HEAP16[$arrayidx95>>1];var $71=$track;var $conv96=$71<<16>>16;var $add97=$conv96+4|0;var $72=$pos_indx_addr;var $arrayidx98=$72+($add97<<1)|0;HEAP16[$arrayidx98>>1]=$70;var $73=$pos_index;var $74=$track;var $idxprom99=$74<<16>>16;var $75=$pos_indx_addr;var $arrayidx100=$75+($idxprom99<<1)|0;HEAP16[$arrayidx100>>1]=$73;var $76=$sign_index;var $77=$track;var $idxprom101=$77<<16>>16;var $78=$sign_indx_addr;var $arrayidx102=$78+($idxprom101<<1)|0;HEAP16[$arrayidx102>>1]=$76;__label__=23;break;case 22:var $79=$pos_index;var $80=$track;var $conv104=$80<<16>>16;var $add105=$conv104+4|0;var $81=$pos_indx_addr;var $arrayidx106=$81+($add105<<1)|0;HEAP16[$arrayidx106>>1]=$79;__label__=23;break;case 23:__label__=24;break;case 24:__label__=25;break;case 25:__label__=26;break;case 26:var $82=$k;var $inc111=$82+1&65535;$k=$inc111;__label__=9;break;case 27:var $83=$h_addr;var $84=$p_codvec;var $incdec_ptr113=$84+2|0;$p_codvec=$incdec_ptr113;var $85=HEAP16[$84>>1];var $conv114=$85<<16>>16;var $idx_neg=-$conv114|0;var $add_ptr=$83+($idx_neg<<1)|0;$p0=$add_ptr;var $86=$h_addr;var $87=$p_codvec;var $incdec_ptr115=$87+2|0;$p_codvec=$incdec_ptr115;var $88=HEAP16[$87>>1];var $conv116=$88<<16>>16;var $idx_neg117=-$conv116|0;var $add_ptr118=$86+($idx_neg117<<1)|0;$p1=$add_ptr118;var $89=$h_addr;var $90=$p_codvec;var $incdec_ptr119=$90+2|0;$p_codvec=$incdec_ptr119;var $91=HEAP16[$90>>1];var $conv120=$91<<16>>16;var $idx_neg121=-$conv120|0;var $add_ptr122=$89+($idx_neg121<<1)|0;$p2=$add_ptr122;var $92=$h_addr;var $93=$p_codvec;var $incdec_ptr123=$93+2|0;$p_codvec=$incdec_ptr123;var $94=HEAP16[$93>>1];var $conv124=$94<<16>>16;var $idx_neg125=-$conv124|0;var $add_ptr126=$92+($idx_neg125<<1)|0;$p3=$add_ptr126;var $95=$h_addr;var $96=$p_codvec;var $incdec_ptr127=$96+2|0;$p_codvec=$incdec_ptr127;var $97=HEAP16[$96>>1];var $conv128=$97<<16>>16;var $idx_neg129=-$conv128|0;var $add_ptr130=$95+($idx_neg129<<1)|0;$p4=$add_ptr130;var $98=$h_addr;var $99=$p_codvec;var $incdec_ptr131=$99+2|0;$p_codvec=$incdec_ptr131;var $100=HEAP16[$99>>1];var $conv132=$100<<16>>16;var $idx_neg133=-$conv132|0;var $add_ptr134=$98+($idx_neg133<<1)|0;$p5=$add_ptr134;var $101=$h_addr;var $102=$p_codvec;var $incdec_ptr135=$102+2|0;$p_codvec=$incdec_ptr135;var $103=HEAP16[$102>>1];var $conv136=$103<<16>>16;var $idx_neg137=-$conv136|0;var $add_ptr138=$101+($idx_neg137<<1)|0;$p6=$add_ptr138;var $104=$h_addr;var $105=$p_codvec;var $106=HEAP16[$105>>1];var $conv139=$106<<16>>16;var $idx_neg140=-$conv139|0;var $add_ptr141=$104+($idx_neg140<<1)|0;$p7=$add_ptr141;$i=0;__label__=28;break;case 28:var $107=$i;var $conv143=$107<<16>>16;var $cmp144=($conv143|0)<40;if($cmp144){__label__=29;break}else{__label__=31;break}case 29:$s=0;var $108=$s;var $109=$p0;var $incdec_ptr147=$109+2|0;$p0=$incdec_ptr147;var $110=HEAP16[$109>>1];var $arrayidx148=$_sign|0;var $111=HEAP16[$arrayidx148>>1];var $112=$pOverflow_addr;var $call=_L_mac24($108,$110,$111,$112);$s=$call;var $113=$s;var $114=$p1;var $incdec_ptr149=$114+2|0;$p1=$incdec_ptr149;var $115=HEAP16[$114>>1];var $arrayidx150=$_sign+2|0;var $116=HEAP16[$arrayidx150>>1];var $117=$pOverflow_addr;var $call151=_L_mac24($113,$115,$116,$117);$s=$call151;var $118=$s;var $119=$p2;var $incdec_ptr152=$119+2|0;$p2=$incdec_ptr152;var $120=HEAP16[$119>>1];var $arrayidx153=$_sign+4|0;var $121=HEAP16[$arrayidx153>>1];var $122=$pOverflow_addr;var $call154=_L_mac24($118,$120,$121,$122);$s=$call154;var $123=$s;var $124=$p3;var $incdec_ptr155=$124+2|0;$p3=$incdec_ptr155;var $125=HEAP16[$124>>1];var $arrayidx156=$_sign+6|0;var $126=HEAP16[$arrayidx156>>1];var $127=$pOverflow_addr;var $call157=_L_mac24($123,$125,$126,$127);$s=$call157;var $128=$s;var $129=$p4;var $incdec_ptr158=$129+2|0;$p4=$incdec_ptr158;var $130=HEAP16[$129>>1];var $arrayidx159=$_sign+8|0;var $131=HEAP16[$arrayidx159>>1];var $132=$pOverflow_addr;var $call160=_L_mac24($128,$130,$131,$132);$s=$call160;var $133=$s;var $134=$p5;var $incdec_ptr161=$134+2|0;$p5=$incdec_ptr161;var $135=HEAP16[$134>>1];var $arrayidx162=$_sign+10|0;var $136=HEAP16[$arrayidx162>>1];var $137=$pOverflow_addr;var $call163=_L_mac24($133,$135,$136,$137);$s=$call163;var $138=$s;var $139=$p6;var $incdec_ptr164=$139+2|0;$p6=$incdec_ptr164;var $140=HEAP16[$139>>1];var $arrayidx165=$_sign+12|0;var $141=HEAP16[$arrayidx165>>1];var $142=$pOverflow_addr;var $call166=_L_mac24($138,$140,$141,$142);$s=$call166;var $143=$s;var $144=$p7;var $incdec_ptr167=$144+2|0;$p7=$incdec_ptr167;var $145=HEAP16[$144>>1];var $arrayidx168=$_sign+14|0;var $146=HEAP16[$arrayidx168>>1];var $147=$pOverflow_addr;var $call169=_L_mac24($143,$145,$146,$147);$s=$call169;var $148=$s;var $149=$pOverflow_addr;var $call170=_pv_round($148,$149);var $150=$i;var $idxprom171=$150<<16>>16;var $151=$y_addr;var $arrayidx172=$151+($idxprom171<<1)|0;HEAP16[$arrayidx172>>1]=$call170;__label__=30;break;case 30:var $152=$i;var $inc174=$152+1&65535;$i=$inc174;__label__=28;break;case 31:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_build_code23["X"]=1;function _compress_code($sign_indx,$pos_indx,$indx,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $sign_indx_addr;var $pos_indx_addr;var $indx_addr;var $pOverflow_addr;var $i;var $ia;var $ib;var $ic;var $p_indx;var $p_sign_indx;var $tempWord32;$sign_indx_addr=$sign_indx;$pos_indx_addr=$pos_indx;$indx_addr=$indx;$pOverflow_addr=$pOverflow;var $0=$indx_addr;var $arrayidx=$0|0;$p_indx=$arrayidx;var $1=$sign_indx_addr;var $arrayidx1=$1|0;$p_sign_indx=$arrayidx1;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<4;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$p_sign_indx;var $incdec_ptr=$3+2|0;$p_sign_indx=$incdec_ptr;var $4=HEAP16[$3>>1];var $5=$p_indx;var $incdec_ptr3=$5+2|0;$p_indx=$incdec_ptr3;HEAP16[$5>>1]=$4;__label__=3;break;case 3:var $6=$i;var $inc=$6+1&65535;$i=$inc;__label__=1;break;case 4:var $7=$pos_indx_addr;var $arrayidx4=$7|0;var $8=HEAP16[$arrayidx4>>1];var $9=$pos_indx_addr;var $arrayidx5=$9+8|0;var $10=HEAP16[$arrayidx5>>1];var $11=$pos_indx_addr;var $arrayidx6=$11+2|0;var $12=HEAP16[$arrayidx6>>1];var $13=$pOverflow_addr;var $call=_compress10($8,$10,$12,$13);var $14=$indx_addr;var $arrayidx7=$14+8|0;HEAP16[$arrayidx7>>1]=$call;var $15=$pos_indx_addr;var $arrayidx8=$15+4|0;var $16=HEAP16[$arrayidx8>>1];var $17=$pos_indx_addr;var $arrayidx9=$17+12|0;var $18=HEAP16[$arrayidx9>>1];var $19=$pos_indx_addr;var $arrayidx10=$19+10|0;var $20=HEAP16[$arrayidx10>>1];var $21=$pOverflow_addr;var $call11=_compress10($16,$18,$20,$21);var $22=$indx_addr;var $arrayidx12=$22+10|0;HEAP16[$arrayidx12>>1]=$call11;var $23=$pos_indx_addr;var $arrayidx13=$23+14|0;var $24=HEAP16[$arrayidx13>>1];var $conv14=$24<<16>>16;var $shr=$conv14>>1;var $conv15=$shr&65535;$ib=$conv15;var $25=$ib;var $conv16=$25<<16>>16;var $and=$conv16&1;var $conv17=$and&65535;$ib=$conv17;var $26=$pos_indx_addr;var $arrayidx18=$26+6|0;var $27=HEAP16[$arrayidx18>>1];var $conv19=$27<<16>>16;var $shr20=$conv19>>1;var $conv21=$shr20&65535;$ia=$conv21;var $28=$ib;var $conv22=$28<<16>>16;var $cmp23=($conv22|0)==1;if($cmp23){__label__=5;break}else{__label__=6;break}case 5:var $29=$ia;var $conv25=$29<<16>>16;var $sub=4-$conv25|0;var $conv26=$sub&65535;$ia=$conv26;__label__=6;break;case 6:var $30=$pos_indx_addr;var $arrayidx27=$30+14|0;var $31=HEAP16[$arrayidx27>>1];var $conv28=$31<<16>>16;var $shr29=$conv28>>1;var $conv30=$shr29&65535;$ib=$conv30;var $32=$ib;var $conv31=$32<<16>>16;var $mul=$conv31*5|0;var $shl=$mul<<1;$tempWord32=$shl;var $33=$tempWord32;var $shr32=$33>>1;$tempWord32=$shr32;var $34=$tempWord32;var $conv33=$34&65535;$ib=$conv33;var $35=$ia;var $conv34=$35<<16>>16;var $36=$ib;var $conv35=$36<<16>>16;var $add=$conv35+$conv34|0;var $conv36=$add&65535;$ib=$conv36;var $37=$ib;var $conv37=$37<<16>>16;var $shl38=$conv37<<5;var $conv39=$shl38&65535;$ib=$conv39;var $38=$ib;var $conv40=$38<<16>>16;var $add41=$conv40+12|0;var $conv42=$add41&65535;$ib=$conv42;var $39=$ib;var $conv43=$39<<16>>16;var $mul44=$conv43*1311|0;var $shr45=$mul44>>15;var $conv46=$shr45&65535;$ic=$conv46;var $40=$ic;var $conv47=$40<<16>>16;var $shl48=$conv47<<2;var $conv49=$shl48&65535;$ic=$conv49;var $41=$pos_indx_addr;var $arrayidx50=$41+6|0;var $42=HEAP16[$arrayidx50>>1];var $conv51=$42<<16>>16;var $and52=$conv51&1;var $conv53=$and52&65535;$ia=$conv53;var $43=$pos_indx_addr;var $arrayidx54=$43+14|0;var $44=HEAP16[$arrayidx54>>1];var $conv55=$44<<16>>16;var $and56=$conv55&1;var $conv57=$and56&65535;var $conv58=$conv57<<16>>16;var $shl59=$conv58<<1;var $conv60=$shl59&65535;$ib=$conv60;var $45=$ic;var $conv61=$45<<16>>16;var $46=$ib;var $conv62=$46<<16>>16;var $add63=$conv62+$conv61|0;var $conv64=$add63&65535;$ib=$conv64;var $47=$ia;var $conv65=$47<<16>>16;var $48=$ib;var $conv66=$48<<16>>16;var $add67=$conv66+$conv65|0;var $conv68=$add67&65535;$ib=$conv68;var $49=$ib;var $50=$indx_addr;var $arrayidx69=$50+12|0;HEAP16[$arrayidx69>>1]=$49;return;default:assert(0,"bad label: "+__label__)}}_compress_code["X"]=1;function _amrnb_fxp_mac_16_by_16bb25($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _amrnb_fxp_mac_16_by_16bb26($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _L_mult27($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shl28($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mac29($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac29["X"]=1;function _L_shr30($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _comp_corr($scal_sig,$L_frame,$lag_max,$lag_min,$corr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $scal_sig_addr;var $L_frame_addr;var $lag_max_addr;var $lag_min_addr;var $corr_addr;var $i;var $j;var $p;var $p1;var $p2;var $p_scal_sig;var $t1;var $t2;var $t3;var $t4;$scal_sig_addr=$scal_sig;$L_frame_addr=$L_frame;$lag_max_addr=$lag_max;$lag_min_addr=$lag_min;$corr_addr=$corr;var $0=$corr_addr;var $1=$lag_max_addr;var $conv=$1<<16>>16;var $idx_neg=-$conv|0;var $add_ptr=$0+($idx_neg<<2)|0;$corr_addr=$add_ptr;var $2=$lag_max_addr;var $conv1=$2<<16>>16;var $sub=-$conv1|0;var $3=$scal_sig_addr;var $arrayidx=$3+($sub<<1)|0;$p_scal_sig=$arrayidx;var $4=$lag_max_addr;var $conv2=$4<<16>>16;var $5=$lag_min_addr;var $conv3=$5<<16>>16;var $sub4=$conv2-$conv3|0;var $shr=$sub4>>2;var $add=$shr+1|0;var $conv5=$add&65535;$i=$conv5;__label__=1;break;case 1:var $6=$i;var $conv6=$6<<16>>16;var $cmp=($conv6|0)>0;if($cmp){__label__=2;break}else{__label__=8;break}case 2:$t1=0;$t2=0;$t3=0;$t4=0;var $7=$scal_sig_addr;var $arrayidx8=$7|0;$p=$arrayidx8;var $8=$p_scal_sig;var $incdec_ptr=$8+2|0;$p_scal_sig=$incdec_ptr;$p1=$8;var $9=$p_scal_sig;var $incdec_ptr9=$9+2|0;$p_scal_sig=$incdec_ptr9;var $10=$p_scal_sig;var $incdec_ptr10=$10+2|0;$p_scal_sig=$incdec_ptr10;$p2=$10;var $11=$p_scal_sig;var $incdec_ptr11=$11+2|0;$p_scal_sig=$incdec_ptr11;var $12=$L_frame_addr;var $conv12=$12<<16>>16;var $shr13=$conv12>>1;var $conv14=$shr13&65535;$j=$conv14;__label__=3;break;case 3:var $13=$j;var $conv16=$13<<16>>16;var $cmp17=($conv16|0)!=0;if($cmp17){__label__=4;break}else{__label__=6;break}case 4:var $14=$p;var $15=HEAP16[$14>>1];var $conv20=$15<<16>>16;var $16=$p1;var $incdec_ptr21=$16+2|0;$p1=$incdec_ptr21;var $17=HEAP16[$16>>1];var $conv22=$17<<16>>16;var $18=$t1;var $call=_amrnb_fxp_mac_16_by_16bb25($conv20,$conv22,$18);$t1=$call;var $19=$p;var $20=HEAP16[$19>>1];var $conv23=$20<<16>>16;var $21=$p1;var $22=HEAP16[$21>>1];var $conv24=$22<<16>>16;var $23=$t2;var $call25=_amrnb_fxp_mac_16_by_16bb25($conv23,$conv24,$23);$t2=$call25;var $24=$p;var $25=HEAP16[$24>>1];var $conv26=$25<<16>>16;var $26=$p2;var $incdec_ptr27=$26+2|0;$p2=$incdec_ptr27;var $27=HEAP16[$26>>1];var $conv28=$27<<16>>16;var $28=$t3;var $call29=_amrnb_fxp_mac_16_by_16bb25($conv26,$conv28,$28);$t3=$call29;var $29=$p;var $incdec_ptr30=$29+2|0;$p=$incdec_ptr30;var $30=HEAP16[$29>>1];var $conv31=$30<<16>>16;var $31=$p2;var $32=HEAP16[$31>>1];var $conv32=$32<<16>>16;var $33=$t4;var $call33=_amrnb_fxp_mac_16_by_16bb25($conv31,$conv32,$33);$t4=$call33;var $34=$p;var $35=HEAP16[$34>>1];var $conv34=$35<<16>>16;var $36=$p1;var $incdec_ptr35=$36+2|0;$p1=$incdec_ptr35;var $37=HEAP16[$36>>1];var $conv36=$37<<16>>16;var $38=$t1;var $call37=_amrnb_fxp_mac_16_by_16bb25($conv34,$conv36,$38);$t1=$call37;var $39=$p;var $40=HEAP16[$39>>1];var $conv38=$40<<16>>16;var $41=$p1;var $42=HEAP16[$41>>1];var $conv39=$42<<16>>16;var $43=$t2;var $call40=_amrnb_fxp_mac_16_by_16bb25($conv38,$conv39,$43);$t2=$call40;var $44=$p;var $45=HEAP16[$44>>1];var $conv41=$45<<16>>16;var $46=$p2;var $incdec_ptr42=$46+2|0;$p2=$incdec_ptr42;var $47=HEAP16[$46>>1];var $conv43=$47<<16>>16;var $48=$t3;var $call44=_amrnb_fxp_mac_16_by_16bb25($conv41,$conv43,$48);$t3=$call44;var $49=$p;var $incdec_ptr45=$49+2|0;$p=$incdec_ptr45;var $50=HEAP16[$49>>1];var $conv46=$50<<16>>16;var $51=$p2;var $52=HEAP16[$51>>1];var $conv47=$52<<16>>16;var $53=$t4;var $call48=_amrnb_fxp_mac_16_by_16bb25($conv46,$conv47,$53);$t4=$call48;__label__=5;break;case 5:var $54=$j;var $dec=$54-1&65535;$j=$dec;__label__=3;break;case 6:var $55=$t1;var $shl=$55<<1;var $56=$corr_addr;var $incdec_ptr49=$56+4|0;$corr_addr=$incdec_ptr49;HEAP32[$56>>2]=$shl;var $57=$t2;var $shl50=$57<<1;var $58=$corr_addr;var $incdec_ptr51=$58+4|0;$corr_addr=$incdec_ptr51;HEAP32[$58>>2]=$shl50;var $59=$t3;var $shl52=$59<<1;var $60=$corr_addr;var $incdec_ptr53=$60+4|0;$corr_addr=$incdec_ptr53;HEAP32[$60>>2]=$shl52;var $61=$t4;var $shl54=$61<<1;var $62=$corr_addr;var $incdec_ptr55=$62+4|0;$corr_addr=$incdec_ptr55;HEAP32[$62>>2]=$shl54;__label__=7;break;case 7:var $63=$i;var $dec57=$63-1&65535;$i=$dec57;__label__=1;break;case 8:;return;default:assert(0,"bad label: "+__label__)}}_comp_corr["X"]=1;function _calc_unfilt_energies($res,$exc,$code,$gain_pit,$L_subfr,$frac_en,$exp_en,$ltpg,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $res_addr;var $exc_addr;var $code_addr;var $gain_pit_addr;var $L_subfr_addr;var $frac_en_addr;var $exp_en_addr;var $ltpg_addr;var $pOverflow_addr;var $s1;var $s2;var $s3;var $s4;var $L_temp;var $i;var $exp;var $tmp1;var $tmp2;var $ltp_res_en;var $pred_gain;var $ltpg_exp=__stackBase__;var $ltpg_frac=__stackBase__+4;$res_addr=$res;$exc_addr=$exc;$code_addr=$code;$gain_pit_addr=$gain_pit;$L_subfr_addr=$L_subfr;$frac_en_addr=$frac_en;$exp_en_addr=$exp_en;$ltpg_addr=$ltpg;$pOverflow_addr=$pOverflow;$s1=0;$s2=0;$s3=0;$s4=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$L_subfr_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $idxprom=$2<<16>>16;var $3=$res_addr;var $arrayidx=$3+($idxprom<<1)|0;var $4=HEAP16[$arrayidx>>1];$tmp1=$4;var $5=$i;var $idxprom3=$5<<16>>16;var $6=$exc_addr;var $arrayidx4=$6+($idxprom3<<1)|0;var $7=HEAP16[$arrayidx4>>1];$tmp2=$7;var $8=$tmp1;var $conv5=$8<<16>>16;var $9=$tmp1;var $conv6=$9<<16>>16;var $10=$s1;var $call=_amrnb_fxp_mac_16_by_16bb26($conv5,$conv6,$10);$s1=$call;var $11=$tmp2;var $conv7=$11<<16>>16;var $12=$tmp2;var $conv8=$12<<16>>16;var $13=$s2;var $call9=_amrnb_fxp_mac_16_by_16bb26($conv7,$conv8,$13);$s2=$call9;var $14=$tmp2;var $conv10=$14<<16>>16;var $15=$i;var $idxprom11=$15<<16>>16;var $16=$code_addr;var $arrayidx12=$16+($idxprom11<<1)|0;var $17=HEAP16[$arrayidx12>>1];var $conv13=$17<<16>>16;var $18=$s3;var $call14=_amrnb_fxp_mac_16_by_16bb26($conv10,$conv13,$18);$s3=$call14;var $19=$tmp2;var $20=$gain_pit_addr;var $21=$pOverflow_addr;var $call15=_L_mult27($19,$20,$21);$L_temp=$call15;var $22=$L_temp;var $23=$pOverflow_addr;var $call16=_L_shl28($22,1,$23);$L_temp=$call16;var $24=$tmp1;var $25=$L_temp;var $26=$pOverflow_addr;var $call17=_pv_round($25,$26);var $27=$pOverflow_addr;var $call18=_sub($24,$call17,$27);$tmp2=$call18;var $28=$s4;var $29=$tmp2;var $30=$tmp2;var $31=$pOverflow_addr;var $call19=_L_mac29($28,$29,$30,$31);$s4=$call19;__label__=3;break;case 3:var $32=$i;var $inc=$32+1&65535;$i=$inc;__label__=1;break;case 4:var $33=$s1;var $shl=$33<<1;$s1=$shl;var $34=$s2;var $shl20=$34<<1;$s2=$shl20;var $35=$s3;var $shl21=$35<<1;$s3=$shl21;var $36=$s1;var $and=$36&-2147483648;var $tobool=($and|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:$s1=2147483647;var $37=$pOverflow_addr;HEAP32[$37>>2]=1;__label__=6;break;case 6:var $38=$s1;var $cmp22=($38|0)<400;if($cmp22){__label__=7;break}else{__label__=8;break}case 7:var $39=$frac_en_addr;var $arrayidx25=$39|0;HEAP16[$arrayidx25>>1]=0;var $40=$exp_en_addr;var $arrayidx26=$40|0;HEAP16[$arrayidx26>>1]=-15;__label__=9;break;case 8:var $41=$s1;var $call27=_norm_l($41);$exp=$call27;var $42=$s1;var $43=$exp;var $44=$pOverflow_addr;var $call28=_L_shl28($42,$43,$44);var $shr=$call28>>16;var $conv29=$shr&65535;var $45=$frac_en_addr;var $arrayidx30=$45|0;HEAP16[$arrayidx30>>1]=$conv29;var $46=$exp;var $conv31=$46<<16>>16;var $sub=15-$conv31|0;var $conv32=$sub&65535;var $47=$exp_en_addr;var $arrayidx33=$47|0;HEAP16[$arrayidx33>>1]=$conv32;__label__=9;break;case 9:var $48=$s2;var $and35=$48&-2147483648;var $tobool36=($and35|0)!=0;if($tobool36){__label__=10;break}else{__label__=11;break}case 10:$s2=2147483647;var $49=$pOverflow_addr;HEAP32[$49>>2]=1;__label__=11;break;case 11:var $50=$s2;var $call39=_norm_l($50);$exp=$call39;var $51=$s2;var $52=$exp;var $53=$pOverflow_addr;var $call40=_L_shl28($51,$52,$53);var $shr41=$call40>>16;var $conv42=$shr41&65535;var $54=$frac_en_addr;var $arrayidx43=$54+2|0;HEAP16[$arrayidx43>>1]=$conv42;var $55=$exp;var $conv44=$55<<16>>16;var $sub45=15-$conv44|0;var $conv46=$sub45&65535;var $56=$exp_en_addr;var $arrayidx47=$56+2|0;HEAP16[$arrayidx47>>1]=$conv46;var $57=$s3;var $call48=_norm_l($57);$exp=$call48;var $58=$s3;var $59=$exp;var $60=$pOverflow_addr;var $call49=_L_shl28($58,$59,$60);var $shr50=$call49>>16;var $conv51=$shr50&65535;var $61=$frac_en_addr;var $arrayidx52=$61+4|0;HEAP16[$arrayidx52>>1]=$conv51;var $62=$exp;var $conv53=$62<<16>>16;var $sub54=2-$conv53|0;var $conv55=$sub54&65535;var $63=$exp_en_addr;var $arrayidx56=$63+4|0;HEAP16[$arrayidx56>>1]=$conv55;var $64=$s4;var $call57=_norm_l($64);$exp=$call57;var $65=$s4;var $66=$exp;var $67=$pOverflow_addr;var $call58=_L_shl28($65,$66,$67);var $shr59=$call58>>16;var $conv60=$shr59&65535;$ltp_res_en=$conv60;var $68=$exp;var $conv61=$68<<16>>16;var $sub62=15-$conv61|0;var $conv63=$sub62&65535;$exp=$conv63;var $69=$ltp_res_en;var $70=$frac_en_addr;var $arrayidx64=$70+6|0;HEAP16[$arrayidx64>>1]=$69;var $71=$exp;var $72=$exp_en_addr;var $arrayidx65=$72+6|0;HEAP16[$arrayidx65>>1]=$71;var $73=$ltp_res_en;var $conv66=$73<<16>>16;var $cmp67=($conv66|0)>0;if($cmp67){__label__=12;break}else{__label__=14;break}case 12:var $74=$frac_en_addr;var $arrayidx69=$74|0;var $75=HEAP16[$arrayidx69>>1];var $conv70=$75<<16>>16;var $cmp71=($conv70|0)!=0;if($cmp71){__label__=13;break}else{__label__=14;break}case 13:var $76=$frac_en_addr;var $arrayidx74=$76|0;var $77=HEAP16[$arrayidx74>>1];var $78=$pOverflow_addr;var $call75=_shr($77,1,$78);var $79=$ltp_res_en;var $call76=_div_s($call75,$79);$pred_gain=$call76;var $80=$exp;var $81=$exp_en_addr;var $arrayidx77=$81|0;var $82=HEAP16[$arrayidx77>>1];var $83=$pOverflow_addr;var $call78=_sub($80,$82,$83);$exp=$call78;var $84=$pred_gain;var $conv79=$84<<16>>16;var $shl80=$conv79<<16;$L_temp=$shl80;var $85=$L_temp;var $86=$exp;var $conv81=$86<<16>>16;var $add=$conv81+3|0;var $conv82=$add&65535;var $87=$pOverflow_addr;var $call83=_L_shr30($85,$conv82,$87);$L_temp=$call83;var $88=$L_temp;var $89=$pOverflow_addr;_Log2($88,$ltpg_exp,$ltpg_frac,$89);var $90=HEAP16[$ltpg_exp>>1];var $conv84=$90<<16>>16;var $sub85=$conv84-27|0;var $conv86=$sub85&65535;var $91=HEAP16[$ltpg_frac>>1];var $92=$pOverflow_addr;var $call87=_L_Comp($conv86,$91,$92);$L_temp=$call87;var $93=$L_temp;var $94=$pOverflow_addr;var $call88=_L_shl28($93,13,$94);var $95=$pOverflow_addr;var $call89=_pv_round($call88,$95);var $96=$ltpg_addr;HEAP16[$96>>1]=$call89;__label__=15;break;case 14:var $97=$ltpg_addr;HEAP16[$97>>1]=0;__label__=15;break;case 15:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_calc_unfilt_energies["X"]=1;function _negate282($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _shl31($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl31["X"]=1;function _mult32($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _calc_filt_energies($mode,$xn,$xn2,$y1,$Y2,$g_coeff,$frac_coeff,$exp_coeff,$cod_gain_frac,$cod_gain_exp,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=80;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $xn_addr;var $xn2_addr;var $y1_addr;var $Y2_addr;var $g_coeff_addr;var $frac_coeff_addr;var $exp_coeff_addr;var $cod_gain_frac_addr;var $cod_gain_exp_addr;var $pOverflow_addr;var $s1;var $s2;var $s3;var $i;var $exp;var $frac;var $tmp;var $scaled_y2=__stackBase__;$mode_addr=$mode;$xn_addr=$xn;$xn2_addr=$xn2;$y1_addr=$y1;$Y2_addr=$Y2;$g_coeff_addr=$g_coeff;$frac_coeff_addr=$frac_coeff;$exp_coeff_addr=$exp_coeff;$cod_gain_frac_addr=$cod_gain_frac;$cod_gain_exp_addr=$cod_gain_exp;$pOverflow_addr=$pOverflow;var $0=$g_coeff_addr;var $arrayidx=$0|0;var $1=HEAP16[$arrayidx>>1];var $2=$frac_coeff_addr;var $arrayidx2=$2|0;HEAP16[$arrayidx2>>1]=$1;var $3=$g_coeff_addr;var $arrayidx3=$3+2|0;var $4=HEAP16[$arrayidx3>>1];var $5=$exp_coeff_addr;var $arrayidx4=$5|0;HEAP16[$arrayidx4>>1]=$4;var $6=$g_coeff_addr;var $arrayidx5=$6+4|0;var $7=HEAP16[$arrayidx5>>1];var $call=_negate282($7);var $8=$frac_coeff_addr;var $arrayidx6=$8+2|0;HEAP16[$arrayidx6>>1]=$call;var $9=$g_coeff_addr;var $arrayidx7=$9+6|0;var $10=HEAP16[$arrayidx7>>1];var $conv=$10<<16>>16;var $add=$conv+1|0;var $conv8=$add&65535;var $11=$exp_coeff_addr;var $arrayidx9=$11+2|0;HEAP16[$arrayidx9>>1]=$conv8;var $12=$mode_addr;var $cmp=($12|0)==5;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $13=$mode_addr;var $cmp11=($13|0)==0;if($cmp11){__label__=2;break}else{__label__=3;break}case 2:$s1=0;$s2=0;$s3=0;__label__=4;break;case 3:$s1=1;$s2=1;$s3=1;__label__=4;break;case 4:$i=0;__label__=5;break;case 5:var $14=$i;var $conv13=$14<<16>>16;var $cmp14=($conv13|0)<40;if($cmp14){__label__=6;break}else{__label__=8;break}case 6:var $15=$i;var $idxprom=$15<<16>>16;var $16=$Y2_addr;var $arrayidx16=$16+($idxprom<<1)|0;var $17=HEAP16[$arrayidx16>>1];var $conv17=$17<<16>>16;var $shr=$conv17>>3;var $conv18=$shr&65535;$tmp=$conv18;var $18=$tmp;var $19=$i;var $idxprom19=$19<<16>>16;var $arrayidx20=$scaled_y2+($idxprom19<<1)|0;HEAP16[$arrayidx20>>1]=$18;var $20=$s1;var $21=$tmp;var $22=$tmp;var $23=$pOverflow_addr;var $call21=_L_mac29($20,$21,$22,$23);$s1=$call21;var $24=$s2;var $25=$i;var $idxprom22=$25<<16>>16;var $26=$xn_addr;var $arrayidx23=$26+($idxprom22<<1)|0;var $27=HEAP16[$arrayidx23>>1];var $28=$tmp;var $29=$pOverflow_addr;var $call24=_L_mac29($24,$27,$28,$29);$s2=$call24;var $30=$s3;var $31=$i;var $idxprom25=$31<<16>>16;var $32=$y1_addr;var $arrayidx26=$32+($idxprom25<<1)|0;var $33=HEAP16[$arrayidx26>>1];var $34=$tmp;var $35=$pOverflow_addr;var $call27=_L_mac29($30,$33,$34,$35);$s3=$call27;__label__=7;break;case 7:var $36=$i;var $inc=$36+1&65535;$i=$inc;__label__=5;break;case 8:var $37=$s1;var $call28=_norm_l($37);$exp=$call28;var $38=$s1;var $39=$exp;var $40=$pOverflow_addr;var $call29=_L_shl28($38,$39,$40);var $shr30=$call29>>16;var $conv31=$shr30&65535;var $41=$frac_coeff_addr;var $arrayidx32=$41+4|0;HEAP16[$arrayidx32>>1]=$conv31;var $42=$exp;var $conv33=$42<<16>>16;var $sub=-3-$conv33|0;var $conv34=$sub&65535;var $43=$exp_coeff_addr;var $arrayidx35=$43+4|0;HEAP16[$arrayidx35>>1]=$conv34;var $44=$s2;var $call36=_norm_l($44);$exp=$call36;var $45=$s2;var $46=$exp;var $47=$pOverflow_addr;var $call37=_L_shl28($45,$46,$47);var $shr38=$call37>>16;var $conv39=$shr38&65535;var $call40=_negate282($conv39);var $48=$frac_coeff_addr;var $arrayidx41=$48+6|0;HEAP16[$arrayidx41>>1]=$call40;var $49=$exp;var $conv42=$49<<16>>16;var $sub43=7-$conv42|0;var $conv44=$sub43&65535;var $50=$exp_coeff_addr;var $arrayidx45=$50+6|0;HEAP16[$arrayidx45>>1]=$conv44;var $51=$s3;var $call46=_norm_l($51);$exp=$call46;var $52=$s3;var $53=$exp;var $54=$pOverflow_addr;var $call47=_L_shl28($52,$53,$54);var $shr48=$call47>>16;var $conv49=$shr48&65535;var $55=$frac_coeff_addr;var $arrayidx50=$55+8|0;HEAP16[$arrayidx50>>1]=$conv49;var $56=$exp;var $conv51=$56<<16>>16;var $sub52=7-$conv51|0;var $conv53=$sub52&65535;var $57=$exp_coeff_addr;var $arrayidx54=$57+8|0;HEAP16[$arrayidx54>>1]=$conv53;var $58=$mode_addr;var $cmp55=($58|0)==5;if($cmp55){__label__=10;break}else{__label__=9;break}case 9:var $59=$mode_addr;var $cmp58=($59|0)==0;if($cmp58){__label__=10;break}else{__label__=18;break}case 10:$s1=0;$i=0;__label__=11;break;case 11:var $60=$i;var $conv62=$60<<16>>16;var $cmp63=($conv62|0)<40;if($cmp63){__label__=12;break}else{__label__=14;break}case 12:var $61=$i;var $idxprom66=$61<<16>>16;var $62=$xn2_addr;var $arrayidx67=$62+($idxprom66<<1)|0;var $63=HEAP16[$arrayidx67>>1];var $conv68=$63<<16>>16;var $64=$i;var $idxprom69=$64<<16>>16;var $arrayidx70=$scaled_y2+($idxprom69<<1)|0;var $65=HEAP16[$arrayidx70>>1];var $conv71=$65<<16>>16;var $66=$s1;var $call72=_amrnb_fxp_mac_16_by_16bb26($conv68,$conv71,$66);$s1=$call72;__label__=13;break;case 13:var $67=$i;var $inc74=$67+1&65535;$i=$inc74;__label__=11;break;case 14:var $68=$s1;var $shl=$68<<1;$s1=$shl;var $69=$s1;var $call76=_norm_l($69);$exp=$call76;var $70=$s1;var $71=$exp;var $72=$pOverflow_addr;var $call77=_L_shl28($70,$71,$72);var $shr78=$call77>>16;var $conv79=$shr78&65535;$frac=$conv79;var $73=$exp;var $conv80=$73<<16>>16;var $sub81=6-$conv80|0;var $conv82=$sub81&65535;$exp=$conv82;var $74=$frac;var $conv83=$74<<16>>16;var $cmp84=($conv83|0)<=0;if($cmp84){__label__=15;break}else{__label__=16;break}case 15:var $75=$cod_gain_frac_addr;HEAP16[$75>>1]=0;var $76=$cod_gain_exp_addr;HEAP16[$76>>1]=0;__label__=17;break;case 16:var $77=$frac;var $78=$pOverflow_addr;var $call88=_shr($77,1,$78);var $79=$frac_coeff_addr;var $arrayidx89=$79+4|0;var $80=HEAP16[$arrayidx89>>1];var $call90=_div_s($call88,$80);var $81=$cod_gain_frac_addr;HEAP16[$81>>1]=$call90;var $82=$exp;var $conv91=$82<<16>>16;var $83=$exp_coeff_addr;var $arrayidx92=$83+4|0;var $84=HEAP16[$arrayidx92>>1];var $conv93=$84<<16>>16;var $sub94=$conv91-$conv93|0;var $sub95=$sub94-14|0;var $conv96=$sub95&65535;var $85=$cod_gain_exp_addr;HEAP16[$85>>1]=$conv96;__label__=17;break;case 17:__label__=18;break;case 18:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_calc_filt_energies["X"]=1;function _calc_target_energy($xn,$en_exp,$en_frac,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $xn_addr;var $en_exp_addr;var $en_frac_addr;var $pOverflow_addr;var $s;var $i;var $exp;$xn_addr=$xn;$en_exp_addr=$en_exp;$en_frac_addr=$en_frac;$pOverflow_addr=$pOverflow;$s=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$xn_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $4=$i;var $idxprom3=$4<<16>>16;var $5=$xn_addr;var $arrayidx4=$5+($idxprom3<<1)|0;var $6=HEAP16[$arrayidx4>>1];var $conv5=$6<<16>>16;var $7=$s;var $call=_amrnb_fxp_mac_16_by_16bb26($conv2,$conv5,$7);$s=$call;__label__=3;break;case 3:var $8=$i;var $inc=$8+1&65535;$i=$inc;__label__=1;break;case 4:var $9=$s;var $cmp6=($9|0)<0;if($cmp6){__label__=5;break}else{__label__=6;break}case 5:var $10=$pOverflow_addr;HEAP32[$10>>2]=1;$s=2147483647;__label__=6;break;case 6:var $11=$s;var $call8=_norm_l($11);$exp=$call8;var $12=$s;var $13=$exp;var $14=$pOverflow_addr;var $call9=_L_shl28($12,$13,$14);var $shr=$call9>>16;var $conv10=$shr&65535;var $15=$en_frac_addr;HEAP16[$15>>1]=$conv10;var $16=$exp;var $conv11=$16<<16>>16;var $sub=16-$conv11|0;var $conv12=$sub&65535;var $17=$en_exp_addr;HEAP16[$17>>1]=$conv12;return;default:assert(0,"bad label: "+__label__)}}_calc_target_energy["X"]=1;function _cbsearch($x,$h,$T0,$pitch_sharp,$gain_pit,$res2,$code,$y,$anap,$mode,$subNr,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $h_addr;var $T0_addr;var $pitch_sharp_addr;var $gain_pit_addr;var $res2_addr;var $code_addr;var $y_addr;var $anap_addr;var $mode_addr;var $subNr_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $index=__stackBase__;var $i;var $temp;var $pit_sharpTmp;$x_addr=$x;$h_addr=$h;$T0_addr=$T0;$pitch_sharp_addr=$pitch_sharp;$gain_pit_addr=$gain_pit;$res2_addr=$res2;$code_addr=$code;$y_addr=$y;$anap_addr=$anap;$mode_addr=$mode;$subNr_addr=$subNr;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$mode_addr;var $cmp1=($1|0)==1;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $2=$subNr_addr;var $3=$x_addr;var $4=$h_addr;var $5=$T0_addr;var $6=$pitch_sharp_addr;var $7=$code_addr;var $8=$y_addr;var $9=$common_amr_tbls_addr;var $startPos_ptr=$9+76|0;var $10=HEAP32[$startPos_ptr>>2];var $11=$pOverflow_addr;var $call=_code_2i40_9bits($2,$3,$4,$5,$6,$7,$8,$index,$10,$11);var $12=$anap_addr;var $13=HEAP32[$12>>2];var $incdec_ptr=$13+2|0;HEAP32[$12>>2]=$incdec_ptr;HEAP16[$13>>1]=$call;var $14=HEAP16[$index>>1];var $15=$anap_addr;var $16=HEAP32[$15>>2];var $incdec_ptr2=$16+2|0;HEAP32[$15>>2]=$incdec_ptr2;HEAP16[$16>>1]=$14;__label__=33;break;case 3:var $17=$mode_addr;var $cmp3=($17|0)==2;if($cmp3){__label__=4;break}else{__label__=5;break}case 4:var $18=$x_addr;var $19=$h_addr;var $20=$T0_addr;var $21=$pitch_sharp_addr;var $22=$code_addr;var $23=$y_addr;var $24=$pOverflow_addr;var $call5=_code_2i40_11bits($18,$19,$20,$21,$22,$23,$index,$24);var $25=$anap_addr;var $26=HEAP32[$25>>2];var $incdec_ptr6=$26+2|0;HEAP32[$25>>2]=$incdec_ptr6;HEAP16[$26>>1]=$call5;var $27=HEAP16[$index>>1];var $28=$anap_addr;var $29=HEAP32[$28>>2];var $incdec_ptr7=$29+2|0;HEAP32[$28>>2]=$incdec_ptr7;HEAP16[$29>>1]=$27;__label__=32;break;case 5:var $30=$mode_addr;var $cmp9=($30|0)==3;if($cmp9){__label__=6;break}else{__label__=7;break}case 6:var $31=$x_addr;var $32=$h_addr;var $33=$T0_addr;var $34=$pitch_sharp_addr;var $35=$code_addr;var $36=$y_addr;var $37=$pOverflow_addr;var $call11=_code_3i40_14bits($31,$32,$33,$34,$35,$36,$index,$37);var $38=$anap_addr;var $39=HEAP32[$38>>2];var $incdec_ptr12=$39+2|0;HEAP32[$38>>2]=$incdec_ptr12;HEAP16[$39>>1]=$call11;var $40=HEAP16[$index>>1];var $41=$anap_addr;var $42=HEAP32[$41>>2];var $incdec_ptr13=$42+2|0;HEAP32[$41>>2]=$incdec_ptr13;HEAP16[$42>>1]=$40;__label__=31;break;case 7:var $43=$mode_addr;var $cmp15=($43|0)==4;if($cmp15){__label__=9;break}else{__label__=8;break}case 8:var $44=$mode_addr;var $cmp17=($44|0)==5;if($cmp17){__label__=9;break}else{__label__=10;break}case 9:var $45=$x_addr;var $46=$h_addr;var $47=$T0_addr;var $48=$pitch_sharp_addr;var $49=$code_addr;var $50=$y_addr;var $51=$common_amr_tbls_addr;var $gray_ptr=$51+36|0;var $52=HEAP32[$gray_ptr>>2];var $53=$pOverflow_addr;var $call19=_code_4i40_17bits($45,$46,$47,$48,$49,$50,$index,$52,$53);var $54=$anap_addr;var $55=HEAP32[$54>>2];var $incdec_ptr20=$55+2|0;HEAP32[$54>>2]=$incdec_ptr20;HEAP16[$55>>1]=$call19;var $56=HEAP16[$index>>1];var $57=$anap_addr;var $58=HEAP32[$57>>2];var $incdec_ptr21=$58+2|0;HEAP32[$57>>2]=$incdec_ptr21;HEAP16[$58>>1]=$56;__label__=30;break;case 10:var $59=$mode_addr;var $cmp23=($59|0)==6;if($cmp23){__label__=11;break}else{__label__=20;break}case 11:var $60=$pitch_sharp_addr;var $61=$pOverflow_addr;var $call25=_shl31($60,1,$61);$pit_sharpTmp=$call25;var $62=$T0_addr;$i=$62;__label__=12;break;case 12:var $63=$i;var $conv=$63<<16>>16;var $cmp26=($conv|0)<40;if($cmp26){__label__=13;break}else{__label__=15;break}case 13:var $64=$i;var $conv28=$64<<16>>16;var $65=$T0_addr;var $conv29=$65<<16>>16;var $sub=$conv28-$conv29|0;var $66=$h_addr;var $arrayidx=$66+($sub<<1)|0;var $67=HEAP16[$arrayidx>>1];var $68=$pit_sharpTmp;var $69=$pOverflow_addr;var $call30=_mult32($67,$68,$69);$temp=$call30;var $70=$i;var $idxprom=$70<<16>>16;var $71=$h_addr;var $arrayidx31=$71+($idxprom<<1)|0;var $72=HEAP16[$arrayidx31>>1];var $73=$temp;var $74=$pOverflow_addr;var $call32=_add_16($72,$73,$74);var $75=$i;var $idxprom33=$75<<16>>16;var $76=$h_addr;var $arrayidx34=$76+($idxprom33<<1)|0;HEAP16[$arrayidx34>>1]=$call32;__label__=14;break;case 14:var $77=$i;var $inc=$77+1&65535;$i=$inc;__label__=12;break;case 15:var $78=$x_addr;var $79=$res2_addr;var $80=$h_addr;var $81=$code_addr;var $82=$y_addr;var $83=$anap_addr;var $84=HEAP32[$83>>2];var $85=$pOverflow_addr;_code_8i40_31bits($78,$79,$80,$81,$82,$84,$85);var $86=$anap_addr;var $87=HEAP32[$86>>2];var $add_ptr=$87+14|0;HEAP32[$86>>2]=$add_ptr;var $88=$T0_addr;$i=$88;__label__=16;break;case 16:var $89=$i;var $conv36=$89<<16>>16;var $cmp37=($conv36|0)<40;if($cmp37){__label__=17;break}else{__label__=19;break}case 17:var $90=$i;var $conv40=$90<<16>>16;var $91=$T0_addr;var $conv41=$91<<16>>16;var $sub42=$conv40-$conv41|0;var $92=$code_addr;var $arrayidx43=$92+($sub42<<1)|0;var $93=HEAP16[$arrayidx43>>1];var $94=$pit_sharpTmp;var $95=$pOverflow_addr;var $call44=_mult32($93,$94,$95);$temp=$call44;var $96=$i;var $idxprom45=$96<<16>>16;var $97=$code_addr;var $arrayidx46=$97+($idxprom45<<1)|0;var $98=HEAP16[$arrayidx46>>1];var $99=$temp;var $100=$pOverflow_addr;var $call47=_add_16($98,$99,$100);var $101=$i;var $idxprom48=$101<<16>>16;var $102=$code_addr;var $arrayidx49=$102+($idxprom48<<1)|0;HEAP16[$arrayidx49>>1]=$call47;__label__=18;break;case 18:var $103=$i;var $inc51=$103+1&65535;$i=$inc51;__label__=16;break;case 19:__label__=29;break;case 20:var $104=$gain_pit_addr;var $105=$pOverflow_addr;var $call54=_shl31($104,1,$105);$pit_sharpTmp=$call54;var $106=$T0_addr;$i=$106;__label__=21;break;case 21:var $107=$i;var $conv56=$107<<16>>16;var $cmp57=($conv56|0)<40;if($cmp57){__label__=22;break}else{__label__=24;break}case 22:var $108=$i;var $conv60=$108<<16>>16;var $109=$T0_addr;var $conv61=$109<<16>>16;var $sub62=$conv60-$conv61|0;var $110=$h_addr;var $arrayidx63=$110+($sub62<<1)|0;var $111=HEAP16[$arrayidx63>>1];var $conv64=$111<<16>>16;var $112=$pit_sharpTmp;var $conv65=$112<<16>>16;var $mul=$conv64*$conv65|0;var $shr=$mul>>15;var $conv66=$shr&65535;$temp=$conv66;var $113=$i;var $idxprom67=$113<<16>>16;var $114=$h_addr;var $arrayidx68=$114+($idxprom67<<1)|0;var $115=HEAP16[$arrayidx68>>1];var $116=$temp;var $117=$pOverflow_addr;var $call69=_add_16($115,$116,$117);var $118=$i;var $idxprom70=$118<<16>>16;var $119=$h_addr;var $arrayidx71=$119+($idxprom70<<1)|0;HEAP16[$arrayidx71>>1]=$call69;__label__=23;break;case 23:var $120=$i;var $inc73=$120+1&65535;$i=$inc73;__label__=21;break;case 24:var $121=$x_addr;var $122=$res2_addr;var $123=$h_addr;var $124=$code_addr;var $125=$y_addr;var $126=$anap_addr;var $127=HEAP32[$126>>2];var $128=$common_amr_tbls_addr;var $gray_ptr75=$128+36|0;var $129=HEAP32[$gray_ptr75>>2];var $130=$pOverflow_addr;_code_10i40_35bits($121,$122,$123,$124,$125,$127,$129,$130);var $131=$anap_addr;var $132=HEAP32[$131>>2];var $add_ptr76=$132+20|0;HEAP32[$131>>2]=$add_ptr76;var $133=$T0_addr;$i=$133;__label__=25;break;case 25:var $134=$i;var $conv78=$134<<16>>16;var $cmp79=($conv78|0)<40;if($cmp79){__label__=26;break}else{__label__=28;break}case 26:var $135=$i;var $conv82=$135<<16>>16;var $136=$T0_addr;var $conv83=$136<<16>>16;var $sub84=$conv82-$conv83|0;var $137=$code_addr;var $arrayidx85=$137+($sub84<<1)|0;var $138=HEAP16[$arrayidx85>>1];var $139=$pit_sharpTmp;var $140=$pOverflow_addr;var $call86=_mult32($138,$139,$140);$temp=$call86;var $141=$i;var $idxprom87=$141<<16>>16;var $142=$code_addr;var $arrayidx88=$142+($idxprom87<<1)|0;var $143=HEAP16[$arrayidx88>>1];var $144=$temp;var $145=$pOverflow_addr;var $call89=_add_16($143,$144,$145);var $146=$i;var $idxprom90=$146<<16>>16;var $147=$code_addr;var $arrayidx91=$147+($idxprom90<<1)|0;HEAP16[$arrayidx91>>1]=$call89;__label__=27;break;case 27:var $148=$i;var $inc93=$148+1&65535;$i=$inc93;__label__=25;break;case 28:__label__=29;break;case 29:__label__=30;break;case 30:__label__=31;break;case 31:__label__=32;break;case 32:__label__=33;break;case 33:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_cbsearch["X"]=1;function _Cb_gain_average_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $cbGainHistory=$1|0;var $arraydecay=$cbGainHistory|0;var $2=$arraydecay;for(var $$dest=$2,$$stop=$$dest+14;$$dest<$$stop;$$dest++){HEAP8[$$dest]=0};var $3=$state_addr;var $hangVar=$3+14|0;HEAP16[$hangVar>>1]=0;var $4=$state_addr;var $hangCount=$4+16|0;HEAP16[$hangCount>>1]=0;$retval=0;__label__=3;break;case 3:var $5=$retval;return $5;default:assert(0,"bad label: "+__label__)}}function _abs_s33($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _shl34($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl34["X"]=1;function _negate35($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mult36($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_mac37($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac37["X"]=1;function _L_shl39($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_sub40($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _Cb_gain_average($st,$mode,$gain_code,$lsp,$lspAver,$bfi,$prev_bf,$pdfi,$prev_pdf,$inBackgroundNoise,$voicedHangover,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $gain_code_addr;var $lsp_addr;var $lspAver_addr;var $bfi_addr;var $prev_bf_addr;var $pdfi_addr;var $prev_pdf_addr;var $inBackgroundNoise_addr;var $voicedHangover_addr;var $pOverflow_addr;var $i;var $cbGainMix;var $diff;var $tmp_diff;var $bgMix;var $cbGainMean;var $L_sum;var $tmp=__stackBase__;var $tmp1;var $tmp2;var $shift1;var $shift2;var $shift;$st_addr=$st;$mode_addr=$mode;$gain_code_addr=$gain_code;$lsp_addr=$lsp;$lspAver_addr=$lspAver;$bfi_addr=$bfi;$prev_bf_addr=$prev_bf;$pdfi_addr=$pdfi;$prev_pdf_addr=$prev_pdf;$inBackgroundNoise_addr=$inBackgroundNoise;$voicedHangover_addr=$voicedHangover;$pOverflow_addr=$pOverflow;var $0=$gain_code_addr;$cbGainMix=$0;$i=0;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)<6;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $conv7=$2<<16>>16;var $add=$conv7+1|0;var $3=$st_addr;var $cbGainHistory=$3|0;var $arrayidx=$cbGainHistory+($add<<1)|0;var $4=HEAP16[$arrayidx>>1];var $5=$i;var $idxprom=$5<<16>>16;var $6=$st_addr;var $cbGainHistory8=$6|0;var $arrayidx9=$cbGainHistory8+($idxprom<<1)|0;HEAP16[$arrayidx9>>1]=$4;__label__=3;break;case 3:var $7=$i;var $inc=$7+1&65535;$i=$inc;__label__=1;break;case 4:var $8=$gain_code_addr;var $9=$st_addr;var $cbGainHistory10=$9|0;var $arrayidx11=$cbGainHistory10+12|0;HEAP16[$arrayidx11>>1]=$8;$diff=0;$i=0;__label__=5;break;case 5:var $10=$i;var $conv13=$10<<16>>16;var $cmp14=($conv13|0)<10;if($cmp14){__label__=6;break}else{__label__=11;break}case 6:var $11=$lspAver_addr;var $12=$i;var $conv17=$12<<16>>16;var $add_ptr=$11+($conv17<<1)|0;var $13=HEAP16[$add_ptr>>1];var $14=$lsp_addr;var $15=$i;var $conv18=$15<<16>>16;var $add_ptr19=$14+($conv18<<1)|0;var $16=HEAP16[$add_ptr19>>1];var $17=$pOverflow_addr;var $call=_sub($13,$16,$17);var $call20=_abs_s33($call);$tmp1=$call20;var $18=$tmp1;var $call21=_norm_s($18);var $conv22=$call21<<16>>16;var $sub=$conv22-1|0;var $conv23=$sub&65535;$shift1=$conv23;var $19=$tmp1;var $20=$shift1;var $21=$pOverflow_addr;var $call24=_shl34($19,$20,$21);$tmp1=$call24;var $22=$lspAver_addr;var $23=$i;var $conv25=$23<<16>>16;var $add_ptr26=$22+($conv25<<1)|0;var $24=HEAP16[$add_ptr26>>1];var $call27=_norm_s($24);$shift2=$call27;var $25=$lspAver_addr;var $26=$i;var $conv28=$26<<16>>16;var $add_ptr29=$25+($conv28<<1)|0;var $27=HEAP16[$add_ptr29>>1];var $28=$shift2;var $29=$pOverflow_addr;var $call30=_shl34($27,$28,$29);$tmp2=$call30;var $30=$tmp1;var $31=$tmp2;var $call31=_div_s($30,$31);var $32=$i;var $idxprom32=$32<<16>>16;var $arrayidx33=$tmp+($idxprom32<<1)|0;HEAP16[$arrayidx33>>1]=$call31;var $33=$shift1;var $conv34=$33<<16>>16;var $add35=$conv34+2|0;var $34=$shift2;var $conv36=$34<<16>>16;var $sub37=$add35-$conv36|0;var $conv38=$sub37&65535;$shift=$conv38;var $35=$shift;var $conv39=$35<<16>>16;var $cmp40=($conv39|0)>=0;if($cmp40){__label__=7;break}else{__label__=8;break}case 7:var $arraydecay=$tmp|0;var $36=$i;var $conv42=$36<<16>>16;var $add_ptr43=$arraydecay+($conv42<<1)|0;var $37=HEAP16[$add_ptr43>>1];var $38=$shift;var $39=$pOverflow_addr;var $call44=_shr($37,$38,$39);var $arraydecay45=$tmp|0;var $40=$i;var $conv46=$40<<16>>16;var $add_ptr47=$arraydecay45+($conv46<<1)|0;HEAP16[$add_ptr47>>1]=$call44;__label__=9;break;case 8:var $arraydecay48=$tmp|0;var $41=$i;var $conv49=$41<<16>>16;var $add_ptr50=$arraydecay48+($conv49<<1)|0;var $42=HEAP16[$add_ptr50>>1];var $43=$shift;var $call51=_negate35($43);var $44=$pOverflow_addr;var $call52=_shl34($42,$call51,$44);var $arraydecay53=$tmp|0;var $45=$i;var $conv54=$45<<16>>16;var $add_ptr55=$arraydecay53+($conv54<<1)|0;HEAP16[$add_ptr55>>1]=$call52;__label__=9;break;case 9:var $46=$diff;var $arraydecay56=$tmp|0;var $47=$i;var $conv57=$47<<16>>16;var $add_ptr58=$arraydecay56+($conv57<<1)|0;var $48=HEAP16[$add_ptr58>>1];var $49=$pOverflow_addr;var $call59=_add_16($46,$48,$49);$diff=$call59;__label__=10;break;case 10:var $50=$i;var $inc61=$50+1&65535;$i=$inc61;__label__=5;break;case 11:var $51=$diff;var $conv63=$51<<16>>16;var $cmp64=($conv63|0)>5325;if($cmp64){__label__=12;break}else{__label__=13;break}case 12:var $52=$st_addr;var $hangVar=$52+14|0;var $53=HEAP16[$hangVar>>1];var $conv67=$53<<16>>16;var $add68=$conv67+1|0;var $conv69=$add68&65535;HEAP16[$hangVar>>1]=$conv69;__label__=14;break;case 13:var $54=$st_addr;var $hangVar71=$54+14|0;HEAP16[$hangVar71>>1]=0;__label__=14;break;case 14:var $55=$st_addr;var $hangVar73=$55+14|0;var $56=HEAP16[$hangVar73>>1];var $conv74=$56<<16>>16;var $cmp75=($conv74|0)>10;if($cmp75){__label__=15;break}else{__label__=16;break}case 15:var $57=$st_addr;var $hangCount=$57+16|0;HEAP16[$hangCount>>1]=0;__label__=16;break;case 16:$bgMix=8192;var $58=$mode_addr;var $cmp79=$58>>>0<=3;if($cmp79){__label__=18;break}else{__label__=17;break}case 17:var $59=$mode_addr;var $cmp81=($59|0)==6;if($cmp81){__label__=18;break}else{__label__=54;break}case 18:var $60=$pdfi_addr;var $conv84=$60<<16>>16;var $cmp85=($conv84|0)!=0;if($cmp85){__label__=19;break}else{__label__=20;break}case 19:var $61=$prev_pdf_addr;var $conv87=$61<<16>>16;var $cmp88=($conv87|0)!=0;if($cmp88){__label__=22;break}else{__label__=20;break}case 20:var $62=$bfi_addr;var $conv91=$62<<16>>16;var $cmp92=($conv91|0)!=0;if($cmp92){__label__=22;break}else{__label__=21;break}case 21:var $63=$prev_bf_addr;var $conv95=$63<<16>>16;var $cmp96=($conv95|0)!=0;if($cmp96){__label__=22;break}else{__label__=28;break}case 22:var $64=$voicedHangover_addr;var $conv99=$64<<16>>16;var $cmp100=($conv99|0)>1;if($cmp100){__label__=23;break}else{__label__=28;break}case 23:var $65=$inBackgroundNoise_addr;var $conv103=$65<<16>>16;var $cmp104=($conv103|0)!=0;if($cmp104){__label__=24;break}else{__label__=28;break}case 24:var $66=$mode_addr;var $cmp107=($66|0)==0;if($cmp107){__label__=27;break}else{__label__=25;break}case 25:var $67=$mode_addr;var $cmp110=($67|0)==1;if($cmp110){__label__=27;break}else{__label__=26;break}case 26:var $68=$mode_addr;var $cmp113=($68|0)==2;if($cmp113){__label__=27;break}else{__label__=28;break}case 27:var $69=$diff;var $conv116=$69<<16>>16;var $sub117=$conv116-4506|0;var $conv118=$sub117&65535;$tmp_diff=$conv118;__label__=29;break;case 28:var $70=$diff;var $conv120=$70<<16>>16;var $sub121=$conv120-3277|0;var $conv122=$sub121&65535;$tmp_diff=$conv122;__label__=29;break;case 29:var $71=$tmp_diff;var $conv124=$71<<16>>16;var $cmp125=($conv124|0)>0;if($cmp125){__label__=30;break}else{__label__=31;break}case 30:var $72=$tmp_diff;$tmp1=$72;__label__=32;break;case 31:$tmp1=0;__label__=32;break;case 32:var $73=$tmp1;var $conv130=$73<<16>>16;var $cmp131=2048<($conv130|0);if($cmp131){__label__=33;break}else{__label__=34;break}case 33:$bgMix=8192;__label__=35;break;case 34:var $74=$tmp1;var $75=$pOverflow_addr;var $call135=_shl34($74,2,$75);$bgMix=$call135;__label__=35;break;case 35:var $76=$st_addr;var $hangCount137=$76+16|0;var $77=HEAP16[$hangCount137>>1];var $conv138=$77<<16>>16;var $cmp139=($conv138|0)<40;if($cmp139){__label__=37;break}else{__label__=36;break}case 36:var $78=$diff;var $conv142=$78<<16>>16;var $cmp143=($conv142|0)>5325;if($cmp143){__label__=37;break}else{__label__=38;break}case 37:$bgMix=8192;__label__=38;break;case 38:var $79=$st_addr;var $cbGainHistory147=$79|0;var $arrayidx148=$cbGainHistory147+4|0;var $80=HEAP16[$arrayidx148>>1];var $81=$pOverflow_addr;var $call149=_L_mult36(6554,$80,$81);$L_sum=$call149;$i=3;__label__=39;break;case 39:var $82=$i;var $conv151=$82<<16>>16;var $cmp152=($conv151|0)<7;if($cmp152){__label__=40;break}else{__label__=42;break}case 40:var $83=$L_sum;var $84=$i;var $idxprom155=$84<<16>>16;var $85=$st_addr;var $cbGainHistory156=$85|0;var $arrayidx157=$cbGainHistory156+($idxprom155<<1)|0;var $86=HEAP16[$arrayidx157>>1];var $87=$pOverflow_addr;var $call158=_L_mac37($83,6554,$86,$87);$L_sum=$call158;__label__=41;break;case 41:var $88=$i;var $inc160=$88+1&65535;$i=$inc160;__label__=39;break;case 42:var $89=$L_sum;var $90=$pOverflow_addr;var $call162=_pv_round($89,$90);$cbGainMean=$call162;var $91=$bfi_addr;var $conv163=$91<<16>>16;var $cmp164=($conv163|0)!=0;if($cmp164){__label__=44;break}else{__label__=43;break}case 43:var $92=$prev_bf_addr;var $conv167=$92<<16>>16;var $cmp168=($conv167|0)!=0;if($cmp168){__label__=44;break}else{__label__=53;break}case 44:var $93=$inBackgroundNoise_addr;var $conv171=$93<<16>>16;var $cmp172=($conv171|0)!=0;if($cmp172){__label__=45;break}else{__label__=53;break}case 45:var $94=$mode_addr;var $cmp175=($94|0)==0;if($cmp175){__label__=48;break}else{__label__=46;break}case 46:var $95=$mode_addr;var $cmp178=($95|0)==1;if($cmp178){__label__=48;break}else{__label__=47;break}case 47:var $96=$mode_addr;var $cmp181=($96|0)==2;if($cmp181){__label__=48;break}else{__label__=53;break}case 48:var $97=$st_addr;var $cbGainHistory184=$97|0;var $arrayidx185=$cbGainHistory184|0;var $98=HEAP16[$arrayidx185>>1];var $99=$pOverflow_addr;var $call186=_L_mult36(4681,$98,$99);$L_sum=$call186;$i=1;__label__=49;break;case 49:var $100=$i;var $conv188=$100<<16>>16;var $cmp189=($conv188|0)<7;if($cmp189){__label__=50;break}else{__label__=52;break}case 50:var $101=$L_sum;var $102=$i;var $idxprom192=$102<<16>>16;var $103=$st_addr;var $cbGainHistory193=$103|0;var $arrayidx194=$cbGainHistory193+($idxprom192<<1)|0;var $104=HEAP16[$arrayidx194>>1];var $105=$pOverflow_addr;var $call195=_L_mac37($101,4681,$104,$105);$L_sum=$call195;__label__=51;break;case 51:var $106=$i;var $inc197=$106+1&65535;$i=$inc197;__label__=49;break;case 52:var $107=$L_sum;var $108=$pOverflow_addr;var $call199=_pv_round($107,$108);$cbGainMean=$call199;__label__=53;break;case 53:var $109=$bgMix;var $110=$cbGainMix;var $111=$pOverflow_addr;var $call201=_L_mult36($109,$110,$111);$L_sum=$call201;var $112=$L_sum;var $113=$cbGainMean;var $114=$pOverflow_addr;var $call202=_L_mac37($112,8192,$113,$114);$L_sum=$call202;var $115=$L_sum;var $116=$bgMix;var $117=$cbGainMean;var $118=$pOverflow_addr;var $call203=_L_msu38($115,$116,$117,$118);$L_sum=$call203;var $119=$L_sum;var $120=$pOverflow_addr;var $call204=_L_shl39($119,2,$120);var $121=$pOverflow_addr;var $call205=_pv_round($call204,$121);$cbGainMix=$call205;__label__=54;break;case 54:var $122=$st_addr;var $hangCount207=$122+16|0;var $123=HEAP16[$hangCount207>>1];var $conv208=$123<<16>>16;var $add209=$conv208+1|0;var $conv210=$add209&65535;HEAP16[$hangCount207>>1]=$conv210;var $124=$cbGainMix;STACKTOP=__stackBase__;return $124;default:assert(0,"bad label: "+__label__)}}_Cb_gain_average["X"]=1;function _L_msu38($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult36($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub40($3,$4,$5);$result=$call1;var $6=$result;return $6}function _cl_ltp_init($state){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s=__stackBase__;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(4);var $2=$call;HEAP32[$s>>2]=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=7;break;case 4:var $3=HEAP32[$s>>2];var $pitchSt=$3|0;var $call4=_Pitch_fr_init($pitchSt);var $tobool=$call4<<16>>16!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:_cl_ltp_exit($s);$retval=-1;__label__=7;break;case 6:var $4=HEAP32[$s>>2];var $call7=_cl_ltp_reset($4);var $5=HEAP32[$s>>2];var $6=$state_addr;HEAP32[$6>>2]=$5;$retval=0;__label__=7;break;case 7:var $7=$retval;STACKTOP=__stackBase__;return $7;default:assert(0,"bad label: "+__label__)}}function _cl_ltp_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $pitchSt=$4|0;_Pitch_fr_exit($pitchSt);var $5=$state_addr;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$state_addr;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _cl_ltp_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $pitchSt=$1|0;var $2=HEAP32[$pitchSt>>2];var $call=_Pitch_fr_reset($2);$retval=0;__label__=3;break;case 3:var $3=$retval;return $3;default:assert(0,"bad label: "+__label__)}}function _cl_ltp($clSt,$tonSt,$mode,$frameOffset,$T_op,$h1,$exc,$res2,$xn,$lsp_flag,$xn2,$yl,$T0,$T0_frac,$gain_pit,$g_coeff,$anap,$gp_limit,$qua_gain_pitch_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $clSt_addr;var $tonSt_addr;var $mode_addr;var $frameOffset_addr;var $T_op_addr;var $h1_addr;var $exc_addr;var $res2_addr;var $xn_addr;var $lsp_flag_addr;var $xn2_addr;var $yl_addr;var $T0_addr;var $T0_frac_addr;var $gain_pit_addr;var $g_coeff_addr;var $anap_addr;var $gp_limit_addr;var $qua_gain_pitch_ptr_addr;var $pOverflow_addr;var $i;var $index=__stackBase__;var $L_temp;var $resu3=__stackBase__+4;var $gpc_flag;var $temp;var $p_exc;var $p_xn;var $p_xn2;var $p_yl;$clSt_addr=$clSt;$tonSt_addr=$tonSt;$mode_addr=$mode;$frameOffset_addr=$frameOffset;$T_op_addr=$T_op;$h1_addr=$h1;$exc_addr=$exc;$res2_addr=$res2;$xn_addr=$xn;$lsp_flag_addr=$lsp_flag;$xn2_addr=$xn2;$yl_addr=$yl;$T0_addr=$T0;$T0_frac_addr=$T0_frac;$gain_pit_addr=$gain_pit;$g_coeff_addr=$g_coeff;$anap_addr=$anap;$gp_limit_addr=$gp_limit;$qua_gain_pitch_ptr_addr=$qua_gain_pitch_ptr;$pOverflow_addr=$pOverflow;var $0=$clSt_addr;var $pitchSt=$0|0;var $1=HEAP32[$pitchSt>>2];var $2=$mode_addr;var $3=$T_op_addr;var $4=$exc_addr;var $5=$xn_addr;var $6=$h1_addr;var $7=$frameOffset_addr;var $8=$T0_frac_addr;var $9=$pOverflow_addr;var $call=_Pitch_fr($1,$2,$3,$4,$5,$6,40,$7,$8,$resu3,$index,$9);var $10=$T0_addr;HEAP16[$10>>1]=$call;var $11=HEAP16[$index>>1];var $12=$anap_addr;var $13=HEAP32[$12>>2];var $incdec_ptr=$13+2|0;HEAP32[$12>>2]=$incdec_ptr;HEAP16[$13>>1]=$11;var $14=$exc_addr;var $15=$T0_addr;var $16=HEAP16[$15>>1];var $17=$T0_frac_addr;var $18=HEAP16[$17>>1];var $19=HEAP16[$resu3>>1];var $20=$pOverflow_addr;_Pred_lt_3or6($14,$16,$18,40,$19,$20);var $21=$exc_addr;var $22=$h1_addr;var $23=$yl_addr;_Convolve($21,$22,$23,40);var $24=$mode_addr;var $25=$xn_addr;var $26=$yl_addr;var $27=$g_coeff_addr;var $28=$pOverflow_addr;var $call1=_G_pitch($24,$25,$26,$27,40,$28);var $29=$gain_pit_addr;HEAP16[$29>>1]=$call1;$gpc_flag=0;var $30=$gp_limit_addr;HEAP16[$30>>1]=32767;var $31=$lsp_flag_addr;var $conv=$31<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=3;break}case 1:var $32=$gain_pit_addr;var $33=HEAP16[$32>>1];var $conv3=$33<<16>>16;var $cmp4=($conv3|0)>15565;if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $34=$tonSt_addr;var $35=$gain_pit_addr;var $36=HEAP16[$35>>1];var $37=$pOverflow_addr;var $call6=_check_gp_clipping($34,$36,$37);$gpc_flag=$call6;__label__=3;break;case 3:var $38=$mode_addr;var $cmp7=($38|0)==0;if($cmp7){__label__=5;break}else{__label__=4;break}case 4:var $39=$mode_addr;var $cmp9=($39|0)==1;if($cmp9){__label__=5;break}else{__label__=11;break}case 5:var $40=$gain_pit_addr;var $41=HEAP16[$40>>1];var $conv12=$41<<16>>16;var $cmp13=($conv12|0)>13926;if($cmp13){__label__=6;break}else{__label__=7;break}case 6:var $cond=13926;__label__=8;break;case 7:var $42=$gain_pit_addr;var $43=HEAP16[$42>>1];var $conv15=$43<<16>>16;var $cond=$conv15;__label__=8;break;case 8:var $cond;var $conv16=$cond&65535;var $44=$gain_pit_addr;HEAP16[$44>>1]=$conv16;var $45=$gpc_flag;var $conv17=$45<<16>>16;var $cmp18=($conv17|0)!=0;if($cmp18){__label__=9;break}else{__label__=10;break}case 9:var $46=$gp_limit_addr;HEAP16[$46>>1]=15565;__label__=10;break;case 10:__label__=16;break;case 11:var $47=$gpc_flag;var $conv22=$47<<16>>16;var $cmp23=($conv22|0)!=0;if($cmp23){__label__=12;break}else{__label__=13;break}case 12:var $48=$gp_limit_addr;HEAP16[$48>>1]=15565;var $49=$gain_pit_addr;HEAP16[$49>>1]=15565;__label__=13;break;case 13:var $50=$mode_addr;var $cmp27=($50|0)==7;if($cmp27){__label__=14;break}else{__label__=15;break}case 14:var $51=$gp_limit_addr;var $52=HEAP16[$51>>1];var $53=$gain_pit_addr;var $54=$qua_gain_pitch_ptr_addr;var $55=$pOverflow_addr;var $call30=_q_gain_pitch(7,$52,$53,0,0,$54,$55);var $56=$anap_addr;var $57=HEAP32[$56>>2];var $incdec_ptr31=$57+2|0;HEAP32[$56>>2]=$incdec_ptr31;HEAP16[$57>>1]=$call30;__label__=15;break;case 15:__label__=16;break;case 16:var $58=$exc_addr;var $arrayidx=$58|0;$p_exc=$arrayidx;var $59=$xn_addr;var $arrayidx34=$59|0;$p_xn=$arrayidx34;var $60=$xn2_addr;var $arrayidx35=$60|0;$p_xn2=$arrayidx35;var $61=$yl_addr;var $arrayidx36=$61|0;$p_yl=$arrayidx36;var $62=$gain_pit_addr;var $63=HEAP16[$62>>1];$temp=$63;$i=0;__label__=17;break;case 17:var $64=$i;var $conv37=$64<<16>>16;var $cmp38=($conv37|0)<40;if($cmp38){__label__=18;break}else{__label__=20;break}case 18:var $65=$p_yl;var $incdec_ptr40=$65+2|0;$p_yl=$incdec_ptr40;var $66=HEAP16[$65>>1];var $conv41=$66<<16>>16;var $67=$temp;var $conv42=$67<<16>>16;var $mul=$conv41*$conv42|0;var $shr=$mul>>14;$L_temp=$shr;var $68=$p_xn;var $incdec_ptr43=$68+2|0;$p_xn=$incdec_ptr43;var $69=HEAP16[$68>>1];var $conv44=$69<<16>>16;var $70=$L_temp;var $conv45=$70&65535;var $conv46=$conv45<<16>>16;var $sub=$conv44-$conv46|0;var $conv47=$sub&65535;var $71=$p_xn2;var $incdec_ptr48=$71+2|0;$p_xn2=$incdec_ptr48;HEAP16[$71>>1]=$conv47;var $72=$p_exc;var $incdec_ptr49=$72+2|0;$p_exc=$incdec_ptr49;var $73=HEAP16[$72>>1];var $conv50=$73<<16>>16;var $74=$temp;var $conv51=$74<<16>>16;var $mul52=$conv50*$conv51|0;var $shr53=$mul52>>14;$L_temp=$shr53;var $75=$L_temp;var $conv54=$75&65535;var $conv55=$conv54<<16>>16;var $76=$i;var $idxprom=$76<<16>>16;var $77=$res2_addr;var $arrayidx56=$77+($idxprom<<1)|0;var $78=HEAP16[$arrayidx56>>1];var $conv57=$78<<16>>16;var $sub58=$conv57-$conv55|0;var $conv59=$sub58&65535;HEAP16[$arrayidx56>>1]=$conv59;__label__=19;break;case 19:var $79=$i;var $inc=$79+1&65535;$i=$inc;__label__=17;break;case 20:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_cl_ltp["X"]=1;function _cod_amr_init($state,$dtx){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $dtx_addr;var $s=__stackBase__;$state_addr=$state;$dtx_addr=$dtx;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=14;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(2532);var $2=$call;HEAP32[$s>>2]=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=14;break;case 4:var $3=HEAP32[$s>>2];var $common_amr_tbls=$3+2392|0;_get_const_tbls($common_amr_tbls);var $4=HEAP32[$s>>2];var $lpcSt=$4+2188|0;HEAP32[$lpcSt>>2]=0;var $5=HEAP32[$s>>2];var $lspSt=$5+2192|0;HEAP32[$lspSt>>2]=0;var $6=HEAP32[$s>>2];var $clLtpSt=$6+2196|0;HEAP32[$clLtpSt>>2]=0;var $7=HEAP32[$s>>2];var $gainQuantSt=$7+2200|0;HEAP32[$gainQuantSt>>2]=0;var $8=HEAP32[$s>>2];var $pitchOLWghtSt=$8+2204|0;HEAP32[$pitchOLWghtSt>>2]=0;var $9=HEAP32[$s>>2];var $tonStabSt=$9+2208|0;HEAP32[$tonStabSt>>2]=0;var $10=HEAP32[$s>>2];var $vadSt=$10+2212|0;HEAP32[$vadSt>>2]=0;var $11=HEAP32[$s>>2];var $dtx_encSt=$11+2220|0;HEAP32[$dtx_encSt>>2]=0;var $12=$dtx_addr;var $13=HEAP32[$s>>2];var $dtx4=$13+2216|0;HEAP32[$dtx4>>2]=$12;var $14=HEAP32[$s>>2];var $overflow=$14+2528|0;HEAP32[$overflow>>2]=0;var $15=HEAP32[$s>>2];var $clLtpSt5=$15+2196|0;var $call6=_cl_ltp_init($clLtpSt5);var $conv=$call6<<16>>16;var $tobool=($conv|0)!=0;if($tobool){__label__=12;break}else{__label__=5;break}case 5:var $16=HEAP32[$s>>2];var $lspSt7=$16+2192|0;var $call8=_lsp_init($lspSt7);var $conv9=$call8<<16>>16;var $tobool10=($conv9|0)!=0;if($tobool10){__label__=12;break}else{__label__=6;break}case 6:var $17=HEAP32[$s>>2];var $gainQuantSt12=$17+2200|0;var $call13=_gainQuant_init($gainQuantSt12);var $conv14=$call13<<16>>16;var $tobool15=($conv14|0)!=0;if($tobool15){__label__=12;break}else{__label__=7;break}case 7:var $18=HEAP32[$s>>2];var $pitchOLWghtSt17=$18+2204|0;var $call18=_p_ol_wgh_init($pitchOLWghtSt17);var $conv19=$call18<<16>>16;var $tobool20=($conv19|0)!=0;if($tobool20){__label__=12;break}else{__label__=8;break}case 8:var $19=HEAP32[$s>>2];var $tonStabSt22=$19+2208|0;var $call23=_ton_stab_init($tonStabSt22);var $conv24=$call23<<16>>16;var $tobool25=($conv24|0)!=0;if($tobool25){__label__=12;break}else{__label__=9;break}case 9:var $20=HEAP32[$s>>2];var $vadSt27=$20+2212|0;var $call28=_vad1_init($vadSt27);var $conv29=$call28<<16>>16;var $tobool30=($conv29|0)!=0;if($tobool30){__label__=12;break}else{__label__=10;break}case 10:var $21=HEAP32[$s>>2];var $dtx_encSt32=$21+2220|0;var $22=HEAP32[$s>>2];var $common_amr_tbls33=$22+2392|0;var $lsp_init_data_ptr=$common_amr_tbls33+40|0;var $23=HEAP32[$lsp_init_data_ptr>>2];var $call34=_dtx_enc_init($dtx_encSt32,$23);var $conv35=$call34<<16>>16;var $tobool36=($conv35|0)!=0;if($tobool36){__label__=12;break}else{__label__=11;break}case 11:var $24=HEAP32[$s>>2];var $lpcSt38=$24+2188|0;var $call39=_lpc_init($lpcSt38);var $conv40=$call39<<16>>16;var $tobool41=($conv40|0)!=0;if($tobool41){__label__=12;break}else{__label__=13;break}case 12:_cod_amr_exit($s);$retval=-1;__label__=14;break;case 13:var $25=HEAP32[$s>>2];var $call44=_cod_amr_reset($25);var $26=HEAP32[$s>>2];var $27=$state_addr;HEAP32[$27>>2]=$26;$retval=0;__label__=14;break;case 14:var $28=$retval;STACKTOP=__stackBase__;return $28;default:assert(0,"bad label: "+__label__)}}_cod_amr_init["X"]=1;function _cod_amr_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $lpcSt=$4+2188|0;_lpc_exit($lpcSt);var $5=$state_addr;var $6=HEAP32[$5>>2];var $lspSt=$6+2192|0;_lsp_exit($lspSt);var $7=$state_addr;var $8=HEAP32[$7>>2];var $gainQuantSt=$8+2200|0;_gainQuant_exit($gainQuantSt);var $9=$state_addr;var $10=HEAP32[$9>>2];var $clLtpSt=$10+2196|0;_cl_ltp_exit($clLtpSt);var $11=$state_addr;var $12=HEAP32[$11>>2];var $pitchOLWghtSt=$12+2204|0;_p_ol_wgh_exit($pitchOLWghtSt);var $13=$state_addr;var $14=HEAP32[$13>>2];var $tonStabSt=$14+2208|0;_ton_stab_exit($tonStabSt);var $15=$state_addr;var $16=HEAP32[$15>>2];var $vadSt=$16+2212|0;_vad1_exit($vadSt);var $17=$state_addr;var $18=HEAP32[$17>>2];var $dtx_encSt=$18+2220|0;_dtx_enc_exit($dtx_encSt);var $19=$state_addr;var $20=HEAP32[$19>>2];var $21=$20;_free($21);var $22=$state_addr;HEAP32[$22>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_cod_amr_exit["X"]=1;function _cod_amr_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $i;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$st_addr;var $old_speech=$1|0;var $arraydecay=$old_speech|0;var $add_ptr=$arraydecay+640|0;var $add_ptr1=$add_ptr-320|0;var $2=$st_addr;var $new_speech=$2+652|0;HEAP32[$new_speech>>2]=$add_ptr1;var $3=$st_addr;var $new_speech2=$3+652|0;var $4=HEAP32[$new_speech2>>2];var $add_ptr3=$4-80|0;var $5=$st_addr;var $speech=$5+640|0;HEAP32[$speech>>2]=$add_ptr3;var $6=$st_addr;var $old_speech4=$6|0;var $arraydecay5=$old_speech4|0;var $add_ptr6=$arraydecay5+640|0;var $add_ptr7=$add_ptr6-480|0;var $7=$st_addr;var $p_window=$7+644|0;HEAP32[$p_window>>2]=$add_ptr7;var $8=$st_addr;var $p_window8=$8+644|0;var $9=HEAP32[$p_window8>>2];var $add_ptr9=$9-80|0;var $10=$st_addr;var $p_window_12k2=$10+648|0;HEAP32[$p_window_12k2>>2]=$add_ptr9;var $11=$st_addr;var $old_wsp=$11+656|0;var $arraydecay10=$old_wsp|0;var $add_ptr11=$arraydecay10+286|0;var $12=$st_addr;var $wsp=$12+1264|0;HEAP32[$wsp>>2]=$add_ptr11;var $13=$st_addr;var $old_exc=$13+1282|0;var $arraydecay12=$old_exc|0;var $add_ptr13=$arraydecay12+286|0;var $add_ptr14=$add_ptr13+22|0;var $14=$st_addr;var $exc=$14+1912|0;HEAP32[$exc>>2]=$add_ptr14;var $15=$st_addr;var $ai_zero=$15+1916|0;var $arraydecay15=$ai_zero|0;var $add_ptr16=$arraydecay15+22|0;var $16=$st_addr;var $zero=$16+2020|0;HEAP32[$zero>>2]=$add_ptr16;var $17=$st_addr;var $mem_err=$17+2284|0;var $arraydecay17=$mem_err|0;var $add_ptr18=$arraydecay17+20|0;var $18=$st_addr;var $error=$18+2384|0;HEAP32[$error>>2]=$add_ptr18;var $19=$st_addr;var $hvec=$19+2028|0;var $arrayidx=$hvec+80|0;var $20=$st_addr;var $h1=$20+2024|0;HEAP32[$h1>>2]=$arrayidx;var $21=$st_addr;var $overflow=$21+2528|0;HEAP32[$overflow>>2]=0;var $22=$st_addr;var $old_speech19=$22|0;var $arraydecay20=$old_speech19|0;var $23=$arraydecay20;_memset($23,0,640,1);var $24=$st_addr;var $old_exc21=$24+1282|0;var $arraydecay22=$old_exc21|0;var $25=$arraydecay22;_memset($25,0,308,1);var $26=$st_addr;var $old_wsp23=$26+656|0;var $arraydecay24=$old_wsp23|0;var $27=$arraydecay24;_memset($27,0,286,1);var $28=$st_addr;var $mem_syn=$28+2224|0;var $arraydecay25=$mem_syn|0;var $29=$arraydecay25;_memset($29,0,20,1);var $30=$st_addr;var $mem_w=$30+2264|0;var $arraydecay26=$mem_w|0;var $31=$arraydecay26;_memset($31,0,20,1);var $32=$st_addr;var $mem_w0=$32+2244|0;var $arraydecay27=$mem_w0|0;var $33=$arraydecay27;_memset($33,0,20,1);var $34=$st_addr;var $mem_err28=$34+2284|0;var $arraydecay29=$mem_err28|0;var $35=$arraydecay29;_memset($35,0,20,1);var $36=$st_addr;var $zero30=$36+2020|0;var $37=HEAP32[$zero30>>2];var $38=$37;_memset($38,0,80,1);var $39=$st_addr;var $hvec31=$39+2028|0;var $arraydecay32=$hvec31|0;var $40=$arraydecay32;_memset($40,0,80,1);$i=0;__label__=3;break;case 3:var $41=$i;var $conv=$41<<16>>16;var $cmp33=($conv|0)<5;if($cmp33){__label__=4;break}else{__label__=6;break}case 4:var $42=$i;var $idxprom=$42<<16>>16;var $43=$st_addr;var $old_lags=$43+1268|0;var $arrayidx35=$old_lags+($idxprom<<1)|0;HEAP16[$arrayidx35>>1]=40;__label__=5;break;case 5:var $44=$i;var $inc=$44+1&65535;$i=$inc;__label__=3;break;case 6:var $45=$st_addr;var $lpcSt=$45+2188|0;var $46=HEAP32[$lpcSt>>2];var $call=_lpc_reset($46);var $47=$st_addr;var $lspSt=$47+2192|0;var $48=HEAP32[$lspSt>>2];var $call36=_lsp_reset($48);var $49=$st_addr;var $clLtpSt=$49+2196|0;var $50=HEAP32[$clLtpSt>>2];var $call37=_cl_ltp_reset($50);var $51=$st_addr;var $gainQuantSt=$51+2200|0;var $52=HEAP32[$gainQuantSt>>2];var $call38=_gainQuant_reset($52);var $53=$st_addr;var $pitchOLWghtSt=$53+2204|0;var $54=HEAP32[$pitchOLWghtSt>>2];var $call39=_p_ol_wgh_reset($54);var $55=$st_addr;var $tonStabSt=$55+2208|0;var $56=HEAP32[$tonStabSt>>2];var $call40=_ton_stab_reset($56);var $57=$st_addr;var $vadSt=$57+2212|0;var $58=HEAP32[$vadSt>>2];var $call41=_vad1_reset($58);var $59=$st_addr;var $dtx_encSt=$59+2220|0;var $60=HEAP32[$dtx_encSt>>2];var $61=$st_addr;var $common_amr_tbls=$61+2392|0;var $lsp_init_data_ptr=$common_amr_tbls+40|0;var $62=HEAP32[$lsp_init_data_ptr>>2];var $call42=_dtx_enc_reset($60,$62);var $63=$st_addr;var $sharp=$63+2388|0;HEAP16[$sharp>>1]=0;$retval=0;__label__=7;break;case 7:var $64=$retval;return $64;default:assert(0,"bad label: "+__label__)}}_cod_amr_reset["X"]=1;function _cod_amr_first($st,$new_speech){var __label__;var $st_addr;var $new_speech_addr;$st_addr=$st;$new_speech_addr=$new_speech;var $0=$st_addr;var $new_speech1=$0+652|0;var $1=HEAP32[$new_speech1>>2];var $arrayidx=$1-80|0;var $2=$arrayidx;var $3=$new_speech_addr;var $4=$3;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($2,$4,80,1);return 0}function _cod_amr($st,$mode,$new_speech,$ana,$usedMode,$synth){var __stackBase__=STACKTOP;STACKTOP+=1188;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $new_speech_addr;var $ana_addr=__stackBase__;var $usedMode_addr;var $synth_addr;var $A_t=__stackBase__+4;var $Aq_t=__stackBase__+92;var $A;var $Aq;var $lsp_new=__stackBase__+180;var $xn=__stackBase__+200;var $xn2=__stackBase__+280;var $code=__stackBase__+360;var $y1=__stackBase__+440;var $y2=__stackBase__+520;var $gCoeff=__stackBase__+600;var $res=__stackBase__+612;var $res2=__stackBase__+692;var $xn_sf0=__stackBase__+772;var $y2_sf0=__stackBase__+852;var $code_sf0=__stackBase__+932;var $h1_sf0=__stackBase__+1012;var $mem_syn_save=__stackBase__+1092;var $mem_w0_save=__stackBase__+1112;var $mem_err_save=__stackBase__+1132;var $sharp_save=__stackBase__+1152;var $evenSubfr;var $T0_sf0;var $T0_frac_sf0;var $i_subfr_sf0;var $gain_pit_sf0=__stackBase__+1156;var $gain_code_sf0=__stackBase__+1160;var $i_subfr;var $subfrNr;var $T_op=__stackBase__+1164;var $T0=__stackBase__+1168;var $T0_frac=__stackBase__+1172;var $gain_pit=__stackBase__+1176;var $gain_code=__stackBase__+1180;var $lsp_flag;var $gp_limit=__stackBase__+1184;var $vad_flag;var $compute_sid_flag;var $pOverflow;$st_addr=$st;$mode_addr=$mode;$new_speech_addr=$new_speech;HEAP32[$ana_addr>>2]=$ana;$usedMode_addr=$usedMode;$synth_addr=$synth;$T0_sf0=0;$T0_frac_sf0=0;$i_subfr_sf0=0;$lsp_flag=0;var $0=$st_addr;var $overflow=$0+2528|0;$pOverflow=$overflow;var $1=$st_addr;var $new_speech1=$1+652|0;var $2=HEAP32[$new_speech1>>2];var $3=$2;var $4=$new_speech_addr;var $5=$4;assert(320%1===0,"memcpy given "+320+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($3,$5,320,1);var $6=$mode_addr;var $7=$usedMode_addr;HEAP32[$7>>2]=$6;var $8=$st_addr;var $dtx=$8+2216|0;var $9=HEAP32[$dtx>>2];var $tobool=($9|0)!=0;if($tobool){__label__=1;break}else{__label__=2;break}case 1:var $10=$st_addr;var $vadSt=$10+2212|0;var $11=HEAP32[$vadSt>>2];var $12=$st_addr;var $new_speech2=$12+652|0;var $13=HEAP32[$new_speech2>>2];var $14=$pOverflow;var $call=_vad1($11,$13,$14);$vad_flag=$call;var $15=$st_addr;var $dtx_encSt=$15+2220|0;var $16=HEAP32[$dtx_encSt>>2];var $17=$vad_flag;var $18=$usedMode_addr;var $19=$pOverflow;var $call3=_tx_dtx_handler($16,$17,$18,$19);$compute_sid_flag=$call3;__label__=3;break;case 2:$compute_sid_flag=0;__label__=3;break;case 3:var $20=$st_addr;var $lpcSt=$20+2188|0;var $21=HEAP32[$lpcSt>>2];var $22=$mode_addr;var $23=$st_addr;var $p_window=$23+644|0;var $24=HEAP32[$p_window>>2];var $25=$st_addr;var $p_window_12k2=$25+648|0;var $26=HEAP32[$p_window_12k2>>2];var $arraydecay=$A_t|0;var $27=$st_addr;var $common_amr_tbls=$27+2392|0;var $28=$pOverflow;_lpc($21,$22,$24,$26,$arraydecay,$common_amr_tbls,$28);var $29=$st_addr;var $lspSt=$29+2192|0;var $30=HEAP32[$lspSt>>2];var $31=$mode_addr;var $32=$usedMode_addr;var $33=HEAP32[$32>>2];var $arraydecay4=$A_t|0;var $arraydecay5=$Aq_t|0;var $arraydecay6=$lsp_new|0;var $34=$pOverflow;_lsp($30,$31,$33,$arraydecay4,$arraydecay5,$arraydecay6,$ana_addr,$34);var $35=$st_addr;var $dtx_encSt7=$35+2220|0;var $36=HEAP32[$dtx_encSt7>>2];var $arraydecay8=$lsp_new|0;var $37=$st_addr;var $new_speech9=$37+652|0;var $38=HEAP32[$new_speech9>>2];var $39=$pOverflow;_dtx_buffer($36,$arraydecay8,$38,$39);var $40=$usedMode_addr;var $41=HEAP32[$40>>2];var $cmp=($41|0)==8;if($cmp){__label__=4;break}else{__label__=5;break}case 4:var $42=$st_addr;var $dtx_encSt11=$42+2220|0;var $43=HEAP32[$dtx_encSt11>>2];var $44=$compute_sid_flag;var $45=$st_addr;var $lspSt12=$45+2192|0;var $46=HEAP32[$lspSt12>>2];var $qSt=$46+40|0;var $47=HEAP32[$qSt>>2];var $48=$st_addr;var $gainQuantSt=$48+2200|0;var $49=HEAP32[$gainQuantSt>>2];var $gc_predSt=$49+32|0;var $50=$pOverflow;_dtx_enc($43,$44,$47,$gc_predSt,$ana_addr,$50);var $51=$st_addr;var $old_exc=$51+1282|0;var $arraydecay13=$old_exc|0;var $52=$arraydecay13;_memset($52,0,308,1);var $53=$st_addr;var $mem_w0=$53+2244|0;var $arraydecay14=$mem_w0|0;var $54=$arraydecay14;_memset($54,0,20,1);var $55=$st_addr;var $mem_err=$55+2284|0;var $arraydecay15=$mem_err|0;var $56=$arraydecay15;_memset($56,0,20,1);var $57=$st_addr;var $zero=$57+2020|0;var $58=HEAP32[$zero>>2];var $59=$58;_memset($59,0,80,1);var $60=$st_addr;var $hvec=$60+2028|0;var $arraydecay16=$hvec|0;var $61=$arraydecay16;_memset($61,0,80,1);var $62=$st_addr;var $lspSt17=$62+2192|0;var $63=HEAP32[$lspSt17>>2];var $call18=_lsp_reset($63);var $64=$st_addr;var $lspSt19=$64+2192|0;var $65=HEAP32[$lspSt19>>2];var $lsp_old=$65|0;var $arraydecay20=$lsp_old|0;var $66=$arraydecay20;var $arraydecay21=$lsp_new|0;var $67=$arraydecay21;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($66,$67,20,1);var $68=$st_addr;var $lspSt22=$68+2192|0;var $69=HEAP32[$lspSt22>>2];var $lsp_old_q=$69+20|0;var $arraydecay23=$lsp_old_q|0;var $70=$arraydecay23;var $arraydecay24=$lsp_new|0;var $71=$arraydecay24;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($70,$71,20,1);var $72=$st_addr;var $clLtpSt=$72+2196|0;var $73=HEAP32[$clLtpSt>>2];var $call25=_cl_ltp_reset($73);var $74=$st_addr;var $sharp=$74+2388|0;HEAP16[$sharp>>1]=0;__label__=6;break;case 5:var $75=$st_addr;var $tonStabSt=$75+2208|0;var $76=HEAP32[$tonStabSt>>2];var $77=$st_addr;var $lspSt27=$77+2192|0;var $78=HEAP32[$lspSt27>>2];var $lsp_old28=$78|0;var $arraydecay29=$lsp_old28|0;var $79=$pOverflow;var $call30=_check_lsp($76,$arraydecay29,$79);$lsp_flag=$call30;__label__=6;break;case 6:$subfrNr=0;$i_subfr=0;__label__=7;break;case 7:var $80=$subfrNr;var $conv=$80<<16>>16;var $cmp32=($conv|0)<2;if($cmp32){__label__=8;break}else{__label__=13;break}case 8:var $81=$mode_addr;var $arraydecay34=$A_t|0;var $82=$i_subfr;var $83=$st_addr;var $speech=$83+640|0;var $84=HEAP32[$speech>>2];var $85=$st_addr;var $mem_w=$85+2264|0;var $arraydecay35=$mem_w|0;var $86=$st_addr;var $wsp=$86+1264|0;var $87=HEAP32[$wsp>>2];var $88=$pOverflow;_pre_big($81,_gamma1|0,_gamma1_12k2|0,_gamma2|0,$arraydecay34,$82,$84,$arraydecay35,$87,$88);var $89=$mode_addr;var $cmp36=($89|0)!=0;if($cmp36){__label__=9;break}else{__label__=11;break}case 9:var $90=$mode_addr;var $cmp38=($90|0)!=1;if($cmp38){__label__=10;break}else{__label__=11;break}case 10:var $91=$st_addr;var $pitchOLWghtSt=$91+2204|0;var $92=HEAP32[$pitchOLWghtSt>>2];var $93=$st_addr;var $vadSt41=$93+2212|0;var $94=HEAP32[$vadSt41>>2];var $95=$mode_addr;var $96=$i_subfr;var $idxprom=$96<<16>>16;var $97=$st_addr;var $wsp42=$97+1264|0;var $98=HEAP32[$wsp42>>2];var $arrayidx=$98+($idxprom<<1)|0;var $99=$subfrNr;var $idxprom43=$99<<16>>16;var $arrayidx44=$T_op+($idxprom43<<1)|0;var $100=$st_addr;var $old_lags=$100+1268|0;var $arraydecay45=$old_lags|0;var $101=$st_addr;var $ol_gain_flg=$101+1278|0;var $arraydecay46=$ol_gain_flg|0;var $102=$subfrNr;var $103=$st_addr;var $dtx47=$103+2216|0;var $104=HEAP32[$dtx47>>2];var $105=$pOverflow;_ol_ltp($92,$94,$95,$arrayidx,$arrayidx44,$arraydecay45,$arraydecay46,$102,$104,$105);__label__=11;break;case 11:__label__=12;break;case 12:var $106=$subfrNr;var $inc=$106+1&65535;$subfrNr=$inc;var $107=$i_subfr;var $conv49=$107<<16>>16;var $add=$conv49+80|0;var $conv50=$add&65535;$i_subfr=$conv50;__label__=7;break;case 13:var $108=$mode_addr;var $cmp51=($108|0)==0;if($cmp51){__label__=15;break}else{__label__=14;break}case 14:var $109=$mode_addr;var $cmp53=($109|0)==1;if($cmp53){__label__=15;break}else{__label__=16;break}case 15:var $110=$st_addr;var $pitchOLWghtSt56=$110+2204|0;var $111=HEAP32[$pitchOLWghtSt56>>2];var $112=$st_addr;var $vadSt57=$112+2212|0;var $113=HEAP32[$vadSt57>>2];var $114=$mode_addr;var $115=$st_addr;var $wsp58=$115+1264|0;var $116=HEAP32[$wsp58>>2];var $arrayidx59=$116|0;var $arrayidx60=$T_op|0;var $117=$st_addr;var $old_lags61=$117+1268|0;var $arraydecay62=$old_lags61|0;var $118=$st_addr;var $ol_gain_flg63=$118+1278|0;var $arraydecay64=$ol_gain_flg63|0;var $119=$st_addr;var $dtx65=$119+2216|0;var $120=HEAP32[$dtx65>>2];var $121=$pOverflow;_ol_ltp($111,$113,$114,$arrayidx59,$arrayidx60,$arraydecay62,$arraydecay64,1,$120,$121);var $arrayidx66=$T_op|0;var $122=HEAP16[$arrayidx66>>1];var $arrayidx67=$T_op+2|0;HEAP16[$arrayidx67>>1]=$122;__label__=16;break;case 16:var $123=$st_addr;var $dtx69=$123+2216|0;var $124=HEAP32[$dtx69>>2];var $tobool70=($124|0)!=0;if($tobool70){__label__=17;break}else{__label__=18;break}case 17:var $125=$st_addr;var $vadSt72=$125+2212|0;var $126=HEAP32[$vadSt72>>2];var $arraydecay73=$T_op|0;var $127=$pOverflow;_vad_pitch_detection($126,$arraydecay73,$127);__label__=18;break;case 18:var $128=$usedMode_addr;var $129=HEAP32[$128>>2];var $cmp75=($129|0)==8;if($cmp75){__label__=19;break}else{__label__=20;break}case 19:__label__=45;break;case 20:var $arraydecay79=$A_t|0;$A=$arraydecay79;var $arraydecay80=$Aq_t|0;$Aq=$arraydecay80;$evenSubfr=0;$subfrNr=-1;$i_subfr=0;__label__=21;break;case 21:var $130=$i_subfr;var $conv82=$130<<16>>16;var $cmp83=($conv82|0)<160;if($cmp83){__label__=22;break}else{__label__=44;break}case 22:var $131=$subfrNr;var $inc86=$131+1&65535;$subfrNr=$inc86;var $132=$evenSubfr;var $conv87=$132<<16>>16;var $sub=1-$conv87|0;var $conv88=$sub&65535;$evenSubfr=$conv88;var $133=$evenSubfr;var $conv89=$133<<16>>16;var $cmp90=($conv89|0)!=0;if($cmp90){__label__=23;break}else{__label__=25;break}case 23:var $134=$usedMode_addr;var $135=HEAP32[$134>>2];var $cmp93=($135|0)==0;if($cmp93){__label__=24;break}else{__label__=25;break}case 24:var $arraydecay96=$mem_syn_save|0;var $136=$arraydecay96;var $137=$st_addr;var $mem_syn=$137+2224|0;var $arraydecay97=$mem_syn|0;var $138=$arraydecay97;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($136,$138,20,1);var $arraydecay98=$mem_w0_save|0;var $139=$arraydecay98;var $140=$st_addr;var $mem_w099=$140+2244|0;var $arraydecay100=$mem_w099|0;var $141=$arraydecay100;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($139,$141,20,1);var $arraydecay101=$mem_err_save|0;var $142=$arraydecay101;var $143=$st_addr;var $mem_err102=$143+2284|0;var $arraydecay103=$mem_err102|0;var $144=$arraydecay103;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($142,$144,20,1);var $145=$st_addr;var $sharp104=$145+2388|0;var $146=HEAP16[$sharp104>>1];HEAP16[$sharp_save>>1]=$146;__label__=25;break;case 25:var $147=$usedMode_addr;var $148=HEAP32[$147>>2];var $cmp106=($148|0)!=0;if($cmp106){__label__=26;break}else{__label__=27;break}case 26:var $149=$usedMode_addr;var $150=HEAP32[$149>>2];var $151=$A;var $152=$Aq;var $153=$i_subfr;var $idxprom109=$153<<16>>16;var $154=$st_addr;var $speech110=$154+640|0;var $155=HEAP32[$speech110>>2];var $arrayidx111=$155+($idxprom109<<1)|0;var $156=$st_addr;var $mem_err112=$156+2284|0;var $arraydecay113=$mem_err112|0;var $157=$st_addr;var $mem_w0114=$157+2244|0;var $arraydecay115=$mem_w0114|0;var $158=$st_addr;var $zero116=$158+2020|0;var $159=HEAP32[$zero116>>2];var $160=$st_addr;var $ai_zero=$160+1916|0;var $arraydecay117=$ai_zero|0;var $161=$i_subfr;var $idxprom118=$161<<16>>16;var $162=$st_addr;var $exc=$162+1912|0;var $163=HEAP32[$exc>>2];var $arrayidx119=$163+($idxprom118<<1)|0;var $164=$st_addr;var $h1=$164+2024|0;var $165=HEAP32[$h1>>2];var $arraydecay120=$xn|0;var $arraydecay121=$res|0;var $166=$st_addr;var $error=$166+2384|0;var $167=HEAP32[$error>>2];_subframePreProc($150,_gamma1|0,_gamma1_12k2|0,_gamma2|0,$151,$152,$arrayidx111,$arraydecay113,$arraydecay115,$159,$arraydecay117,$arrayidx119,$165,$arraydecay120,$arraydecay121,$167);__label__=30;break;case 27:var $168=$usedMode_addr;var $169=HEAP32[$168>>2];var $170=$A;var $171=$Aq;var $172=$i_subfr;var $idxprom123=$172<<16>>16;var $173=$st_addr;var $speech124=$173+640|0;var $174=HEAP32[$speech124>>2];var $arrayidx125=$174+($idxprom123<<1)|0;var $175=$st_addr;var $mem_err126=$175+2284|0;var $arraydecay127=$mem_err126|0;var $arraydecay128=$mem_w0_save|0;var $176=$st_addr;var $zero129=$176+2020|0;var $177=HEAP32[$zero129>>2];var $178=$st_addr;var $ai_zero130=$178+1916|0;var $arraydecay131=$ai_zero130|0;var $179=$i_subfr;var $idxprom132=$179<<16>>16;var $180=$st_addr;var $exc133=$180+1912|0;var $181=HEAP32[$exc133>>2];var $arrayidx134=$181+($idxprom132<<1)|0;var $182=$st_addr;var $h1135=$182+2024|0;var $183=HEAP32[$h1135>>2];var $arraydecay136=$xn|0;var $arraydecay137=$res|0;var $184=$st_addr;var $error138=$184+2384|0;var $185=HEAP32[$error138>>2];_subframePreProc($169,_gamma1|0,_gamma1_12k2|0,_gamma2|0,$170,$171,$arrayidx125,$arraydecay127,$arraydecay128,$177,$arraydecay131,$arrayidx134,$183,$arraydecay136,$arraydecay137,$185);var $186=$evenSubfr;var $conv139=$186<<16>>16;var $cmp140=($conv139|0)!=0;if($cmp140){__label__=28;break}else{__label__=29;break}case 28:var $arraydecay143=$h1_sf0|0;var $187=$arraydecay143;var $188=$st_addr;var $h1144=$188+2024|0;var $189=HEAP32[$h1144>>2];var $190=$189;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($187,$190,80,1);__label__=29;break;case 29:__label__=30;break;case 30:var $arraydecay147=$res2|0;var $191=$arraydecay147;var $arraydecay148=$res|0;var $192=$arraydecay148;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($191,$192,80,1);var $193=$st_addr;var $clLtpSt149=$193+2196|0;var $194=HEAP32[$clLtpSt149>>2];var $195=$st_addr;var $tonStabSt150=$195+2208|0;var $196=HEAP32[$tonStabSt150>>2];var $197=$usedMode_addr;var $198=HEAP32[$197>>2];var $199=$i_subfr;var $arraydecay151=$T_op|0;var $200=$st_addr;var $h1152=$200+2024|0;var $201=HEAP32[$h1152>>2];var $202=$i_subfr;var $idxprom153=$202<<16>>16;var $203=$st_addr;var $exc154=$203+1912|0;var $204=HEAP32[$exc154>>2];var $arrayidx155=$204+($idxprom153<<1)|0;var $arraydecay156=$res2|0;var $arraydecay157=$xn|0;var $205=$lsp_flag;var $arraydecay158=$xn2|0;var $arraydecay159=$y1|0;var $arraydecay160=$gCoeff|0;var $206=$st_addr;var $common_amr_tbls161=$206+2392|0;var $qua_gain_pitch_ptr=$common_amr_tbls161+72|0;var $207=HEAP32[$qua_gain_pitch_ptr>>2];var $208=$pOverflow;_cl_ltp($194,$196,$198,$199,$arraydecay151,$201,$arrayidx155,$arraydecay156,$arraydecay157,$205,$arraydecay158,$arraydecay159,$T0,$T0_frac,$gain_pit,$arraydecay160,$ana_addr,$gp_limit,$207,$208);var $209=$subfrNr;var $conv162=$209<<16>>16;var $cmp163=($conv162|0)==0;if($cmp163){__label__=31;break}else{__label__=33;break}case 31:var $210=$st_addr;var $ol_gain_flg166=$210+1278|0;var $arrayidx167=$ol_gain_flg166|0;var $211=HEAP16[$arrayidx167>>1];var $conv168=$211<<16>>16;var $cmp169=($conv168|0)>0;if($cmp169){__label__=32;break}else{__label__=33;break}case 32:var $212=HEAP16[$T0>>1];var $213=$st_addr;var $old_lags172=$213+1268|0;var $arrayidx173=$old_lags172+2|0;HEAP16[$arrayidx173>>1]=$212;__label__=33;break;case 33:var $214=$subfrNr;var $conv175=$214<<16>>16;var $cmp176=($conv175|0)==3;if($cmp176){__label__=34;break}else{__label__=36;break}case 34:var $215=$st_addr;var $ol_gain_flg179=$215+1278|0;var $arrayidx180=$ol_gain_flg179+2|0;var $216=HEAP16[$arrayidx180>>1];var $conv181=$216<<16>>16;var $cmp182=($conv181|0)>0;if($cmp182){__label__=35;break}else{__label__=36;break}case 35:var $217=HEAP16[$T0>>1];var $218=$st_addr;var $old_lags185=$218+1268|0;var $arrayidx186=$old_lags185|0;HEAP16[$arrayidx186>>1]=$217;__label__=36;break;case 36:var $arraydecay188=$xn2|0;var $219=$st_addr;var $h1189=$219+2024|0;var $220=HEAP32[$h1189>>2];var $221=HEAP16[$T0>>1];var $222=$st_addr;var $sharp190=$222+2388|0;var $223=HEAP16[$sharp190>>1];var $224=HEAP16[$gain_pit>>1];var $arraydecay191=$res2|0;var $arraydecay192=$code|0;var $arraydecay193=$y2|0;var $225=$usedMode_addr;var $226=HEAP32[$225>>2];var $227=$subfrNr;var $228=$st_addr;var $common_amr_tbls194=$228+2392|0;var $229=$pOverflow;_cbsearch($arraydecay188,$220,$221,$223,$224,$arraydecay191,$arraydecay192,$arraydecay193,$ana_addr,$226,$227,$common_amr_tbls194,$229);var $230=$st_addr;var $gainQuantSt195=$230+2200|0;var $231=HEAP32[$gainQuantSt195>>2];var $232=$usedMode_addr;var $233=HEAP32[$232>>2];var $arraydecay196=$res|0;var $234=$i_subfr;var $idxprom197=$234<<16>>16;var $235=$st_addr;var $exc198=$235+1912|0;var $236=HEAP32[$exc198>>2];var $arrayidx199=$236+($idxprom197<<1)|0;var $arraydecay200=$code|0;var $arraydecay201=$xn|0;var $arraydecay202=$xn2|0;var $arraydecay203=$y1|0;var $arraydecay204=$y2|0;var $arraydecay205=$gCoeff|0;var $237=$evenSubfr;var $238=HEAP16[$gp_limit>>1];var $239=$st_addr;var $common_amr_tbls206=$239+2392|0;var $240=$pOverflow;_gainQuant($231,$233,$arraydecay196,$arrayidx199,$arraydecay200,$arraydecay201,$arraydecay202,$arraydecay203,$arraydecay204,$arraydecay205,$237,$238,$gain_pit_sf0,$gain_code_sf0,$gain_pit,$gain_code,$ana_addr,$common_amr_tbls206,$240);var $241=$st_addr;var $tonStabSt207=$241+2208|0;var $242=HEAP32[$tonStabSt207>>2];var $243=HEAP16[$gain_pit>>1];var $244=$pOverflow;_update_gp_clipping($242,$243,$244);var $245=$usedMode_addr;var $246=HEAP32[$245>>2];var $cmp208=($246|0)!=0;if($cmp208){__label__=37;break}else{__label__=38;break}case 37:var $247=$st_addr;var $speech211=$247+640|0;var $248=HEAP32[$speech211>>2];var $249=$usedMode_addr;var $250=HEAP32[$249>>2];var $251=$i_subfr;var $252=HEAP16[$gain_pit>>1];var $253=HEAP16[$gain_code>>1];var $254=$Aq;var $255=$synth_addr;var $arraydecay212=$xn|0;var $arraydecay213=$code|0;var $arraydecay214=$y1|0;var $arraydecay215=$y2|0;var $256=$st_addr;var $mem_syn216=$256+2224|0;var $arraydecay217=$mem_syn216|0;var $257=$st_addr;var $mem_err218=$257+2284|0;var $arraydecay219=$mem_err218|0;var $258=$st_addr;var $mem_w0220=$258+2244|0;var $arraydecay221=$mem_w0220|0;var $259=$st_addr;var $exc222=$259+1912|0;var $260=HEAP32[$exc222>>2];var $261=$st_addr;var $sharp223=$261+2388|0;var $262=$pOverflow;_subframePostProc($248,$250,$251,$252,$253,$254,$255,$arraydecay212,$arraydecay213,$arraydecay214,$arraydecay215,$arraydecay217,$arraydecay219,$arraydecay221,$260,$sharp223,$262);__label__=42;break;case 38:var $263=$evenSubfr;var $conv225=$263<<16>>16;var $cmp226=($conv225|0)!=0;if($cmp226){__label__=39;break}else{__label__=40;break}case 39:var $264=$i_subfr;$i_subfr_sf0=$264;var $arraydecay229=$xn_sf0|0;var $265=$arraydecay229;var $arraydecay230=$xn|0;var $266=$arraydecay230;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($265,$266,80,1);var $arraydecay231=$y2_sf0|0;var $267=$arraydecay231;var $arraydecay232=$y2|0;var $268=$arraydecay232;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($267,$268,80,1);var $arraydecay233=$code_sf0|0;var $269=$arraydecay233;var $arraydecay234=$code|0;var $270=$arraydecay234;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($269,$270,80,1);var $271=HEAP16[$T0>>1];$T0_sf0=$271;var $272=HEAP16[$T0_frac>>1];$T0_frac_sf0=$272;var $273=$st_addr;var $speech235=$273+640|0;var $274=HEAP32[$speech235>>2];var $275=$usedMode_addr;var $276=HEAP32[$275>>2];var $277=$i_subfr;var $278=HEAP16[$gain_pit>>1];var $279=HEAP16[$gain_code>>1];var $280=$Aq;var $281=$synth_addr;var $arraydecay236=$xn|0;var $arraydecay237=$code|0;var $arraydecay238=$y1|0;var $arraydecay239=$y2|0;var $arraydecay240=$mem_syn_save|0;var $282=$st_addr;var $mem_err241=$282+2284|0;var $arraydecay242=$mem_err241|0;var $arraydecay243=$mem_w0_save|0;var $283=$st_addr;var $exc244=$283+1912|0;var $284=HEAP32[$exc244>>2];var $285=$st_addr;var $sharp245=$285+2388|0;var $286=$pOverflow;_subframePostProc($274,$276,$277,$278,$279,$280,$281,$arraydecay236,$arraydecay237,$arraydecay238,$arraydecay239,$arraydecay240,$arraydecay242,$arraydecay243,$284,$sharp245,$286);var $287=HEAP16[$sharp_save>>1];var $288=$st_addr;var $sharp246=$288+2388|0;HEAP16[$sharp246>>1]=$287;__label__=41;break;case 40:var $289=$st_addr;var $mem_err248=$289+2284|0;var $arraydecay249=$mem_err248|0;var $290=$arraydecay249;var $arraydecay250=$mem_err_save|0;var $291=$arraydecay250;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($290,$291,20,1);var $292=$i_subfr_sf0;var $idxprom251=$292<<16>>16;var $293=$st_addr;var $exc252=$293+1912|0;var $294=HEAP32[$exc252>>2];var $arrayidx253=$294+($idxprom251<<1)|0;var $295=$T0_sf0;var $296=$T0_frac_sf0;var $297=$pOverflow;_Pred_lt_3or6($arrayidx253,$295,$296,40,1,$297);var $298=$i_subfr_sf0;var $idxprom254=$298<<16>>16;var $299=$st_addr;var $exc255=$299+1912|0;var $300=HEAP32[$exc255>>2];var $arrayidx256=$300+($idxprom254<<1)|0;var $arraydecay257=$h1_sf0|0;var $arraydecay258=$y1|0;_Convolve($arrayidx256,$arraydecay257,$arraydecay258,40);var $301=$Aq;var $add_ptr=$301-22|0;$Aq=$add_ptr;var $302=$st_addr;var $speech259=$302+640|0;var $303=HEAP32[$speech259>>2];var $304=$usedMode_addr;var $305=HEAP32[$304>>2];var $306=$i_subfr_sf0;var $307=HEAP16[$gain_pit_sf0>>1];var $308=HEAP16[$gain_code_sf0>>1];var $309=$Aq;var $310=$synth_addr;var $arraydecay260=$xn_sf0|0;var $arraydecay261=$code_sf0|0;var $arraydecay262=$y1|0;var $arraydecay263=$y2_sf0|0;var $311=$st_addr;var $mem_syn264=$311+2224|0;var $arraydecay265=$mem_syn264|0;var $312=$st_addr;var $mem_err266=$312+2284|0;var $arraydecay267=$mem_err266|0;var $313=$st_addr;var $mem_w0268=$313+2244|0;var $arraydecay269=$mem_w0268|0;var $314=$st_addr;var $exc270=$314+1912|0;var $315=HEAP32[$exc270>>2];var $316=$pOverflow;_subframePostProc($303,$305,$306,$307,$308,$309,$310,$arraydecay260,$arraydecay261,$arraydecay262,$arraydecay263,$arraydecay265,$arraydecay267,$arraydecay269,$315,$sharp_save,$316);var $317=$Aq;var $add_ptr271=$317+22|0;$Aq=$add_ptr271;var $318=$usedMode_addr;var $319=HEAP32[$318>>2];var $320=$A;var $321=$Aq;var $322=$i_subfr;var $idxprom272=$322<<16>>16;var $323=$st_addr;var $speech273=$323+640|0;var $324=HEAP32[$speech273>>2];var $arrayidx274=$324+($idxprom272<<1)|0;var $325=$st_addr;var $mem_err275=$325+2284|0;var $arraydecay276=$mem_err275|0;var $326=$st_addr;var $mem_w0277=$326+2244|0;var $arraydecay278=$mem_w0277|0;var $327=$st_addr;var $zero279=$327+2020|0;var $328=HEAP32[$zero279>>2];var $329=$st_addr;var $ai_zero280=$329+1916|0;var $arraydecay281=$ai_zero280|0;var $330=$i_subfr;var $idxprom282=$330<<16>>16;var $331=$st_addr;var $exc283=$331+1912|0;var $332=HEAP32[$exc283>>2];var $arrayidx284=$332+($idxprom282<<1)|0;var $333=$st_addr;var $h1285=$333+2024|0;var $334=HEAP32[$h1285>>2];var $arraydecay286=$xn|0;var $arraydecay287=$res|0;var $335=$st_addr;var $error288=$335+2384|0;var $336=HEAP32[$error288>>2];_subframePreProc($319,_gamma1|0,_gamma1_12k2|0,_gamma2|0,$320,$321,$arrayidx274,$arraydecay276,$arraydecay278,$328,$arraydecay281,$arrayidx284,$334,$arraydecay286,$arraydecay287,$336);var $337=$i_subfr;var $idxprom289=$337<<16>>16;var $338=$st_addr;var $exc290=$338+1912|0;var $339=HEAP32[$exc290>>2];var $arrayidx291=$339+($idxprom289<<1)|0;var $340=HEAP16[$T0>>1];var $341=HEAP16[$T0_frac>>1];var $342=$pOverflow;_Pred_lt_3or6($arrayidx291,$340,$341,40,1,$342);var $343=$i_subfr;var $idxprom292=$343<<16>>16;var $344=$st_addr;var $exc293=$344+1912|0;var $345=HEAP32[$exc293>>2];var $arrayidx294=$345+($idxprom292<<1)|0;var $346=$st_addr;var $h1295=$346+2024|0;var $347=HEAP32[$h1295>>2];var $arraydecay296=$y1|0;_Convolve($arrayidx294,$347,$arraydecay296,40);var $348=$st_addr;var $speech297=$348+640|0;var $349=HEAP32[$speech297>>2];var $350=$usedMode_addr;var $351=HEAP32[$350>>2];var $352=$i_subfr;var $353=HEAP16[$gain_pit>>1];var $354=HEAP16[$gain_code>>1];var $355=$Aq;var $356=$synth_addr;var $arraydecay298=$xn|0;var $arraydecay299=$code|0;var $arraydecay300=$y1|0;var $arraydecay301=$y2|0;var $357=$st_addr;var $mem_syn302=$357+2224|0;var $arraydecay303=$mem_syn302|0;var $358=$st_addr;var $mem_err304=$358+2284|0;var $arraydecay305=$mem_err304|0;var $359=$st_addr;var $mem_w0306=$359+2244|0;var $arraydecay307=$mem_w0306|0;var $360=$st_addr;var $exc308=$360+1912|0;var $361=HEAP32[$exc308>>2];var $362=$st_addr;var $sharp309=$362+2388|0;var $363=$pOverflow;_subframePostProc($349,$351,$352,$353,$354,$355,$356,$arraydecay298,$arraydecay299,$arraydecay300,$arraydecay301,$arraydecay303,$arraydecay305,$arraydecay307,$361,$sharp309,$363);__label__=41;break;case 41:__label__=42;break;case 42:var $364=$A;var $add_ptr312=$364+22|0;$A=$add_ptr312;var $365=$Aq;var $add_ptr313=$365+22|0;$Aq=$add_ptr313;__label__=43;break;case 43:var $366=$i_subfr;var $conv315=$366<<16>>16;var $add316=$conv315+40|0;var $conv317=$add316&65535;$i_subfr=$conv317;__label__=21;break;case 44:var $367=$st_addr;var $old_exc319=$367+1282|0;var $arrayidx320=$old_exc319|0;var $368=$arrayidx320;var $369=$st_addr;var $old_exc321=$369+1282|0;var $arrayidx322=$old_exc321+320|0;var $370=$arrayidx322;assert(308%1===0,"memcpy given "+308+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($368,$370,308,1);__label__=45;break;case 45:var $371=$st_addr;var $old_wsp=$371+656|0;var $arrayidx323=$old_wsp|0;var $372=$arrayidx323;var $373=$st_addr;var $old_wsp324=$373+656|0;var $arrayidx325=$old_wsp324+320|0;var $374=$arrayidx325;assert(286%1===0,"memcpy given "+286+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($372,$374,286,1);var $375=$st_addr;var $old_speech=$375|0;var $arrayidx326=$old_speech|0;var $376=$arrayidx326;var $377=$st_addr;var $old_speech327=$377|0;var $arrayidx328=$old_speech327+320|0;var $378=$arrayidx328;assert(320%1===0,"memcpy given "+320+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($376,$378,320,1);STACKTOP=__stackBase__;return 0;default:assert(0,"bad label: "+__label__)}}_cod_amr["X"]=1;function _amrnb_fxp_mac_16_by_16bb43($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _amrnb_fxp_mac_16_by_16bb46($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _amrnb_fxp_mac_16_by_16bb49($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _Convolve($x,$h,$y,$L){var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $h_addr;var $y_addr;var $L_addr;var $i;var $n;var $s1;var $s2;$x_addr=$x;$h_addr=$h;$y_addr=$y;$L_addr=$L;$n=1;__label__=1;break;case 1:var $0=$n;var $conv=$0<<16>>16;var $1=$L_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=8;break}case 2:var $2=$h_addr;var $3=$n;var $conv3=$3<<16>>16;var $add_ptr=$2+($conv3<<1)|0;$h_addr=$add_ptr;var $4=$x_addr;var $5=HEAP16[$4>>1];var $conv4=$5<<16>>16;var $6=$h_addr;var $incdec_ptr=$6-2|0;$h_addr=$incdec_ptr;var $7=HEAP16[$6>>1];var $conv5=$7<<16>>16;var $mul=$conv4*$conv5|0;$s2=$mul;var $8=$x_addr;var $incdec_ptr6=$8+2|0;$x_addr=$incdec_ptr6;var $9=HEAP16[$8>>1];var $conv7=$9<<16>>16;var $10=$h_addr;var $11=HEAP16[$10>>1];var $conv8=$11<<16>>16;var $mul9=$conv7*$conv8|0;$s1=$mul9;var $12=$n;var $conv10=$12<<16>>16;var $sub=$conv10-1|0;var $shr=$sub>>1;var $conv11=$shr&65535;$i=$conv11;__label__=3;break;case 3:var $13=$i;var $conv13=$13<<16>>16;var $cmp14=($conv13|0)!=0;if($cmp14){__label__=4;break}else{__label__=6;break}case 4:var $14=$x_addr;var $15=HEAP16[$14>>1];var $conv17=$15<<16>>16;var $16=$h_addr;var $incdec_ptr18=$16-2|0;$h_addr=$incdec_ptr18;var $17=HEAP16[$16>>1];var $conv19=$17<<16>>16;var $18=$s2;var $call=_amrnb_fxp_mac_16_by_16bb43($conv17,$conv19,$18);$s2=$call;var $19=$x_addr;var $incdec_ptr20=$19+2|0;$x_addr=$incdec_ptr20;var $20=HEAP16[$19>>1];var $conv21=$20<<16>>16;var $21=$h_addr;var $22=HEAP16[$21>>1];var $conv22=$22<<16>>16;var $23=$s1;var $call23=_amrnb_fxp_mac_16_by_16bb43($conv21,$conv22,$23);$s1=$call23;var $24=$x_addr;var $25=HEAP16[$24>>1];var $conv24=$25<<16>>16;var $26=$h_addr;var $incdec_ptr25=$26-2|0;$h_addr=$incdec_ptr25;var $27=HEAP16[$26>>1];var $conv26=$27<<16>>16;var $28=$s2;var $call27=_amrnb_fxp_mac_16_by_16bb43($conv24,$conv26,$28);$s2=$call27;var $29=$x_addr;var $incdec_ptr28=$29+2|0;$x_addr=$incdec_ptr28;var $30=HEAP16[$29>>1];var $conv29=$30<<16>>16;var $31=$h_addr;var $32=HEAP16[$31>>1];var $conv30=$32<<16>>16;var $33=$s1;var $call31=_amrnb_fxp_mac_16_by_16bb43($conv29,$conv30,$33);$s1=$call31;__label__=5;break;case 5:var $34=$i;var $dec=$34-1&65535;$i=$dec;__label__=3;break;case 6:var $35=$x_addr;var $36=HEAP16[$35>>1];var $conv32=$36<<16>>16;var $37=$h_addr;var $38=HEAP16[$37>>1];var $conv33=$38<<16>>16;var $39=$s2;var $call34=_amrnb_fxp_mac_16_by_16bb43($conv32,$conv33,$39);$s2=$call34;var $40=$s1;var $shr35=$40>>12;var $conv36=$shr35&65535;var $41=$y_addr;var $incdec_ptr37=$41+2|0;$y_addr=$incdec_ptr37;HEAP16[$41>>1]=$conv36;var $42=$s2;var $shr38=$42>>12;var $conv39=$shr38&65535;var $43=$y_addr;var $incdec_ptr40=$43+2|0;$y_addr=$incdec_ptr40;HEAP16[$43>>1]=$conv39;var $44=$x_addr;var $45=$n;var $conv41=$45<<16>>16;var $idx_neg=-$conv41|0;var $add_ptr42=$44+($idx_neg<<1)|0;$x_addr=$add_ptr42;__label__=7;break;case 7:var $46=$n;var $conv44=$46<<16>>16;var $add=$conv44+2|0;var $conv45=$add&65535;$n=$conv45;__label__=1;break;case 8:;return;default:assert(0,"bad label: "+__label__)}}_Convolve["X"]=1;function _cor_h($h,$sign,$rr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=80;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $h_addr;var $sign_addr;var $rr_addr;var $pOverflow_addr;var $i;var $dec;var $h2=__stackBase__;var $s;var $s2;var $tmp1;var $tmp2;var $tmp11;var $tmp22;var $p_h;var $p_h2;var $rr1;var $rr2;var $rr3;var $p_rr_ref1;var $p_sign1;var $p_sign2;$h_addr=$h;$sign_addr=$sign;$rr_addr=$rr;$pOverflow_addr=$pOverflow;$s=1;var $0=$h_addr;$p_h=$0;$i=20;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$p_h;var $incdec_ptr=$2+2|0;$p_h=$incdec_ptr;var $3=HEAP16[$2>>1];$tmp1=$3;var $4=$tmp1;var $conv2=$4<<16>>16;var $5=$tmp1;var $conv3=$5<<16>>16;var $6=$s;var $call=_amrnb_fxp_mac_16_by_16bb46($conv2,$conv3,$6);$s=$call;var $7=$p_h;var $incdec_ptr4=$7+2|0;$p_h=$incdec_ptr4;var $8=HEAP16[$7>>1];$tmp1=$8;var $9=$tmp1;var $conv5=$9<<16>>16;var $10=$tmp1;var $conv6=$10<<16>>16;var $11=$s;var $call7=_amrnb_fxp_mac_16_by_16bb46($conv5,$conv6,$11);$s=$call7;__label__=3;break;case 3:var $12=$i;var $dec8=$12-1&65535;$i=$dec8;__label__=1;break;case 4:var $13=$s;var $shl=$13<<1;$s=$shl;var $14=$s;var $and=$14&-2147483648;var $tobool=($and|0)!=0;if($tobool){__label__=5;break}else{__label__=10;break}case 5:var $arraydecay=$h2|0;$p_h2=$arraydecay;var $15=$h_addr;$p_h=$15;$i=20;__label__=6;break;case 6:var $16=$i;var $conv10=$16<<16>>16;var $cmp11=($conv10|0)!=0;if($cmp11){__label__=7;break}else{__label__=9;break}case 7:var $17=$p_h;var $incdec_ptr14=$17+2|0;$p_h=$incdec_ptr14;var $18=HEAP16[$17>>1];var $conv15=$18<<16>>16;var $shr=$conv15>>1;var $conv16=$shr&65535;var $19=$p_h2;var $incdec_ptr17=$19+2|0;$p_h2=$incdec_ptr17;HEAP16[$19>>1]=$conv16;var $20=$p_h;var $incdec_ptr18=$20+2|0;$p_h=$incdec_ptr18;var $21=HEAP16[$20>>1];var $conv19=$21<<16>>16;var $shr20=$conv19>>1;var $conv21=$shr20&65535;var $22=$p_h2;var $incdec_ptr22=$22+2|0;$p_h2=$incdec_ptr22;HEAP16[$22>>1]=$conv21;__label__=8;break;case 8:var $23=$i;var $dec24=$23-1&65535;$i=$dec24;__label__=6;break;case 9:__label__=18;break;case 10:var $24=$s;var $shr26=$24>>1;$s=$shr26;var $25=$s;var $26=$pOverflow_addr;var $call27=_Inv_sqrt($25,$26);$s=$call27;var $27=$s;var $cmp28=($27|0)<16777215;if($cmp28){__label__=11;break}else{__label__=12;break}case 11:var $28=$s;var $shr31=$28>>9;var $mul=$shr31*32440|0;var $shr32=$mul>>15;var $conv33=$shr32&65535;$dec=$conv33;__label__=13;break;case 12:$dec=32440;__label__=13;break;case 13:var $29=$h_addr;$p_h=$29;var $arraydecay35=$h2|0;$p_h2=$arraydecay35;$i=20;__label__=14;break;case 14:var $30=$i;var $conv37=$30<<16>>16;var $cmp38=($conv37|0)!=0;if($cmp38){__label__=15;break}else{__label__=17;break}case 15:var $31=$p_h;var $incdec_ptr41=$31+2|0;$p_h=$incdec_ptr41;var $32=HEAP16[$31>>1];var $conv42=$32<<16>>16;var $33=$dec;var $conv43=$33<<16>>16;var $call44=_amrnb_fxp_mac_16_by_16bb46($conv42,$conv43,32);var $shr45=$call44>>6;var $conv46=$shr45&65535;var $34=$p_h2;var $incdec_ptr47=$34+2|0;$p_h2=$incdec_ptr47;HEAP16[$34>>1]=$conv46;var $35=$p_h;var $incdec_ptr48=$35+2|0;$p_h=$incdec_ptr48;var $36=HEAP16[$35>>1];var $conv49=$36<<16>>16;var $37=$dec;var $conv50=$37<<16>>16;var $call51=_amrnb_fxp_mac_16_by_16bb46($conv49,$conv50,32);var $shr52=$call51>>6;var $conv53=$shr52&65535;var $38=$p_h2;var $incdec_ptr54=$38+2|0;$p_h2=$incdec_ptr54;HEAP16[$38>>1]=$conv53;__label__=16;break;case 16:var $39=$i;var $dec56=$39-1&65535;$i=$dec56;__label__=14;break;case 17:__label__=18;break;case 18:$s=0;var $arraydecay59=$h2|0;$p_h2=$arraydecay59;var $40=$rr_addr;var $arrayidx=$40+3120|0;var $arrayidx60=$arrayidx+78|0;$rr1=$arrayidx60;$i=20;__label__=19;break;case 19:var $41=$i;var $conv62=$41<<16>>16;var $cmp63=($conv62|0)!=0;if($cmp63){__label__=20;break}else{__label__=22;break}case 20:var $42=$p_h2;var $incdec_ptr66=$42+2|0;$p_h2=$incdec_ptr66;var $43=HEAP16[$42>>1];$tmp1=$43;var $44=$tmp1;var $conv67=$44<<16>>16;var $45=$tmp1;var $conv68=$45<<16>>16;var $46=$s;var $call69=_amrnb_fxp_mac_16_by_16bb46($conv67,$conv68,$46);$s=$call69;var $47=$s;var $add=$47+16384|0;var $shr70=$add>>15;var $conv71=$shr70&65535;var $48=$rr1;HEAP16[$48>>1]=$conv71;var $49=$rr1;var $add_ptr=$49-82|0;$rr1=$add_ptr;var $50=$p_h2;var $incdec_ptr72=$50+2|0;$p_h2=$incdec_ptr72;var $51=HEAP16[$50>>1];$tmp1=$51;var $52=$tmp1;var $conv73=$52<<16>>16;var $53=$tmp1;var $conv74=$53<<16>>16;var $54=$s;var $call75=_amrnb_fxp_mac_16_by_16bb46($conv73,$conv74,$54);$s=$call75;var $55=$s;var $add76=$55+16384|0;var $shr77=$add76>>15;var $conv78=$shr77&65535;var $56=$rr1;HEAP16[$56>>1]=$conv78;var $57=$rr1;var $add_ptr79=$57-82|0;$rr1=$add_ptr79;__label__=21;break;case 21:var $58=$i;var $dec81=$58-1&65535;$i=$dec81;__label__=19;break;case 22:var $59=$rr_addr;var $arrayidx83=$59+3120|0;var $arraydecay84=$arrayidx83|0;$p_rr_ref1=$arraydecay84;$dec=1;__label__=23;break;case 23:var $60=$dec;var $conv86=$60<<16>>16;var $cmp87=($conv86|0)<40;if($cmp87){__label__=24;break}else{__label__=30;break}case 24:var $61=$dec;var $conv90=$61<<16>>16;var $sub=39-$conv90|0;var $62=$p_rr_ref1;var $arrayidx91=$62+($sub<<1)|0;$rr1=$arrayidx91;var $63=$dec;var $conv92=$63<<16>>16;var $sub93=39-$conv92|0;var $64=$rr_addr;var $arrayidx94=$64+$sub93*80|0;var $arrayidx95=$arrayidx94+78|0;$rr2=$arrayidx95;var $65=$dec;var $conv96=$65<<16>>16;var $add97=$conv96+1|0;var $sub98=39-$add97|0;var $66=$rr_addr;var $arrayidx99=$66+$sub98*80|0;var $arrayidx100=$arrayidx99+78|0;$rr3=$arrayidx100;$s=0;$s2=0;var $67=$sign_addr;var $arrayidx101=$67+78|0;$p_sign1=$arrayidx101;var $68=$dec;var $conv102=$68<<16>>16;var $sub103=39-$conv102|0;var $69=$sign_addr;var $arrayidx104=$69+($sub103<<1)|0;$p_sign2=$arrayidx104;var $arraydecay105=$h2|0;$p_h2=$arraydecay105;var $70=$dec;var $idxprom=$70<<16>>16;var $arrayidx106=$h2+($idxprom<<1)|0;$p_h=$arrayidx106;var $71=$dec;var $conv107=$71<<16>>16;var $sub108=40-$conv107|0;var $sub109=$sub108-1|0;var $conv110=$sub109&65535;$i=$conv110;__label__=25;break;case 25:var $72=$i;var $conv112=$72<<16>>16;var $cmp113=($conv112|0)!=0;if($cmp113){__label__=26;break}else{__label__=28;break}case 26:var $73=$p_h2;var $74=HEAP16[$73>>1];var $conv116=$74<<16>>16;var $75=$p_h;var $incdec_ptr117=$75+2|0;$p_h=$incdec_ptr117;var $76=HEAP16[$75>>1];var $conv118=$76<<16>>16;var $77=$s;var $call119=_amrnb_fxp_mac_16_by_16bb46($conv116,$conv118,$77);$s=$call119;var $78=$p_h2;var $incdec_ptr120=$78+2|0;$p_h2=$incdec_ptr120;var $79=HEAP16[$78>>1];var $conv121=$79<<16>>16;var $80=$p_h;var $81=HEAP16[$80>>1];var $conv122=$81<<16>>16;var $82=$s2;var $call123=_amrnb_fxp_mac_16_by_16bb46($conv121,$conv122,$82);$s2=$call123;var $83=$s;var $add124=$83+16384|0;var $shr125=$add124>>15;var $conv126=$shr125&65535;$tmp1=$conv126;var $84=$s2;var $add127=$84+16384|0;var $shr128=$add127>>15;var $conv129=$shr128&65535;$tmp11=$conv129;var $85=$p_sign1;var $86=HEAP16[$85>>1];var $conv130=$86<<16>>16;var $87=$p_sign2;var $incdec_ptr131=$87-2|0;$p_sign2=$incdec_ptr131;var $88=HEAP16[$87>>1];var $conv132=$88<<16>>16;var $mul133=$conv130*$conv132|0;var $shr134=$mul133>>15;var $conv135=$shr134&65535;$tmp2=$conv135;var $89=$p_sign1;var $incdec_ptr136=$89-2|0;$p_sign1=$incdec_ptr136;var $90=HEAP16[$89>>1];var $conv137=$90<<16>>16;var $91=$p_sign2;var $92=HEAP16[$91>>1];var $conv138=$92<<16>>16;var $mul139=$conv137*$conv138|0;var $shr140=$mul139>>15;var $conv141=$shr140&65535;$tmp22=$conv141;var $93=$tmp1;var $conv142=$93<<16>>16;var $94=$tmp2;var $conv143=$94<<16>>16;var $mul144=$conv142*$conv143|0;var $shr145=$mul144>>15;var $conv146=$shr145&65535;var $95=$rr2;HEAP16[$95>>1]=$conv146;var $96=$rr2;var $97=HEAP16[$96>>1];var $98=$rr1;var $incdec_ptr147=$98-2|0;$rr1=$incdec_ptr147;HEAP16[$98>>1]=$97;var $99=$tmp11;var $conv148=$99<<16>>16;var $100=$tmp22;var $conv149=$100<<16>>16;var $mul150=$conv148*$conv149|0;var $shr151=$mul150>>15;var $conv152=$shr151&65535;var $101=$rr1;HEAP16[$101>>1]=$conv152;var $102=$rr1;var $103=HEAP16[$102>>1];var $104=$rr3;HEAP16[$104>>1]=$103;var $105=$rr1;var $add_ptr153=$105-80|0;$rr1=$add_ptr153;var $106=$rr2;var $add_ptr154=$106-82|0;$rr2=$add_ptr154;var $107=$rr3;var $add_ptr155=$107-82|0;$rr3=$add_ptr155;__label__=27;break;case 27:var $108=$i;var $dec157=$108-1&65535;$i=$dec157;__label__=25;break;case 28:var $109=$p_h2;var $110=HEAP16[$109>>1];var $conv159=$110<<16>>16;var $111=$p_h;var $112=HEAP16[$111>>1];var $conv160=$112<<16>>16;var $113=$s;var $call161=_amrnb_fxp_mac_16_by_16bb46($conv159,$conv160,$113);$s=$call161;var $114=$s;var $add162=$114+16384|0;var $shr163=$add162>>15;var $conv164=$shr163&65535;$tmp1=$conv164;var $115=$p_sign1;var $116=HEAP16[$115>>1];var $conv165=$116<<16>>16;var $117=$p_sign2;var $118=HEAP16[$117>>1];var $conv166=$118<<16>>16;var $mul167=$conv165*$conv166|0;var $shr168=$mul167>>15;var $conv169=$shr168&65535;$tmp2=$conv169;var $119=$tmp1;var $conv170=$119<<16>>16;var $120=$tmp2;var $conv171=$120<<16>>16;var $mul172=$conv170*$conv171|0;var $shr173=$mul172>>15;var $conv174=$shr173&65535;var $121=$rr1;HEAP16[$121>>1]=$conv174;var $122=$rr1;var $123=HEAP16[$122>>1];var $124=$rr2;HEAP16[$124>>1]=$123;var $125=$rr1;var $add_ptr175=$125-82|0;$rr1=$add_ptr175;var $126=$rr2;var $add_ptr176=$126-82|0;$rr2=$add_ptr176;__label__=29;break;case 29:var $127=$dec;var $conv178=$127<<16>>16;var $add179=$conv178+2|0;var $conv180=$add179&65535;$dec=$conv180;__label__=23;break;case 30:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_cor_h["X"]=1;function _cor_h_x2($h,$x,$dn,$sf,$nb_track,$step,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=160;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $h_addr;var $x_addr;var $dn_addr;var $sf_addr;var $nb_track_addr;var $step_addr;var $pOverflow_addr;var $i;var $j;var $k;var $s;var $y32=__stackBase__;var $max;var $tot;$h_addr=$h;$x_addr=$x;$dn_addr=$dn;$sf_addr=$sf;$nb_track_addr=$nb_track;$step_addr=$step;$pOverflow_addr=$pOverflow;$tot=5;$k=0;__label__=1;break;case 1:var $0=$k;var $conv=$0<<16>>16;var $1=$nb_track_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=14;break}case 2:$max=0;var $2=$k;$i=$2;__label__=3;break;case 3:var $3=$i;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<40;if($cmp5){__label__=4;break}else{__label__=12;break}case 4:$s=0;var $4=$i;$j=$4;__label__=5;break;case 5:var $5=$j;var $conv9=$5<<16>>16;var $cmp10=($conv9|0)<40;if($cmp10){__label__=6;break}else{__label__=8;break}case 6:var $6=$j;var $idxprom=$6<<16>>16;var $7=$x_addr;var $arrayidx=$7+($idxprom<<1)|0;var $8=HEAP16[$arrayidx>>1];var $conv13=$8<<16>>16;var $9=$j;var $conv14=$9<<16>>16;var $10=$i;var $conv15=$10<<16>>16;var $sub=$conv14-$conv15|0;var $11=$h_addr;var $arrayidx16=$11+($sub<<1)|0;var $12=HEAP16[$arrayidx16>>1];var $conv17=$12<<16>>16;var $13=$s;var $call=_amrnb_fxp_mac_16_by_16bb49($conv13,$conv17,$13);$s=$call;__label__=7;break;case 7:var $14=$j;var $inc=$14+1&65535;$j=$inc;__label__=5;break;case 8:var $15=$s;var $shl=$15<<1;$s=$shl;var $16=$s;var $17=$i;var $idxprom18=$17<<16>>16;var $arrayidx19=$y32+($idxprom18<<2)|0;HEAP32[$arrayidx19>>2]=$16;var $18=$s;var $call20=_L_abs($18);$s=$call20;var $19=$s;var $20=$max;var $cmp21=($19|0)>($20|0);if($cmp21){__label__=9;break}else{__label__=10;break}case 9:var $21=$s;$max=$21;__label__=10;break;case 10:__label__=11;break;case 11:var $22=$step_addr;var $conv24=$22<<16>>16;var $23=$i;var $conv25=$23<<16>>16;var $add=$conv25+$conv24|0;var $conv26=$add&65535;$i=$conv26;__label__=3;break;case 12:var $24=$tot;var $25=$max;var $shr=$25>>1;var $add28=$24+$shr|0;$tot=$add28;__label__=13;break;case 13:var $26=$k;var $inc30=$26+1&65535;$k=$inc30;__label__=1;break;case 14:var $27=$tot;var $call32=_norm_l($27);var $conv33=$call32<<16>>16;var $28=$sf_addr;var $conv34=$28<<16>>16;var $sub35=$conv33-$conv34|0;var $conv36=$sub35&65535;$j=$conv36;$i=0;__label__=15;break;case 15:var $29=$i;var $conv38=$29<<16>>16;var $cmp39=($conv38|0)<40;if($cmp39){__label__=16;break}else{__label__=18;break}case 16:var $30=$i;var $idxprom42=$30<<16>>16;var $arrayidx43=$y32+($idxprom42<<2)|0;var $31=HEAP32[$arrayidx43>>2];var $32=$j;var $33=$pOverflow_addr;var $call44=_L_shl50($31,$32,$33);var $34=$pOverflow_addr;var $call45=_pv_round($call44,$34);var $35=$i;var $idxprom46=$35<<16>>16;var $36=$dn_addr;var $arrayidx47=$36+($idxprom46<<1)|0;HEAP16[$arrayidx47>>1]=$call45;__label__=17;break;case 17:var $37=$i;var $inc49=$37+1&65535;$i=$inc49;__label__=15;break;case 18:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_cor_h_x2["X"]=1;function _L_shl50($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_shl53($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _negate54($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _decode_2i40_11bits($sign,$index,$cod){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $sign_addr;var $index_addr;var $cod_addr;var $i;var $j;var $pos=__stackBase__;$sign_addr=$sign;$index_addr=$index;$cod_addr=$cod;var $0=$index_addr;var $conv=$0<<16>>16;var $and=$conv&1;var $conv1=$and&65535;$j=$conv1;var $1=$index_addr;var $conv2=$1<<16>>16;var $shr=$conv2>>1;var $conv3=$shr&65535;$index_addr=$conv3;var $2=$index_addr;var $conv4=$2<<16>>16;var $and5=$conv4&7;var $conv6=$and5&65535;$i=$conv6;var $3=$i;var $conv7=$3<<16>>16;var $mul=$conv7*5|0;var $4=$j;var $conv8=$4<<16>>16;var $mul9=$conv8<<1|0;var $add=$mul+$mul9|0;var $add10=$add+1|0;var $conv11=$add10&65535;var $arrayidx=$pos|0;HEAP16[$arrayidx>>1]=$conv11;var $5=$index_addr;var $conv12=$5<<16>>16;var $shr13=$conv12>>3;var $conv14=$shr13&65535;$index_addr=$conv14;var $6=$index_addr;var $conv15=$6<<16>>16;var $and16=$conv15&3;var $conv17=$and16&65535;$j=$conv17;var $7=$index_addr;var $conv18=$7<<16>>16;var $shr19=$conv18>>2;var $conv20=$shr19&65535;$index_addr=$conv20;var $8=$index_addr;var $conv21=$8<<16>>16;var $and22=$conv21&7;var $conv23=$and22&65535;$i=$conv23;var $9=$j;var $conv24=$9<<16>>16;var $cmp=($conv24|0)==3;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $10=$i;var $conv26=$10<<16>>16;var $mul27=$conv26*5|0;var $add28=$mul27+4|0;var $conv29=$add28&65535;var $arrayidx30=$pos+2|0;HEAP16[$arrayidx30>>1]=$conv29;__label__=3;break;case 2:var $11=$i;var $conv31=$11<<16>>16;var $mul32=$conv31*5|0;var $12=$j;var $conv33=$12<<16>>16;var $add34=$mul32+$conv33|0;var $conv35=$add34&65535;var $arrayidx36=$pos+2|0;HEAP16[$arrayidx36>>1]=$conv35;__label__=3;break;case 3:$i=0;__label__=4;break;case 4:var $13=$i;var $conv37=$13<<16>>16;var $cmp38=($conv37|0)<40;if($cmp38){__label__=5;break}else{__label__=7;break}case 5:var $14=$i;var $idxprom=$14<<16>>16;var $15=$cod_addr;var $arrayidx40=$15+($idxprom<<1)|0;HEAP16[$arrayidx40>>1]=0;__label__=6;break;case 6:var $16=$i;var $inc=$16+1&65535;$i=$inc;__label__=4;break;case 7:$j=0;__label__=8;break;case 8:var $17=$j;var $conv42=$17<<16>>16;var $cmp43=($conv42|0)<2;if($cmp43){__label__=9;break}else{__label__=11;break}case 9:var $18=$sign_addr;var $conv46=$18<<16>>16;var $and47=$conv46&1;var $conv48=$and47&65535;$i=$conv48;var $19=$i;var $conv49=$19<<16>>16;var $mul50=$conv49*16383|0;var $sub=$mul50-8192|0;var $conv51=$sub&65535;var $20=$j;var $idxprom52=$20<<16>>16;var $arrayidx53=$pos+($idxprom52<<1)|0;var $21=HEAP16[$arrayidx53>>1];var $idxprom54=$21<<16>>16;var $22=$cod_addr;var $arrayidx55=$22+($idxprom54<<1)|0;HEAP16[$arrayidx55>>1]=$conv51;var $23=$sign_addr;var $conv56=$23<<16>>16;var $shr57=$conv56>>1;var $conv58=$shr57&65535;$sign_addr=$conv58;__label__=10;break;case 10:var $24=$j;var $inc60=$24+1&65535;$j=$inc60;__label__=8;break;case 11:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_decode_2i40_11bits["X"]=1;function _cor_h_x($h,$x,$dn,$sf,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=160;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $h_addr;var $x_addr;var $dn_addr;var $sf_addr;var $pOverflow_addr;var $i;var $j;var $k;var $s;var $y32=__stackBase__;var $max;var $tot;var $p_x;var $p_ptr;var $p_y32;$h_addr=$h;$x_addr=$x;$dn_addr=$dn;$sf_addr=$sf;$pOverflow_addr=$pOverflow;$tot=5;$k=0;__label__=1;break;case 1:var $0=$k;var $conv=$0<<16>>16;var $cmp=($conv|0)<5;if($cmp){__label__=2;break}else{__label__=18;break}case 2:$max=0;var $1=$k;$i=$1;__label__=3;break;case 3:var $2=$i;var $conv3=$2<<16>>16;var $cmp4=($conv3|0)<40;if($cmp4){__label__=4;break}else{__label__=16;break}case 4:$s=0;var $3=$i;var $idxprom=$3<<16>>16;var $4=$x_addr;var $arrayidx=$4+($idxprom<<1)|0;$p_x=$arrayidx;var $5=$h_addr;$p_ptr=$5;var $6=$i;var $conv7=$6<<16>>16;var $sub=40-$conv7|0;var $sub8=$sub-1|0;var $shr=$sub8>>1;var $conv9=$shr&65535;$j=$conv9;__label__=5;break;case 5:var $7=$j;var $conv11=$7<<16>>16;var $cmp12=($conv11|0)!=0;if($cmp12){__label__=6;break}else{__label__=8;break}case 6:var $8=$p_x;var $incdec_ptr=$8+2|0;$p_x=$incdec_ptr;var $9=HEAP16[$8>>1];var $conv15=$9<<16>>16;var $10=$p_ptr;var $incdec_ptr16=$10+2|0;$p_ptr=$incdec_ptr16;var $11=HEAP16[$10>>1];var $conv17=$11<<16>>16;var $mul=$conv15*$conv17|0;var $shl=$mul<<1;var $12=$s;var $add=$12+$shl|0;$s=$add;var $13=$p_x;var $incdec_ptr18=$13+2|0;$p_x=$incdec_ptr18;var $14=HEAP16[$13>>1];var $conv19=$14<<16>>16;var $15=$p_ptr;var $incdec_ptr20=$15+2|0;$p_ptr=$incdec_ptr20;var $16=HEAP16[$15>>1];var $conv21=$16<<16>>16;var $mul22=$conv19*$conv21|0;var $shl23=$mul22<<1;var $17=$s;var $add24=$17+$shl23|0;$s=$add24;__label__=7;break;case 7:var $18=$j;var $dec=$18-1&65535;$j=$dec;__label__=5;break;case 8:var $19=$p_x;var $incdec_ptr25=$19+2|0;$p_x=$incdec_ptr25;var $20=HEAP16[$19>>1];var $conv26=$20<<16>>16;var $21=$p_ptr;var $incdec_ptr27=$21+2|0;$p_ptr=$incdec_ptr27;var $22=HEAP16[$21>>1];var $conv28=$22<<16>>16;var $mul29=$conv26*$conv28|0;var $shl30=$mul29<<1;var $23=$s;var $add31=$23+$shl30|0;$s=$add31;var $24=$i;var $conv32=$24<<16>>16;var $sub33=40-$conv32|0;var $and=$sub33&1;var $tobool=($and|0)!=0;if($tobool){__label__=10;break}else{__label__=9;break}case 9:var $25=$p_x;var $incdec_ptr34=$25+2|0;$p_x=$incdec_ptr34;var $26=HEAP16[$25>>1];var $conv35=$26<<16>>16;var $27=$p_ptr;var $incdec_ptr36=$27+2|0;$p_ptr=$incdec_ptr36;var $28=HEAP16[$27>>1];var $conv37=$28<<16>>16;var $mul38=$conv35*$conv37|0;var $shl39=$mul38<<1;var $29=$s;var $add40=$29+$shl39|0;$s=$add40;__label__=10;break;case 10:var $30=$s;var $31=$i;var $idxprom41=$31<<16>>16;var $arrayidx42=$y32+($idxprom41<<2)|0;HEAP32[$arrayidx42>>2]=$30;var $32=$s;var $cmp43=($32|0)<0;if($cmp43){__label__=11;break}else{__label__=12;break}case 11:var $33=$s;var $sub46=-$33|0;$s=$sub46;__label__=12;break;case 12:var $34=$s;var $35=$max;var $cmp48=($34|0)>($35|0);if($cmp48){__label__=13;break}else{__label__=14;break}case 13:var $36=$s;$max=$36;__label__=14;break;case 14:__label__=15;break;case 15:var $37=$i;var $conv53=$37<<16>>16;var $add54=$conv53+5|0;var $conv55=$add54&65535;$i=$conv55;__label__=3;break;case 16:var $38=$max;var $shr57=$38>>1;var $39=$tot;var $add58=$39+$shr57|0;$tot=$add58;__label__=17;break;case 17:var $40=$k;var $inc=$40+1&65535;$k=$inc;__label__=1;break;case 18:var $41=$tot;var $call=_norm_l($41);var $conv61=$call<<16>>16;var $42=$sf_addr;var $conv62=$42<<16>>16;var $sub63=$conv61-$conv62|0;var $conv64=$sub63&65535;$j=$conv64;var $43=$dn_addr;$p_ptr=$43;var $arraydecay=$y32|0;$p_y32=$arraydecay;$i=20;__label__=19;break;case 19:var $44=$i;var $conv66=$44<<16>>16;var $cmp67=($conv66|0)!=0;if($cmp67){__label__=20;break}else{__label__=22;break}case 20:var $45=$p_y32;var $incdec_ptr70=$45+4|0;$p_y32=$incdec_ptr70;var $46=HEAP32[$45>>2];var $47=$j;var $48=$pOverflow_addr;var $call71=_L_shl53($46,$47,$48);$s=$call71;var $49=$s;var $add72=$49+32768|0;var $shr73=$add72>>16;var $conv74=$shr73&65535;var $50=$p_ptr;var $incdec_ptr75=$50+2|0;$p_ptr=$incdec_ptr75;HEAP16[$50>>1]=$conv74;var $51=$p_y32;var $incdec_ptr76=$51+4|0;$p_y32=$incdec_ptr76;var $52=HEAP32[$51>>2];var $53=$j;var $54=$pOverflow_addr;var $call77=_L_shl53($52,$53,$54);$s=$call77;var $55=$s;var $add78=$55+32768|0;var $shr79=$add78>>16;var $conv80=$shr79&65535;var $56=$p_ptr;var $incdec_ptr81=$56+2|0;$p_ptr=$incdec_ptr81;HEAP16[$56>>1]=$conv80;__label__=21;break;case 21:var $57=$i;var $dec83=$57-1&65535;$i=$dec83;__label__=19;break;case 22:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_cor_h_x["X"]=1;function _dec_10i40_35bits($index,$cod,$dgray_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $index_addr;var $cod_addr;var $dgray_ptr_addr;var $i;var $j;var $pos1;var $pos2;var $sign;var $tmp;$index_addr=$index;$cod_addr=$cod;$dgray_ptr_addr=$dgray_ptr;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$cod_addr;var $2=$i;var $conv2=$2<<16>>16;var $add_ptr=$1+($conv2<<1)|0;HEAP16[$add_ptr>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:$j=0;__label__=5;break;case 5:var $4=$j;var $conv4=$4<<16>>16;var $cmp5=($conv4|0)<5;if($cmp5){__label__=6;break}else{__label__=13;break}case 6:var $5=$index_addr;var $6=$j;var $conv8=$6<<16>>16;var $add_ptr9=$5+($conv8<<1)|0;var $7=HEAP16[$add_ptr9>>1];$tmp=$7;var $8=$tmp;var $conv10=$8<<16>>16;var $and=$conv10&7;var $conv11=$and&65535;$i=$conv11;var $9=$dgray_ptr_addr;var $10=$i;var $conv12=$10<<16>>16;var $add_ptr13=$9+($conv12<<1)|0;var $11=HEAP16[$add_ptr13>>1];$i=$11;var $12=$i;var $conv14=$12<<16>>16;var $mul=$conv14*5|0;var $conv15=$mul&65535;$i=$conv15;var $13=$i;var $conv16=$13<<16>>16;var $14=$j;var $conv17=$14<<16>>16;var $add=$conv16+$conv17|0;var $conv18=$add&65535;$pos1=$conv18;var $15=$tmp;var $conv19=$15<<16>>16;var $shr=$conv19>>3;var $and20=$shr&1;var $conv21=$and20&65535;$i=$conv21;var $16=$i;var $conv22=$16<<16>>16;var $cmp23=($conv22|0)==0;if($cmp23){__label__=7;break}else{__label__=8;break}case 7:$sign=4096;__label__=9;break;case 8:$sign=-4096;__label__=9;break;case 9:var $17=$sign;var $18=$cod_addr;var $19=$pos1;var $conv25=$19<<16>>16;var $add_ptr26=$18+($conv25<<1)|0;HEAP16[$add_ptr26>>1]=$17;var $20=$index_addr;var $21=$j;var $conv27=$21<<16>>16;var $add_ptr28=$20+($conv27<<1)|0;var $add_ptr29=$add_ptr28+10|0;var $22=HEAP16[$add_ptr29>>1];var $conv30=$22<<16>>16;var $and31=$conv30&7;var $conv32=$and31&65535;$i=$conv32;var $23=$dgray_ptr_addr;var $24=$i;var $conv33=$24<<16>>16;var $add_ptr34=$23+($conv33<<1)|0;var $25=HEAP16[$add_ptr34>>1];$i=$25;var $26=$i;var $conv35=$26<<16>>16;var $mul36=$conv35*5|0;var $conv37=$mul36&65535;$i=$conv37;var $27=$i;var $conv38=$27<<16>>16;var $28=$j;var $conv39=$28<<16>>16;var $add40=$conv38+$conv39|0;var $conv41=$add40&65535;$pos2=$conv41;var $29=$pos2;var $conv42=$29<<16>>16;var $30=$pos1;var $conv43=$30<<16>>16;var $cmp44=($conv42|0)<($conv43|0);if($cmp44){__label__=10;break}else{__label__=11;break}case 10:var $31=$sign;var $call=_negate54($31);$sign=$call;__label__=11;break;case 11:var $32=$sign;var $conv48=$32<<16>>16;var $33=$cod_addr;var $34=$pos2;var $conv49=$34<<16>>16;var $add_ptr50=$33+($conv49<<1)|0;var $35=HEAP16[$add_ptr50>>1];var $conv51=$35<<16>>16;var $add52=$conv51+$conv48|0;var $conv53=$add52&65535;HEAP16[$add_ptr50>>1]=$conv53;__label__=12;break;case 12:var $36=$j;var $inc55=$36+1&65535;$j=$inc55;__label__=5;break;case 13:;return;default:assert(0,"bad label: "+__label__)}}_dec_10i40_35bits["X"]=1;function _decode_2i40_9bits($subNr,$sign,$index,$startPos_ptr,$cod,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $subNr_addr;var $sign_addr;var $index_addr;var $startPos_ptr_addr;var $cod_addr;var $pOverflow_addr;var $i;var $j;var $k;var $pos=__stackBase__;$subNr_addr=$subNr;$sign_addr=$sign;$index_addr=$index;$startPos_ptr_addr=$startPos_ptr;$cod_addr=$cod;$pOverflow_addr=$pOverflow;var $0=$index_addr;var $conv=$0<<16>>16;var $and=$conv&64;var $conv1=$and&65535;$j=$conv1;var $1=$j;var $conv2=$1<<16>>16;var $shr=$conv2>>3;var $conv3=$shr&65535;$j=$conv3;var $2=$index_addr;var $conv4=$2<<16>>16;var $and5=$conv4&7;var $conv6=$and5&65535;$i=$conv6;var $3=$subNr_addr;var $4=$pOverflow_addr;var $call=_shl55($3,1,$4);$k=$call;var $5=$j;var $conv7=$5<<16>>16;var $6=$k;var $conv8=$6<<16>>16;var $add=$conv8+$conv7|0;var $conv9=$add&65535;$k=$conv9;var $7=$i;var $conv10=$7<<16>>16;var $mul=$conv10*5|0;var $8=$k;var $inc=$8+1&65535;$k=$inc;var $idxprom=$8<<16>>16;var $9=$startPos_ptr_addr;var $arrayidx=$9+($idxprom<<1)|0;var $10=HEAP16[$arrayidx>>1];var $conv11=$10<<16>>16;var $add12=$mul+$conv11|0;var $conv13=$add12&65535;var $arrayidx14=$pos|0;HEAP16[$arrayidx14>>1]=$conv13;var $11=$index_addr;var $conv15=$11<<16>>16;var $shr16=$conv15>>3;var $conv17=$shr16&65535;$index_addr=$conv17;var $12=$index_addr;var $conv18=$12<<16>>16;var $and19=$conv18&7;var $conv20=$and19&65535;$i=$conv20;var $13=$i;var $conv21=$13<<16>>16;var $mul22=$conv21*5|0;var $14=$k;var $idxprom23=$14<<16>>16;var $15=$startPos_ptr_addr;var $arrayidx24=$15+($idxprom23<<1)|0;var $16=HEAP16[$arrayidx24>>1];var $conv25=$16<<16>>16;var $add26=$mul22+$conv25|0;var $conv27=$add26&65535;var $arrayidx28=$pos+2|0;HEAP16[$arrayidx28>>1]=$conv27;$i=39;__label__=1;break;case 1:var $17=$i;var $conv29=$17<<16>>16;var $cmp=($conv29|0)>=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $18=$i;var $idxprom31=$18<<16>>16;var $19=$cod_addr;var $arrayidx32=$19+($idxprom31<<1)|0;HEAP16[$arrayidx32>>1]=0;__label__=3;break;case 3:var $20=$i;var $dec=$20-1&65535;$i=$dec;__label__=1;break;case 4:$j=0;__label__=5;break;case 5:var $21=$j;var $conv34=$21<<16>>16;var $cmp35=($conv34|0)<2;if($cmp35){__label__=6;break}else{__label__=8;break}case 6:var $22=$sign_addr;var $conv38=$22<<16>>16;var $and39=$conv38&1;var $conv40=$and39&65535;$i=$conv40;var $23=$i;var $conv41=$23<<16>>16;var $mul42=$conv41*16383|0;var $sub=$mul42-8192|0;var $conv43=$sub&65535;var $24=$j;var $idxprom44=$24<<16>>16;var $arrayidx45=$pos+($idxprom44<<1)|0;var $25=HEAP16[$arrayidx45>>1];var $idxprom46=$25<<16>>16;var $26=$cod_addr;var $arrayidx47=$26+($idxprom46<<1)|0;HEAP16[$arrayidx47>>1]=$conv43;var $27=$sign_addr;var $conv48=$27<<16>>16;var $shr49=$conv48>>1;var $conv50=$shr49&65535;$sign_addr=$conv50;__label__=7;break;case 7:var $28=$j;var $inc52=$28+1&65535;$j=$inc52;__label__=5;break;case 8:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_decode_2i40_9bits["X"]=1;function _shl55($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl55["X"]=1;function _negate56($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mult57($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _decode_3i40_14bits($sign,$index,$cod){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $sign_addr;var $index_addr;var $cod_addr;var $i;var $j;var $pos=__stackBase__;$sign_addr=$sign;$index_addr=$index;$cod_addr=$cod;var $0=$index_addr;var $conv=$0<<16>>16;var $and=$conv&7;var $conv1=$and&65535;$i=$conv1;var $1=$i;var $conv2=$1<<16>>16;var $mul=$conv2*5|0;var $conv3=$mul&65535;var $arrayidx=$pos|0;HEAP16[$arrayidx>>1]=$conv3;var $2=$index_addr;var $conv4=$2<<16>>16;var $shr=$conv4>>3;var $conv5=$shr&65535;$index_addr=$conv5;var $3=$index_addr;var $conv6=$3<<16>>16;var $and7=$conv6&1;var $conv8=$and7&65535;$j=$conv8;var $4=$index_addr;var $conv9=$4<<16>>16;var $shr10=$conv9>>1;var $conv11=$shr10&65535;$index_addr=$conv11;var $5=$index_addr;var $conv12=$5<<16>>16;var $and13=$conv12&7;var $conv14=$and13&65535;$i=$conv14;var $6=$i;var $conv15=$6<<16>>16;var $mul16=$conv15*5|0;var $7=$j;var $conv17=$7<<16>>16;var $mul18=$conv17<<1|0;var $add=$mul16+$mul18|0;var $add19=$add+1|0;var $conv20=$add19&65535;var $arrayidx21=$pos+2|0;HEAP16[$arrayidx21>>1]=$conv20;var $8=$index_addr;var $conv22=$8<<16>>16;var $shr23=$conv22>>3;var $conv24=$shr23&65535;$index_addr=$conv24;var $9=$index_addr;var $conv25=$9<<16>>16;var $and26=$conv25&1;var $conv27=$and26&65535;$j=$conv27;var $10=$index_addr;var $conv28=$10<<16>>16;var $shr29=$conv28>>1;var $conv30=$shr29&65535;$index_addr=$conv30;var $11=$index_addr;var $conv31=$11<<16>>16;var $and32=$conv31&7;var $conv33=$and32&65535;$i=$conv33;var $12=$i;var $conv34=$12<<16>>16;var $mul35=$conv34*5|0;var $13=$j;var $conv36=$13<<16>>16;var $mul37=$conv36<<1|0;var $add38=$mul35+$mul37|0;var $add39=$add38+2|0;var $conv40=$add39&65535;var $arrayidx41=$pos+4|0;HEAP16[$arrayidx41>>1]=$conv40;$i=0;__label__=1;break;case 1:var $14=$i;var $conv42=$14<<16>>16;var $cmp=($conv42|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $15=$i;var $idxprom=$15<<16>>16;var $16=$cod_addr;var $arrayidx44=$16+($idxprom<<1)|0;HEAP16[$arrayidx44>>1]=0;__label__=3;break;case 3:var $17=$i;var $inc=$17+1&65535;$i=$inc;__label__=1;break;case 4:$j=0;__label__=5;break;case 5:var $18=$j;var $conv46=$18<<16>>16;var $cmp47=($conv46|0)<3;if($cmp47){__label__=6;break}else{__label__=8;break}case 6:var $19=$sign_addr;var $conv50=$19<<16>>16;var $and51=$conv50&1;var $conv52=$and51&65535;$i=$conv52;var $20=$i;var $conv53=$20<<16>>16;var $mul54=$conv53*16383|0;var $sub=$mul54-8192|0;var $conv55=$sub&65535;var $21=$j;var $idxprom56=$21<<16>>16;var $arrayidx57=$pos+($idxprom56<<1)|0;var $22=HEAP16[$arrayidx57>>1];var $idxprom58=$22<<16>>16;var $23=$cod_addr;var $arrayidx59=$23+($idxprom58<<1)|0;HEAP16[$arrayidx59>>1]=$conv55;var $24=$sign_addr;var $conv60=$24<<16>>16;var $shr61=$conv60>>1;var $conv62=$shr61&65535;$sign_addr=$conv62;__label__=7;break;case 7:var $25=$j;var $inc64=$25+1&65535;$j=$inc64;__label__=5;break;case 8:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_decode_3i40_14bits["X"]=1;function _decode_4i40_17bits($sign,$index,$dgray_ptr,$cod){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $sign_addr;var $index_addr;var $dgray_ptr_addr;var $cod_addr;var $i;var $j;var $pos=__stackBase__;$sign_addr=$sign;$index_addr=$index;$dgray_ptr_addr=$dgray_ptr;$cod_addr=$cod;var $0=$index_addr;var $conv=$0<<16>>16;var $and=$conv&7;var $conv1=$and&65535;$i=$conv1;var $1=$i;var $idxprom=$1<<16>>16;var $2=$dgray_ptr_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];$i=$3;var $4=$i;var $conv2=$4<<16>>16;var $mul=$conv2*5|0;var $conv3=$mul&65535;var $arrayidx4=$pos|0;HEAP16[$arrayidx4>>1]=$conv3;var $5=$index_addr;var $conv5=$5<<16>>16;var $shr=$conv5>>3;var $conv6=$shr&65535;$index_addr=$conv6;var $6=$index_addr;var $conv7=$6<<16>>16;var $and8=$conv7&7;var $conv9=$and8&65535;$i=$conv9;var $7=$i;var $idxprom10=$7<<16>>16;var $8=$dgray_ptr_addr;var $arrayidx11=$8+($idxprom10<<1)|0;var $9=HEAP16[$arrayidx11>>1];$i=$9;var $10=$i;var $conv12=$10<<16>>16;var $mul13=$conv12*5|0;var $add=$mul13+1|0;var $conv14=$add&65535;var $arrayidx15=$pos+2|0;HEAP16[$arrayidx15>>1]=$conv14;var $11=$index_addr;var $conv16=$11<<16>>16;var $shr17=$conv16>>3;var $conv18=$shr17&65535;$index_addr=$conv18;var $12=$index_addr;var $conv19=$12<<16>>16;var $and20=$conv19&7;var $conv21=$and20&65535;$i=$conv21;var $13=$i;var $idxprom22=$13<<16>>16;var $14=$dgray_ptr_addr;var $arrayidx23=$14+($idxprom22<<1)|0;var $15=HEAP16[$arrayidx23>>1];$i=$15;var $16=$i;var $conv24=$16<<16>>16;var $mul25=$conv24*5|0;var $add26=$mul25+2|0;var $conv27=$add26&65535;var $arrayidx28=$pos+4|0;HEAP16[$arrayidx28>>1]=$conv27;var $17=$index_addr;var $conv29=$17<<16>>16;var $shr30=$conv29>>3;var $conv31=$shr30&65535;$index_addr=$conv31;var $18=$index_addr;var $conv32=$18<<16>>16;var $and33=$conv32&1;var $conv34=$and33&65535;$j=$conv34;var $19=$index_addr;var $conv35=$19<<16>>16;var $shr36=$conv35>>1;var $conv37=$shr36&65535;$index_addr=$conv37;var $20=$index_addr;var $conv38=$20<<16>>16;var $and39=$conv38&7;var $conv40=$and39&65535;$i=$conv40;var $21=$i;var $idxprom41=$21<<16>>16;var $22=$dgray_ptr_addr;var $arrayidx42=$22+($idxprom41<<1)|0;var $23=HEAP16[$arrayidx42>>1];$i=$23;var $24=$i;var $conv43=$24<<16>>16;var $mul44=$conv43*5|0;var $add45=$mul44+3|0;var $25=$j;var $conv46=$25<<16>>16;var $add47=$add45+$conv46|0;var $conv48=$add47&65535;var $arrayidx49=$pos+6|0;HEAP16[$arrayidx49>>1]=$conv48;$i=0;__label__=1;break;case 1:var $26=$i;var $conv50=$26<<16>>16;var $cmp=($conv50|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $27=$i;var $idxprom52=$27<<16>>16;var $28=$cod_addr;var $arrayidx53=$28+($idxprom52<<1)|0;HEAP16[$arrayidx53>>1]=0;__label__=3;break;case 3:var $29=$i;var $inc=$29+1&65535;$i=$inc;__label__=1;break;case 4:$j=0;__label__=5;break;case 5:var $30=$j;var $conv55=$30<<16>>16;var $cmp56=($conv55|0)<4;if($cmp56){__label__=6;break}else{__label__=8;break}case 6:var $31=$sign_addr;var $conv59=$31<<16>>16;var $and60=$conv59&1;var $conv61=$and60&65535;$i=$conv61;var $32=$i;var $conv62=$32<<16>>16;var $mul63=$conv62*16383|0;var $sub=$mul63-8192|0;var $conv64=$sub&65535;var $33=$j;var $idxprom65=$33<<16>>16;var $arrayidx66=$pos+($idxprom65<<1)|0;var $34=HEAP16[$arrayidx66>>1];var $idxprom67=$34<<16>>16;var $35=$cod_addr;var $arrayidx68=$35+($idxprom67<<1)|0;HEAP16[$arrayidx68>>1]=$conv64;var $36=$sign_addr;var $conv69=$36<<16>>16;var $shr70=$conv69>>1;var $conv71=$shr70&65535;$sign_addr=$conv71;__label__=7;break;case 7:var $37=$j;var $inc73=$37+1&65535;$j=$inc73;__label__=5;break;case 8:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_decode_4i40_17bits["X"]=1;function _dec_8i40_31bits($index,$cod,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=24;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $index_addr;var $cod_addr;var $pOverflow_addr;var $i;var $j;var $pos1;var $pos2;var $sign;var $linear_signs=__stackBase__;var $linear_codewords=__stackBase__+8;$index_addr=$index;$cod_addr=$cod;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$cod_addr;var $arrayidx=$2+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $3=$i;var $inc=$3+1&65535;$i=$inc;__label__=1;break;case 4:var $4=$index_addr;var $arraydecay=$linear_signs|0;var $arraydecay2=$linear_codewords|0;var $5=$pOverflow_addr;_decompress_code($4,$arraydecay,$arraydecay2,$5);$j=0;__label__=5;break;case 5:var $6=$j;var $conv4=$6<<16>>16;var $cmp5=($conv4|0)<4;if($cmp5){__label__=6;break}else{__label__=17;break}case 6:var $7=$j;var $idxprom8=$7<<16>>16;var $arrayidx9=$linear_codewords+($idxprom8<<1)|0;var $8=HEAP16[$arrayidx9>>1];var $conv10=$8<<16>>16;var $shl=$conv10<<2;var $9=$j;var $conv11=$9<<16>>16;var $add=$shl+$conv11|0;var $conv12=$add&65535;$pos1=$conv12;var $10=$j;var $idxprom13=$10<<16>>16;var $arrayidx14=$linear_signs+($idxprom13<<1)|0;var $11=HEAP16[$arrayidx14>>1];var $conv15=$11<<16>>16;var $cmp16=($conv15|0)==0;if($cmp16){__label__=7;break}else{__label__=8;break}case 7:$sign=8191;__label__=9;break;case 8:$sign=-8191;__label__=9;break;case 9:var $12=$pos1;var $conv18=$12<<16>>16;var $cmp19=($conv18|0)<40;if($cmp19){__label__=10;break}else{__label__=11;break}case 10:var $13=$sign;var $14=$pos1;var $idxprom22=$14<<16>>16;var $15=$cod_addr;var $arrayidx23=$15+($idxprom22<<1)|0;HEAP16[$arrayidx23>>1]=$13;__label__=11;break;case 11:var $16=$j;var $conv25=$16<<16>>16;var $add26=$conv25+4|0;var $arrayidx27=$linear_codewords+($add26<<1)|0;var $17=HEAP16[$arrayidx27>>1];var $conv28=$17<<16>>16;var $shl29=$conv28<<2;var $18=$j;var $conv30=$18<<16>>16;var $add31=$shl29+$conv30|0;var $conv32=$add31&65535;$pos2=$conv32;var $19=$pos2;var $conv33=$19<<16>>16;var $20=$pos1;var $conv34=$20<<16>>16;var $cmp35=($conv33|0)<($conv34|0);if($cmp35){__label__=12;break}else{__label__=13;break}case 12:var $21=$sign;var $call=_negate56($21);$sign=$call;__label__=13;break;case 13:var $22=$pos2;var $conv39=$22<<16>>16;var $cmp40=($conv39|0)<40;if($cmp40){__label__=14;break}else{__label__=15;break}case 14:var $23=$sign;var $conv43=$23<<16>>16;var $24=$pos2;var $idxprom44=$24<<16>>16;var $25=$cod_addr;var $arrayidx45=$25+($idxprom44<<1)|0;var $26=HEAP16[$arrayidx45>>1];var $conv46=$26<<16>>16;var $add47=$conv46+$conv43|0;var $conv48=$add47&65535;HEAP16[$arrayidx45>>1]=$conv48;__label__=15;break;case 15:__label__=16;break;case 16:var $27=$j;var $inc51=$27+1&65535;$j=$inc51;__label__=5;break;case 17:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_dec_8i40_31bits["X"]=1;function _decompress_code($indx,$sign_indx,$pos_indx,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $indx_addr;var $sign_indx_addr;var $pos_indx_addr;var $pOverflow_addr;var $i;var $ia;var $ib;var $MSBs;var $LSBs;var $MSBs0_24;var $tempWord32;$indx_addr=$indx;$sign_indx_addr=$sign_indx;$pos_indx_addr=$pos_indx;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<4;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$indx_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $4=$i;var $idxprom2=$4<<16>>16;var $5=$sign_indx_addr;var $arrayidx3=$5+($idxprom2<<1)|0;HEAP16[$arrayidx3>>1]=$3;__label__=3;break;case 3:var $6=$i;var $inc=$6+1&65535;$i=$inc;__label__=1;break;case 4:var $7=$indx_addr;var $arrayidx4=$7+8|0;var $8=HEAP16[$arrayidx4>>1];var $conv5=$8<<16>>16;var $shr=$conv5>>3;var $conv6=$shr&65535;$MSBs=$conv6;var $9=$indx_addr;var $arrayidx7=$9+8|0;var $10=HEAP16[$arrayidx7>>1];var $conv8=$10<<16>>16;var $and=$conv8&7;var $conv9=$and&65535;$LSBs=$conv9;var $11=$MSBs;var $12=$LSBs;var $13=$pos_indx_addr;var $14=$pOverflow_addr;_decompress10($11,$12,0,4,1,$13,$14);var $15=$indx_addr;var $arrayidx10=$15+10|0;var $16=HEAP16[$arrayidx10>>1];var $conv11=$16<<16>>16;var $shr12=$conv11>>3;var $conv13=$shr12&65535;$MSBs=$conv13;var $17=$indx_addr;var $arrayidx14=$17+10|0;var $18=HEAP16[$arrayidx14>>1];var $conv15=$18<<16>>16;var $and16=$conv15&7;var $conv17=$and16&65535;$LSBs=$conv17;var $19=$MSBs;var $20=$LSBs;var $21=$pos_indx_addr;var $22=$pOverflow_addr;_decompress10($19,$20,2,6,5,$21,$22);var $23=$indx_addr;var $arrayidx18=$23+12|0;var $24=HEAP16[$arrayidx18>>1];var $conv19=$24<<16>>16;var $shr20=$conv19>>2;var $conv21=$shr20&65535;$MSBs=$conv21;var $25=$indx_addr;var $arrayidx22=$25+12|0;var $26=HEAP16[$arrayidx22>>1];var $conv23=$26<<16>>16;var $and24=$conv23&3;var $conv25=$and24&65535;$LSBs=$conv25;var $27=$MSBs;var $28=$pOverflow_addr;var $call=_L_mult57($27,25,$28);$tempWord32=$call;var $29=$tempWord32;var $30=$pOverflow_addr;var $call26=_L_shr58($29,1,$30);var $conv27=$call26&65535;$ia=$conv27;var $31=$ia;var $conv28=$31<<16>>16;var $add=$conv28+12|0;var $conv29=$add&65535;$ia=$conv29;var $32=$ia;var $conv30=$32<<16>>16;var $shr31=$conv30>>5;var $conv32=$shr31&65535;$MSBs0_24=$conv32;var $33=$MSBs0_24;var $34=$pOverflow_addr;var $call33=_mult59($33,6554,$34);$ia=$call33;var $35=$ia;var $conv34=$35<<16>>16;var $and35=$conv34&1;var $conv36=$and35&65535;$ia=$conv36;var $36=$MSBs0_24;var $37=$pOverflow_addr;var $call37=_mult59($36,6554,$37);$ib=$call37;var $38=$ib;var $39=$pOverflow_addr;var $call38=_L_mult57($38,5,$39);$tempWord32=$call38;var $40=$MSBs0_24;var $conv39=$40<<16>>16;var $41=$tempWord32;var $shr40=$41>>1;var $conv41=$shr40&65535;var $conv42=$conv41<<16>>16;var $sub=$conv39-$conv42|0;var $conv43=$sub&65535;$ib=$conv43;var $42=$ia;var $conv44=$42<<16>>16;var $cmp45=($conv44|0)==1;if($cmp45){__label__=5;break}else{__label__=6;break}case 5:var $43=$ib;var $conv47=$43<<16>>16;var $sub48=4-$conv47|0;var $conv49=$sub48&65535;$ib=$conv49;__label__=6;break;case 6:var $44=$ib;var $45=$pOverflow_addr;var $call50=_shl60($44,1,$45);$ib=$call50;var $46=$LSBs;var $conv51=$46<<16>>16;var $and52=$conv51&1;var $conv53=$and52&65535;$ia=$conv53;var $47=$ib;var $48=$ia;var $49=$pOverflow_addr;var $call54=_add_16($47,$48,$49);var $50=$pos_indx_addr;var $arrayidx55=$50+6|0;HEAP16[$arrayidx55>>1]=$call54;var $51=$MSBs0_24;var $52=$pOverflow_addr;var $call56=_mult59($51,6554,$52);$ia=$call56;var $53=$ia;var $54=$pOverflow_addr;var $call57=_shl60($53,1,$54);$ia=$call57;var $55=$ia;var $conv58=$55<<16>>16;var $56=$LSBs;var $conv59=$56<<16>>16;var $shr60=$conv59>>1;var $add61=$conv58+$shr60|0;var $conv62=$add61&65535;var $57=$pos_indx_addr;var $arrayidx63=$57+14|0;HEAP16[$arrayidx63>>1]=$conv62;return;default:assert(0,"bad label: "+__label__)}}_decompress_code["X"]=1;function _decompress10($MSBs,$LSBs,$index1,$index2,$index3,$pos_indx,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $MSBs_addr;var $LSBs_addr;var $index1_addr;var $index2_addr;var $index3_addr;var $pos_indx_addr;var $pOverflow_addr;var $ia;var $ib;var $ic;var $tempWord32;$MSBs_addr=$MSBs;$LSBs_addr=$LSBs;$index1_addr=$index1;$index2_addr=$index2;$index3_addr=$index3;$pos_indx_addr=$pos_indx;$pOverflow_addr=$pOverflow;var $0=$MSBs_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)>124;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$MSBs_addr=124;__label__=2;break;case 2:var $1=$MSBs_addr;var $2=$pOverflow_addr;var $call=_mult59($1,1311,$2);$ia=$call;var $3=$ia;var $4=$pOverflow_addr;var $call2=_L_mult57($3,25,$4);$tempWord32=$call2;var $5=$MSBs_addr;var $conv3=$5<<16>>16;var $6=$tempWord32;var $shr=$6>>1;var $sub=$conv3-$shr|0;var $conv4=$sub&65535;$ia=$conv4;var $7=$ia;var $8=$pOverflow_addr;var $call5=_mult59($7,6554,$8);$ib=$call5;var $9=$ib;var $10=$pOverflow_addr;var $call6=_L_mult57($9,5,$10);$tempWord32=$call6;var $11=$ia;var $conv7=$11<<16>>16;var $12=$tempWord32;var $shr8=$12>>1;var $conv9=$shr8&65535;var $conv10=$conv9<<16>>16;var $sub11=$conv7-$conv10|0;var $conv12=$sub11&65535;$ib=$conv12;var $13=$ib;var $14=$pOverflow_addr;var $call13=_shl60($13,1,$14);$ib=$call13;var $15=$LSBs_addr;var $conv14=$15<<16>>16;var $16=$LSBs_addr;var $conv15=$16<<16>>16;var $shr16=$conv15>>2;var $shl=$shr16<<2;var $sub17=$conv14-$shl|0;var $conv18=$sub17&65535;$ic=$conv18;var $17=$ib;var $conv19=$17<<16>>16;var $18=$ic;var $conv20=$18<<16>>16;var $and=$conv20&1;var $add=$conv19+$and|0;var $conv21=$add&65535;var $19=$index1_addr;var $idxprom=$19<<16>>16;var $20=$pos_indx_addr;var $arrayidx=$20+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=$conv21;var $21=$ia;var $22=$pOverflow_addr;var $call22=_mult59($21,6554,$22);$ib=$call22;var $23=$ib;var $24=$pOverflow_addr;var $call23=_shl60($23,1,$24);$ib=$call23;var $25=$ib;var $conv24=$25<<16>>16;var $26=$ic;var $conv25=$26<<16>>16;var $shr26=$conv25>>1;var $add27=$conv24+$shr26|0;var $conv28=$add27&65535;var $27=$index2_addr;var $idxprom29=$27<<16>>16;var $28=$pos_indx_addr;var $arrayidx30=$28+($idxprom29<<1)|0;HEAP16[$arrayidx30>>1]=$conv28;var $29=$LSBs_addr;var $conv31=$29<<16>>16;var $shr32=$conv31>>2;var $conv33=$shr32&65535;$ib=$conv33;var $30=$MSBs_addr;var $31=$pOverflow_addr;var $call34=_mult59($30,1311,$31);$ic=$call34;var $32=$ic;var $33=$pOverflow_addr;var $call35=_shl60($32,1,$33);$ic=$call35;var $34=$ib;var $35=$ic;var $36=$pOverflow_addr;var $call36=_add_16($34,$35,$36);var $37=$index3_addr;var $idxprom37=$37<<16>>16;var $38=$pos_indx_addr;var $arrayidx38=$38+($idxprom37<<1)|0;HEAP16[$arrayidx38>>1]=$call36;return;default:assert(0,"bad label: "+__label__)}}_decompress10["X"]=1;function _L_shr58($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _mult59($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _shl60($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl60["X"]=1;function _Decoder_amr_init($s){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $s_addr;var $i;$s_addr=$s;var $0=$s_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$s_addr;var $common_amr_tbls=$1+1168|0;_get_const_tbls($common_amr_tbls);var $2=$s_addr;var $T0_lagBuff=$2+460|0;HEAP16[$T0_lagBuff>>1]=40;var $3=$s_addr;var $inBackgroundNoise=$3+462|0;HEAP16[$inBackgroundNoise>>1]=0;var $4=$s_addr;var $voicedHangover=$4+464|0;HEAP16[$voicedHangover>>1]=0;var $5=$s_addr;var $overflow=$5+1164|0;HEAP32[$overflow>>2]=0;$i=0;__label__=3;break;case 3:var $6=$i;var $conv=$6<<16>>16;var $cmp1=($conv|0)<9;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $7=$i;var $idxprom=$7<<16>>16;var $8=$s_addr;var $ltpGainHistory=$8+466|0;var $arrayidx=$ltpGainHistory+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=5;break;case 5:var $9=$i;var $inc=$9+1&65535;$i=$inc;__label__=3;break;case 6:var $10=$s_addr;var $lsfState=$10+646|0;var $11=$s_addr;var $common_amr_tbls3=$11+1168|0;var $mean_lsf_5_ptr=$common_amr_tbls3+48|0;var $12=HEAP32[$mean_lsf_5_ptr>>2];var $call=_D_plsf_reset($lsfState,$12);var $13=$s_addr;var $ec_gain_p_st=$13+686|0;var $call4=_ec_gain_pitch_reset($ec_gain_p_st);var $14=$s_addr;var $ec_gain_c_st=$14+700|0;var $call5=_ec_gain_code_reset($ec_gain_c_st);var $15=$s_addr;var $Cb_gain_averState=$15+608|0;var $call6=_Cb_gain_average_reset($Cb_gain_averState);var $16=$s_addr;var $lsp_avg_st=$16+626|0;var $17=$s_addr;var $common_amr_tbls7=$17+1168|0;var $mean_lsf_5_ptr8=$common_amr_tbls7+48|0;var $18=HEAP32[$mean_lsf_5_ptr8>>2];var $call9=_lsp_avg_reset($lsp_avg_st,$18);var $19=$s_addr;var $background_state=$19+484|0;var $call10=_Bgn_scd_reset($background_state);var $20=$s_addr;var $ph_disp_st=$20+730|0;var $call11=_ph_disp_reset($ph_disp_st);var $21=$s_addr;var $dtxDecoderState=$21+748|0;var $call12=_dtx_dec_reset($dtxDecoderState);var $22=$s_addr;var $pred_state=$22+714|0;var $call13=_gc_pred_reset($pred_state);var $23=$s_addr;var $call14=_Decoder_amr_reset($23,0);$retval=0;__label__=7;break;case 7:var $24=$retval;return $24;default:assert(0,"bad label: "+__label__)}}_Decoder_amr_init["X"]=1;function _Decoder_amr_reset($state,$mode){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $mode_addr;var $i;$state_addr=$state;$mode_addr=$mode;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=23;break;case 2:var $1=$state_addr;var $old_exc=$1|0;var $arraydecay=$old_exc|0;var $add_ptr=$arraydecay+286|0;var $add_ptr1=$add_ptr+22|0;var $2=$state_addr;var $exc=$2+388|0;HEAP32[$exc>>2]=$add_ptr1;var $3=$state_addr;var $old_exc2=$3|0;var $arraydecay3=$old_exc2|0;var $4=$arraydecay3;_memset($4,0,308,1);var $5=$mode_addr;var $cmp4=($5|0)!=8;if($cmp4){__label__=3;break}else{__label__=4;break}case 3:var $6=$state_addr;var $mem_syn=$6+412|0;var $arraydecay6=$mem_syn|0;var $7=$arraydecay6;_memset($7,0,20,1);__label__=4;break;case 4:var $8=$state_addr;var $sharp=$8+432|0;HEAP16[$sharp>>1]=0;var $9=$state_addr;var $old_T0=$9+434|0;HEAP16[$old_T0>>1]=40;var $10=$state_addr;var $overflow=$10+1164|0;HEAP32[$overflow>>2]=0;var $11=$mode_addr;var $cmp8=($11|0)!=8;if($cmp8){__label__=5;break}else{__label__=6;break}case 5:var $12=$state_addr;var $lsp_old=$12+392|0;var $arrayidx=$lsp_old|0;HEAP16[$arrayidx>>1]=3e4;var $13=$state_addr;var $lsp_old10=$13+392|0;var $arrayidx11=$lsp_old10+2|0;HEAP16[$arrayidx11>>1]=26e3;var $14=$state_addr;var $lsp_old12=$14+392|0;var $arrayidx13=$lsp_old12+4|0;HEAP16[$arrayidx13>>1]=21e3;var $15=$state_addr;var $lsp_old14=$15+392|0;var $arrayidx15=$lsp_old14+6|0;HEAP16[$arrayidx15>>1]=15e3;var $16=$state_addr;var $lsp_old16=$16+392|0;var $arrayidx17=$lsp_old16+8|0;HEAP16[$arrayidx17>>1]=8e3;var $17=$state_addr;var $lsp_old18=$17+392|0;var $arrayidx19=$lsp_old18+10|0;HEAP16[$arrayidx19>>1]=0;var $18=$state_addr;var $lsp_old20=$18+392|0;var $arrayidx21=$lsp_old20+12|0;HEAP16[$arrayidx21>>1]=-8e3;var $19=$state_addr;var $lsp_old22=$19+392|0;var $arrayidx23=$lsp_old22+14|0;HEAP16[$arrayidx23>>1]=-15e3;var $20=$state_addr;var $lsp_old24=$20+392|0;var $arrayidx25=$lsp_old24+16|0;HEAP16[$arrayidx25>>1]=-21e3;var $21=$state_addr;var $lsp_old26=$21+392|0;var $arrayidx27=$lsp_old26+18|0;HEAP16[$arrayidx27>>1]=-26e3;__label__=6;break;case 6:var $22=$state_addr;var $prev_bf=$22+436|0;HEAP16[$prev_bf>>1]=0;var $23=$state_addr;var $prev_pdf=$23+438|0;HEAP16[$prev_pdf>>1]=0;var $24=$state_addr;var $state29=$24+440|0;HEAP16[$state29>>1]=0;var $25=$state_addr;var $T0_lagBuff=$25+460|0;HEAP16[$T0_lagBuff>>1]=40;var $26=$state_addr;var $inBackgroundNoise=$26+462|0;HEAP16[$inBackgroundNoise>>1]=0;var $27=$state_addr;var $voicedHangover=$27+464|0;HEAP16[$voicedHangover>>1]=0;var $28=$mode_addr;var $cmp30=($28|0)!=8;if($cmp30){__label__=7;break}else{__label__=12;break}case 7:$i=0;__label__=8;break;case 8:var $29=$i;var $conv=$29<<16>>16;var $cmp32=($conv|0)<9;if($cmp32){__label__=9;break}else{__label__=11;break}case 9:var $30=$i;var $idxprom=$30<<16>>16;var $31=$state_addr;var $excEnergyHist=$31+442|0;var $arrayidx34=$excEnergyHist+($idxprom<<1)|0;HEAP16[$arrayidx34>>1]=0;__label__=10;break;case 10:var $32=$i;var $inc=$32+1&65535;$i=$inc;__label__=8;break;case 11:__label__=12;break;case 12:$i=0;__label__=13;break;case 13:var $33=$i;var $conv37=$33<<16>>16;var $cmp38=($conv37|0)<9;if($cmp38){__label__=14;break}else{__label__=16;break}case 14:var $34=$i;var $idxprom41=$34<<16>>16;var $35=$state_addr;var $ltpGainHistory=$35+466|0;var $arrayidx42=$ltpGainHistory+($idxprom41<<1)|0;HEAP16[$arrayidx42>>1]=0;__label__=15;break;case 15:var $36=$i;var $inc44=$36+1&65535;$i=$inc44;__label__=13;break;case 16:var $37=$state_addr;var $Cb_gain_averState=$37+608|0;var $call=_Cb_gain_average_reset($Cb_gain_averState);var $38=$mode_addr;var $cmp46=($38|0)!=8;if($cmp46){__label__=17;break}else{__label__=18;break}case 17:var $39=$state_addr;var $lsp_avg_st=$39+626|0;var $40=$state_addr;var $common_amr_tbls=$40+1168|0;var $mean_lsf_5_ptr=$common_amr_tbls+48|0;var $41=HEAP32[$mean_lsf_5_ptr>>2];var $call49=_lsp_avg_reset($lsp_avg_st,$41);__label__=18;break;case 18:var $42=$state_addr;var $lsfState=$42+646|0;var $43=$state_addr;var $common_amr_tbls51=$43+1168|0;var $mean_lsf_5_ptr52=$common_amr_tbls51+48|0;var $44=HEAP32[$mean_lsf_5_ptr52>>2];var $call53=_D_plsf_reset($lsfState,$44);var $45=$state_addr;var $ec_gain_p_st=$45+686|0;var $call54=_ec_gain_pitch_reset($ec_gain_p_st);var $46=$state_addr;var $ec_gain_c_st=$46+700|0;var $call55=_ec_gain_code_reset($ec_gain_c_st);var $47=$mode_addr;var $cmp56=($47|0)!=8;if($cmp56){__label__=19;break}else{__label__=20;break}case 19:var $48=$state_addr;var $pred_state=$48+714|0;var $call59=_gc_pred_reset($pred_state);__label__=20;break;case 20:var $49=$state_addr;var $background_state=$49+484|0;var $call61=_Bgn_scd_reset($background_state);var $50=$state_addr;var $nodataSeed=$50+606|0;HEAP16[$nodataSeed>>1]=21845;var $51=$state_addr;var $ph_disp_st=$51+730|0;var $call62=_ph_disp_reset($ph_disp_st);var $52=$mode_addr;var $cmp63=($52|0)!=8;if($cmp63){__label__=21;break}else{__label__=22;break}case 21:var $53=$state_addr;var $dtxDecoderState=$53+748|0;var $call66=_dtx_dec_reset($dtxDecoderState);__label__=22;break;case 22:$retval=0;__label__=23;break;case 23:var $54=$retval;return $54;default:assert(0,"bad label: "+__label__)}}_Decoder_amr_reset["X"]=1;function _Decoder_amr($st,$mode,$parm,$frame_type,$synth,$A_t){var __stackBase__=STACKTOP;STACKTOP+=340;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $parm_addr;var $frame_type_addr;var $synth_addr;var $A_t_addr;var $Az;var $lsp_new=__stackBase__;var $lsp_mid=__stackBase__+20;var $prev_lsf=__stackBase__+40;var $lsf_i=__stackBase__+60;var $code=__stackBase__+80;var $excp=__stackBase__+160;var $exc_enhanced=__stackBase__+240;var $i;var $i_subfr;var $T0=__stackBase__+320;var $T0_frac=__stackBase__+324;var $index;var $index_mr475;var $gain_pit=__stackBase__+328;var $gain_code=__stackBase__+332;var $gain_code_mix;var $pit_sharp;var $pit_flag;var $pitch_fac;var $t0_min;var $t0_max;var $delta_frc_low;var $delta_frc_range;var $tmp_shift;var $temp=__stackBase__+336;var $L_temp;var $flag4;var $carefulFlag;var $excEnergy;var $subfrNr;var $evenSubfr;var $bfi;var $pdfi;var $newDTXState;var $pOverflow;$st_addr=$st;$mode_addr=$mode;$parm_addr=$parm;$frame_type_addr=$frame_type;$synth_addr=$synth;$A_t_addr=$A_t;$index_mr475=0;$evenSubfr=0;$bfi=0;$pdfi=0;var $0=$st_addr;var $overflow=$0+1164|0;$pOverflow=$overflow;var $1=$st_addr;var $dtxDecoderState=$1+748|0;var $2=$frame_type_addr;var $3=$pOverflow;var $call=_rx_dtx_handler($dtxDecoderState,$2,$3);$newDTXState=$call;var $4=$newDTXState;var $cmp=($4|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $call1=_Decoder_amr_reset($5,8);var $6=$st_addr;var $dtxDecoderState2=$6+748|0;var $7=$st_addr;var $mem_syn=$7+412|0;var $arraydecay=$mem_syn|0;var $8=$st_addr;var $lsfState=$8+646|0;var $9=$st_addr;var $pred_state=$9+714|0;var $10=$st_addr;var $Cb_gain_averState=$10+608|0;var $11=$newDTXState;var $12=$mode_addr;var $13=$parm_addr;var $14=$st_addr;var $common_amr_tbls=$14+1168|0;var $15=$synth_addr;var $16=$A_t_addr;var $17=$pOverflow;_dtx_dec($dtxDecoderState2,$arraydecay,$lsfState,$pred_state,$Cb_gain_averState,$11,$12,$13,$common_amr_tbls,$15,$16,$17);var $18=$st_addr;var $lsfState3=$18+646|0;var $past_lsf_q=$lsfState3+20|0;var $arraydecay4=$past_lsf_q|0;var $19=$st_addr;var $lsp_old=$19+392|0;var $arraydecay5=$lsp_old|0;var $20=$pOverflow;_Lsf_lsp($arraydecay4,$arraydecay5,10,$20);var $21=$st_addr;var $lsp_avg_st=$21+626|0;var $22=$st_addr;var $lsfState6=$22+646|0;var $past_lsf_q7=$lsfState6+20|0;var $arraydecay8=$past_lsf_q7|0;var $23=$pOverflow;_lsp_avg($lsp_avg_st,$arraydecay8,$23);__label__=261;break;case 2:var $24=$frame_type_addr;var $cmp9=($24|0)==3;if($cmp9){__label__=5;break}else{__label__=3;break}case 3:var $25=$frame_type_addr;var $cmp10=($25|0)==7;if($cmp10){__label__=5;break}else{__label__=4;break}case 4:var $26=$frame_type_addr;var $cmp12=($26|0)==2;if($cmp12){__label__=5;break}else{__label__=9;break}case 5:$bfi=1;var $27=$frame_type_addr;var $cmp14=($27|0)==7;if($cmp14){__label__=7;break}else{__label__=6;break}case 6:var $28=$frame_type_addr;var $cmp16=($28|0)==2;if($cmp16){__label__=7;break}else{__label__=8;break}case 7:var $29=$st_addr;var $nodataSeed=$29+606|0;var $30=$mode_addr;var $31=$st_addr;var $common_amr_tbls18=$31+1168|0;var $prmno_ptr=$common_amr_tbls18+88|0;var $32=HEAP32[$prmno_ptr>>2];var $arrayidx=$32+($30<<1)|0;var $33=HEAP16[$arrayidx>>1];var $34=$mode_addr;var $35=$st_addr;var $common_amr_tbls19=$35+1168|0;var $bitno_ptr=$common_amr_tbls19+92|0;var $36=HEAP32[$bitno_ptr>>2];var $arrayidx20=$36+($34<<2)|0;var $37=HEAP32[$arrayidx20>>2];var $38=$parm_addr;var $39=$st_addr;var $common_amr_tbls21=$39+1168|0;var $window_200_40_ptr=$common_amr_tbls21+108|0;var $40=HEAP32[$window_200_40_ptr>>2];var $41=$pOverflow;_build_CN_param($nodataSeed,$33,$37,$38,$40,$41);__label__=8;break;case 8:__label__=12;break;case 9:var $42=$frame_type_addr;var $cmp23=($42|0)==1;if($cmp23){__label__=10;break}else{__label__=11;break}case 10:$pdfi=1;__label__=11;break;case 11:__label__=12;break;case 12:var $43=$bfi;var $conv=$43<<16>>16;var $cmp27=($conv|0)!=0;if($cmp27){__label__=13;break}else{__label__=14;break}case 13:var $44=$st_addr;var $state=$44+440|0;var $45=HEAP16[$state>>1];var $conv30=$45<<16>>16;var $add=$conv30+1|0;var $conv31=$add&65535;HEAP16[$state>>1]=$conv31;__label__=18;break;case 14:var $46=$st_addr;var $state33=$46+440|0;var $47=HEAP16[$state33>>1];var $conv34=$47<<16>>16;var $cmp35=($conv34|0)==6;if($cmp35){__label__=15;break}else{__label__=16;break}case 15:var $48=$st_addr;var $state38=$48+440|0;HEAP16[$state38>>1]=5;__label__=17;break;case 16:var $49=$st_addr;var $state40=$49+440|0;HEAP16[$state40>>1]=0;__label__=17;break;case 17:__label__=18;break;case 18:var $50=$st_addr;var $state43=$50+440|0;var $51=HEAP16[$state43>>1];var $conv44=$51<<16>>16;var $cmp45=($conv44|0)>6;if($cmp45){__label__=19;break}else{__label__=20;break}case 19:var $52=$st_addr;var $state48=$52+440|0;HEAP16[$state48>>1]=6;__label__=20;break;case 20:var $53=$st_addr;var $dtxDecoderState50=$53+748|0;var $dtxGlobalState=$dtxDecoderState50+408|0;var $54=HEAP32[$dtxGlobalState>>2];var $cmp51=($54|0)==1;if($cmp51){__label__=21;break}else{__label__=22;break}case 21:var $55=$st_addr;var $state54=$55+440|0;HEAP16[$state54>>1]=5;var $56=$st_addr;var $prev_bf=$56+436|0;HEAP16[$prev_bf>>1]=0;__label__=25;break;case 22:var $57=$st_addr;var $dtxDecoderState56=$57+748|0;var $dtxGlobalState57=$dtxDecoderState56+408|0;var $58=HEAP32[$dtxGlobalState57>>2];var $cmp58=($58|0)==2;if($cmp58){__label__=23;break}else{__label__=24;break}case 23:var $59=$st_addr;var $state61=$59+440|0;HEAP16[$state61>>1]=5;var $60=$st_addr;var $prev_bf62=$60+436|0;HEAP16[$prev_bf62>>1]=1;__label__=24;break;case 24:__label__=25;break;case 25:var $arraydecay65=$prev_lsf|0;var $61=$arraydecay65;var $62=$st_addr;var $lsfState66=$62+646|0;var $past_lsf_q67=$lsfState66+20|0;var $arraydecay68=$past_lsf_q67|0;var $63=$arraydecay68;_llvm_memmove_p0i8_p0i8_i32($61,$63,20,1,0);var $64=$mode_addr;var $cmp69=($64|0)!=7;if($cmp69){__label__=26;break}else{__label__=27;break}case 26:var $65=$st_addr;var $lsfState72=$65+646|0;var $66=$mode_addr;var $67=$bfi;var $68=$parm_addr;var $69=$st_addr;var $common_amr_tbls73=$69+1168|0;var $arraydecay74=$lsp_new|0;var $70=$pOverflow;_D_plsf_3($lsfState72,$66,$67,$68,$common_amr_tbls73,$arraydecay74,$70);var $71=$parm_addr;var $add_ptr=$71+6|0;$parm_addr=$add_ptr;var $72=$st_addr;var $lsp_old75=$72+392|0;var $arraydecay76=$lsp_old75|0;var $arraydecay77=$lsp_new|0;var $73=$A_t_addr;var $74=$pOverflow;_Int_lpc_1to3($arraydecay76,$arraydecay77,$73,$74);__label__=28;break;case 27:var $75=$st_addr;var $lsfState79=$75+646|0;var $76=$bfi;var $77=$parm_addr;var $78=$st_addr;var $common_amr_tbls80=$78+1168|0;var $arraydecay81=$lsp_mid|0;var $arraydecay82=$lsp_new|0;var $79=$pOverflow;_D_plsf_5($lsfState79,$76,$77,$common_amr_tbls80,$arraydecay81,$arraydecay82,$79);var $80=$parm_addr;var $add_ptr83=$80+10|0;$parm_addr=$add_ptr83;var $81=$st_addr;var $lsp_old84=$81+392|0;var $arraydecay85=$lsp_old84|0;var $arraydecay86=$lsp_mid|0;var $arraydecay87=$lsp_new|0;var $82=$A_t_addr;var $83=$pOverflow;_Int_lpc_1and3($arraydecay85,$arraydecay86,$arraydecay87,$82,$83);__label__=28;break;case 28:$i=0;__label__=29;break;case 29:var $84=$i;var $conv89=$84<<16>>16;var $cmp90=($conv89|0)<10;if($cmp90){__label__=30;break}else{__label__=32;break}case 30:var $85=$i;var $idxprom=$85<<16>>16;var $arrayidx92=$lsp_new+($idxprom<<1)|0;var $86=HEAP16[$arrayidx92>>1];var $87=$i;var $idxprom93=$87<<16>>16;var $88=$st_addr;var $lsp_old94=$88+392|0;var $arrayidx95=$lsp_old94+($idxprom93<<1)|0;HEAP16[$arrayidx95>>1]=$86;__label__=31;break;case 31:var $89=$i;var $inc=$89+1&65535;$i=$inc;__label__=29;break;case 32:var $90=$A_t_addr;$Az=$90;$evenSubfr=0;$subfrNr=-1;$i_subfr=0;__label__=33;break;case 33:var $91=$i_subfr;var $conv97=$91<<16>>16;var $cmp98=($conv97|0)<160;if($cmp98){__label__=34;break}else{__label__=260;break}case 34:var $92=$subfrNr;var $conv101=$92<<16>>16;var $add102=$conv101+1|0;var $conv103=$add102&65535;$subfrNr=$conv103;var $93=$evenSubfr;var $conv104=$93<<16>>16;var $sub=1-$conv104|0;var $conv105=$sub&65535;$evenSubfr=$conv105;var $94=$i_subfr;$pit_flag=$94;var $95=$i_subfr;var $conv106=$95<<16>>16;var $cmp107=($conv106|0)==80;if($cmp107){__label__=35;break}else{__label__=39;break}case 35:var $96=$mode_addr;var $cmp110=($96|0)!=0;if($cmp110){__label__=36;break}else{__label__=38;break}case 36:var $97=$mode_addr;var $cmp112=($97|0)!=1;if($cmp112){__label__=37;break}else{__label__=38;break}case 37:$pit_flag=0;__label__=38;break;case 38:__label__=39;break;case 39:var $98=$parm_addr;var $incdec_ptr=$98+2|0;$parm_addr=$incdec_ptr;var $99=HEAP16[$98>>1];$index=$99;var $100=$mode_addr;var $cmp117=($100|0)!=7;if($cmp117){__label__=40;break}else{__label__=62;break}case 40:$flag4=0;var $101=$mode_addr;var $cmp120=($101|0)==0;if($cmp120){__label__=44;break}else{__label__=41;break}case 41:var $102=$mode_addr;var $cmp123=($102|0)==1;if($cmp123){__label__=44;break}else{__label__=42;break}case 42:var $103=$mode_addr;var $cmp126=($103|0)==2;if($cmp126){__label__=44;break}else{__label__=43;break}case 43:var $104=$mode_addr;var $cmp129=($104|0)==3;if($cmp129){__label__=44;break}else{__label__=45;break}case 44:$flag4=1;__label__=45;break;case 45:$delta_frc_low=5;$delta_frc_range=9;var $105=$mode_addr;var $cmp133=($105|0)==5;if($cmp133){__label__=46;break}else{__label__=47;break}case 46:$delta_frc_low=10;$delta_frc_range=19;__label__=47;break;case 47:var $106=$st_addr;var $old_T0=$106+434|0;var $107=HEAP16[$old_T0>>1];var $conv137=$107<<16>>16;var $108=$delta_frc_low;var $conv138=$108<<16>>16;var $sub139=$conv137-$conv138|0;var $conv140=$sub139&65535;$t0_min=$conv140;var $109=$t0_min;var $conv141=$109<<16>>16;var $cmp142=($conv141|0)<20;if($cmp142){__label__=48;break}else{__label__=49;break}case 48:$t0_min=20;__label__=49;break;case 49:var $110=$t0_min;var $conv146=$110<<16>>16;var $111=$delta_frc_range;var $conv147=$111<<16>>16;var $add148=$conv146+$conv147|0;var $conv149=$add148&65535;$t0_max=$conv149;var $112=$t0_max;var $conv150=$112<<16>>16;var $cmp151=($conv150|0)>143;if($cmp151){__label__=50;break}else{__label__=51;break}case 50:$t0_max=143;var $113=$t0_max;var $conv154=$113<<16>>16;var $114=$delta_frc_range;var $conv155=$114<<16>>16;var $sub156=$conv154-$conv155|0;var $conv157=$sub156&65535;$t0_min=$conv157;__label__=51;break;case 51:var $115=$index;var $116=$t0_min;var $117=$t0_max;var $118=$pit_flag;var $119=$st_addr;var $old_T0159=$119+434|0;var $120=HEAP16[$old_T0159>>1];var $121=$flag4;var $122=$pOverflow;_Dec_lag3($115,$116,$117,$118,$120,$T0,$T0_frac,$121,$122);var $123=HEAP16[$T0>>1];var $124=$st_addr;var $T0_lagBuff=$124+460|0;HEAP16[$T0_lagBuff>>1]=$123;var $125=$bfi;var $conv160=$125<<16>>16;var $cmp161=($conv160|0)!=0;if($cmp161){__label__=52;break}else{__label__=61;break}case 52:var $126=$st_addr;var $old_T0164=$126+434|0;var $127=HEAP16[$old_T0164>>1];var $conv165=$127<<16>>16;var $cmp166=($conv165|0)<143;if($cmp166){__label__=53;break}else{__label__=54;break}case 53:var $128=$st_addr;var $old_T0169=$128+434|0;var $129=HEAP16[$old_T0169>>1];var $conv170=$129<<16>>16;var $add171=$conv170+1|0;var $conv172=$add171&65535;HEAP16[$old_T0169>>1]=$conv172;__label__=54;break;case 54:var $130=$st_addr;var $old_T0174=$130+434|0;var $131=HEAP16[$old_T0174>>1];HEAP16[$T0>>1]=$131;HEAP16[$T0_frac>>1]=0;var $132=$st_addr;var $inBackgroundNoise=$132+462|0;var $133=HEAP16[$inBackgroundNoise>>1];var $conv175=$133<<16>>16;var $cmp176=($conv175|0)!=0;if($cmp176){__label__=55;break}else{__label__=60;break}case 55:var $134=$st_addr;var $voicedHangover=$134+464|0;var $135=HEAP16[$voicedHangover>>1];var $conv179=$135<<16>>16;var $cmp180=($conv179|0)>4;if($cmp180){__label__=56;break}else{__label__=60;break}case 56:var $136=$mode_addr;var $cmp183=($136|0)==0;if($cmp183){__label__=59;break}else{__label__=57;break}case 57:var $137=$mode_addr;var $cmp186=($137|0)==1;if($cmp186){__label__=59;break}else{__label__=58;break}case 58:var $138=$mode_addr;var $cmp189=($138|0)==2;if($cmp189){__label__=59;break}else{__label__=60;break}case 59:var $139=$st_addr;var $T0_lagBuff192=$139+460|0;var $140=HEAP16[$T0_lagBuff192>>1];HEAP16[$T0>>1]=$140;__label__=60;break;case 60:__label__=61;break;case 61:var $141=$st_addr;var $exc=$141+388|0;var $142=HEAP32[$exc>>2];var $143=HEAP16[$T0>>1];var $144=HEAP16[$T0_frac>>1];var $145=$pOverflow;_Pred_lt_3or6($142,$143,$144,40,1,$145);__label__=67;break;case 62:var $146=$index;var $147=$pit_flag;var $148=$pOverflow;_Dec_lag6($146,18,143,$147,$T0,$T0_frac,$148);var $149=$bfi;var $conv196=$149<<16>>16;var $cmp197=($conv196|0)==0;if($cmp197){__label__=63;break}else{__label__=65;break}case 63:var $150=$pit_flag;var $conv200=$150<<16>>16;var $cmp201=($conv200|0)==0;if($cmp201){__label__=66;break}else{__label__=64;break}case 64:var $151=$index;var $conv204=$151<<16>>16;var $cmp205=($conv204|0)<61;if($cmp205){__label__=66;break}else{__label__=65;break}case 65:var $152=HEAP16[$T0>>1];var $153=$st_addr;var $T0_lagBuff208=$153+460|0;HEAP16[$T0_lagBuff208>>1]=$152;var $154=$st_addr;var $old_T0209=$154+434|0;var $155=HEAP16[$old_T0209>>1];HEAP16[$T0>>1]=$155;HEAP16[$T0_frac>>1]=0;__label__=66;break;case 66:var $156=$st_addr;var $exc211=$156+388|0;var $157=HEAP32[$exc211>>2];var $158=HEAP16[$T0>>1];var $159=HEAP16[$T0_frac>>1];var $160=$pOverflow;_Pred_lt_3or6($157,$158,$159,40,0,$160);__label__=67;break;case 67:var $161=$mode_addr;var $cmp213=($161|0)==0;if($cmp213){__label__=69;break}else{__label__=68;break}case 68:var $162=$mode_addr;var $cmp216=($162|0)==1;if($cmp216){__label__=69;break}else{__label__=73;break}case 69:var $163=$parm_addr;var $incdec_ptr219=$163+2|0;$parm_addr=$incdec_ptr219;var $164=HEAP16[$163>>1];$index=$164;var $165=$parm_addr;var $incdec_ptr220=$165+2|0;$parm_addr=$incdec_ptr220;var $166=HEAP16[$165>>1];$i=$166;var $167=$subfrNr;var $168=$i;var $169=$index;var $170=$st_addr;var $common_amr_tbls221=$170+1168|0;var $startPos_ptr=$common_amr_tbls221+76|0;var $171=HEAP32[$startPos_ptr>>2];var $arraydecay222=$code|0;var $172=$pOverflow;_decode_2i40_9bits($167,$168,$169,$171,$arraydecay222,$172);var $173=$st_addr;var $sharp=$173+432|0;var $174=HEAP16[$sharp>>1];var $conv223=$174<<16>>16;var $shl=$conv223<<1;$L_temp=$shl;var $175=$L_temp;var $176=$L_temp;var $conv224=$176&65535;var $conv225=$conv224<<16>>16;var $cmp226=($175|0)!=($conv225|0);if($cmp226){__label__=70;break}else{__label__=71;break}case 70:var $177=$st_addr;var $sharp229=$177+432|0;var $178=HEAP16[$sharp229>>1];var $conv230=$178<<16>>16;var $cmp231=($conv230|0)>0;var $cond=$cmp231?32767:-32768;var $conv233=$cond&65535;$pit_sharp=$conv233;__label__=72;break;case 71:var $179=$L_temp;var $conv235=$179&65535;$pit_sharp=$conv235;__label__=72;break;case 72:__label__=104;break;case 73:var $180=$mode_addr;var $cmp238=($180|0)==2;if($cmp238){__label__=74;break}else{__label__=78;break}case 74:var $181=$parm_addr;var $incdec_ptr241=$181+2|0;$parm_addr=$incdec_ptr241;var $182=HEAP16[$181>>1];$index=$182;var $183=$parm_addr;var $incdec_ptr242=$183+2|0;$parm_addr=$incdec_ptr242;var $184=HEAP16[$183>>1];$i=$184;var $185=$i;var $186=$index;var $arraydecay243=$code|0;_decode_2i40_11bits($185,$186,$arraydecay243);var $187=$st_addr;var $sharp244=$187+432|0;var $188=HEAP16[$sharp244>>1];var $conv245=$188<<16>>16;var $shl246=$conv245<<1;$L_temp=$shl246;var $189=$L_temp;var $190=$L_temp;var $conv247=$190&65535;var $conv248=$conv247<<16>>16;var $cmp249=($189|0)!=($conv248|0);if($cmp249){__label__=75;break}else{__label__=76;break}case 75:var $191=$st_addr;var $sharp252=$191+432|0;var $192=HEAP16[$sharp252>>1];var $conv253=$192<<16>>16;var $cmp254=($conv253|0)>0;var $cond256=$cmp254?32767:-32768;var $conv257=$cond256&65535;$pit_sharp=$conv257;__label__=77;break;case 76:var $193=$L_temp;var $conv259=$193&65535;$pit_sharp=$conv259;__label__=77;break;case 77:__label__=103;break;case 78:var $194=$mode_addr;var $cmp262=($194|0)==3;if($cmp262){__label__=79;break}else{__label__=83;break}case 79:var $195=$parm_addr;var $incdec_ptr265=$195+2|0;$parm_addr=$incdec_ptr265;var $196=HEAP16[$195>>1];$index=$196;var $197=$parm_addr;var $incdec_ptr266=$197+2|0;$parm_addr=$incdec_ptr266;var $198=HEAP16[$197>>1];$i=$198;var $199=$i;var $200=$index;var $arraydecay267=$code|0;_decode_3i40_14bits($199,$200,$arraydecay267);var $201=$st_addr;var $sharp268=$201+432|0;var $202=HEAP16[$sharp268>>1];var $conv269=$202<<16>>16;var $shl270=$conv269<<1;$L_temp=$shl270;var $203=$L_temp;var $204=$L_temp;var $conv271=$204&65535;var $conv272=$conv271<<16>>16;var $cmp273=($203|0)!=($conv272|0);if($cmp273){__label__=80;break}else{__label__=81;break}case 80:var $205=$st_addr;var $sharp276=$205+432|0;var $206=HEAP16[$sharp276>>1];var $conv277=$206<<16>>16;var $cmp278=($conv277|0)>0;var $cond280=$cmp278?32767:-32768;var $conv281=$cond280&65535;$pit_sharp=$conv281;__label__=82;break;case 81:var $207=$L_temp;var $conv283=$207&65535;$pit_sharp=$conv283;__label__=82;break;case 82:__label__=102;break;case 83:var $208=$mode_addr;var $cmp286=$208>>>0<=5;if($cmp286){__label__=84;break}else{__label__=88;break}case 84:var $209=$parm_addr;var $incdec_ptr289=$209+2|0;$parm_addr=$incdec_ptr289;var $210=HEAP16[$209>>1];$index=$210;var $211=$parm_addr;var $incdec_ptr290=$211+2|0;$parm_addr=$incdec_ptr290;var $212=HEAP16[$211>>1];$i=$212;var $213=$i;var $214=$index;var $215=$st_addr;var $common_amr_tbls291=$215+1168|0;var $dgray_ptr=$common_amr_tbls291|0;var $216=HEAP32[$dgray_ptr>>2];var $arraydecay292=$code|0;_decode_4i40_17bits($213,$214,$216,$arraydecay292);var $217=$st_addr;var $sharp293=$217+432|0;var $218=HEAP16[$sharp293>>1];var $conv294=$218<<16>>16;var $shl295=$conv294<<1;$L_temp=$shl295;var $219=$L_temp;var $220=$L_temp;var $conv296=$220&65535;var $conv297=$conv296<<16>>16;var $cmp298=($219|0)!=($conv297|0);if($cmp298){__label__=85;break}else{__label__=86;break}case 85:var $221=$st_addr;var $sharp301=$221+432|0;var $222=HEAP16[$sharp301>>1];var $conv302=$222<<16>>16;var $cmp303=($conv302|0)>0;var $cond305=$cmp303?32767:-32768;var $conv306=$cond305&65535;$pit_sharp=$conv306;__label__=87;break;case 86:var $223=$L_temp;var $conv308=$223&65535;$pit_sharp=$conv308;__label__=87;break;case 87:__label__=101;break;case 88:var $224=$mode_addr;var $cmp311=($224|0)==6;if($cmp311){__label__=89;break}else{__label__=93;break}case 89:var $225=$parm_addr;var $arraydecay314=$code|0;var $226=$pOverflow;_dec_8i40_31bits($225,$arraydecay314,$226);var $227=$parm_addr;var $add_ptr315=$227+14|0;$parm_addr=$add_ptr315;var $228=$st_addr;var $sharp316=$228+432|0;var $229=HEAP16[$sharp316>>1];var $conv317=$229<<16>>16;var $shl318=$conv317<<1;$L_temp=$shl318;var $230=$L_temp;var $231=$L_temp;var $conv319=$231&65535;var $conv320=$conv319<<16>>16;var $cmp321=($230|0)!=($conv320|0);if($cmp321){__label__=90;break}else{__label__=91;break}case 90:var $232=$st_addr;var $sharp324=$232+432|0;var $233=HEAP16[$sharp324>>1];var $conv325=$233<<16>>16;var $cmp326=($conv325|0)>0;var $cond328=$cmp326?32767:-32768;var $conv329=$cond328&65535;$pit_sharp=$conv329;__label__=92;break;case 91:var $234=$L_temp;var $conv331=$234&65535;$pit_sharp=$conv331;__label__=92;break;case 92:__label__=100;break;case 93:var $235=$parm_addr;var $incdec_ptr334=$235+2|0;$parm_addr=$incdec_ptr334;var $236=HEAP16[$235>>1];$index=$236;var $237=$bfi;var $conv335=$237<<16>>16;var $cmp336=($conv335|0)!=0;if($cmp336){__label__=94;break}else{__label__=95;break}case 94:var $238=$st_addr;var $ec_gain_p_st=$238+686|0;var $239=$st_addr;var $state339=$239+440|0;var $240=HEAP16[$state339>>1];var $241=$pOverflow;_ec_gain_pitch($ec_gain_p_st,$240,$gain_pit,$241);__label__=96;break;case 95:var $242=$mode_addr;var $243=$index;var $244=$st_addr;var $common_amr_tbls341=$244+1168|0;var $qua_gain_pitch_ptr=$common_amr_tbls341+72|0;var $245=HEAP32[$qua_gain_pitch_ptr>>2];var $call342=_d_gain_pitch($242,$243,$245);HEAP16[$gain_pit>>1]=$call342;__label__=96;break;case 96:var $246=$st_addr;var $ec_gain_p_st344=$246+686|0;var $247=$bfi;var $248=$st_addr;var $prev_bf345=$248+436|0;var $249=HEAP16[$prev_bf345>>1];var $250=$pOverflow;_ec_gain_pitch_update($ec_gain_p_st344,$247,$249,$gain_pit,$250);var $251=$parm_addr;var $arraydecay346=$code|0;var $252=$st_addr;var $common_amr_tbls347=$252+1168|0;var $dgray_ptr348=$common_amr_tbls347|0;var $253=HEAP32[$dgray_ptr348>>2];_dec_10i40_35bits($251,$arraydecay346,$253);var $254=$parm_addr;var $add_ptr349=$254+20|0;$parm_addr=$add_ptr349;var $255=HEAP16[$gain_pit>>1];var $conv350=$255<<16>>16;var $shl351=$conv350<<1;$L_temp=$shl351;var $256=$L_temp;var $257=$L_temp;var $conv352=$257&65535;var $conv353=$conv352<<16>>16;var $cmp354=($256|0)!=($conv353|0);if($cmp354){__label__=97;break}else{__label__=98;break}case 97:var $258=HEAP16[$gain_pit>>1];var $conv357=$258<<16>>16;var $cmp358=($conv357|0)>0;var $cond360=$cmp358?32767:-32768;var $conv361=$cond360&65535;$pit_sharp=$conv361;__label__=99;break;case 98:var $259=$L_temp;var $conv363=$259&65535;$pit_sharp=$conv363;__label__=99;break;case 99:__label__=100;break;case 100:__label__=101;break;case 101:__label__=102;break;case 102:__label__=103;break;case 103:__label__=104;break;case 104:var $260=HEAP16[$T0>>1];$i=$260;__label__=105;break;case 105:var $261=$i;var $conv371=$261<<16>>16;var $cmp372=($conv371|0)<40;if($cmp372){__label__=106;break}else{__label__=108;break}case 106:var $arraydecay375=$code|0;var $262=$i;var $conv376=$262<<16>>16;var $add_ptr377=$arraydecay375+($conv376<<1)|0;var $263=HEAP16[$T0>>1];var $conv378=$263<<16>>16;var $idx_neg=-$conv378|0;var $add_ptr379=$add_ptr377+($idx_neg<<1)|0;var $264=HEAP16[$add_ptr379>>1];var $265=$pit_sharp;var $266=$pOverflow;var $call380=_mult61($264,$265,$266);HEAP16[$temp>>1]=$call380;var $arraydecay381=$code|0;var $267=$i;var $conv382=$267<<16>>16;var $add_ptr383=$arraydecay381+($conv382<<1)|0;var $268=HEAP16[$add_ptr383>>1];var $269=HEAP16[$temp>>1];var $270=$pOverflow;var $call384=_add_16($268,$269,$270);var $arraydecay385=$code|0;var $271=$i;var $conv386=$271<<16>>16;var $add_ptr387=$arraydecay385+($conv386<<1)|0;HEAP16[$add_ptr387>>1]=$call384;__label__=107;break;case 107:var $272=$i;var $inc389=$272+1&65535;$i=$inc389;__label__=105;break;case 108:var $273=$mode_addr;var $cmp391=($273|0)==0;if($cmp391){__label__=109;break}else{__label__=117;break}case 109:var $274=$evenSubfr;var $conv394=$274<<16>>16;var $cmp395=($conv394|0)!=0;if($cmp395){__label__=110;break}else{__label__=111;break}case 110:var $275=$parm_addr;var $incdec_ptr398=$275+2|0;$parm_addr=$incdec_ptr398;var $276=HEAP16[$275>>1];$index_mr475=$276;__label__=111;break;case 111:var $277=$bfi;var $conv400=$277<<16>>16;var $cmp401=($conv400|0)==0;if($cmp401){__label__=112;break}else{__label__=113;break}case 112:var $278=$st_addr;var $pred_state404=$278+714|0;var $279=$mode_addr;var $280=$index_mr475;var $arraydecay405=$code|0;var $281=$evenSubfr;var $282=$st_addr;var $common_amr_tbls406=$282+1168|0;var $283=$pOverflow;_Dec_gain($pred_state404,$279,$280,$arraydecay405,$281,$gain_pit,$gain_code,$common_amr_tbls406,$283);__label__=114;break;case 113:var $284=$st_addr;var $ec_gain_p_st408=$284+686|0;var $285=$st_addr;var $state409=$285+440|0;var $286=HEAP16[$state409>>1];var $287=$pOverflow;_ec_gain_pitch($ec_gain_p_st408,$286,$gain_pit,$287);var $288=$st_addr;var $ec_gain_c_st=$288+700|0;var $289=$st_addr;var $pred_state410=$289+714|0;var $290=$st_addr;var $state411=$290+440|0;var $291=HEAP16[$state411>>1];var $292=$pOverflow;_ec_gain_code($ec_gain_c_st,$pred_state410,$291,$gain_code,$292);__label__=114;break;case 114:var $293=$st_addr;var $ec_gain_p_st413=$293+686|0;var $294=$bfi;var $295=$st_addr;var $prev_bf414=$295+436|0;var $296=HEAP16[$prev_bf414>>1];var $297=$pOverflow;_ec_gain_pitch_update($ec_gain_p_st413,$294,$296,$gain_pit,$297);var $298=$st_addr;var $ec_gain_c_st415=$298+700|0;var $299=$bfi;var $300=$st_addr;var $prev_bf416=$300+436|0;var $301=HEAP16[$prev_bf416>>1];var $302=$pOverflow;_ec_gain_code_update($ec_gain_c_st415,$299,$301,$gain_code,$302);var $303=HEAP16[$gain_pit>>1];$pit_sharp=$303;var $304=$pit_sharp;var $conv417=$304<<16>>16;var $cmp418=($conv417|0)>13017;if($cmp418){__label__=115;break}else{__label__=116;break}case 115:$pit_sharp=13017;__label__=116;break;case 116:__label__=148;break;case 117:var $305=$mode_addr;var $cmp423=$305>>>0<=4;if($cmp423){__label__=119;break}else{__label__=118;break}case 118:var $306=$mode_addr;var $cmp426=($306|0)==6;if($cmp426){__label__=119;break}else{__label__=132;break}case 119:var $307=$parm_addr;var $incdec_ptr429=$307+2|0;$parm_addr=$incdec_ptr429;var $308=HEAP16[$307>>1];$index=$308;var $309=$bfi;var $conv430=$309<<16>>16;var $cmp431=($conv430|0)==0;if($cmp431){__label__=120;break}else{__label__=121;break}case 120:var $310=$st_addr;var $pred_state434=$310+714|0;var $311=$mode_addr;var $312=$index;var $arraydecay435=$code|0;var $313=$evenSubfr;var $314=$st_addr;var $common_amr_tbls436=$314+1168|0;var $315=$pOverflow;_Dec_gain($pred_state434,$311,$312,$arraydecay435,$313,$gain_pit,$gain_code,$common_amr_tbls436,$315);__label__=122;break;case 121:var $316=$st_addr;var $ec_gain_p_st438=$316+686|0;var $317=$st_addr;var $state439=$317+440|0;var $318=HEAP16[$state439>>1];var $319=$pOverflow;_ec_gain_pitch($ec_gain_p_st438,$318,$gain_pit,$319);var $320=$st_addr;var $ec_gain_c_st440=$320+700|0;var $321=$st_addr;var $pred_state441=$321+714|0;var $322=$st_addr;var $state442=$322+440|0;var $323=HEAP16[$state442>>1];var $324=$pOverflow;_ec_gain_code($ec_gain_c_st440,$pred_state441,$323,$gain_code,$324);__label__=122;break;case 122:var $325=$st_addr;var $ec_gain_p_st444=$325+686|0;var $326=$bfi;var $327=$st_addr;var $prev_bf445=$327+436|0;var $328=HEAP16[$prev_bf445>>1];var $329=$pOverflow;_ec_gain_pitch_update($ec_gain_p_st444,$326,$328,$gain_pit,$329);var $330=$st_addr;var $ec_gain_c_st446=$330+700|0;var $331=$bfi;var $332=$st_addr;var $prev_bf447=$332+436|0;var $333=HEAP16[$prev_bf447>>1];var $334=$pOverflow;_ec_gain_code_update($ec_gain_c_st446,$331,$333,$gain_code,$334);var $335=HEAP16[$gain_pit>>1];$pit_sharp=$335;var $336=$pit_sharp;var $conv448=$336<<16>>16;var $cmp449=($conv448|0)>13017;if($cmp449){__label__=123;break}else{__label__=124;break}case 123:$pit_sharp=13017;__label__=124;break;case 124:var $337=$mode_addr;var $cmp453=($337|0)==6;if($cmp453){__label__=125;break}else{__label__=131;break}case 125:var $338=$st_addr;var $old_T0456=$338+434|0;var $339=HEAP16[$old_T0456>>1];var $conv457=$339<<16>>16;var $cmp458=($conv457|0)>45;if($cmp458){__label__=126;break}else{__label__=130;break}case 126:var $340=$pit_sharp;var $conv461=$340<<16>>16;var $cmp462=($conv461|0)<0;if($cmp462){__label__=127;break}else{__label__=128;break}case 127:var $341=$pit_sharp;var $conv465=$341<<16>>16;var $neg=$conv465^-1;var $shr=$neg>>2;var $neg466=$shr^-1;var $conv467=$neg466&65535;$pit_sharp=$conv467;__label__=129;break;case 128:var $342=$pit_sharp;var $conv469=$342<<16>>16;var $shr470=$conv469>>2;var $conv471=$shr470&65535;$pit_sharp=$conv471;__label__=129;break;case 129:__label__=130;break;case 130:__label__=131;break;case 131:__label__=147;break;case 132:var $343=$parm_addr;var $incdec_ptr476=$343+2|0;$parm_addr=$incdec_ptr476;var $344=HEAP16[$343>>1];$index=$344;var $345=$mode_addr;var $cmp477=($345|0)==5;if($cmp477){__label__=133;break}else{__label__=142;break}case 133:var $346=$bfi;var $conv480=$346<<16>>16;var $cmp481=($conv480|0)!=0;if($cmp481){__label__=134;break}else{__label__=135;break}case 134:var $347=$st_addr;var $ec_gain_p_st484=$347+686|0;var $348=$st_addr;var $state485=$348+440|0;var $349=HEAP16[$state485>>1];var $350=$pOverflow;_ec_gain_pitch($ec_gain_p_st484,$349,$gain_pit,$350);__label__=136;break;case 135:var $351=$mode_addr;var $352=$index;var $353=$st_addr;var $common_amr_tbls487=$353+1168|0;var $qua_gain_pitch_ptr488=$common_amr_tbls487+72|0;var $354=HEAP32[$qua_gain_pitch_ptr488>>2];var $call489=_d_gain_pitch($351,$352,$354);HEAP16[$gain_pit>>1]=$call489;__label__=136;break;case 136:var $355=$st_addr;var $ec_gain_p_st491=$355+686|0;var $356=$bfi;var $357=$st_addr;var $prev_bf492=$357+436|0;var $358=HEAP16[$prev_bf492>>1];var $359=$pOverflow;_ec_gain_pitch_update($ec_gain_p_st491,$356,$358,$gain_pit,$359);var $360=$parm_addr;var $incdec_ptr493=$360+2|0;$parm_addr=$incdec_ptr493;var $361=HEAP16[$360>>1];$index=$361;var $362=$bfi;var $conv494=$362<<16>>16;var $cmp495=($conv494|0)==0;if($cmp495){__label__=137;break}else{__label__=138;break}case 137:var $363=$st_addr;var $pred_state498=$363+714|0;var $364=$mode_addr;var $365=$index;var $arraydecay499=$code|0;var $366=$st_addr;var $common_amr_tbls500=$366+1168|0;var $qua_gain_code_ptr=$common_amr_tbls500+68|0;var $367=HEAP32[$qua_gain_code_ptr>>2];var $368=$pOverflow;_d_gain_code($pred_state498,$364,$365,$arraydecay499,$367,$gain_code,$368);__label__=139;break;case 138:var $369=$st_addr;var $ec_gain_c_st502=$369+700|0;var $370=$st_addr;var $pred_state503=$370+714|0;var $371=$st_addr;var $state504=$371+440|0;var $372=HEAP16[$state504>>1];var $373=$pOverflow;_ec_gain_code($ec_gain_c_st502,$pred_state503,$372,$gain_code,$373);__label__=139;break;case 139:var $374=$st_addr;var $ec_gain_c_st506=$374+700|0;var $375=$bfi;var $376=$st_addr;var $prev_bf507=$376+436|0;var $377=HEAP16[$prev_bf507>>1];var $378=$pOverflow;_ec_gain_code_update($ec_gain_c_st506,$375,$377,$gain_code,$378);var $379=HEAP16[$gain_pit>>1];$pit_sharp=$379;var $380=$pit_sharp;var $conv508=$380<<16>>16;var $cmp509=($conv508|0)>13017;if($cmp509){__label__=140;break}else{__label__=141;break}case 140:$pit_sharp=13017;__label__=141;break;case 141:__label__=146;break;case 142:var $381=$bfi;var $conv514=$381<<16>>16;var $cmp515=($conv514|0)==0;if($cmp515){__label__=143;break}else{__label__=144;break}case 143:var $382=$st_addr;var $pred_state518=$382+714|0;var $383=$mode_addr;var $384=$index;var $arraydecay519=$code|0;var $385=$st_addr;var $common_amr_tbls520=$385+1168|0;var $qua_gain_code_ptr521=$common_amr_tbls520+68|0;var $386=HEAP32[$qua_gain_code_ptr521>>2];var $387=$pOverflow;_d_gain_code($pred_state518,$383,$384,$arraydecay519,$386,$gain_code,$387);__label__=145;break;case 144:var $388=$st_addr;var $ec_gain_c_st523=$388+700|0;var $389=$st_addr;var $pred_state524=$389+714|0;var $390=$st_addr;var $state525=$390+440|0;var $391=HEAP16[$state525>>1];var $392=$pOverflow;_ec_gain_code($ec_gain_c_st523,$pred_state524,$391,$gain_code,$392);__label__=145;break;case 145:var $393=$st_addr;var $ec_gain_c_st527=$393+700|0;var $394=$bfi;var $395=$st_addr;var $prev_bf528=$395+436|0;var $396=HEAP16[$prev_bf528>>1];var $397=$pOverflow;_ec_gain_code_update($ec_gain_c_st527,$394,$396,$gain_code,$397);var $398=HEAP16[$gain_pit>>1];$pit_sharp=$398;__label__=146;break;case 146:__label__=147;break;case 147:__label__=148;break;case 148:var $399=$mode_addr;var $cmp532=($399|0)!=0;if($cmp532){__label__=150;break}else{__label__=149;break}case 149:var $400=$evenSubfr;var $conv535=$400<<16>>16;var $cmp536=($conv535|0)==0;if($cmp536){__label__=150;break}else{__label__=153;break}case 150:var $401=HEAP16[$gain_pit>>1];var $402=$st_addr;var $sharp539=$402+432|0;HEAP16[$sharp539>>1]=$401;var $403=$st_addr;var $sharp540=$403+432|0;var $404=HEAP16[$sharp540>>1];var $conv541=$404<<16>>16;var $cmp542=($conv541|0)>13017;if($cmp542){__label__=151;break}else{__label__=152;break}case 151:var $405=$st_addr;var $sharp545=$405+432|0;HEAP16[$sharp545>>1]=13017;__label__=152;break;case 152:__label__=153;break;case 153:var $406=$pit_sharp;var $407=$pOverflow;var $call548=_shl62($406,1,$407);$pit_sharp=$call548;var $408=$pit_sharp;var $conv549=$408<<16>>16;var $cmp550=($conv549|0)>16384;if($cmp550){__label__=154;break}else{__label__=164;break}case 154:$i=0;__label__=155;break;case 155:var $409=$i;var $conv554=$409<<16>>16;var $cmp555=($conv554|0)<40;if($cmp555){__label__=156;break}else{__label__=163;break}case 156:var $410=$i;var $idxprom558=$410<<16>>16;var $411=$st_addr;var $exc559=$411+388|0;var $412=HEAP32[$exc559>>2];var $arrayidx560=$412+($idxprom558<<1)|0;var $413=HEAP16[$arrayidx560>>1];var $414=$pit_sharp;var $415=$pOverflow;var $call561=_mult61($413,$414,$415);HEAP16[$temp>>1]=$call561;var $416=HEAP16[$temp>>1];var $417=HEAP16[$gain_pit>>1];var $418=$pOverflow;var $call562=_L_mult63($416,$417,$418);$L_temp=$call562;var $419=$mode_addr;var $cmp563=($419|0)==7;if($cmp563){__label__=157;break}else{__label__=161;break}case 157:var $420=$L_temp;var $cmp566=($420|0)<0;if($cmp566){__label__=158;break}else{__label__=159;break}case 158:var $421=$L_temp;var $neg569=$421^-1;var $shr570=$neg569>>1;var $neg571=$shr570^-1;$L_temp=$neg571;__label__=160;break;case 159:var $422=$L_temp;var $shr573=$422>>1;$L_temp=$shr573;__label__=160;break;case 160:__label__=161;break;case 161:var $423=$L_temp;var $424=$pOverflow;var $call576=_pv_round($423,$424);var $arraydecay577=$excp|0;var $425=$i;var $conv578=$425<<16>>16;var $add_ptr579=$arraydecay577+($conv578<<1)|0;HEAP16[$add_ptr579>>1]=$call576;__label__=162;break;case 162:var $426=$i;var $inc581=$426+1&65535;$i=$inc581;__label__=155;break;case 163:__label__=164;break;case 164:var $427=$bfi;var $conv584=$427<<16>>16;var $cmp585=($conv584|0)==0;if($cmp585){__label__=165;break}else{__label__=170;break}case 165:$i=0;__label__=166;break;case 166:var $428=$i;var $conv589=$428<<16>>16;var $cmp590=($conv589|0)<8;if($cmp590){__label__=167;break}else{__label__=169;break}case 167:var $429=$i;var $conv593=$429<<16>>16;var $add594=$conv593+1|0;var $430=$st_addr;var $ltpGainHistory=$430+466|0;var $arrayidx595=$ltpGainHistory+($add594<<1)|0;var $431=HEAP16[$arrayidx595>>1];var $432=$i;var $idxprom596=$432<<16>>16;var $433=$st_addr;var $ltpGainHistory597=$433+466|0;var $arrayidx598=$ltpGainHistory597+($idxprom596<<1)|0;HEAP16[$arrayidx598>>1]=$431;__label__=168;break;case 168:var $434=$i;var $inc600=$434+1&65535;$i=$inc600;__label__=166;break;case 169:var $435=HEAP16[$gain_pit>>1];var $436=$st_addr;var $ltpGainHistory602=$436+466|0;var $arrayidx603=$ltpGainHistory602+16|0;HEAP16[$arrayidx603>>1]=$435;__label__=170;break;case 170:var $437=$st_addr;var $prev_bf605=$437+436|0;var $438=HEAP16[$prev_bf605>>1];var $conv606=$438<<16>>16;var $cmp607=($conv606|0)!=0;if($cmp607){__label__=172;break}else{__label__=171;break}case 171:var $439=$bfi;var $conv610=$439<<16>>16;var $cmp611=($conv610|0)!=0;if($cmp611){__label__=172;break}else{__label__=181;break}case 172:var $440=$st_addr;var $inBackgroundNoise614=$440+462|0;var $441=HEAP16[$inBackgroundNoise614>>1];var $conv615=$441<<16>>16;var $cmp616=($conv615|0)!=0;if($cmp616){__label__=173;break}else{__label__=181;break}case 173:var $442=$mode_addr;var $cmp619=($442|0)==0;if($cmp619){__label__=176;break}else{__label__=174;break}case 174:var $443=$mode_addr;var $cmp622=($443|0)==1;if($cmp622){__label__=176;break}else{__label__=175;break}case 175:var $444=$mode_addr;var $cmp625=($444|0)==2;if($cmp625){__label__=176;break}else{__label__=181;break}case 176:var $445=HEAP16[$gain_pit>>1];var $conv628=$445<<16>>16;var $cmp629=($conv628|0)>12288;if($cmp629){__label__=177;break}else{__label__=178;break}case 177:var $446=HEAP16[$gain_pit>>1];var $conv632=$446<<16>>16;var $sub633=$conv632-12288|0;var $shr634=$sub633>>1;var $add635=$shr634+12288|0;var $conv636=$add635&65535;HEAP16[$gain_pit>>1]=$conv636;__label__=178;break;case 178:var $447=HEAP16[$gain_pit>>1];var $conv638=$447<<16>>16;var $cmp639=($conv638|0)>14745;if($cmp639){__label__=179;break}else{__label__=180;break}case 179:HEAP16[$gain_pit>>1]=14745;__label__=180;break;case 180:__label__=181;break;case 181:var $arraydecay644=$prev_lsf|0;var $448=$st_addr;var $lsfState645=$448+646|0;var $past_lsf_q646=$lsfState645+20|0;var $arraydecay647=$past_lsf_q646|0;var $449=$i_subfr;var $arraydecay648=$lsf_i|0;var $450=$pOverflow;_Int_lsf($arraydecay644,$arraydecay647,$449,$arraydecay648,$450);var $451=$st_addr;var $Cb_gain_averState649=$451+608|0;var $452=$mode_addr;var $453=HEAP16[$gain_code>>1];var $arraydecay650=$lsf_i|0;var $454=$st_addr;var $lsp_avg_st651=$454+626|0;var $lsp_meanSave=$lsp_avg_st651|0;var $arraydecay652=$lsp_meanSave|0;var $455=$bfi;var $456=$st_addr;var $prev_bf653=$456+436|0;var $457=HEAP16[$prev_bf653>>1];var $458=$pdfi;var $459=$st_addr;var $prev_pdf=$459+438|0;var $460=HEAP16[$prev_pdf>>1];var $461=$st_addr;var $inBackgroundNoise654=$461+462|0;var $462=HEAP16[$inBackgroundNoise654>>1];var $463=$st_addr;var $voicedHangover655=$463+464|0;var $464=HEAP16[$voicedHangover655>>1];var $465=$pOverflow;var $call656=_Cb_gain_average($Cb_gain_averState649,$452,$453,$arraydecay650,$arraydecay652,$455,$457,$458,$460,$462,$464,$465);$gain_code_mix=$call656;var $466=$mode_addr;var $cmp657=$466>>>0>3;if($cmp657){__label__=182;break}else{__label__=184;break}case 182:var $467=$mode_addr;var $cmp660=($467|0)!=6;if($cmp660){__label__=183;break}else{__label__=184;break}case 183:var $468=HEAP16[$gain_code>>1];$gain_code_mix=$468;__label__=184;break;case 184:var $469=$mode_addr;var $cmp664=$469>>>0<=6;if($cmp664){__label__=185;break}else{__label__=186;break}case 185:var $470=HEAP16[$gain_pit>>1];$pitch_fac=$470;$tmp_shift=1;__label__=190;break;case 186:var $471=HEAP16[$gain_pit>>1];var $conv668=$471<<16>>16;var $cmp669=($conv668|0)<0;if($cmp669){__label__=187;break}else{__label__=188;break}case 187:var $472=HEAP16[$gain_pit>>1];var $conv672=$472<<16>>16;var $neg673=$conv672^-1;var $shr674=$neg673>>1;var $neg675=$shr674^-1;var $conv676=$neg675&65535;$pitch_fac=$conv676;__label__=189;break;case 188:var $473=HEAP16[$gain_pit>>1];var $conv678=$473<<16>>16;var $shr679=$conv678>>1;var $conv680=$shr679&65535;$pitch_fac=$conv680;__label__=189;break;case 189:$tmp_shift=2;__label__=190;break;case 190:$i=0;__label__=191;break;case 191:var $474=$i;var $conv684=$474<<16>>16;var $cmp685=($conv684|0)<40;if($cmp685){__label__=192;break}else{__label__=194;break}case 192:var $475=$i;var $idxprom688=$475<<16>>16;var $476=$st_addr;var $exc689=$476+388|0;var $477=HEAP32[$exc689>>2];var $arrayidx690=$477+($idxprom688<<1)|0;var $478=HEAP16[$arrayidx690>>1];var $479=$i;var $idxprom691=$479<<16>>16;var $arrayidx692=$exc_enhanced+($idxprom691<<1)|0;HEAP16[$arrayidx692>>1]=$478;var $480=$i;var $idxprom693=$480<<16>>16;var $481=$st_addr;var $exc694=$481+388|0;var $482=HEAP32[$exc694>>2];var $arrayidx695=$482+($idxprom693<<1)|0;var $483=HEAP16[$arrayidx695>>1];var $484=$pitch_fac;var $485=$pOverflow;var $call696=_L_mult63($483,$484,$485);$L_temp=$call696;var $486=$L_temp;var $487=$i;var $idxprom697=$487<<16>>16;var $arrayidx698=$code+($idxprom697<<1)|0;var $488=HEAP16[$arrayidx698>>1];var $489=HEAP16[$gain_code>>1];var $490=$pOverflow;var $call699=_L_mac64($486,$488,$489,$490);$L_temp=$call699;var $491=$L_temp;var $492=$tmp_shift;var $493=$pOverflow;var $call700=_L_shl65($491,$492,$493);$L_temp=$call700;var $494=$L_temp;var $495=$pOverflow;var $call701=_pv_round($494,$495);var $496=$i;var $idxprom702=$496<<16>>16;var $497=$st_addr;var $exc703=$497+388|0;var $498=HEAP32[$exc703>>2];var $arrayidx704=$498+($idxprom702<<1)|0;HEAP16[$arrayidx704>>1]=$call701;__label__=193;break;case 193:var $499=$i;var $inc706=$499+1&65535;$i=$inc706;__label__=191;break;case 194:var $500=$st_addr;var $ph_disp_st=$500+730|0;_ph_disp_release($ph_disp_st);var $501=$mode_addr;var $cmp708=($501|0)==0;if($cmp708){__label__=197;break}else{__label__=195;break}case 195:var $502=$mode_addr;var $cmp711=($502|0)==1;if($cmp711){__label__=197;break}else{__label__=196;break}case 196:var $503=$mode_addr;var $cmp714=($503|0)==2;if($cmp714){__label__=197;break}else{__label__=201;break}case 197:var $504=$st_addr;var $voicedHangover717=$504+464|0;var $505=HEAP16[$voicedHangover717>>1];var $conv718=$505<<16>>16;var $cmp719=($conv718|0)>3;if($cmp719){__label__=198;break}else{__label__=201;break}case 198:var $506=$st_addr;var $inBackgroundNoise722=$506+462|0;var $507=HEAP16[$inBackgroundNoise722>>1];var $conv723=$507<<16>>16;var $cmp724=($conv723|0)!=0;if($cmp724){__label__=199;break}else{__label__=201;break}case 199:var $508=$bfi;var $conv727=$508<<16>>16;var $cmp728=($conv727|0)!=0;if($cmp728){__label__=200;break}else{__label__=201;break}case 200:var $509=$st_addr;var $ph_disp_st731=$509+730|0;_ph_disp_lock($ph_disp_st731);__label__=201;break;case 201:var $510=$st_addr;var $ph_disp_st733=$510+730|0;var $511=$mode_addr;var $arraydecay734=$exc_enhanced|0;var $512=$gain_code_mix;var $513=HEAP16[$gain_pit>>1];var $arraydecay735=$code|0;var $514=$pitch_fac;var $515=$tmp_shift;var $516=$st_addr;var $common_amr_tbls736=$516+1168|0;var $517=$pOverflow;_ph_disp($ph_disp_st733,$511,$arraydecay734,$512,$513,$arraydecay735,$514,$515,$common_amr_tbls736,$517);$L_temp=0;$i=0;__label__=202;break;case 202:var $518=$i;var $conv738=$518<<16>>16;var $cmp739=($conv738|0)<40;if($cmp739){__label__=203;break}else{__label__=205;break}case 203:var $519=$L_temp;var $arraydecay742=$exc_enhanced|0;var $520=$i;var $conv743=$520<<16>>16;var $add_ptr744=$arraydecay742+($conv743<<1)|0;var $521=HEAP16[$add_ptr744>>1];var $arraydecay745=$exc_enhanced|0;var $522=$i;var $conv746=$522<<16>>16;var $add_ptr747=$arraydecay745+($conv746<<1)|0;var $523=HEAP16[$add_ptr747>>1];var $524=$pOverflow;var $call748=_L_mac64($519,$521,$523,$524);$L_temp=$call748;__label__=204;break;case 204:var $525=$i;var $inc750=$525+1&65535;$i=$inc750;__label__=202;break;case 205:var $526=$L_temp;var $cmp752=($526|0)<0;if($cmp752){__label__=206;break}else{__label__=207;break}case 206:var $527=$L_temp;var $neg755=$527^-1;var $shr756=$neg755>>1;var $neg757=$shr756^-1;$L_temp=$neg757;__label__=208;break;case 207:var $528=$L_temp;var $shr759=$528>>1;$L_temp=$shr759;__label__=208;break;case 208:var $529=$L_temp;var $530=$pOverflow;var $call761=_sqrt_l_exp($529,$temp,$530);$L_temp=$call761;var $531=$L_temp;var $532=HEAP16[$temp>>1];var $conv762=$532<<16>>16;var $shr763=$conv762>>1;var $add764=$shr763+15|0;var $conv765=$add764&65535;var $533=$pOverflow;var $call766=_L_shr66($531,$conv765,$533);$L_temp=$call766;var $534=$L_temp;var $cmp767=($534|0)<0;if($cmp767){__label__=209;break}else{__label__=210;break}case 209:var $535=$L_temp;var $neg770=$535^-1;var $shr771=$neg770>>2;var $neg772=$shr771^-1;var $conv773=$neg772&65535;$excEnergy=$conv773;__label__=211;break;case 210:var $536=$L_temp;var $shr775=$536>>2;var $conv776=$shr775&65535;$excEnergy=$conv776;__label__=211;break;case 211:var $537=$mode_addr;var $cmp778=($537|0)==0;if($cmp778){__label__=214;break}else{__label__=212;break}case 212:var $538=$mode_addr;var $cmp781=($538|0)==1;if($cmp781){__label__=214;break}else{__label__=213;break}case 213:var $539=$mode_addr;var $cmp784=($539|0)==2;if($cmp784){__label__=214;break}else{__label__=225;break}case 214:var $540=$st_addr;var $voicedHangover787=$540+464|0;var $541=HEAP16[$voicedHangover787>>1];var $conv788=$541<<16>>16;var $cmp789=($conv788|0)>5;if($cmp789){__label__=215;break}else{__label__=225;break}case 215:var $542=$st_addr;var $inBackgroundNoise792=$542+462|0;var $543=HEAP16[$inBackgroundNoise792>>1];var $conv793=$543<<16>>16;var $cmp794=($conv793|0)!=0;if($cmp794){__label__=216;break}else{__label__=225;break}case 216:var $544=$st_addr;var $state797=$544+440|0;var $545=HEAP16[$state797>>1];var $conv798=$545<<16>>16;var $cmp799=($conv798|0)<4;if($cmp799){__label__=217;break}else{__label__=225;break}case 217:var $546=$pdfi;var $conv802=$546<<16>>16;var $cmp803=($conv802|0)!=0;if($cmp803){__label__=218;break}else{__label__=219;break}case 218:var $547=$st_addr;var $prev_pdf806=$547+438|0;var $548=HEAP16[$prev_pdf806>>1];var $conv807=$548<<16>>16;var $cmp808=($conv807|0)!=0;if($cmp808){__label__=221;break}else{__label__=219;break}case 219:var $549=$bfi;var $conv811=$549<<16>>16;var $cmp812=($conv811|0)!=0;if($cmp812){__label__=221;break}else{__label__=220;break}case 220:var $550=$st_addr;var $prev_bf815=$550+436|0;var $551=HEAP16[$prev_bf815>>1];var $conv816=$551<<16>>16;var $cmp817=($conv816|0)!=0;if($cmp817){__label__=221;break}else{__label__=225;break}case 221:$carefulFlag=0;var $552=$pdfi;var $conv820=$552<<16>>16;var $cmp821=($conv820|0)!=0;if($cmp821){__label__=222;break}else{__label__=224;break}case 222:var $553=$bfi;var $conv824=$553<<16>>16;var $cmp825=($conv824|0)==0;if($cmp825){__label__=223;break}else{__label__=224;break}case 223:$carefulFlag=1;__label__=224;break;case 224:var $arraydecay829=$exc_enhanced|0;var $554=$excEnergy;var $555=$st_addr;var $excEnergyHist=$555+442|0;var $arraydecay830=$excEnergyHist|0;var $556=$st_addr;var $voicedHangover831=$556+464|0;var $557=HEAP16[$voicedHangover831>>1];var $558=$st_addr;var $prev_bf832=$558+436|0;var $559=HEAP16[$prev_bf832>>1];var $560=$carefulFlag;var $561=$pOverflow;var $call833=_Ex_ctrl($arraydecay829,$554,$arraydecay830,$557,$559,$560,$561);__label__=225;break;case 225:var $562=$st_addr;var $inBackgroundNoise835=$562+462|0;var $563=HEAP16[$inBackgroundNoise835>>1];var $conv836=$563<<16>>16;var $cmp837=($conv836|0)!=0;if($cmp837){__label__=226;break}else{__label__=229;break}case 226:var $564=$bfi;var $conv840=$564<<16>>16;var $cmp841=($conv840|0)!=0;if($cmp841){__label__=228;break}else{__label__=227;break}case 227:var $565=$st_addr;var $prev_bf844=$565+436|0;var $566=HEAP16[$prev_bf844>>1];var $conv845=$566<<16>>16;var $cmp846=($conv845|0)!=0;if($cmp846){__label__=228;break}else{__label__=229;break}case 228:var $567=$st_addr;var $state849=$567+440|0;var $568=HEAP16[$state849>>1];var $conv850=$568<<16>>16;var $cmp851=($conv850|0)<4;if($cmp851){__label__=234;break}else{__label__=229;break}case 229:$i=0;__label__=230;break;case 230:var $569=$i;var $conv855=$569<<16>>16;var $cmp856=($conv855|0)<8;if($cmp856){__label__=231;break}else{__label__=233;break}case 231:var $570=$i;var $conv859=$570<<16>>16;var $add860=$conv859+1|0;var $571=$st_addr;var $excEnergyHist861=$571+442|0;var $arrayidx862=$excEnergyHist861+($add860<<1)|0;var $572=HEAP16[$arrayidx862>>1];var $573=$i;var $idxprom863=$573<<16>>16;var $574=$st_addr;var $excEnergyHist864=$574+442|0;var $arrayidx865=$excEnergyHist864+($idxprom863<<1)|0;HEAP16[$arrayidx865>>1]=$572;__label__=232;break;case 232:var $575=$i;var $inc867=$575+1&65535;$i=$inc867;__label__=230;break;case 233:var $576=$excEnergy;var $577=$st_addr;var $excEnergyHist869=$577+442|0;var $arrayidx870=$excEnergyHist869+16|0;HEAP16[$arrayidx870>>1]=$576;__label__=234;break;case 234:var $578=$pit_sharp;var $conv872=$578<<16>>16;var $cmp873=($conv872|0)>16384;if($cmp873){__label__=235;break}else{__label__=240;break}case 235:$i=0;__label__=236;break;case 236:var $579=$i;var $conv877=$579<<16>>16;var $cmp878=($conv877|0)<40;if($cmp878){__label__=237;break}else{__label__=239;break}case 237:var $arraydecay881=$excp|0;var $580=$i;var $conv882=$580<<16>>16;var $add_ptr883=$arraydecay881+($conv882<<1)|0;var $581=HEAP16[$add_ptr883>>1];var $arraydecay884=$exc_enhanced|0;var $582=$i;var $conv885=$582<<16>>16;var $add_ptr886=$arraydecay884+($conv885<<1)|0;var $583=HEAP16[$add_ptr886>>1];var $584=$pOverflow;var $call887=_add_16($581,$583,$584);var $arraydecay888=$excp|0;var $585=$i;var $conv889=$585<<16>>16;var $add_ptr890=$arraydecay888+($conv889<<1)|0;HEAP16[$add_ptr890>>1]=$call887;__label__=238;break;case 238:var $586=$i;var $inc892=$586+1&65535;$i=$inc892;__label__=236;break;case 239:var $arraydecay894=$exc_enhanced|0;var $arraydecay895=$excp|0;var $587=$pOverflow;_agc2($arraydecay894,$arraydecay895,40,$587);var $588=$pOverflow;HEAP32[$588>>2]=0;var $589=$Az;var $arraydecay896=$excp|0;var $590=$i_subfr;var $idxprom897=$590<<16>>16;var $591=$synth_addr;var $arrayidx898=$591+($idxprom897<<1)|0;var $592=$st_addr;var $mem_syn899=$592+412|0;var $arraydecay900=$mem_syn899|0;_Syn_filt($589,$arraydecay896,$arrayidx898,40,$arraydecay900,0);__label__=241;break;case 240:var $593=$pOverflow;HEAP32[$593>>2]=0;var $594=$Az;var $arraydecay902=$exc_enhanced|0;var $595=$i_subfr;var $idxprom903=$595<<16>>16;var $596=$synth_addr;var $arrayidx904=$596+($idxprom903<<1)|0;var $597=$st_addr;var $mem_syn905=$597+412|0;var $arraydecay906=$mem_syn905|0;_Syn_filt($594,$arraydecay902,$arrayidx904,40,$arraydecay906,0);__label__=241;break;case 241:var $598=$pOverflow;var $599=HEAP32[$598>>2];var $cmp908=($599|0)!=0;if($cmp908){__label__=242;break}else{__label__=257;break}case 242:$i=193;__label__=243;break;case 243:var $600=$i;var $conv912=$600<<16>>16;var $cmp913=($conv912|0)>=0;if($cmp913){__label__=244;break}else{__label__=249;break}case 244:var $601=$i;var $idxprom916=$601<<16>>16;var $602=$st_addr;var $old_exc=$602|0;var $arrayidx917=$old_exc+($idxprom916<<1)|0;var $603=HEAP16[$arrayidx917>>1];var $conv918=$603<<16>>16;var $cmp919=($conv918|0)<0;if($cmp919){__label__=245;break}else{__label__=246;break}case 245:var $604=$i;var $idxprom922=$604<<16>>16;var $605=$st_addr;var $old_exc923=$605|0;var $arrayidx924=$old_exc923+($idxprom922<<1)|0;var $606=HEAP16[$arrayidx924>>1];var $conv925=$606<<16>>16;var $neg926=$conv925^-1;var $shr927=$neg926>>2;var $neg928=$shr927^-1;var $conv929=$neg928&65535;var $607=$i;var $idxprom930=$607<<16>>16;var $608=$st_addr;var $old_exc931=$608|0;var $arrayidx932=$old_exc931+($idxprom930<<1)|0;HEAP16[$arrayidx932>>1]=$conv929;__label__=247;break;case 246:var $609=$i;var $idxprom934=$609<<16>>16;var $610=$st_addr;var $old_exc935=$610|0;var $arrayidx936=$old_exc935+($idxprom934<<1)|0;var $611=HEAP16[$arrayidx936>>1];var $conv937=$611<<16>>16;var $shr938=$conv937>>2;var $conv939=$shr938&65535;var $612=$i;var $idxprom940=$612<<16>>16;var $613=$st_addr;var $old_exc941=$613|0;var $arrayidx942=$old_exc941+($idxprom940<<1)|0;HEAP16[$arrayidx942>>1]=$conv939;__label__=247;break;case 247:__label__=248;break;case 248:var $614=$i;var $dec=$614-1&65535;$i=$dec;__label__=243;break;case 249:$i=39;__label__=250;break;case 250:var $615=$i;var $conv947=$615<<16>>16;var $cmp948=($conv947|0)>=0;if($cmp948){__label__=251;break}else{__label__=256;break}case 251:var $arraydecay951=$exc_enhanced|0;var $616=$i;var $conv952=$616<<16>>16;var $add_ptr953=$arraydecay951+($conv952<<1)|0;var $617=HEAP16[$add_ptr953>>1];var $conv954=$617<<16>>16;var $cmp955=($conv954|0)<0;if($cmp955){__label__=252;break}else{__label__=253;break}case 252:var $arraydecay958=$exc_enhanced|0;var $618=$i;var $conv959=$618<<16>>16;var $add_ptr960=$arraydecay958+($conv959<<1)|0;var $619=HEAP16[$add_ptr960>>1];var $conv961=$619<<16>>16;var $neg962=$conv961^-1;var $shr963=$neg962>>2;var $neg964=$shr963^-1;var $conv965=$neg964&65535;var $arraydecay966=$exc_enhanced|0;var $620=$i;var $conv967=$620<<16>>16;var $add_ptr968=$arraydecay966+($conv967<<1)|0;HEAP16[$add_ptr968>>1]=$conv965;__label__=254;break;case 253:var $arraydecay970=$exc_enhanced|0;var $621=$i;var $conv971=$621<<16>>16;var $add_ptr972=$arraydecay970+($conv971<<1)|0;var $622=HEAP16[$add_ptr972>>1];var $conv973=$622<<16>>16;var $shr974=$conv973>>2;var $conv975=$shr974&65535;var $arraydecay976=$exc_enhanced|0;var $623=$i;var $conv977=$623<<16>>16;var $add_ptr978=$arraydecay976+($conv977<<1)|0;HEAP16[$add_ptr978>>1]=$conv975;__label__=254;break;case 254:__label__=255;break;case 255:var $624=$i;var $dec981=$624-1&65535;$i=$dec981;__label__=250;break;case 256:var $625=$Az;var $arraydecay983=$exc_enhanced|0;var $626=$i_subfr;var $idxprom984=$626<<16>>16;var $627=$synth_addr;var $arrayidx985=$627+($idxprom984<<1)|0;var $628=$st_addr;var $mem_syn986=$628+412|0;var $arraydecay987=$mem_syn986|0;_Syn_filt($625,$arraydecay983,$arrayidx985,40,$arraydecay987,1);__label__=258;break;case 257:var $629=$st_addr;var $mem_syn989=$629+412|0;var $arraydecay990=$mem_syn989|0;var $630=$arraydecay990;var $631=$i_subfr;var $conv991=$631<<16>>16;var $add992=$conv991+40|0;var $sub993=$add992-10|0;var $632=$synth_addr;var $arrayidx994=$632+($sub993<<1)|0;var $633=$arrayidx994;_llvm_memmove_p0i8_p0i8_i32($630,$633,20,1,0);__label__=258;break;case 258:var $634=$st_addr;var $old_exc996=$634|0;var $arrayidx997=$old_exc996|0;var $635=$arrayidx997;var $636=$st_addr;var $old_exc998=$636|0;var $arrayidx999=$old_exc998+80|0;var $637=$arrayidx999;_llvm_memmove_p0i8_p0i8_i32($635,$637,308,1,0);var $638=$Az;var $add_ptr1000=$638+22|0;$Az=$add_ptr1000;var $639=HEAP16[$T0>>1];var $640=$st_addr;var $old_T01001=$640+434|0;HEAP16[$old_T01001>>1]=$639;__label__=259;break;case 259:var $641=$i_subfr;var $conv1003=$641<<16>>16;var $add1004=$conv1003+40|0;var $conv1005=$add1004&65535;$i_subfr=$conv1005;__label__=33;break;case 260:var $642=$st_addr;var $background_state=$642+484|0;var $643=$st_addr;var $ltpGainHistory1007=$643+466|0;var $arrayidx1008=$ltpGainHistory1007|0;var $644=$synth_addr;var $arrayidx1009=$644|0;var $645=$st_addr;var $voicedHangover1010=$645+464|0;var $646=$pOverflow;var $call1011=_Bgn_scd($background_state,$arrayidx1008,$arrayidx1009,$voicedHangover1010,$646);var $647=$st_addr;var $inBackgroundNoise1012=$647+462|0;HEAP16[$inBackgroundNoise1012>>1]=$call1011;var $648=$st_addr;var $dtxDecoderState1013=$648+748|0;var $649=$st_addr;var $lsfState1014=$649+646|0;var $past_lsf_q1015=$lsfState1014+20|0;var $arraydecay1016=$past_lsf_q1015|0;var $650=$synth_addr;var $651=$pOverflow;_dtx_dec_activity_update($dtxDecoderState1013,$arraydecay1016,$650,$651);var $652=$bfi;var $653=$st_addr;var $prev_bf1017=$653+436|0;HEAP16[$prev_bf1017>>1]=$652;var $654=$pdfi;var $655=$st_addr;var $prev_pdf1018=$655+438|0;HEAP16[$prev_pdf1018>>1]=$654;var $656=$st_addr;var $lsp_avg_st1019=$656+626|0;var $657=$st_addr;var $lsfState1020=$657+646|0;var $past_lsf_q1021=$lsfState1020+20|0;var $arraydecay1022=$past_lsf_q1021|0;var $658=$pOverflow;_lsp_avg($lsp_avg_st1019,$arraydecay1022,$658);__label__=261;break;case 261:var $659=$newDTXState;var $660=$st_addr;var $dtxDecoderState1023=$660+748|0;var $dtxGlobalState1024=$dtxDecoderState1023+408|0;HEAP32[$dtxGlobalState1024>>2]=$659;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Decoder_amr["X"]=1;function _mult61($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _shl62($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl62["X"]=1;function _L_mult63($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_mac64($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac64["X"]=1;function _L_shl65($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_shr66($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _shl69($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl69["X"]=1;function _Mpy_32_16($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16["X"]=1;function _L_shl70($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mult71($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shr72($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _Dec_gain($pred_state,$mode,$index,$code,$evenSubfr,$gain_pit,$gain_cod,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $pred_state_addr;var $mode_addr;var $index_addr;var $code_addr;var $evenSubfr_addr;var $gain_pit_addr;var $gain_cod_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $p;var $frac=__stackBase__;var $gcode0;var $exp=__stackBase__+4;var $qua_ener;var $qua_ener_MR122;var $g_code;var $L_tmp;var $temp1;var $temp2;$pred_state_addr=$pred_state;$mode_addr=$mode;$index_addr=$index;$code_addr=$code;$evenSubfr_addr=$evenSubfr;$gain_pit_addr=$gain_pit;$gain_cod_addr=$gain_cod;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$index_addr;var $1=$pOverflow_addr;var $call=_shl69($0,2,$1);$index_addr=$call;var $2=$mode_addr;var $cmp=($2|0)==6;if($cmp){__label__=3;break}else{__label__=1;break}case 1:var $3=$mode_addr;var $cmp1=($3|0)==4;if($cmp1){__label__=3;break}else{__label__=2;break}case 2:var $4=$mode_addr;var $cmp3=($4|0)==3;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:var $5=$index_addr;var $idxprom=$5<<16>>16;var $6=$common_amr_tbls_addr;var $table_gain_highrates_ptr=$6+84|0;var $7=HEAP32[$table_gain_highrates_ptr>>2];var $arrayidx=$7+($idxprom<<1)|0;$p=$arrayidx;var $8=$p;var $incdec_ptr=$8+2|0;$p=$incdec_ptr;var $9=HEAP16[$8>>1];var $10=$gain_pit_addr;HEAP16[$10>>1]=$9;var $11=$p;var $incdec_ptr4=$11+2|0;$p=$incdec_ptr4;var $12=HEAP16[$11>>1];$g_code=$12;var $13=$p;var $incdec_ptr5=$13+2|0;$p=$incdec_ptr5;var $14=HEAP16[$13>>1];$qua_ener_MR122=$14;var $15=$p;var $16=HEAP16[$15>>1];$qua_ener=$16;__label__=10;break;case 4:var $17=$mode_addr;var $cmp6=($17|0)==0;if($cmp6){__label__=5;break}else{__label__=8;break}case 5:var $18=$evenSubfr_addr;var $conv=$18<<16>>16;var $xor=1^$conv;var $shl=$xor<<1;var $19=$index_addr;var $conv8=$19<<16>>16;var $add=$conv8+$shl|0;var $conv9=$add&65535;$index_addr=$conv9;var $20=$index_addr;var $conv10=$20<<16>>16;var $cmp11=($conv10|0)>1022;if($cmp11){__label__=6;break}else{__label__=7;break}case 6:$index_addr=1022;__label__=7;break;case 7:var $21=$index_addr;var $idxprom14=$21<<16>>16;var $arrayidx15=_table_gain_MR475+($idxprom14<<1)|0;$p=$arrayidx15;var $22=$p;var $incdec_ptr16=$22+2|0;$p=$incdec_ptr16;var $23=HEAP16[$22>>1];var $24=$gain_pit_addr;HEAP16[$24>>1]=$23;var $25=$p;var $incdec_ptr17=$25+2|0;$p=$incdec_ptr17;var $26=HEAP16[$25>>1];$g_code=$26;var $27=$g_code;$temp1=$27;var $28=$temp1;var $conv18=$28<<16>>16;var $29=$pOverflow_addr;_Log2($conv18,$exp,$frac,$29);var $30=HEAP16[$exp>>1];var $conv19=$30<<16>>16;var $sub=$conv19-12|0;var $conv20=$sub&65535;HEAP16[$exp>>1]=$conv20;var $31=HEAP16[$frac>>1];var $32=$pOverflow_addr;var $call21=_shr_r($31,5,$32);$temp1=$call21;var $33=HEAP16[$exp>>1];var $34=$pOverflow_addr;var $call22=_shl69($33,10,$34);$temp2=$call22;var $35=$temp1;var $36=$temp2;var $37=$pOverflow_addr;var $call23=_add_16($35,$36,$37);$qua_ener_MR122=$call23;var $38=HEAP16[$exp>>1];var $39=HEAP16[$frac>>1];var $40=$pOverflow_addr;var $call24=_Mpy_32_16($38,$39,24660,$40);$L_tmp=$call24;var $41=$L_tmp;var $42=$pOverflow_addr;var $call25=_L_shl70($41,13,$42);$L_tmp=$call25;var $43=$L_tmp;var $44=$pOverflow_addr;var $call26=_pv_round($43,$44);$qua_ener=$call26;__label__=9;break;case 8:var $45=$index_addr;var $idxprom28=$45<<16>>16;var $46=$common_amr_tbls_addr;var $table_gain_lowrates_ptr=$46+80|0;var $47=HEAP32[$table_gain_lowrates_ptr>>2];var $arrayidx29=$47+($idxprom28<<1)|0;$p=$arrayidx29;var $48=$p;var $incdec_ptr30=$48+2|0;$p=$incdec_ptr30;var $49=HEAP16[$48>>1];var $50=$gain_pit_addr;HEAP16[$50>>1]=$49;var $51=$p;var $incdec_ptr31=$51+2|0;$p=$incdec_ptr31;var $52=HEAP16[$51>>1];$g_code=$52;var $53=$p;var $incdec_ptr32=$53+2|0;$p=$incdec_ptr32;var $54=HEAP16[$53>>1];$qua_ener_MR122=$54;var $55=$p;var $56=HEAP16[$55>>1];$qua_ener=$56;__label__=9;break;case 9:__label__=10;break;case 10:var $57=$pred_state_addr;var $58=$mode_addr;var $59=$code_addr;var $60=$pOverflow_addr;_gc_pred($57,$58,$59,$exp,$frac,0,0,$60);var $61=HEAP16[$frac>>1];var $62=$pOverflow_addr;var $call35=_Pow2(14,$61,$62);var $conv36=$call35&65535;$gcode0=$conv36;var $63=$g_code;var $64=$gcode0;var $65=$pOverflow_addr;var $call37=_L_mult71($63,$64,$65);$L_tmp=$call37;var $66=HEAP16[$exp>>1];var $conv38=$66<<16>>16;var $sub39=10-$conv38|0;var $conv40=$sub39&65535;$temp1=$conv40;var $67=$L_tmp;var $68=$temp1;var $69=$pOverflow_addr;var $call41=_L_shr72($67,$68,$69);$L_tmp=$call41;var $70=$L_tmp;var $shr=$70>>16;var $conv42=$shr&65535;var $71=$gain_cod_addr;HEAP16[$71>>1]=$conv42;var $72=$pred_state_addr;var $73=$qua_ener_MR122;var $74=$qua_ener;_gc_pred_update($72,$73,$74);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Dec_gain["X"]=1;function _mult79($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _Dec_lag6($index,$pit_min,$pit_max,$i_subfr,$T0,$T0_frac,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $index_addr;var $pit_min_addr;var $pit_max_addr;var $i_subfr_addr;var $T0_addr;var $T0_frac_addr;var $pOverflow_addr;var $i;var $T0_min;var $T0_max;var $k;$index_addr=$index;$pit_min_addr=$pit_min;$pit_max_addr=$pit_max;$i_subfr_addr=$i_subfr;$T0_addr=$T0;$T0_frac_addr=$T0_frac;$pOverflow_addr=$pOverflow;var $0=$i_subfr_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$index_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)<463;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $2=$index_addr;var $conv6=$2<<16>>16;var $add=$conv6+5|0;var $conv7=$add&65535;$i=$conv7;var $3=$i;var $conv8=$3<<16>>16;var $mul=$conv8*5462|0;var $shr=$mul>>15;var $conv9=$shr&65535;$i=$conv9;var $4=$i;var $conv10=$4<<16>>16;var $add11=$conv10+17|0;var $conv12=$add11&65535;$i=$conv12;var $5=$i;var $6=$T0_addr;HEAP16[$6>>1]=$5;var $7=$i;var $conv13=$7<<16>>16;var $shl=$conv13<<1;var $conv14=$shl&65535;$i=$conv14;var $8=$T0_addr;var $9=HEAP16[$8>>1];var $conv15=$9<<16>>16;var $10=$i;var $conv16=$10<<16>>16;var $add17=$conv16+$conv15|0;var $conv18=$add17&65535;$i=$conv18;var $11=$i;var $conv19=$11<<16>>16;var $shl20=$conv19<<1;var $conv21=$shl20&65535;$i=$conv21;var $12=$index_addr;var $conv22=$12<<16>>16;var $13=$i;var $conv23=$13<<16>>16;var $sub=$conv22-$conv23|0;var $conv24=$sub&65535;$i=$conv24;var $14=$i;var $conv25=$14<<16>>16;var $add26=$conv25+105|0;var $conv27=$add26&65535;var $15=$T0_frac_addr;HEAP16[$15>>1]=$conv27;__label__=4;break;case 3:var $16=$index_addr;var $conv28=$16<<16>>16;var $sub29=$conv28-368|0;var $conv30=$sub29&65535;var $17=$T0_addr;HEAP16[$17>>1]=$conv30;var $18=$T0_frac_addr;HEAP16[$18>>1]=0;__label__=4;break;case 4:__label__=10;break;case 5:var $19=$T0_addr;var $20=HEAP16[$19>>1];var $conv32=$20<<16>>16;var $sub33=$conv32-5|0;var $conv34=$sub33&65535;$T0_min=$conv34;var $21=$T0_min;var $conv35=$21<<16>>16;var $22=$pit_min_addr;var $conv36=$22<<16>>16;var $cmp37=($conv35|0)<($conv36|0);if($cmp37){__label__=6;break}else{__label__=7;break}case 6:var $23=$pit_min_addr;$T0_min=$23;__label__=7;break;case 7:var $24=$T0_min;var $conv41=$24<<16>>16;var $add42=$conv41+9|0;var $conv43=$add42&65535;$T0_max=$conv43;var $25=$T0_max;var $conv44=$25<<16>>16;var $26=$pit_max_addr;var $conv45=$26<<16>>16;var $cmp46=($conv44|0)>($conv45|0);if($cmp46){__label__=8;break}else{__label__=9;break}case 8:var $27=$pit_max_addr;$T0_max=$27;var $28=$T0_max;var $conv49=$28<<16>>16;var $sub50=$conv49-9|0;var $conv51=$sub50&65535;$T0_min=$conv51;__label__=9;break;case 9:var $29=$index_addr;var $conv53=$29<<16>>16;var $add54=$conv53+5|0;var $conv55=$add54&65535;$i=$conv55;var $30=$i;var $conv56=$30<<16>>16;var $mul57=$conv56*5462|0;var $shr58=$mul57>>15;var $conv59=$shr58&65535;$i=$conv59;var $31=$i;var $conv60=$31<<16>>16;var $sub61=$conv60-1|0;var $conv62=$sub61&65535;$i=$conv62;var $32=$i;var $conv63=$32<<16>>16;var $33=$T0_min;var $conv64=$33<<16>>16;var $add65=$conv63+$conv64|0;var $conv66=$add65&65535;var $34=$T0_addr;HEAP16[$34>>1]=$conv66;var $35=$i;var $conv67=$35<<16>>16;var $36=$i;var $conv68=$36<<16>>16;var $shl69=$conv68<<1;var $add70=$conv67+$shl69|0;var $conv71=$add70&65535;$i=$conv71;var $37=$i;var $conv72=$37<<16>>16;var $shl73=$conv72<<1;var $conv74=$shl73&65535;$i=$conv74;var $38=$index_addr;var $conv75=$38<<16>>16;var $sub76=$conv75-3|0;var $conv77=$sub76&65535;$k=$conv77;var $39=$k;var $conv78=$39<<16>>16;var $40=$i;var $conv79=$40<<16>>16;var $sub80=$conv78-$conv79|0;var $conv81=$sub80&65535;var $41=$T0_frac_addr;HEAP16[$41>>1]=$conv81;__label__=10;break;case 10:;return;default:assert(0,"bad label: "+__label__)}}_Dec_lag6["X"]=1;function _shl84($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl84["X"]=1;function _mult85($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mult86($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shr87($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _d_gain_pitch($mode,$index,$qua_gain_pitch_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $index_addr;var $qua_gain_pitch_ptr_addr;var $gain;$mode_addr=$mode;$index_addr=$index;$qua_gain_pitch_ptr_addr=$qua_gain_pitch_ptr;var $0=$index_addr;var $idxprom=$0<<16>>16;var $1=$qua_gain_pitch_ptr_addr;var $arrayidx=$1+($idxprom<<1)|0;var $2=HEAP16[$arrayidx>>1];$gain=$2;var $3=$mode_addr;var $cmp=($3|0)==7;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$gain;var $conv=$4<<16>>16;var $and=$conv&65532;var $conv1=$and&65535;$gain=$conv1;__label__=2;break;case 2:var $5=$gain;return $5;default:assert(0,"bad label: "+__label__)}}function _Dec_lag3($index,$t0_min,$t0_max,$i_subfr,$T0_prev,$T0,$T0_frac,$flag4,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $index_addr;var $t0_min_addr;var $t0_max_addr;var $i_subfr_addr;var $T0_prev_addr;var $T0_addr;var $T0_frac_addr;var $flag4_addr;var $pOverflow_addr;var $i;var $tmp_lag;$index_addr=$index;$t0_min_addr=$t0_min;$t0_max_addr=$t0_max;$i_subfr_addr=$i_subfr;$T0_prev_addr=$T0_prev;$T0_addr=$T0;$T0_frac_addr=$T0_frac;$flag4_addr=$flag4;$pOverflow_addr=$pOverflow;var $0=$i_subfr_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$index_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)<197;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $2=$index_addr;var $conv6=$2<<16>>16;var $add=$conv6+2|0;var $conv7=$add&65535;$tmp_lag=$conv7;var $3=$tmp_lag;var $4=$pOverflow_addr;var $call=_mult79($3,10923,$4);$tmp_lag=$call;var $5=$tmp_lag;var $conv8=$5<<16>>16;var $add9=$conv8+19|0;var $conv10=$add9&65535;$i=$conv10;var $6=$i;var $7=$T0_addr;HEAP16[$7>>1]=$6;var $8=$i;var $conv11=$8<<16>>16;var $shl=$conv11<<1;var $conv12=$shl&65535;$i=$conv12;var $9=$T0_addr;var $10=HEAP16[$9>>1];var $conv13=$10<<16>>16;var $11=$i;var $conv14=$11<<16>>16;var $add15=$conv14+$conv13|0;var $conv16=$add15&65535;$i=$conv16;var $12=$index_addr;var $conv17=$12<<16>>16;var $13=$i;var $conv18=$13<<16>>16;var $sub=$conv17-$conv18|0;var $conv19=$sub&65535;$tmp_lag=$conv19;var $14=$tmp_lag;var $conv20=$14<<16>>16;var $add21=$conv20+58|0;var $conv22=$add21&65535;var $15=$T0_frac_addr;HEAP16[$15>>1]=$conv22;__label__=4;break;case 3:var $16=$index_addr;var $conv23=$16<<16>>16;var $sub24=$conv23-112|0;var $conv25=$sub24&65535;var $17=$T0_addr;HEAP16[$17>>1]=$conv25;var $18=$T0_frac_addr;HEAP16[$18>>1]=0;__label__=4;break;case 4:__label__=19;break;case 5:var $19=$flag4_addr;var $conv27=$19<<16>>16;var $cmp28=($conv27|0)==0;if($cmp28){__label__=6;break}else{__label__=7;break}case 6:var $20=$index_addr;var $conv31=$20<<16>>16;var $add32=$conv31+2|0;var $conv33=$add32&65535;$i=$conv33;var $21=$i;var $conv34=$21<<16>>16;var $mul=$conv34*10923|0;var $shr=$mul>>15;var $conv35=$shr&65535;$i=$conv35;var $22=$i;var $conv36=$22<<16>>16;var $sub37=$conv36-1|0;var $conv38=$sub37&65535;$i=$conv38;var $23=$i;var $conv39=$23<<16>>16;var $24=$t0_min_addr;var $conv40=$24<<16>>16;var $add41=$conv39+$conv40|0;var $conv42=$add41&65535;var $25=$T0_addr;HEAP16[$25>>1]=$conv42;var $26=$i;var $conv43=$26<<16>>16;var $27=$i;var $conv44=$27<<16>>16;var $shl45=$conv44<<1;var $add46=$conv43+$shl45|0;var $conv47=$add46&65535;$i=$conv47;var $28=$index_addr;var $conv48=$28<<16>>16;var $sub49=$conv48-2|0;var $conv50=$sub49&65535;$tmp_lag=$conv50;var $29=$tmp_lag;var $conv51=$29<<16>>16;var $30=$i;var $conv52=$30<<16>>16;var $sub53=$conv51-$conv52|0;var $conv54=$sub53&65535;var $31=$T0_frac_addr;HEAP16[$31>>1]=$conv54;__label__=18;break;case 7:var $32=$T0_prev_addr;$tmp_lag=$32;var $33=$tmp_lag;var $34=$t0_min_addr;var $35=$pOverflow_addr;var $call56=_sub($33,$34,$35);$i=$call56;var $36=$i;var $conv57=$36<<16>>16;var $cmp58=($conv57|0)>5;if($cmp58){__label__=8;break}else{__label__=9;break}case 8:var $37=$t0_min_addr;var $conv61=$37<<16>>16;var $add62=$conv61+5|0;var $conv63=$add62&65535;$tmp_lag=$conv63;__label__=9;break;case 9:var $38=$t0_max_addr;var $conv65=$38<<16>>16;var $39=$tmp_lag;var $conv66=$39<<16>>16;var $sub67=$conv65-$conv66|0;var $conv68=$sub67&65535;$i=$conv68;var $40=$i;var $conv69=$40<<16>>16;var $cmp70=($conv69|0)>4;if($cmp70){__label__=10;break}else{__label__=11;break}case 10:var $41=$t0_max_addr;var $conv73=$41<<16>>16;var $sub74=$conv73-4|0;var $conv75=$sub74&65535;$tmp_lag=$conv75;__label__=11;break;case 11:var $42=$index_addr;var $conv77=$42<<16>>16;var $cmp78=($conv77|0)<4;if($cmp78){__label__=12;break}else{__label__=13;break}case 12:var $43=$tmp_lag;var $conv81=$43<<16>>16;var $sub82=$conv81-5|0;var $conv83=$sub82&65535;$i=$conv83;var $44=$i;var $conv84=$44<<16>>16;var $45=$index_addr;var $conv85=$45<<16>>16;var $add86=$conv84+$conv85|0;var $conv87=$add86&65535;var $46=$T0_addr;HEAP16[$46>>1]=$conv87;var $47=$T0_frac_addr;HEAP16[$47>>1]=0;__label__=17;break;case 13:var $48=$index_addr;var $conv89=$48<<16>>16;var $cmp90=($conv89|0)<12;if($cmp90){__label__=14;break}else{__label__=15;break}case 14:var $49=$index_addr;var $conv93=$49<<16>>16;var $sub94=$conv93-5|0;var $conv95=$sub94&65535;$i=$conv95;var $50=$i;var $conv96=$50<<16>>16;var $mul97=$conv96*10923|0;var $shr98=$mul97>>15;var $conv99=$shr98&65535;$i=$conv99;var $51=$i;var $dec=$51-1&65535;$i=$dec;var $52=$i;var $conv100=$52<<16>>16;var $53=$tmp_lag;var $conv101=$53<<16>>16;var $add102=$conv100+$conv101|0;var $conv103=$add102&65535;var $54=$T0_addr;HEAP16[$54>>1]=$conv103;var $55=$i;var $conv104=$55<<16>>16;var $56=$i;var $conv105=$56<<16>>16;var $shl106=$conv105<<1;var $add107=$conv104+$shl106|0;var $conv108=$add107&65535;$i=$conv108;var $57=$index_addr;var $conv109=$57<<16>>16;var $sub110=$conv109-9|0;var $conv111=$sub110&65535;$tmp_lag=$conv111;var $58=$tmp_lag;var $conv112=$58<<16>>16;var $59=$i;var $conv113=$59<<16>>16;var $sub114=$conv112-$conv113|0;var $conv115=$sub114&65535;var $60=$T0_frac_addr;HEAP16[$60>>1]=$conv115;__label__=16;break;case 15:var $61=$index_addr;var $conv117=$61<<16>>16;var $sub118=$conv117-12|0;var $conv119=$sub118&65535;$i=$conv119;var $62=$i;var $conv120=$62<<16>>16;var $63=$tmp_lag;var $conv121=$63<<16>>16;var $add122=$conv120+$conv121|0;var $conv123=$add122&65535;$i=$conv123;var $64=$i;var $conv124=$64<<16>>16;var $add125=$conv124+1|0;var $conv126=$add125&65535;var $65=$T0_addr;HEAP16[$65>>1]=$conv126;var $66=$T0_frac_addr;HEAP16[$66>>1]=0;__label__=16;break;case 16:__label__=17;break;case 17:__label__=18;break;case 18:__label__=19;break;case 19:;return;default:assert(0,"bad label: "+__label__)}}_Dec_lag3["X"]=1;function _d_gain_code($pred_state,$mode,$index,$code,$qua_gain_code_ptr,$gain_code,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=16;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $pred_state_addr;var $mode_addr;var $index_addr;var $code_addr;var $qua_gain_code_ptr_addr;var $gain_code_addr;var $pOverflow_addr;var $gcode0;var $exp=__stackBase__;var $frac=__stackBase__+4;var $p;var $qua_ener_MR122;var $qua_ener;var $exp_inn_en=__stackBase__+8;var $frac_inn_en=__stackBase__+12;var $L_tmp;var $tbl_tmp;var $temp;$pred_state_addr=$pred_state;$mode_addr=$mode;$index_addr=$index;$code_addr=$code;$qua_gain_code_ptr_addr=$qua_gain_code_ptr;$gain_code_addr=$gain_code;$pOverflow_addr=$pOverflow;var $0=$pred_state_addr;var $1=$mode_addr;var $2=$code_addr;var $3=$pOverflow_addr;_gc_pred($0,$1,$2,$exp,$frac,$exp_inn_en,$frac_inn_en,$3);var $4=$index_addr;var $conv=$4<<16>>16;var $and=$conv&31;var $conv1=$and&65535;$index_addr=$conv1;var $5=$index_addr;var $conv2=$5<<16>>16;var $6=$index_addr;var $conv3=$6<<16>>16;var $shl=$conv3<<1;var $add=$conv2+$shl|0;var $conv4=$add&65535;$tbl_tmp=$conv4;var $7=$tbl_tmp;var $idxprom=$7<<16>>16;var $8=$qua_gain_code_ptr_addr;var $arrayidx=$8+($idxprom<<1)|0;$p=$arrayidx;var $9=$mode_addr;var $conv5=$9&65535;var $10=$pOverflow_addr;var $call=_sub($conv5,7,$10);$temp=$call;var $11=$temp;var $conv6=$11<<16>>16;var $cmp=($conv6|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $12=HEAP16[$exp>>1];var $13=HEAP16[$frac>>1];var $14=$pOverflow_addr;var $call8=_Pow2($12,$13,$14);var $conv9=$call8&65535;$gcode0=$conv9;var $15=$gcode0;var $16=$pOverflow_addr;var $call10=_shl84($15,4,$16);$gcode0=$call10;var $17=$gcode0;var $18=$p;var $incdec_ptr=$18+2|0;$p=$incdec_ptr;var $19=HEAP16[$18>>1];var $20=$pOverflow_addr;var $call11=_mult85($17,$19,$20);var $21=$pOverflow_addr;var $call12=_shl84($call11,1,$21);var $22=$gain_code_addr;HEAP16[$22>>1]=$call12;__label__=3;break;case 2:var $23=HEAP16[$frac>>1];var $24=$pOverflow_addr;var $call13=_Pow2(14,$23,$24);var $conv14=$call13&65535;$gcode0=$conv14;var $25=$p;var $incdec_ptr15=$25+2|0;$p=$incdec_ptr15;var $26=HEAP16[$25>>1];var $27=$gcode0;var $28=$pOverflow_addr;var $call16=_L_mult86($26,$27,$28);$L_tmp=$call16;var $29=$L_tmp;var $30=HEAP16[$exp>>1];var $31=$pOverflow_addr;var $call17=_sub(9,$30,$31);var $32=$pOverflow_addr;var $call18=_L_shr87($29,$call17,$32);$L_tmp=$call18;var $33=$L_tmp;var $shr=$33>>16;var $conv19=$shr&65535;var $34=$gain_code_addr;HEAP16[$34>>1]=$conv19;__label__=3;break;case 3:var $35=$p;var $incdec_ptr20=$35+2|0;$p=$incdec_ptr20;var $36=HEAP16[$35>>1];$qua_ener_MR122=$36;var $37=$p;var $incdec_ptr21=$37+2|0;$p=$incdec_ptr21;var $38=HEAP16[$37>>1];$qua_ener=$38;var $39=$pred_state_addr;var $40=$qua_ener_MR122;var $41=$qua_ener;_gc_pred_update($39,$40,$41);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_d_gain_code["X"]=1;function _Mpy_32_1690($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_1690["X"]=1;function _Mpy_32($L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $product32;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var1_hi_addr;var $conv=$1<<16>>16;var $2=$L_var2_hi_addr;var $conv1=$2<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $3=$L_product;var $cmp=($3|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$L_product;var $shl=$4<<1;$L_product=$shl;__label__=3;break;case 2:$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_hi_addr;var $conv3=$5<<16>>16;var $6=$L_var2_lo_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$product32=$shr;var $7=$L_product;var $8=$product32;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$product32;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$L_sum;$L_product=$14;var $15=$L_var1_lo_addr;var $conv17=$15<<16>>16;var $16=$L_var2_hi_addr;var $conv18=$16<<16>>16;var $mul19=$conv17*$conv18|0;var $shr20=$mul19>>15;$product32=$shr20;var $17=$L_product;var $18=$product32;var $shl21=$18<<1;var $add22=$17+$shl21|0;$L_sum=$add22;var $19=$L_product;var $20=$product32;var $xor23=$19^$20;var $cmp24=($xor23|0)>0;if($cmp24){__label__=8;break}else{__label__=11;break}case 8:var $21=$L_sum;var $22=$L_product;var $xor27=$21^$22;var $shr28=$xor27>>31;var $tobool29=($shr28|0)!=0;if($tobool29){__label__=9;break}else{__label__=10;break}case 9:var $23=$L_product;var $shr31=$23>>31;var $tobool32=($shr31|0)!=0;var $cond33=$tobool32?-2147483648:2147483647;$L_sum=$cond33;__label__=10;break;case 10:__label__=11;break;case 11:var $24=$L_sum;return $24;default:assert(0,"bad label: "+__label__)}}_Mpy_32["X"]=1;function _L_shl91($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _div_s($var1,$var2){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $var1_addr;var $var2_addr;var $var_out;var $iteration;var $L_num;var $L_denom;var $L_denom_by_2;var $L_denom_by_4;$var1_addr=$var1;$var2_addr=$var2;$var_out=0;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)>($conv1|0);if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $2=$var1_addr;var $conv3=$2<<16>>16;var $cmp4=($conv3|0)<0;if($cmp4){__label__=2;break}else{__label__=3;break}case 2:$retval=0;__label__=19;break;case 3:var $3=$var1_addr;var $tobool=$3<<16>>16!=0;if($tobool){__label__=4;break}else{__label__=18;break}case 4:var $4=$var1_addr;var $conv7=$4<<16>>16;var $5=$var2_addr;var $conv8=$5<<16>>16;var $cmp9=($conv7|0)!=($conv8|0);if($cmp9){__label__=5;break}else{__label__=16;break}case 5:var $6=$var1_addr;var $conv12=$6<<16>>16;$L_num=$conv12;var $7=$var2_addr;var $conv13=$7<<16>>16;$L_denom=$conv13;var $8=$L_denom;var $shl=$8<<1;$L_denom_by_2=$shl;var $9=$L_denom;var $shl14=$9<<2;$L_denom_by_4=$shl14;$iteration=5;__label__=6;break;case 6:var $10=$iteration;var $conv15=$10<<16>>16;var $cmp16=($conv15|0)>0;if($cmp16){__label__=7;break}else{__label__=15;break}case 7:var $11=$var_out;var $conv18=$11<<16>>16;var $shl19=$conv18<<3;var $conv20=$shl19&65535;$var_out=$conv20;var $12=$L_num;var $shl21=$12<<3;$L_num=$shl21;var $13=$L_num;var $14=$L_denom_by_4;var $cmp22=($13|0)>=($14|0);if($cmp22){__label__=8;break}else{__label__=9;break}case 8:var $15=$L_denom_by_4;var $16=$L_num;var $sub=$16-$15|0;$L_num=$sub;var $17=$var_out;var $conv25=$17<<16>>16;var $or=$conv25|4;var $conv26=$or&65535;$var_out=$conv26;__label__=9;break;case 9:var $18=$L_num;var $19=$L_denom_by_2;var $cmp28=($18|0)>=($19|0);if($cmp28){__label__=10;break}else{__label__=11;break}case 10:var $20=$L_denom_by_2;var $21=$L_num;var $sub31=$21-$20|0;$L_num=$sub31;var $22=$var_out;var $conv32=$22<<16>>16;var $or33=$conv32|2;var $conv34=$or33&65535;$var_out=$conv34;__label__=11;break;case 11:var $23=$L_num;var $24=$L_denom;var $cmp36=($23|0)>=($24|0);if($cmp36){__label__=12;break}else{__label__=13;break}case 12:var $25=$L_denom;var $26=$L_num;var $sub39=$26-$25|0;$L_num=$sub39;var $27=$var_out;var $conv40=$27<<16>>16;var $or41=$conv40|1;var $conv42=$or41&65535;$var_out=$conv42;__label__=13;break;case 13:__label__=14;break;case 14:var $28=$iteration;var $dec=$28-1&65535;$iteration=$dec;__label__=6;break;case 15:__label__=17;break;case 16:$var_out=32767;__label__=17;break;case 17:__label__=18;break;case 18:var $29=$var_out;$retval=$29;__label__=19;break;case 19:var $30=$retval;return $30;default:assert(0,"bad label: "+__label__)}}_div_s["X"]=1;function _Div_32($L_num,$L_denom_hi,$L_denom_lo,$pOverflow){var __label__;var $L_num_addr;var $L_denom_hi_addr;var $L_denom_lo_addr;var $pOverflow_addr;var $approx;var $hi;var $lo;var $n_hi;var $n_lo;var $result;$L_num_addr=$L_num;$L_denom_hi_addr=$L_denom_hi;$L_denom_lo_addr=$L_denom_lo;$pOverflow_addr=$pOverflow;var $0=$L_denom_hi_addr;var $call=_div_s(16383,$0);$approx=$call;var $1=$L_denom_hi_addr;var $2=$L_denom_lo_addr;var $3=$approx;var $4=$pOverflow_addr;var $call1=_Mpy_32_1690($1,$2,$3,$4);$result=$call1;var $5=$result;var $sub=2147483647-$5|0;$result=$sub;var $6=$result;var $shr=$6>>16;var $conv=$shr&65535;$hi=$conv;var $7=$result;var $shr2=$7>>1;var $8=$hi;var $conv3=$8<<16>>16;var $shl=$conv3<<15;var $sub4=$shr2-$shl|0;var $conv5=$sub4&65535;$lo=$conv5;var $9=$hi;var $10=$lo;var $11=$approx;var $12=$pOverflow_addr;var $call6=_Mpy_32_1690($9,$10,$11,$12);$result=$call6;var $13=$result;var $shr7=$13>>16;var $conv8=$shr7&65535;$hi=$conv8;var $14=$result;var $shr9=$14>>1;var $15=$hi;var $conv10=$15<<16>>16;var $shl11=$conv10<<15;var $sub12=$shr9-$shl11|0;var $conv13=$sub12&65535;$lo=$conv13;var $16=$L_num_addr;var $shr14=$16>>16;var $conv15=$shr14&65535;$n_hi=$conv15;var $17=$L_num_addr;var $shr16=$17>>1;var $18=$n_hi;var $conv17=$18<<16>>16;var $shl18=$conv17<<15;var $sub19=$shr16-$shl18|0;var $conv20=$sub19&65535;$n_lo=$conv20;var $19=$n_hi;var $20=$n_lo;var $21=$hi;var $22=$lo;var $23=$pOverflow_addr;var $call21=_Mpy_32($19,$20,$21,$22,$23);$result=$call21;var $24=$result;var $25=$pOverflow_addr;var $call22=_L_shl91($24,2,$25);$result=$call22;var $26=$result;return $26}_Div_32["X"]=1;function _mult96($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _D_plsf_3($st,$mode,$bfi,$indice,$common_amr_tbls,$lsp1_q,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $bfi_addr;var $indice_addr;var $common_amr_tbls_addr;var $lsp1_q_addr;var $pOverflow_addr;var $i;var $temp;var $index;var $lsf1_r=__stackBase__;var $lsf1_q=__stackBase__+20;var $mean_lsf_3_ptr;var $pred_fac_3_ptr;var $dico1_lsf_3_ptr;var $dico2_lsf_3_ptr;var $dico3_lsf_3_ptr;var $mr515_3_lsf_ptr;var $mr795_1_lsf_ptr;var $index_limit_1;var $index_limit_2;var $index_limit_3;var $p_cb1;var $p_cb2;var $p_cb3;var $p_dico;$st_addr=$st;$mode_addr=$mode;$bfi_addr=$bfi;$indice_addr=$indice;$common_amr_tbls_addr=$common_amr_tbls;$lsp1_q_addr=$lsp1_q;$pOverflow_addr=$pOverflow;var $0=$common_amr_tbls_addr;var $mean_lsf_3_ptr1=$0+44|0;var $1=HEAP32[$mean_lsf_3_ptr1>>2];$mean_lsf_3_ptr=$1;var $2=$common_amr_tbls_addr;var $pred_fac_3_ptr2=$2+64|0;var $3=HEAP32[$pred_fac_3_ptr2>>2];$pred_fac_3_ptr=$3;var $4=$common_amr_tbls_addr;var $dico1_lsf_3_ptr3=$4+4|0;var $5=HEAP32[$dico1_lsf_3_ptr3>>2];$dico1_lsf_3_ptr=$5;var $6=$common_amr_tbls_addr;var $dico2_lsf_3_ptr4=$6+12|0;var $7=HEAP32[$dico2_lsf_3_ptr4>>2];$dico2_lsf_3_ptr=$7;var $8=$common_amr_tbls_addr;var $dico3_lsf_3_ptr5=$8+20|0;var $9=HEAP32[$dico3_lsf_3_ptr5>>2];$dico3_lsf_3_ptr=$9;var $10=$common_amr_tbls_addr;var $mr515_3_lsf_ptr6=$10+52|0;var $11=HEAP32[$mr515_3_lsf_ptr6>>2];$mr515_3_lsf_ptr=$11;var $12=$common_amr_tbls_addr;var $mr795_1_lsf_ptr7=$12+56|0;var $13=HEAP32[$mr795_1_lsf_ptr7>>2];$mr795_1_lsf_ptr=$13;var $14=$bfi_addr;var $conv=$14<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=17;break}case 1:$i=0;__label__=2;break;case 2:var $15=$i;var $conv9=$15<<16>>16;var $cmp10=($conv9|0)<10;if($cmp10){__label__=3;break}else{__label__=5;break}case 3:var $16=$i;var $idxprom=$16<<16>>16;var $17=$st_addr;var $past_lsf_q=$17+20|0;var $arrayidx=$past_lsf_q+($idxprom<<1)|0;var $18=HEAP16[$arrayidx>>1];var $19=$pOverflow_addr;var $call=_mult96($18,29491,$19);$temp=$call;var $20=$i;var $idxprom12=$20<<16>>16;var $21=$mean_lsf_3_ptr;var $arrayidx13=$21+($idxprom12<<1)|0;var $22=HEAP16[$arrayidx13>>1];var $23=$pOverflow_addr;var $call14=_mult96($22,3277,$23);$index=$call14;var $24=$index;var $25=$temp;var $26=$pOverflow_addr;var $call15=_add_16($24,$25,$26);var $27=$i;var $idxprom16=$27<<16>>16;var $arrayidx17=$lsf1_q+($idxprom16<<1)|0;HEAP16[$arrayidx17>>1]=$call15;__label__=4;break;case 4:var $28=$i;var $inc=$28+1&65535;$i=$inc;__label__=2;break;case 5:var $29=$mode_addr;var $cmp18=($29|0)!=8;if($cmp18){__label__=6;break}else{__label__=11;break}case 6:$i=0;__label__=7;break;case 7:var $30=$i;var $conv22=$30<<16>>16;var $cmp23=($conv22|0)<10;if($cmp23){__label__=8;break}else{__label__=10;break}case 8:var $31=$i;var $idxprom26=$31<<16>>16;var $32=$st_addr;var $past_r_q=$32|0;var $arrayidx27=$past_r_q+($idxprom26<<1)|0;var $33=HEAP16[$arrayidx27>>1];var $34=$i;var $idxprom28=$34<<16>>16;var $35=$pred_fac_3_ptr;var $arrayidx29=$35+($idxprom28<<1)|0;var $36=HEAP16[$arrayidx29>>1];var $37=$pOverflow_addr;var $call30=_mult96($33,$36,$37);$temp=$call30;var $38=$i;var $idxprom31=$38<<16>>16;var $39=$mean_lsf_3_ptr;var $arrayidx32=$39+($idxprom31<<1)|0;var $40=HEAP16[$arrayidx32>>1];var $41=$temp;var $42=$pOverflow_addr;var $call33=_add_16($40,$41,$42);$temp=$call33;var $43=$i;var $idxprom34=$43<<16>>16;var $arrayidx35=$lsf1_q+($idxprom34<<1)|0;var $44=HEAP16[$arrayidx35>>1];var $45=$temp;var $46=$pOverflow_addr;var $call36=_sub($44,$45,$46);var $47=$i;var $idxprom37=$47<<16>>16;var $48=$st_addr;var $past_r_q38=$48|0;var $arrayidx39=$past_r_q38+($idxprom37<<1)|0;HEAP16[$arrayidx39>>1]=$call36;__label__=9;break;case 9:var $49=$i;var $inc41=$49+1&65535;$i=$inc41;__label__=7;break;case 10:__label__=16;break;case 11:$i=0;__label__=12;break;case 12:var $50=$i;var $conv44=$50<<16>>16;var $cmp45=($conv44|0)<10;if($cmp45){__label__=13;break}else{__label__=15;break}case 13:var $51=$i;var $idxprom48=$51<<16>>16;var $52=$mean_lsf_3_ptr;var $arrayidx49=$52+($idxprom48<<1)|0;var $53=HEAP16[$arrayidx49>>1];var $54=$i;var $idxprom50=$54<<16>>16;var $55=$st_addr;var $past_r_q51=$55|0;var $arrayidx52=$past_r_q51+($idxprom50<<1)|0;var $56=HEAP16[$arrayidx52>>1];var $57=$pOverflow_addr;var $call53=_add_16($53,$56,$57);$temp=$call53;var $58=$i;var $idxprom54=$58<<16>>16;var $arrayidx55=$lsf1_q+($idxprom54<<1)|0;var $59=HEAP16[$arrayidx55>>1];var $60=$temp;var $61=$pOverflow_addr;var $call56=_sub($59,$60,$61);var $62=$i;var $idxprom57=$62<<16>>16;var $63=$st_addr;var $past_r_q58=$63|0;var $arrayidx59=$past_r_q58+($idxprom57<<1)|0;HEAP16[$arrayidx59>>1]=$call56;__label__=14;break;case 14:var $64=$i;var $inc61=$64+1&65535;$i=$inc61;__label__=12;break;case 15:__label__=16;break;case 16:__label__=45;break;case 17:$index_limit_1=0;$index_limit_2=1533;$index_limit_3=0;var $65=$dico2_lsf_3_ptr;$p_cb2=$65;var $66=$mode_addr;var $cmp64=($66|0)==0;if($cmp64){__label__=19;break}else{__label__=18;break}case 18:var $67=$mode_addr;var $cmp66=($67|0)==1;if($cmp66){__label__=19;break}else{__label__=20;break}case 19:var $68=$dico1_lsf_3_ptr;$p_cb1=$68;var $69=$mr515_3_lsf_ptr;$p_cb3=$69;$index_limit_1=765;$index_limit_3=508;__label__=24;break;case 20:var $70=$mode_addr;var $cmp70=($70|0)==5;if($cmp70){__label__=21;break}else{__label__=22;break}case 21:var $71=$mr795_1_lsf_ptr;$p_cb1=$71;var $72=$dico3_lsf_3_ptr;$p_cb3=$72;$index_limit_1=1533;$index_limit_3=2044;__label__=23;break;case 22:var $73=$dico1_lsf_3_ptr;$p_cb1=$73;var $74=$dico3_lsf_3_ptr;$p_cb3=$74;$index_limit_1=765;$index_limit_3=2044;__label__=23;break;case 23:__label__=24;break;case 24:var $75=$indice_addr;var $incdec_ptr=$75+2|0;$indice_addr=$incdec_ptr;var $76=HEAP16[$75>>1];$index=$76;var $77=$index;var $conv76=$77<<16>>16;var $78=$index;var $conv77=$78<<16>>16;var $shl=$conv77<<1;var $add=$conv76+$shl|0;var $conv78=$add&65535;$temp=$conv78;var $79=$temp;var $conv79=$79<<16>>16;var $80=$index_limit_1;var $conv80=$80<<16>>16;var $cmp81=($conv79|0)>($conv80|0);if($cmp81){__label__=25;break}else{__label__=26;break}case 25:var $81=$index_limit_1;$temp=$81;__label__=26;break;case 26:var $82=$temp;var $idxprom85=$82<<16>>16;var $83=$p_cb1;var $arrayidx86=$83+($idxprom85<<1)|0;$p_dico=$arrayidx86;var $84=$p_dico;var $incdec_ptr87=$84+2|0;$p_dico=$incdec_ptr87;var $85=HEAP16[$84>>1];var $arrayidx88=$lsf1_r|0;HEAP16[$arrayidx88>>1]=$85;var $86=$p_dico;var $incdec_ptr89=$86+2|0;$p_dico=$incdec_ptr89;var $87=HEAP16[$86>>1];var $arrayidx90=$lsf1_r+2|0;HEAP16[$arrayidx90>>1]=$87;var $88=$p_dico;var $incdec_ptr91=$88+2|0;$p_dico=$incdec_ptr91;var $89=HEAP16[$88>>1];var $arrayidx92=$lsf1_r+4|0;HEAP16[$arrayidx92>>1]=$89;var $90=$indice_addr;var $incdec_ptr93=$90+2|0;$indice_addr=$incdec_ptr93;var $91=HEAP16[$90>>1];$index=$91;var $92=$mode_addr;var $cmp94=($92|0)==0;if($cmp94){__label__=28;break}else{__label__=27;break}case 27:var $93=$mode_addr;var $cmp97=($93|0)==1;if($cmp97){__label__=28;break}else{__label__=29;break}case 28:var $94=$index;var $conv100=$94<<16>>16;var $shl101=$conv100<<1;var $conv102=$shl101&65535;$index=$conv102;__label__=29;break;case 29:var $95=$index;var $conv104=$95<<16>>16;var $96=$index;var $conv105=$96<<16>>16;var $shl106=$conv105<<1;var $add107=$conv104+$shl106|0;var $conv108=$add107&65535;$temp=$conv108;var $97=$temp;var $conv109=$97<<16>>16;var $98=$index_limit_2;var $conv110=$98<<16>>16;var $cmp111=($conv109|0)>($conv110|0);if($cmp111){__label__=30;break}else{__label__=31;break}case 30:var $99=$index_limit_2;$temp=$99;__label__=31;break;case 31:var $100=$temp;var $idxprom115=$100<<16>>16;var $101=$p_cb2;var $arrayidx116=$101+($idxprom115<<1)|0;$p_dico=$arrayidx116;var $102=$p_dico;var $incdec_ptr117=$102+2|0;$p_dico=$incdec_ptr117;var $103=HEAP16[$102>>1];var $arrayidx118=$lsf1_r+6|0;HEAP16[$arrayidx118>>1]=$103;var $104=$p_dico;var $incdec_ptr119=$104+2|0;$p_dico=$incdec_ptr119;var $105=HEAP16[$104>>1];var $arrayidx120=$lsf1_r+8|0;HEAP16[$arrayidx120>>1]=$105;var $106=$p_dico;var $incdec_ptr121=$106+2|0;$p_dico=$incdec_ptr121;var $107=HEAP16[$106>>1];var $arrayidx122=$lsf1_r+10|0;HEAP16[$arrayidx122>>1]=$107;var $108=$indice_addr;var $incdec_ptr123=$108+2|0;$indice_addr=$incdec_ptr123;var $109=HEAP16[$108>>1];$index=$109;var $110=$index;var $conv124=$110<<16>>16;var $shl125=$conv124<<2;var $conv126=$shl125&65535;$temp=$conv126;var $111=$temp;var $conv127=$111<<16>>16;var $112=$index_limit_3;var $conv128=$112<<16>>16;var $cmp129=($conv127|0)>($conv128|0);if($cmp129){__label__=32;break}else{__label__=33;break}case 32:var $113=$index_limit_3;$temp=$113;__label__=33;break;case 33:var $114=$temp;var $idxprom133=$114<<16>>16;var $115=$p_cb3;var $arrayidx134=$115+($idxprom133<<1)|0;$p_dico=$arrayidx134;var $116=$p_dico;var $incdec_ptr135=$116+2|0;$p_dico=$incdec_ptr135;var $117=HEAP16[$116>>1];var $arrayidx136=$lsf1_r+12|0;HEAP16[$arrayidx136>>1]=$117;var $118=$p_dico;var $incdec_ptr137=$118+2|0;$p_dico=$incdec_ptr137;var $119=HEAP16[$118>>1];var $arrayidx138=$lsf1_r+14|0;HEAP16[$arrayidx138>>1]=$119;var $120=$p_dico;var $incdec_ptr139=$120+2|0;$p_dico=$incdec_ptr139;var $121=HEAP16[$120>>1];var $arrayidx140=$lsf1_r+16|0;HEAP16[$arrayidx140>>1]=$121;var $122=$p_dico;var $incdec_ptr141=$122+2|0;$p_dico=$incdec_ptr141;var $123=HEAP16[$122>>1];var $arrayidx142=$lsf1_r+18|0;HEAP16[$arrayidx142>>1]=$123;var $124=$mode_addr;var $cmp143=($124|0)!=8;if($cmp143){__label__=34;break}else{__label__=39;break}case 34:$i=0;__label__=35;break;case 35:var $125=$i;var $conv147=$125<<16>>16;var $cmp148=($conv147|0)<10;if($cmp148){__label__=36;break}else{__label__=38;break}case 36:var $126=$i;var $idxprom151=$126<<16>>16;var $127=$st_addr;var $past_r_q152=$127|0;var $arrayidx153=$past_r_q152+($idxprom151<<1)|0;var $128=HEAP16[$arrayidx153>>1];var $129=$i;var $idxprom154=$129<<16>>16;var $130=$pred_fac_3_ptr;var $arrayidx155=$130+($idxprom154<<1)|0;var $131=HEAP16[$arrayidx155>>1];var $132=$pOverflow_addr;var $call156=_mult96($128,$131,$132);$temp=$call156;var $133=$i;var $idxprom157=$133<<16>>16;var $134=$mean_lsf_3_ptr;var $arrayidx158=$134+($idxprom157<<1)|0;var $135=HEAP16[$arrayidx158>>1];var $136=$temp;var $137=$pOverflow_addr;var $call159=_add_16($135,$136,$137);$temp=$call159;var $138=$i;var $idxprom160=$138<<16>>16;var $arrayidx161=$lsf1_r+($idxprom160<<1)|0;var $139=HEAP16[$arrayidx161>>1];var $140=$temp;var $141=$pOverflow_addr;var $call162=_add_16($139,$140,$141);var $142=$i;var $idxprom163=$142<<16>>16;var $arrayidx164=$lsf1_q+($idxprom163<<1)|0;HEAP16[$arrayidx164>>1]=$call162;var $143=$i;var $idxprom165=$143<<16>>16;var $arrayidx166=$lsf1_r+($idxprom165<<1)|0;var $144=HEAP16[$arrayidx166>>1];var $145=$i;var $idxprom167=$145<<16>>16;var $146=$st_addr;var $past_r_q168=$146|0;var $arrayidx169=$past_r_q168+($idxprom167<<1)|0;HEAP16[$arrayidx169>>1]=$144;__label__=37;break;case 37:var $147=$i;var $inc171=$147+1&65535;$i=$inc171;__label__=35;break;case 38:__label__=44;break;case 39:$i=0;__label__=40;break;case 40:var $148=$i;var $conv175=$148<<16>>16;var $cmp176=($conv175|0)<10;if($cmp176){__label__=41;break}else{__label__=43;break}case 41:var $149=$i;var $idxprom179=$149<<16>>16;var $150=$mean_lsf_3_ptr;var $arrayidx180=$150+($idxprom179<<1)|0;var $151=HEAP16[$arrayidx180>>1];var $152=$i;var $idxprom181=$152<<16>>16;var $153=$st_addr;var $past_r_q182=$153|0;var $arrayidx183=$past_r_q182+($idxprom181<<1)|0;var $154=HEAP16[$arrayidx183>>1];var $155=$pOverflow_addr;var $call184=_add_16($151,$154,$155);$temp=$call184;var $156=$i;var $idxprom185=$156<<16>>16;var $arrayidx186=$lsf1_r+($idxprom185<<1)|0;var $157=HEAP16[$arrayidx186>>1];var $158=$temp;var $159=$pOverflow_addr;var $call187=_add_16($157,$158,$159);var $160=$i;var $idxprom188=$160<<16>>16;var $arrayidx189=$lsf1_q+($idxprom188<<1)|0;HEAP16[$arrayidx189>>1]=$call187;var $161=$i;var $idxprom190=$161<<16>>16;var $arrayidx191=$lsf1_r+($idxprom190<<1)|0;var $162=HEAP16[$arrayidx191>>1];var $163=$i;var $idxprom192=$163<<16>>16;var $164=$st_addr;var $past_r_q193=$164|0;var $arrayidx194=$past_r_q193+($idxprom192<<1)|0;HEAP16[$arrayidx194>>1]=$162;__label__=42;break;case 42:var $165=$i;var $inc196=$165+1&65535;$i=$inc196;__label__=40;break;case 43:__label__=44;break;case 44:__label__=45;break;case 45:var $arraydecay=$lsf1_q|0;var $166=$pOverflow_addr;_Reorder_lsf($arraydecay,205,10,$166);var $167=$st_addr;var $past_lsf_q200=$167+20|0;var $arraydecay201=$past_lsf_q200|0;var $168=$arraydecay201;var $arraydecay202=$lsf1_q|0;var $169=$arraydecay202;_llvm_memmove_p0i8_p0i8_i32($168,$169,20,1,0);var $arraydecay203=$lsf1_q|0;var $170=$lsp1_q_addr;var $171=$pOverflow_addr;_Lsf_lsp($arraydecay203,$170,10,$171);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_D_plsf_3["X"]=1;function _Init_D_plsf_3($st,$index,$past_rq_init_ptr){var __label__;var $st_addr;var $index_addr;var $past_rq_init_ptr_addr;$st_addr=$st;$index_addr=$index;$past_rq_init_ptr_addr=$past_rq_init_ptr;var $0=$st_addr;var $past_r_q=$0|0;var $arraydecay=$past_r_q|0;var $1=$arraydecay;var $2=$index_addr;var $conv=$2<<16>>16;var $mul=$conv*10|0;var $3=$past_rq_init_ptr_addr;var $arrayidx=$3+($mul<<1)|0;var $4=$arrayidx;_llvm_memmove_p0i8_p0i8_i32($1,$4,20,1,0);return}function _shl99($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl99["X"]=1;function _negate100($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _mult101($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _D_plsf_5($st,$bfi,$indice,$common_amr_tbls,$lsp1_q,$lsp2_q,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=80;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $bfi_addr;var $indice_addr;var $common_amr_tbls_addr;var $lsp1_q_addr;var $lsp2_q_addr;var $pOverflow_addr;var $i;var $temp;var $sign;var $p_dico;var $lsf1_r=__stackBase__;var $lsf2_r=__stackBase__+20;var $lsf1_q=__stackBase__+40;var $lsf2_q=__stackBase__+60;var $mean_lsf_5_ptr;var $dico1_lsf_5_ptr;var $dico2_lsf_5_ptr;var $dico3_lsf_5_ptr;var $dico4_lsf_5_ptr;var $dico5_lsf_5_ptr;$st_addr=$st;$bfi_addr=$bfi;$indice_addr=$indice;$common_amr_tbls_addr=$common_amr_tbls;$lsp1_q_addr=$lsp1_q;$lsp2_q_addr=$lsp2_q;$pOverflow_addr=$pOverflow;var $0=$common_amr_tbls_addr;var $mean_lsf_5_ptr1=$0+48|0;var $1=HEAP32[$mean_lsf_5_ptr1>>2];$mean_lsf_5_ptr=$1;var $2=$common_amr_tbls_addr;var $dico1_lsf_5_ptr2=$2+8|0;var $3=HEAP32[$dico1_lsf_5_ptr2>>2];$dico1_lsf_5_ptr=$3;var $4=$common_amr_tbls_addr;var $dico2_lsf_5_ptr3=$4+16|0;var $5=HEAP32[$dico2_lsf_5_ptr3>>2];$dico2_lsf_5_ptr=$5;var $6=$common_amr_tbls_addr;var $dico3_lsf_5_ptr4=$6+24|0;var $7=HEAP32[$dico3_lsf_5_ptr4>>2];$dico3_lsf_5_ptr=$7;var $8=$common_amr_tbls_addr;var $dico4_lsf_5_ptr5=$8+28|0;var $9=HEAP32[$dico4_lsf_5_ptr5>>2];$dico4_lsf_5_ptr=$9;var $10=$common_amr_tbls_addr;var $dico5_lsf_5_ptr6=$10+32|0;var $11=HEAP32[$dico5_lsf_5_ptr6>>2];$dico5_lsf_5_ptr=$11;var $12=$bfi_addr;var $conv=$12<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=6;break}case 1:$i=0;__label__=2;break;case 2:var $13=$i;var $conv8=$13<<16>>16;var $cmp9=($conv8|0)<10;if($cmp9){__label__=3;break}else{__label__=5;break}case 3:var $14=$i;var $idxprom=$14<<16>>16;var $15=$st_addr;var $past_lsf_q=$15+20|0;var $arrayidx=$past_lsf_q+($idxprom<<1)|0;var $16=HEAP16[$arrayidx>>1];var $conv11=$16<<16>>16;var $mul=$conv11*31128|0;var $shr=$mul>>15;var $conv12=$shr&65535;$temp=$conv12;var $17=$mean_lsf_5_ptr;var $18=$i;var $conv13=$18<<16>>16;var $add_ptr=$17+($conv13<<1)|0;var $19=HEAP16[$add_ptr>>1];var $conv14=$19<<16>>16;var $mul15=$conv14*1639|0;var $shr16=$mul15>>15;var $conv17=$shr16&65535;$sign=$conv17;var $20=$sign;var $21=$temp;var $22=$pOverflow_addr;var $call=_add_16($20,$21,$22);var $arraydecay=$lsf1_q|0;var $23=$i;var $conv18=$23<<16>>16;var $add_ptr19=$arraydecay+($conv18<<1)|0;HEAP16[$add_ptr19>>1]=$call;var $arraydecay20=$lsf1_q|0;var $24=$i;var $conv21=$24<<16>>16;var $add_ptr22=$arraydecay20+($conv21<<1)|0;var $25=HEAP16[$add_ptr22>>1];var $arraydecay23=$lsf2_q|0;var $26=$i;var $conv24=$26<<16>>16;var $add_ptr25=$arraydecay23+($conv24<<1)|0;HEAP16[$add_ptr25>>1]=$25;var $27=$i;var $idxprom26=$27<<16>>16;var $28=$st_addr;var $past_r_q=$28|0;var $arrayidx27=$past_r_q+($idxprom26<<1)|0;var $29=HEAP16[$arrayidx27>>1];var $conv28=$29<<16>>16;var $mul29=$conv28*21299|0;var $shr30=$mul29>>15;var $conv31=$shr30&65535;$temp=$conv31;var $30=$mean_lsf_5_ptr;var $31=$i;var $conv32=$31<<16>>16;var $add_ptr33=$30+($conv32<<1)|0;var $32=HEAP16[$add_ptr33>>1];var $33=$temp;var $34=$pOverflow_addr;var $call34=_add_16($32,$33,$34);$temp=$call34;var $arraydecay35=$lsf2_q|0;var $35=$i;var $conv36=$35<<16>>16;var $add_ptr37=$arraydecay35+($conv36<<1)|0;var $36=HEAP16[$add_ptr37>>1];var $37=$temp;var $38=$pOverflow_addr;var $call38=_sub($36,$37,$38);var $39=$i;var $idxprom39=$39<<16>>16;var $40=$st_addr;var $past_r_q40=$40|0;var $arrayidx41=$past_r_q40+($idxprom39<<1)|0;HEAP16[$arrayidx41>>1]=$call38;__label__=4;break;case 4:var $41=$i;var $inc=$41+1&65535;$i=$inc;__label__=2;break;case 5:__label__=17;break;case 6:var $42=$indice_addr;var $43=HEAP16[$42>>1];var $44=$pOverflow_addr;var $call42=_shl99($43,2,$44);$temp=$call42;var $45=$temp;var $idxprom43=$45<<16>>16;var $46=$dico1_lsf_5_ptr;var $arrayidx44=$46+($idxprom43<<1)|0;$p_dico=$arrayidx44;var $47=$p_dico;var $incdec_ptr=$47+2|0;$p_dico=$incdec_ptr;var $48=HEAP16[$47>>1];var $arraydecay45=$lsf1_r|0;var $add_ptr46=$arraydecay45|0;HEAP16[$add_ptr46>>1]=$48;var $49=$p_dico;var $incdec_ptr47=$49+2|0;$p_dico=$incdec_ptr47;var $50=HEAP16[$49>>1];var $arraydecay48=$lsf1_r|0;var $add_ptr49=$arraydecay48+2|0;HEAP16[$add_ptr49>>1]=$50;var $51=$p_dico;var $incdec_ptr50=$51+2|0;$p_dico=$incdec_ptr50;var $52=HEAP16[$51>>1];var $arraydecay51=$lsf2_r|0;var $add_ptr52=$arraydecay51|0;HEAP16[$add_ptr52>>1]=$52;var $53=$p_dico;var $incdec_ptr53=$53+2|0;$p_dico=$incdec_ptr53;var $54=HEAP16[$53>>1];var $arraydecay54=$lsf2_r|0;var $add_ptr55=$arraydecay54+2|0;HEAP16[$add_ptr55>>1]=$54;var $55=$indice_addr;var $add_ptr56=$55+2|0;var $56=HEAP16[$add_ptr56>>1];var $57=$pOverflow_addr;var $call57=_shl99($56,2,$57);$temp=$call57;var $58=$temp;var $idxprom58=$58<<16>>16;var $59=$dico2_lsf_5_ptr;var $arrayidx59=$59+($idxprom58<<1)|0;$p_dico=$arrayidx59;var $60=$p_dico;var $incdec_ptr60=$60+2|0;$p_dico=$incdec_ptr60;var $61=HEAP16[$60>>1];var $arraydecay61=$lsf1_r|0;var $add_ptr62=$arraydecay61+4|0;HEAP16[$add_ptr62>>1]=$61;var $62=$p_dico;var $incdec_ptr63=$62+2|0;$p_dico=$incdec_ptr63;var $63=HEAP16[$62>>1];var $arraydecay64=$lsf1_r|0;var $add_ptr65=$arraydecay64+6|0;HEAP16[$add_ptr65>>1]=$63;var $64=$p_dico;var $incdec_ptr66=$64+2|0;$p_dico=$incdec_ptr66;var $65=HEAP16[$64>>1];var $arraydecay67=$lsf2_r|0;var $add_ptr68=$arraydecay67+4|0;HEAP16[$add_ptr68>>1]=$65;var $66=$p_dico;var $incdec_ptr69=$66+2|0;$p_dico=$incdec_ptr69;var $67=HEAP16[$66>>1];var $arraydecay70=$lsf2_r|0;var $add_ptr71=$arraydecay70+6|0;HEAP16[$add_ptr71>>1]=$67;var $68=$indice_addr;var $add_ptr72=$68+4|0;var $69=HEAP16[$add_ptr72>>1];var $conv73=$69<<16>>16;var $and=$conv73&1;var $conv74=$and&65535;$sign=$conv74;var $70=$indice_addr;var $add_ptr75=$70+4|0;var $71=HEAP16[$add_ptr75>>1];var $conv76=$71<<16>>16;var $cmp77=($conv76|0)<0;if($cmp77){__label__=7;break}else{__label__=8;break}case 7:var $72=$indice_addr;var $add_ptr80=$72+4|0;var $73=HEAP16[$add_ptr80>>1];var $conv81=$73<<16>>16;var $neg=$conv81^-1;var $shr82=$neg>>1;var $neg83=$shr82^-1;var $conv84=$neg83&65535;$i=$conv84;__label__=9;break;case 8:var $74=$indice_addr;var $add_ptr86=$74+4|0;var $75=HEAP16[$add_ptr86>>1];var $conv87=$75<<16>>16;var $shr88=$conv87>>1;var $conv89=$shr88&65535;$i=$conv89;__label__=9;break;case 9:var $76=$i;var $77=$pOverflow_addr;var $call90=_shl99($76,2,$77);$temp=$call90;var $78=$temp;var $idxprom91=$78<<16>>16;var $79=$dico3_lsf_5_ptr;var $arrayidx92=$79+($idxprom91<<1)|0;$p_dico=$arrayidx92;var $80=$sign;var $conv93=$80<<16>>16;var $cmp94=($conv93|0)==0;if($cmp94){__label__=10;break}else{__label__=11;break}case 10:var $81=$p_dico;var $incdec_ptr97=$81+2|0;$p_dico=$incdec_ptr97;var $82=HEAP16[$81>>1];var $arraydecay98=$lsf1_r|0;var $add_ptr99=$arraydecay98+8|0;HEAP16[$add_ptr99>>1]=$82;var $83=$p_dico;var $incdec_ptr100=$83+2|0;$p_dico=$incdec_ptr100;var $84=HEAP16[$83>>1];var $arraydecay101=$lsf1_r|0;var $add_ptr102=$arraydecay101+10|0;HEAP16[$add_ptr102>>1]=$84;var $85=$p_dico;var $incdec_ptr103=$85+2|0;$p_dico=$incdec_ptr103;var $86=HEAP16[$85>>1];var $arraydecay104=$lsf2_r|0;var $add_ptr105=$arraydecay104+8|0;HEAP16[$add_ptr105>>1]=$86;var $87=$p_dico;var $incdec_ptr106=$87+2|0;$p_dico=$incdec_ptr106;var $88=HEAP16[$87>>1];var $arraydecay107=$lsf2_r|0;var $add_ptr108=$arraydecay107+10|0;HEAP16[$add_ptr108>>1]=$88;__label__=12;break;case 11:var $89=$p_dico;var $incdec_ptr110=$89+2|0;$p_dico=$incdec_ptr110;var $90=HEAP16[$89>>1];var $call111=_negate100($90);var $arraydecay112=$lsf1_r|0;var $add_ptr113=$arraydecay112+8|0;HEAP16[$add_ptr113>>1]=$call111;var $91=$p_dico;var $incdec_ptr114=$91+2|0;$p_dico=$incdec_ptr114;var $92=HEAP16[$91>>1];var $call115=_negate100($92);var $arraydecay116=$lsf1_r|0;var $add_ptr117=$arraydecay116+10|0;HEAP16[$add_ptr117>>1]=$call115;var $93=$p_dico;var $incdec_ptr118=$93+2|0;$p_dico=$incdec_ptr118;var $94=HEAP16[$93>>1];var $call119=_negate100($94);var $arraydecay120=$lsf2_r|0;var $add_ptr121=$arraydecay120+8|0;HEAP16[$add_ptr121>>1]=$call119;var $95=$p_dico;var $incdec_ptr122=$95+2|0;$p_dico=$incdec_ptr122;var $96=HEAP16[$95>>1];var $call123=_negate100($96);var $arraydecay124=$lsf2_r|0;var $add_ptr125=$arraydecay124+10|0;HEAP16[$add_ptr125>>1]=$call123;__label__=12;break;case 12:var $97=$indice_addr;var $add_ptr127=$97+6|0;var $98=HEAP16[$add_ptr127>>1];var $99=$pOverflow_addr;var $call128=_shl99($98,2,$99);$temp=$call128;var $100=$temp;var $idxprom129=$100<<16>>16;var $101=$dico4_lsf_5_ptr;var $arrayidx130=$101+($idxprom129<<1)|0;$p_dico=$arrayidx130;var $102=$p_dico;var $incdec_ptr131=$102+2|0;$p_dico=$incdec_ptr131;var $103=HEAP16[$102>>1];var $arraydecay132=$lsf1_r|0;var $add_ptr133=$arraydecay132+12|0;HEAP16[$add_ptr133>>1]=$103;var $104=$p_dico;var $incdec_ptr134=$104+2|0;$p_dico=$incdec_ptr134;var $105=HEAP16[$104>>1];var $arraydecay135=$lsf1_r|0;var $add_ptr136=$arraydecay135+14|0;HEAP16[$add_ptr136>>1]=$105;var $106=$p_dico;var $incdec_ptr137=$106+2|0;$p_dico=$incdec_ptr137;var $107=HEAP16[$106>>1];var $arraydecay138=$lsf2_r|0;var $add_ptr139=$arraydecay138+12|0;HEAP16[$add_ptr139>>1]=$107;var $108=$p_dico;var $incdec_ptr140=$108+2|0;$p_dico=$incdec_ptr140;var $109=HEAP16[$108>>1];var $arraydecay141=$lsf2_r|0;var $add_ptr142=$arraydecay141+14|0;HEAP16[$add_ptr142>>1]=$109;var $110=$indice_addr;var $add_ptr143=$110+8|0;var $111=HEAP16[$add_ptr143>>1];var $112=$pOverflow_addr;var $call144=_shl99($111,2,$112);$temp=$call144;var $113=$temp;var $idxprom145=$113<<16>>16;var $114=$dico5_lsf_5_ptr;var $arrayidx146=$114+($idxprom145<<1)|0;$p_dico=$arrayidx146;var $115=$p_dico;var $incdec_ptr147=$115+2|0;$p_dico=$incdec_ptr147;var $116=HEAP16[$115>>1];var $arraydecay148=$lsf1_r|0;var $add_ptr149=$arraydecay148+16|0;HEAP16[$add_ptr149>>1]=$116;var $117=$p_dico;var $incdec_ptr150=$117+2|0;$p_dico=$incdec_ptr150;var $118=HEAP16[$117>>1];var $arraydecay151=$lsf1_r|0;var $add_ptr152=$arraydecay151+18|0;HEAP16[$add_ptr152>>1]=$118;var $119=$p_dico;var $incdec_ptr153=$119+2|0;$p_dico=$incdec_ptr153;var $120=HEAP16[$119>>1];var $arraydecay154=$lsf2_r|0;var $add_ptr155=$arraydecay154+16|0;HEAP16[$add_ptr155>>1]=$120;var $121=$p_dico;var $incdec_ptr156=$121+2|0;$p_dico=$incdec_ptr156;var $122=HEAP16[$121>>1];var $arraydecay157=$lsf2_r|0;var $add_ptr158=$arraydecay157+18|0;HEAP16[$add_ptr158>>1]=$122;$i=0;__label__=13;break;case 13:var $123=$i;var $conv160=$123<<16>>16;var $cmp161=($conv160|0)<10;if($cmp161){__label__=14;break}else{__label__=16;break}case 14:var $124=$i;var $idxprom164=$124<<16>>16;var $125=$st_addr;var $past_r_q165=$125|0;var $arrayidx166=$past_r_q165+($idxprom164<<1)|0;var $126=HEAP16[$arrayidx166>>1];var $127=$pOverflow_addr;var $call167=_mult101($126,21299,$127);$temp=$call167;var $128=$mean_lsf_5_ptr;var $129=$i;var $conv168=$129<<16>>16;var $add_ptr169=$128+($conv168<<1)|0;var $130=HEAP16[$add_ptr169>>1];var $131=$temp;var $132=$pOverflow_addr;var $call170=_add_16($130,$131,$132);$temp=$call170;var $arraydecay171=$lsf1_r|0;var $133=$i;var $conv172=$133<<16>>16;var $add_ptr173=$arraydecay171+($conv172<<1)|0;var $134=HEAP16[$add_ptr173>>1];var $135=$temp;var $136=$pOverflow_addr;var $call174=_add_16($134,$135,$136);var $arraydecay175=$lsf1_q|0;var $137=$i;var $conv176=$137<<16>>16;var $add_ptr177=$arraydecay175+($conv176<<1)|0;HEAP16[$add_ptr177>>1]=$call174;var $arraydecay178=$lsf2_r|0;var $138=$i;var $conv179=$138<<16>>16;var $add_ptr180=$arraydecay178+($conv179<<1)|0;var $139=HEAP16[$add_ptr180>>1];var $140=$temp;var $141=$pOverflow_addr;var $call181=_add_16($139,$140,$141);var $arraydecay182=$lsf2_q|0;var $142=$i;var $conv183=$142<<16>>16;var $add_ptr184=$arraydecay182+($conv183<<1)|0;HEAP16[$add_ptr184>>1]=$call181;var $arraydecay185=$lsf2_r|0;var $143=$i;var $conv186=$143<<16>>16;var $add_ptr187=$arraydecay185+($conv186<<1)|0;var $144=HEAP16[$add_ptr187>>1];var $145=$i;var $idxprom188=$145<<16>>16;var $146=$st_addr;var $past_r_q189=$146|0;var $arrayidx190=$past_r_q189+($idxprom188<<1)|0;HEAP16[$arrayidx190>>1]=$144;__label__=15;break;case 15:var $147=$i;var $inc192=$147+1&65535;$i=$inc192;__label__=13;break;case 16:__label__=17;break;case 17:var $arraydecay195=$lsf1_q|0;var $148=$pOverflow_addr;_Reorder_lsf($arraydecay195,205,10,$148);var $arraydecay196=$lsf2_q|0;var $149=$pOverflow_addr;_Reorder_lsf($arraydecay196,205,10,$149);var $150=$st_addr;var $past_lsf_q197=$150+20|0;var $arraydecay198=$past_lsf_q197|0;var $151=$arraydecay198;var $arraydecay199=$lsf2_q|0;var $152=$arraydecay199;_llvm_memmove_p0i8_p0i8_i32($151,$152,20,1,0);var $arraydecay200=$lsf1_q|0;var $153=$lsp1_q_addr;var $154=$pOverflow_addr;_Lsf_lsp($arraydecay200,$153,10,$154);var $arraydecay201=$lsf2_q|0;var $155=$lsp2_q_addr;var $156=$pOverflow_addr;_Lsf_lsp($arraydecay201,$155,10,$156);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_D_plsf_5["X"]=1;function _D_plsf_reset($state,$mean_lsf_5_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $mean_lsf_5_ptr_addr;var $i;$state_addr=$state;$mean_lsf_5_ptr_addr=$mean_lsf_5_ptr;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<10;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $past_r_q=$3|0;var $arrayidx=$past_r_q+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=5;break;case 5:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=3;break;case 6:var $5=$state_addr;var $past_lsf_q=$5+20|0;var $arrayidx3=$past_lsf_q|0;var $6=$arrayidx3;var $7=$mean_lsf_5_ptr_addr;var $8=$7;_llvm_memmove_p0i8_p0i8_i32($6,$8,20,1,0);$retval=0;__label__=7;break;case 7:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _dtx_dec_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $i;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=11;break;case 2:var $1=$st_addr;var $since_last_sid=$1|0;HEAP16[$since_last_sid>>1]=0;var $2=$st_addr;var $true_sid_period_inv=$2+2|0;HEAP16[$true_sid_period_inv>>1]=8192;var $3=$st_addr;var $log_en=$3+4|0;HEAP16[$log_en>>1]=3500;var $4=$st_addr;var $old_log_en=$4+6|0;HEAP16[$old_log_en>>1]=3500;var $5=$st_addr;var $L_pn_seed_rx=$5+8|0;HEAP32[$L_pn_seed_rx>>2]=1887529304;var $6=$st_addr;var $lsp=$6+12|0;var $arrayidx=$lsp|0;HEAP16[$arrayidx>>1]=3e4;var $7=$st_addr;var $lsp1=$7+12|0;var $arrayidx2=$lsp1+2|0;HEAP16[$arrayidx2>>1]=26e3;var $8=$st_addr;var $lsp3=$8+12|0;var $arrayidx4=$lsp3+4|0;HEAP16[$arrayidx4>>1]=21e3;var $9=$st_addr;var $lsp5=$9+12|0;var $arrayidx6=$lsp5+6|0;HEAP16[$arrayidx6>>1]=15e3;var $10=$st_addr;var $lsp7=$10+12|0;var $arrayidx8=$lsp7+8|0;HEAP16[$arrayidx8>>1]=8e3;var $11=$st_addr;var $lsp9=$11+12|0;var $arrayidx10=$lsp9+10|0;HEAP16[$arrayidx10>>1]=0;var $12=$st_addr;var $lsp11=$12+12|0;var $arrayidx12=$lsp11+12|0;HEAP16[$arrayidx12>>1]=-8e3;var $13=$st_addr;var $lsp13=$13+12|0;var $arrayidx14=$lsp13+14|0;HEAP16[$arrayidx14>>1]=-15e3;var $14=$st_addr;var $lsp15=$14+12|0;var $arrayidx16=$lsp15+16|0;HEAP16[$arrayidx16>>1]=-21e3;var $15=$st_addr;var $lsp17=$15+12|0;var $arrayidx18=$lsp17+18|0;HEAP16[$arrayidx18>>1]=-26e3;var $16=$st_addr;var $lsp_old=$16+32|0;var $arrayidx19=$lsp_old|0;HEAP16[$arrayidx19>>1]=3e4;var $17=$st_addr;var $lsp_old20=$17+32|0;var $arrayidx21=$lsp_old20+2|0;HEAP16[$arrayidx21>>1]=26e3;var $18=$st_addr;var $lsp_old22=$18+32|0;var $arrayidx23=$lsp_old22+4|0;HEAP16[$arrayidx23>>1]=21e3;var $19=$st_addr;var $lsp_old24=$19+32|0;var $arrayidx25=$lsp_old24+6|0;HEAP16[$arrayidx25>>1]=15e3;var $20=$st_addr;var $lsp_old26=$20+32|0;var $arrayidx27=$lsp_old26+8|0;HEAP16[$arrayidx27>>1]=8e3;var $21=$st_addr;var $lsp_old28=$21+32|0;var $arrayidx29=$lsp_old28+10|0;HEAP16[$arrayidx29>>1]=0;var $22=$st_addr;var $lsp_old30=$22+32|0;var $arrayidx31=$lsp_old30+12|0;HEAP16[$arrayidx31>>1]=-8e3;var $23=$st_addr;var $lsp_old32=$23+32|0;var $arrayidx33=$lsp_old32+14|0;HEAP16[$arrayidx33>>1]=-15e3;var $24=$st_addr;var $lsp_old34=$24+32|0;var $arrayidx35=$lsp_old34+16|0;HEAP16[$arrayidx35>>1]=-21e3;var $25=$st_addr;var $lsp_old36=$25+32|0;var $arrayidx37=$lsp_old36+18|0;HEAP16[$arrayidx37>>1]=-26e3;var $26=$st_addr;var $lsf_hist_ptr=$26+212|0;HEAP16[$lsf_hist_ptr>>1]=0;var $27=$st_addr;var $log_pg_mean=$27+374|0;HEAP16[$log_pg_mean>>1]=0;var $28=$st_addr;var $log_en_hist_ptr=$28+392|0;HEAP16[$log_en_hist_ptr>>1]=0;var $29=$st_addr;var $lsf_hist=$29+52|0;var $arrayidx38=$lsf_hist|0;HEAP16[$arrayidx38>>1]=1384;var $30=$st_addr;var $lsf_hist39=$30+52|0;var $arrayidx40=$lsf_hist39+2|0;HEAP16[$arrayidx40>>1]=2077;var $31=$st_addr;var $lsf_hist41=$31+52|0;var $arrayidx42=$lsf_hist41+4|0;HEAP16[$arrayidx42>>1]=3420;var $32=$st_addr;var $lsf_hist43=$32+52|0;var $arrayidx44=$lsf_hist43+6|0;HEAP16[$arrayidx44>>1]=5108;var $33=$st_addr;var $lsf_hist45=$33+52|0;var $arrayidx46=$lsf_hist45+8|0;HEAP16[$arrayidx46>>1]=6742;var $34=$st_addr;var $lsf_hist47=$34+52|0;var $arrayidx48=$lsf_hist47+10|0;HEAP16[$arrayidx48>>1]=8122;var $35=$st_addr;var $lsf_hist49=$35+52|0;var $arrayidx50=$lsf_hist49+12|0;HEAP16[$arrayidx50>>1]=9863;var $36=$st_addr;var $lsf_hist51=$36+52|0;var $arrayidx52=$lsf_hist51+14|0;HEAP16[$arrayidx52>>1]=11092;var $37=$st_addr;var $lsf_hist53=$37+52|0;var $arrayidx54=$lsf_hist53+16|0;HEAP16[$arrayidx54>>1]=12714;var $38=$st_addr;var $lsf_hist55=$38+52|0;var $arrayidx56=$lsf_hist55+18|0;HEAP16[$arrayidx56>>1]=13701;$i=1;__label__=3;break;case 3:var $39=$i;var $conv=$39<<16>>16;var $cmp57=($conv|0)<8;if($cmp57){__label__=4;break}else{__label__=6;break}case 4:var $40=$i;var $conv59=$40<<16>>16;var $mul=$conv59*10|0;var $41=$st_addr;var $lsf_hist60=$41+52|0;var $arrayidx61=$lsf_hist60+($mul<<1)|0;var $42=$arrayidx61;var $43=$st_addr;var $lsf_hist62=$43+52|0;var $arrayidx63=$lsf_hist62|0;var $44=$arrayidx63;_llvm_memmove_p0i8_p0i8_i32($42,$44,20,1,0);__label__=5;break;case 5:var $45=$i;var $inc=$45+1&65535;$i=$inc;__label__=3;break;case 6:var $46=$st_addr;var $lsf_hist_mean=$46+214|0;var $arraydecay=$lsf_hist_mean|0;var $47=$arraydecay;_memset($47,0,160,1);$i=0;__label__=7;break;case 7:var $48=$i;var $conv65=$48<<16>>16;var $cmp66=($conv65|0)<8;if($cmp66){__label__=8;break}else{__label__=10;break}case 8:var $49=$st_addr;var $log_en69=$49+4|0;var $50=HEAP16[$log_en69>>1];var $51=$i;var $idxprom=$51<<16>>16;var $52=$st_addr;var $log_en_hist=$52+376|0;var $arrayidx70=$log_en_hist+($idxprom<<1)|0;HEAP16[$arrayidx70>>1]=$50;__label__=9;break;case 9:var $53=$i;var $inc72=$53+1&65535;$i=$inc72;__label__=7;break;case 10:var $54=$st_addr;var $log_en_adjust=$54+394|0;HEAP16[$log_en_adjust>>1]=0;var $55=$st_addr;var $dtxHangoverCount=$55+396|0;HEAP16[$dtxHangoverCount>>1]=7;var $56=$st_addr;var $decAnaElapsedCount=$56+398|0;HEAP16[$decAnaElapsedCount>>1]=32767;var $57=$st_addr;var $sid_frame=$57+400|0;HEAP16[$sid_frame>>1]=0;var $58=$st_addr;var $valid_data=$58+402|0;HEAP16[$valid_data>>1]=0;var $59=$st_addr;var $dtxHangoverAdded=$59+404|0;HEAP16[$dtxHangoverAdded>>1]=0;var $60=$st_addr;var $dtxGlobalState=$60+408|0;HEAP32[$dtxGlobalState>>2]=1;var $61=$st_addr;var $data_updated=$61+412|0;HEAP16[$data_updated>>1]=0;$retval=0;__label__=11;break;case 11:var $62=$retval;return $62;default:assert(0,"bad label: "+__label__)}}_dtx_dec_reset["X"]=1;function _dtx_dec($st,$mem_syn,$lsfState,$predState,$averState,$new_state,$mode,$parm,$common_amr_tbls,$synth,$A_t,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=296;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mem_syn_addr;var $lsfState_addr;var $predState_addr;var $averState_addr;var $new_state_addr;var $mode_addr;var $parm_addr;var $common_amr_tbls_addr;var $synth_addr;var $A_t_addr;var $pOverflow_addr;var $log_en_index;var $i;var $j;var $int_fac;var $L_log_en_int;var $lsp_int=__stackBase__;var $log_en_int_e;var $log_en_int_m;var $level;var $acoeff=__stackBase__+20;var $refl=__stackBase__+44;var $pred_err;var $ex=__stackBase__+64;var $ma_pred_init;var $log_pg_e=__stackBase__+144;var $log_pg_m=__stackBase__+148;var $log_pg;var $negative;var $lsf_mean;var $L_lsf_mean;var $lsf_variab_index;var $lsf_variab_factor;var $lsf_int=__stackBase__+152;var $lsf_int_variab=__stackBase__+172;var $lsp_int_variab=__stackBase__+192;var $acoeff_variab=__stackBase__+212;var $lsf=__stackBase__+236;var $L_lsf=__stackBase__+256;var $ptr;var $tmp_int_length;var $L_temp;var $temp;$st_addr=$st;$mem_syn_addr=$mem_syn;$lsfState_addr=$lsfState;$predState_addr=$predState;$averState_addr=$averState;$new_state_addr=$new_state;$mode_addr=$mode;$parm_addr=$parm;$common_amr_tbls_addr=$common_amr_tbls;$synth_addr=$synth;$A_t_addr=$A_t;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $dtxHangoverAdded=$0+404|0;var $1=HEAP16[$dtxHangoverAdded>>1];var $conv=$1<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=53;break}case 1:var $2=$st_addr;var $sid_frame=$2+400|0;var $3=HEAP16[$sid_frame>>1];var $conv2=$3<<16>>16;var $cmp3=($conv2|0)!=0;if($cmp3){__label__=2;break}else{__label__=53;break}case 2:var $4=$mode_addr;var $arrayidx=_dtx_log_en_adjust+($4<<1)|0;var $5=HEAP16[$arrayidx>>1];var $6=$st_addr;var $log_en_adjust=$6+394|0;HEAP16[$log_en_adjust>>1]=$5;var $7=$st_addr;var $lsf_hist_ptr=$7+212|0;var $8=HEAP16[$lsf_hist_ptr>>1];var $conv5=$8<<16>>16;var $add=$conv5+10|0;var $conv6=$add&65535;$ptr=$conv6;var $9=$ptr;var $conv7=$9<<16>>16;var $cmp8=($conv7|0)==80;if($cmp8){__label__=3;break}else{__label__=4;break}case 3:$ptr=0;__label__=4;break;case 4:var $10=$ptr;var $idxprom=$10<<16>>16;var $11=$st_addr;var $lsf_hist=$11+52|0;var $arrayidx11=$lsf_hist+($idxprom<<1)|0;var $12=$arrayidx11;var $13=$st_addr;var $lsf_hist_ptr12=$13+212|0;var $14=HEAP16[$lsf_hist_ptr12>>1];var $idxprom13=$14<<16>>16;var $15=$st_addr;var $lsf_hist14=$15+52|0;var $arrayidx15=$lsf_hist14+($idxprom13<<1)|0;var $16=$arrayidx15;_llvm_memmove_p0i8_p0i8_i32($12,$16,20,1,0);var $17=$st_addr;var $log_en_hist_ptr=$17+392|0;var $18=HEAP16[$log_en_hist_ptr>>1];var $conv16=$18<<16>>16;var $add17=$conv16+1|0;var $conv18=$add17&65535;$ptr=$conv18;var $19=$ptr;var $conv19=$19<<16>>16;var $cmp20=($conv19|0)==8;if($cmp20){__label__=5;break}else{__label__=6;break}case 5:$ptr=0;__label__=6;break;case 6:var $20=$st_addr;var $log_en_hist_ptr24=$20+392|0;var $21=HEAP16[$log_en_hist_ptr24>>1];var $idxprom25=$21<<16>>16;var $22=$st_addr;var $log_en_hist=$22+376|0;var $arrayidx26=$log_en_hist+($idxprom25<<1)|0;var $23=HEAP16[$arrayidx26>>1];var $24=$ptr;var $idxprom27=$24<<16>>16;var $25=$st_addr;var $log_en_hist28=$25+376|0;var $arrayidx29=$log_en_hist28+($idxprom27<<1)|0;HEAP16[$arrayidx29>>1]=$23;var $26=$st_addr;var $log_en=$26+4|0;HEAP16[$log_en>>1]=0;$i=9;__label__=7;break;case 7:var $27=$i;var $conv30=$27<<16>>16;var $cmp31=($conv30|0)>=0;if($cmp31){__label__=8;break}else{__label__=10;break}case 8:var $28=$i;var $idxprom33=$28<<16>>16;var $arrayidx34=$L_lsf+($idxprom33<<2)|0;HEAP32[$arrayidx34>>2]=0;__label__=9;break;case 9:var $29=$i;var $dec=$29-1&65535;$i=$dec;__label__=7;break;case 10:$i=7;__label__=11;break;case 11:var $30=$i;var $conv36=$30<<16>>16;var $cmp37=($conv36|0)>=0;if($cmp37){__label__=12;break}else{__label__=21;break}case 12:var $31=$i;var $idxprom40=$31<<16>>16;var $32=$st_addr;var $log_en_hist41=$32+376|0;var $arrayidx42=$log_en_hist41+($idxprom40<<1)|0;var $33=HEAP16[$arrayidx42>>1];var $conv43=$33<<16>>16;var $cmp44=($conv43|0)<0;if($cmp44){__label__=13;break}else{__label__=14;break}case 13:var $34=$i;var $idxprom47=$34<<16>>16;var $35=$st_addr;var $log_en_hist48=$35+376|0;var $arrayidx49=$log_en_hist48+($idxprom47<<1)|0;var $36=HEAP16[$arrayidx49>>1];var $conv50=$36<<16>>16;var $neg=$conv50^-1;var $shr=$neg>>3;var $neg51=$shr^-1;var $conv52=$neg51&65535;$temp=$conv52;__label__=15;break;case 14:var $37=$i;var $idxprom53=$37<<16>>16;var $38=$st_addr;var $log_en_hist54=$38+376|0;var $arrayidx55=$log_en_hist54+($idxprom53<<1)|0;var $39=HEAP16[$arrayidx55>>1];var $conv56=$39<<16>>16;var $shr57=$conv56>>3;var $conv58=$shr57&65535;$temp=$conv58;__label__=15;break;case 15:var $40=$st_addr;var $log_en60=$40+4|0;var $41=HEAP16[$log_en60>>1];var $42=$temp;var $43=$pOverflow_addr;var $call=_add_16($41,$42,$43);var $44=$st_addr;var $log_en61=$44+4|0;HEAP16[$log_en61>>1]=$call;$j=9;__label__=16;break;case 16:var $45=$j;var $conv63=$45<<16>>16;var $cmp64=($conv63|0)>=0;if($cmp64){__label__=17;break}else{__label__=19;break}case 17:var $46=$j;var $idxprom67=$46<<16>>16;var $arrayidx68=$L_lsf+($idxprom67<<2)|0;var $47=HEAP32[$arrayidx68>>2];var $48=$i;var $conv69=$48<<16>>16;var $mul=$conv69*10|0;var $49=$j;var $conv70=$49<<16>>16;var $add71=$mul+$conv70|0;var $50=$st_addr;var $lsf_hist72=$50+52|0;var $arrayidx73=$lsf_hist72+($add71<<1)|0;var $51=HEAP16[$arrayidx73>>1];var $conv74=$51<<16>>16;var $52=$pOverflow_addr;var $call75=_L_add108($47,$conv74,$52);var $53=$j;var $idxprom76=$53<<16>>16;var $arrayidx77=$L_lsf+($idxprom76<<2)|0;HEAP32[$arrayidx77>>2]=$call75;__label__=18;break;case 18:var $54=$j;var $dec79=$54-1&65535;$j=$dec79;__label__=16;break;case 19:__label__=20;break;case 20:var $55=$i;var $dec82=$55-1&65535;$i=$dec82;__label__=11;break;case 21:$j=9;__label__=22;break;case 22:var $56=$j;var $conv85=$56<<16>>16;var $cmp86=($conv85|0)>=0;if($cmp86){__label__=23;break}else{__label__=28;break}case 23:var $57=$j;var $idxprom89=$57<<16>>16;var $arrayidx90=$L_lsf+($idxprom89<<2)|0;var $58=HEAP32[$arrayidx90>>2];var $cmp91=($58|0)<0;if($cmp91){__label__=24;break}else{__label__=25;break}case 24:var $59=$j;var $idxprom94=$59<<16>>16;var $arrayidx95=$L_lsf+($idxprom94<<2)|0;var $60=HEAP32[$arrayidx95>>2];var $neg96=$60^-1;var $shr97=$neg96>>3;var $neg98=$shr97^-1;var $conv99=$neg98&65535;var $61=$j;var $idxprom100=$61<<16>>16;var $arrayidx101=$lsf+($idxprom100<<1)|0;HEAP16[$arrayidx101>>1]=$conv99;__label__=26;break;case 25:var $62=$j;var $idxprom103=$62<<16>>16;var $arrayidx104=$L_lsf+($idxprom103<<2)|0;var $63=HEAP32[$arrayidx104>>2];var $shr105=$63>>3;var $conv106=$shr105&65535;var $64=$j;var $idxprom107=$64<<16>>16;var $arrayidx108=$lsf+($idxprom107<<1)|0;HEAP16[$arrayidx108>>1]=$conv106;__label__=26;break;case 26:__label__=27;break;case 27:var $65=$j;var $dec111=$65-1&65535;$j=$dec111;__label__=22;break;case 28:var $arraydecay=$lsf|0;var $66=$st_addr;var $lsp=$66+12|0;var $arraydecay113=$lsp|0;var $67=$pOverflow_addr;_Lsf_lsp($arraydecay,$arraydecay113,10,$67);var $68=$st_addr;var $log_en114=$68+4|0;var $69=HEAP16[$log_en114>>1];var $70=$st_addr;var $log_en_adjust115=$70+394|0;var $71=HEAP16[$log_en_adjust115>>1];var $72=$pOverflow_addr;var $call116=_sub($69,$71,$72);var $73=$st_addr;var $log_en117=$73+4|0;HEAP16[$log_en117>>1]=$call116;var $74=$st_addr;var $lsf_hist_mean=$74+214|0;var $arraydecay118=$lsf_hist_mean|0;var $75=$arraydecay118;var $76=$st_addr;var $lsf_hist119=$76+52|0;var $arraydecay120=$lsf_hist119|0;var $77=$arraydecay120;_llvm_memmove_p0i8_p0i8_i32($75,$77,160,1,0);$i=9;__label__=29;break;case 29:var $78=$i;var $conv122=$78<<16>>16;var $cmp123=($conv122|0)>=0;if($cmp123){__label__=30;break}else{__label__=52;break}case 30:$L_lsf_mean=0;$j=7;__label__=31;break;case 31:var $79=$j;var $conv127=$79<<16>>16;var $cmp128=($conv127|0)>=0;if($cmp128){__label__=32;break}else{__label__=34;break}case 32:var $80=$L_lsf_mean;var $81=$i;var $conv131=$81<<16>>16;var $82=$j;var $conv132=$82<<16>>16;var $mul133=$conv132*10|0;var $add134=$conv131+$mul133|0;var $83=$st_addr;var $lsf_hist_mean135=$83+214|0;var $arrayidx136=$lsf_hist_mean135+($add134<<1)|0;var $84=HEAP16[$arrayidx136>>1];var $conv137=$84<<16>>16;var $85=$pOverflow_addr;var $call138=_L_add108($80,$conv137,$85);$L_lsf_mean=$call138;__label__=33;break;case 33:var $86=$j;var $dec140=$86-1&65535;$j=$dec140;__label__=31;break;case 34:var $87=$L_lsf_mean;var $cmp142=($87|0)<0;if($cmp142){__label__=35;break}else{__label__=36;break}case 35:var $88=$L_lsf_mean;var $neg145=$88^-1;var $shr146=$neg145>>3;var $neg147=$shr146^-1;var $conv148=$neg147&65535;$lsf_mean=$conv148;__label__=37;break;case 36:var $89=$L_lsf_mean;var $shr150=$89>>3;var $conv151=$shr150&65535;$lsf_mean=$conv151;__label__=37;break;case 37:$j=7;__label__=38;break;case 38:var $90=$j;var $conv154=$90<<16>>16;var $cmp155=($conv154|0)>=0;if($cmp155){__label__=39;break}else{__label__=50;break}case 39:var $91=$i;var $conv158=$91<<16>>16;var $92=$j;var $conv159=$92<<16>>16;var $mul160=$conv159*10|0;var $add161=$conv158+$mul160|0;var $93=$st_addr;var $lsf_hist_mean162=$93+214|0;var $arrayidx163=$lsf_hist_mean162+($add161<<1)|0;var $94=HEAP16[$arrayidx163>>1];var $95=$lsf_mean;var $96=$pOverflow_addr;var $call164=_sub($94,$95,$96);var $97=$i;var $conv165=$97<<16>>16;var $98=$j;var $conv166=$98<<16>>16;var $mul167=$conv166*10|0;var $add168=$conv165+$mul167|0;var $99=$st_addr;var $lsf_hist_mean169=$99+214|0;var $arrayidx170=$lsf_hist_mean169+($add168<<1)|0;HEAP16[$arrayidx170>>1]=$call164;var $100=$i;var $conv171=$100<<16>>16;var $101=$j;var $conv172=$101<<16>>16;var $mul173=$conv172*10|0;var $add174=$conv171+$mul173|0;var $102=$st_addr;var $lsf_hist_mean175=$102+214|0;var $arrayidx176=$lsf_hist_mean175+($add174<<1)|0;var $103=HEAP16[$arrayidx176>>1];var $104=$i;var $idxprom177=$104<<16>>16;var $arrayidx178=_lsf_hist_mean_scale+($idxprom177<<1)|0;var $105=HEAP16[$arrayidx178>>1];var $106=$pOverflow_addr;var $call179=_mult109($103,$105,$106);var $107=$i;var $conv180=$107<<16>>16;var $108=$j;var $conv181=$108<<16>>16;var $mul182=$conv181*10|0;var $add183=$conv180+$mul182|0;var $109=$st_addr;var $lsf_hist_mean184=$109+214|0;var $arrayidx185=$lsf_hist_mean184+($add183<<1)|0;HEAP16[$arrayidx185>>1]=$call179;var $110=$i;var $conv186=$110<<16>>16;var $111=$j;var $conv187=$111<<16>>16;var $mul188=$conv187*10|0;var $add189=$conv186+$mul188|0;var $112=$st_addr;var $lsf_hist_mean190=$112+214|0;var $arrayidx191=$lsf_hist_mean190+($add189<<1)|0;var $113=HEAP16[$arrayidx191>>1];var $conv192=$113<<16>>16;var $cmp193=($conv192|0)<0;if($cmp193){__label__=40;break}else{__label__=41;break}case 40:$negative=1;__label__=42;break;case 41:$negative=0;__label__=42;break;case 42:var $114=$i;var $conv198=$114<<16>>16;var $115=$j;var $conv199=$115<<16>>16;var $mul200=$conv199*10|0;var $add201=$conv198+$mul200|0;var $116=$st_addr;var $lsf_hist_mean202=$116+214|0;var $arrayidx203=$lsf_hist_mean202+($add201<<1)|0;var $117=HEAP16[$arrayidx203>>1];var $call204=_abs_s110($117);var $118=$i;var $conv205=$118<<16>>16;var $119=$j;var $conv206=$119<<16>>16;var $mul207=$conv206*10|0;var $add208=$conv205+$mul207|0;var $120=$st_addr;var $lsf_hist_mean209=$120+214|0;var $arrayidx210=$lsf_hist_mean209+($add208<<1)|0;HEAP16[$arrayidx210>>1]=$call204;var $121=$i;var $conv211=$121<<16>>16;var $122=$j;var $conv212=$122<<16>>16;var $mul213=$conv212*10|0;var $add214=$conv211+$mul213|0;var $123=$st_addr;var $lsf_hist_mean215=$123+214|0;var $arrayidx216=$lsf_hist_mean215+($add214<<1)|0;var $124=HEAP16[$arrayidx216>>1];var $conv217=$124<<16>>16;var $cmp218=($conv217|0)>655;if($cmp218){__label__=43;break}else{__label__=44;break}case 43:var $125=$i;var $conv221=$125<<16>>16;var $126=$j;var $conv222=$126<<16>>16;var $mul223=$conv222*10|0;var $add224=$conv221+$mul223|0;var $127=$st_addr;var $lsf_hist_mean225=$127+214|0;var $arrayidx226=$lsf_hist_mean225+($add224<<1)|0;var $128=HEAP16[$arrayidx226>>1];var $conv227=$128<<16>>16;var $sub=$conv227-655|0;var $shr228=$sub>>2;var $add229=$shr228+655|0;var $conv230=$add229&65535;var $129=$i;var $conv231=$129<<16>>16;var $130=$j;var $conv232=$130<<16>>16;var $mul233=$conv232*10|0;var $add234=$conv231+$mul233|0;var $131=$st_addr;var $lsf_hist_mean235=$131+214|0;var $arrayidx236=$lsf_hist_mean235+($add234<<1)|0;HEAP16[$arrayidx236>>1]=$conv230;__label__=44;break;case 44:var $132=$i;var $conv238=$132<<16>>16;var $133=$j;var $conv239=$133<<16>>16;var $mul240=$conv239*10|0;var $add241=$conv238+$mul240|0;var $134=$st_addr;var $lsf_hist_mean242=$134+214|0;var $arrayidx243=$lsf_hist_mean242+($add241<<1)|0;var $135=HEAP16[$arrayidx243>>1];var $conv244=$135<<16>>16;var $cmp245=($conv244|0)>1310;if($cmp245){__label__=45;break}else{__label__=46;break}case 45:var $136=$i;var $conv248=$136<<16>>16;var $137=$j;var $conv249=$137<<16>>16;var $mul250=$conv249*10|0;var $add251=$conv248+$mul250|0;var $138=$st_addr;var $lsf_hist_mean252=$138+214|0;var $arrayidx253=$lsf_hist_mean252+($add251<<1)|0;HEAP16[$arrayidx253>>1]=1310;__label__=46;break;case 46:var $139=$negative;var $cmp255=($139|0)!=0;if($cmp255){__label__=47;break}else{__label__=48;break}case 47:var $140=$i;var $conv258=$140<<16>>16;var $141=$j;var $conv259=$141<<16>>16;var $mul260=$conv259*10|0;var $add261=$conv258+$mul260|0;var $142=$st_addr;var $lsf_hist_mean262=$142+214|0;var $arrayidx263=$lsf_hist_mean262+($add261<<1)|0;var $143=HEAP16[$arrayidx263>>1];var $conv264=$143<<16>>16;var $sub265=-$conv264|0;var $conv266=$sub265&65535;var $144=$i;var $conv267=$144<<16>>16;var $145=$j;var $conv268=$145<<16>>16;var $mul269=$conv268*10|0;var $add270=$conv267+$mul269|0;var $146=$st_addr;var $lsf_hist_mean271=$146+214|0;var $arrayidx272=$lsf_hist_mean271+($add270<<1)|0;HEAP16[$arrayidx272>>1]=$conv266;__label__=48;break;case 48:__label__=49;break;case 49:var $147=$j;var $dec275=$147-1&65535;$j=$dec275;__label__=38;break;case 50:__label__=51;break;case 51:var $148=$i;var $dec278=$148-1&65535;$i=$dec278;__label__=29;break;case 52:__label__=53;break;case 53:var $149=$st_addr;var $sid_frame281=$149+400|0;var $150=HEAP16[$sid_frame281>>1];var $conv282=$150<<16>>16;var $cmp283=($conv282|0)!=0;if($cmp283){__label__=54;break}else{__label__=81;break}case 54:var $151=$st_addr;var $lsp_old=$151+32|0;var $arraydecay286=$lsp_old|0;var $152=$arraydecay286;var $153=$st_addr;var $lsp287=$153+12|0;var $arraydecay288=$lsp287|0;var $154=$arraydecay288;_llvm_memmove_p0i8_p0i8_i32($152,$154,20,1,0);var $155=$st_addr;var $log_en289=$155+4|0;var $156=HEAP16[$log_en289>>1];var $157=$st_addr;var $old_log_en=$157+6|0;HEAP16[$old_log_en>>1]=$156;var $158=$st_addr;var $valid_data=$158+402|0;var $159=HEAP16[$valid_data>>1];var $conv290=$159<<16>>16;var $cmp291=($conv290|0)!=0;if($cmp291){__label__=55;break}else{__label__=72;break}case 55:var $160=$st_addr;var $since_last_sid=$160|0;var $161=HEAP16[$since_last_sid>>1];$tmp_int_length=$161;var $162=$st_addr;var $since_last_sid294=$162|0;HEAP16[$since_last_sid294>>1]=0;var $163=$tmp_int_length;var $conv295=$163<<16>>16;var $cmp296=($conv295|0)>=32;if($cmp296){__label__=56;break}else{__label__=57;break}case 56:$tmp_int_length=32;__label__=57;break;case 57:var $164=$tmp_int_length;var $conv300=$164<<16>>16;var $shl=$conv300<<10;$L_temp=$shl;var $165=$L_temp;var $166=$L_temp;var $conv301=$166&65535;var $conv302=$conv301<<16>>16;var $cmp303=($165|0)!=($conv302|0);if($cmp303){__label__=58;break}else{__label__=59;break}case 58:var $167=$pOverflow_addr;HEAP32[$167>>2]=1;var $168=$tmp_int_length;var $conv306=$168<<16>>16;var $cmp307=($conv306|0)>0;var $cond=$cmp307?32767:-32768;$L_temp=$cond;__label__=59;break;case 59:var $169=$L_temp;var $conv310=$169&65535;$temp=$conv310;var $170=$tmp_int_length;var $conv311=$170<<16>>16;var $cmp312=($conv311|0)>=2;if($cmp312){__label__=60;break}else{__label__=61;break}case 60:var $171=$temp;var $call315=_div_s(1024,$171);var $172=$st_addr;var $true_sid_period_inv=$172+2|0;HEAP16[$true_sid_period_inv>>1]=$call315;__label__=62;break;case 61:var $173=$st_addr;var $true_sid_period_inv317=$173+2|0;HEAP16[$true_sid_period_inv317>>1]=16384;__label__=62;break;case 62:var $174=$lsfState_addr;var $175=$parm_addr;var $arrayidx319=$175|0;var $176=HEAP16[$arrayidx319>>1];var $177=$common_amr_tbls_addr;var $past_rq_init_ptr=$177+60|0;var $178=HEAP32[$past_rq_init_ptr>>2];_Init_D_plsf_3($174,$176,$178);var $179=$lsfState_addr;var $180=$parm_addr;var $arrayidx320=$180+2|0;var $181=$common_amr_tbls_addr;var $182=$st_addr;var $lsp321=$182+12|0;var $arraydecay322=$lsp321|0;var $183=$pOverflow_addr;_D_plsf_3($179,8,0,$arrayidx320,$181,$arraydecay322,$183);var $184=$lsfState_addr;var $past_r_q=$184|0;var $arraydecay323=$past_r_q|0;var $185=$arraydecay323;_memset($185,0,20,1);var $186=$parm_addr;var $arrayidx324=$186+8|0;var $187=HEAP16[$arrayidx324>>1];$log_en_index=$187;var $188=$log_en_index;var $conv325=$188<<16>>16;var $cmp326=($conv325|0)>63;if($cmp326){__label__=64;break}else{__label__=63;break}case 63:var $189=$log_en_index;var $conv328=$189<<16>>16;var $cmp329=($conv328|0)<-64;if($cmp329){__label__=64;break}else{__label__=65;break}case 64:var $190=$log_en_index;var $conv332=$190<<16>>16;var $cmp333=($conv332|0)>0;var $cond335=$cmp333?32767:-32768;var $conv336=$cond335&65535;var $191=$st_addr;var $log_en337=$191+4|0;HEAP16[$log_en337>>1]=$conv336;__label__=66;break;case 65:var $192=$log_en_index;var $conv339=$192<<16>>16;var $shl340=$conv339<<9;var $conv341=$shl340&65535;var $193=$st_addr;var $log_en342=$193+4|0;HEAP16[$log_en342>>1]=$conv341;__label__=66;break;case 66:var $194=$st_addr;var $log_en344=$194+4|0;var $195=HEAP16[$log_en344>>1];var $conv345=$195<<16>>16;var $sub346=$conv345-5120|0;var $conv347=$sub346&65535;HEAP16[$log_en344>>1]=$conv347;var $196=$log_en_index;var $conv348=$196<<16>>16;var $cmp349=($conv348|0)==0;if($cmp349){__label__=67;break}else{__label__=68;break}case 67:var $197=$st_addr;var $log_en352=$197+4|0;HEAP16[$log_en352>>1]=-32768;__label__=68;break;case 68:var $198=$st_addr;var $data_updated=$198+412|0;var $199=HEAP16[$data_updated>>1];var $conv354=$199<<16>>16;var $cmp355=($conv354|0)==0;if($cmp355){__label__=70;break}else{__label__=69;break}case 69:var $200=$st_addr;var $dtxGlobalState=$200+408|0;var $201=HEAP32[$dtxGlobalState>>2];var $cmp358=($201|0)==0;if($cmp358){__label__=70;break}else{__label__=71;break}case 70:var $202=$st_addr;var $lsp_old361=$202+32|0;var $arraydecay362=$lsp_old361|0;var $203=$arraydecay362;var $204=$st_addr;var $lsp363=$204+12|0;var $arraydecay364=$lsp363|0;var $205=$arraydecay364;_llvm_memmove_p0i8_p0i8_i32($203,$205,20,1,0);var $206=$st_addr;var $log_en365=$206+4|0;var $207=HEAP16[$log_en365>>1];var $208=$st_addr;var $old_log_en366=$208+6|0;HEAP16[$old_log_en366>>1]=$207;__label__=71;break;case 71:__label__=72;break;case 72:var $209=$st_addr;var $log_en369=$209+4|0;var $210=HEAP16[$log_en369>>1];var $conv370=$210<<16>>16;var $cmp371=($conv370|0)<0;if($cmp371){__label__=73;break}else{__label__=74;break}case 73:var $211=$st_addr;var $log_en374=$211+4|0;var $212=HEAP16[$log_en374>>1];var $conv375=$212<<16>>16;var $neg376=$conv375^-1;var $shr377=$neg376>>1;var $neg378=$shr377^-1;var $conv379=$neg378&65535;$temp=$conv379;__label__=75;break;case 74:var $213=$st_addr;var $log_en381=$213+4|0;var $214=HEAP16[$log_en381>>1];var $conv382=$214<<16>>16;var $shr383=$conv382>>1;var $conv384=$shr383&65535;$temp=$conv384;__label__=75;break;case 75:var $215=$temp;var $conv386=$215<<16>>16;var $sub387=$conv386-9e3|0;var $conv388=$sub387&65535;$ma_pred_init=$conv388;var $216=$ma_pred_init;var $conv389=$216<<16>>16;var $cmp390=($conv389|0)>0;if($cmp390){__label__=76;break}else{__label__=77;break}case 76:$ma_pred_init=0;__label__=80;break;case 77:var $217=$ma_pred_init;var $conv394=$217<<16>>16;var $cmp395=($conv394|0)<-14436;if($cmp395){__label__=78;break}else{__label__=79;break}case 78:$ma_pred_init=-14436;__label__=79;break;case 79:__label__=80;break;case 80:var $218=$ma_pred_init;var $219=$predState_addr;var $past_qua_en=$219|0;var $arrayidx400=$past_qua_en|0;HEAP16[$arrayidx400>>1]=$218;var $220=$ma_pred_init;var $221=$predState_addr;var $past_qua_en401=$221|0;var $arrayidx402=$past_qua_en401+2|0;HEAP16[$arrayidx402>>1]=$220;var $222=$ma_pred_init;var $223=$predState_addr;var $past_qua_en403=$223|0;var $arrayidx404=$past_qua_en403+4|0;HEAP16[$arrayidx404>>1]=$222;var $224=$ma_pred_init;var $225=$predState_addr;var $past_qua_en405=$225|0;var $arrayidx406=$past_qua_en405+6|0;HEAP16[$arrayidx406>>1]=$224;var $226=$ma_pred_init;var $conv407=$226<<16>>16;var $mul408=$conv407*5443|0;var $shr409=$mul408>>15;var $conv410=$shr409&65535;$ma_pred_init=$conv410;var $227=$ma_pred_init;var $228=$predState_addr;var $past_qua_en_MR122=$228+8|0;var $arrayidx411=$past_qua_en_MR122|0;HEAP16[$arrayidx411>>1]=$227;var $229=$ma_pred_init;var $230=$predState_addr;var $past_qua_en_MR122412=$230+8|0;var $arrayidx413=$past_qua_en_MR122412+2|0;HEAP16[$arrayidx413>>1]=$229;var $231=$ma_pred_init;var $232=$predState_addr;var $past_qua_en_MR122414=$232+8|0;var $arrayidx415=$past_qua_en_MR122414+4|0;HEAP16[$arrayidx415>>1]=$231;var $233=$ma_pred_init;var $234=$predState_addr;var $past_qua_en_MR122416=$234+8|0;var $arrayidx417=$past_qua_en_MR122416+6|0;HEAP16[$arrayidx417>>1]=$233;__label__=81;break;case 81:var $235=$mode_addr;var $arrayidx419=_dtx_log_en_adjust+($235<<1)|0;var $236=HEAP16[$arrayidx419>>1];var $conv420=$236<<16>>16;var $cmp421=($conv420|0)>1023;if($cmp421){__label__=82;break}else{__label__=83;break}case 82:$temp=32767;__label__=87;break;case 83:var $237=$mode_addr;var $arrayidx425=_dtx_log_en_adjust+($237<<1)|0;var $238=HEAP16[$arrayidx425>>1];var $conv426=$238<<16>>16;var $cmp427=($conv426|0)<-1024;if($cmp427){__label__=84;break}else{__label__=85;break}case 84:$temp=-32768;__label__=86;break;case 85:var $239=$mode_addr;var $arrayidx431=_dtx_log_en_adjust+($239<<1)|0;var $240=HEAP16[$arrayidx431>>1];var $conv432=$240<<16>>16;var $shl433=$conv432<<5;var $mul434=$shl433*3277|0;var $shr435=$mul434>>15;var $conv436=$shr435&65535;$temp=$conv436;__label__=86;break;case 86:__label__=87;break;case 87:var $241=$temp;var $conv439=$241<<16>>16;var $cmp440=($conv439|0)<0;if($cmp440){__label__=88;break}else{__label__=89;break}case 88:var $242=$temp;var $conv443=$242<<16>>16;var $neg444=$conv443^-1;var $shr445=$neg444>>5;var $neg446=$shr445^-1;var $conv447=$neg446&65535;$temp=$conv447;__label__=90;break;case 89:var $243=$temp;var $conv449=$243<<16>>16;var $shr450=$conv449>>5;var $conv451=$shr450&65535;$temp=$conv451;__label__=90;break;case 90:var $244=$st_addr;var $log_en_adjust453=$244+394|0;var $245=HEAP16[$log_en_adjust453>>1];var $conv454=$245<<16>>16;var $mul455=$conv454*29491|0;var $shr456=$mul455>>15;var $conv457=$shr456&65535;var $246=$temp;var $247=$pOverflow_addr;var $call458=_add_16($conv457,$246,$247);var $248=$st_addr;var $log_en_adjust459=$248+394|0;HEAP16[$log_en_adjust459>>1]=$call458;var $249=$st_addr;var $since_last_sid460=$249|0;var $250=HEAP16[$since_last_sid460>>1];var $conv461=$250<<16>>16;var $add462=$conv461+1|0;var $conv463=$add462&65535;var $251=$pOverflow_addr;var $call464=_shl111($conv463,10,$251);$int_fac=$call464;var $252=$int_fac;var $253=$st_addr;var $true_sid_period_inv465=$253+2|0;var $254=HEAP16[$true_sid_period_inv465>>1];var $255=$pOverflow_addr;var $call466=_mult109($252,$254,$255);$int_fac=$call466;var $256=$int_fac;var $conv467=$256<<16>>16;var $cmp468=($conv467|0)>1024;if($cmp468){__label__=91;break}else{__label__=92;break}case 91:$int_fac=16384;__label__=96;break;case 92:var $257=$int_fac;var $conv472=$257<<16>>16;var $cmp473=($conv472|0)<-2048;if($cmp473){__label__=93;break}else{__label__=94;break}case 93:$int_fac=-32768;__label__=95;break;case 94:var $258=$int_fac;var $conv477=$258<<16>>16;var $shl478=$conv477<<4;var $conv479=$shl478&65535;$int_fac=$conv479;__label__=95;break;case 95:__label__=96;break;case 96:var $259=$int_fac;var $260=$st_addr;var $log_en482=$260+4|0;var $261=HEAP16[$log_en482>>1];var $262=$pOverflow_addr;var $call483=_L_mult112($259,$261,$262);$L_log_en_int=$call483;$i=9;__label__=97;break;case 97:var $263=$i;var $conv485=$263<<16>>16;var $cmp486=($conv485|0)>=0;if($cmp486){__label__=98;break}else{__label__=100;break}case 98:var $264=$int_fac;var $265=$i;var $idxprom489=$265<<16>>16;var $266=$st_addr;var $lsp490=$266+12|0;var $arrayidx491=$lsp490+($idxprom489<<1)|0;var $267=HEAP16[$arrayidx491>>1];var $268=$pOverflow_addr;var $call492=_mult109($264,$267,$268);var $269=$i;var $idxprom493=$269<<16>>16;var $arrayidx494=$lsp_int+($idxprom493<<1)|0;HEAP16[$arrayidx494>>1]=$call492;__label__=99;break;case 99:var $270=$i;var $dec496=$270-1&65535;$i=$dec496;__label__=97;break;case 100:var $271=$int_fac;var $conv498=$271<<16>>16;var $sub499=16384-$conv498|0;var $conv500=$sub499&65535;$int_fac=$conv500;var $272=$L_log_en_int;var $273=$int_fac;var $274=$st_addr;var $old_log_en501=$274+6|0;var $275=HEAP16[$old_log_en501>>1];var $276=$pOverflow_addr;var $call502=_L_mac113($272,$273,$275,$276);$L_log_en_int=$call502;$i=9;__label__=101;break;case 101:var $277=$i;var $conv504=$277<<16>>16;var $cmp505=($conv504|0)>=0;if($cmp505){__label__=102;break}else{__label__=106;break}case 102:var $278=$i;var $idxprom508=$278<<16>>16;var $arrayidx509=$lsp_int+($idxprom508<<1)|0;var $279=HEAP16[$arrayidx509>>1];var $280=$int_fac;var $281=$i;var $idxprom510=$281<<16>>16;var $282=$st_addr;var $lsp_old511=$282+32|0;var $arrayidx512=$lsp_old511+($idxprom510<<1)|0;var $283=HEAP16[$arrayidx512>>1];var $284=$pOverflow_addr;var $call513=_mult109($280,$283,$284);var $285=$pOverflow_addr;var $call514=_add_16($279,$call513,$285);var $286=$i;var $idxprom515=$286<<16>>16;var $arrayidx516=$lsp_int+($idxprom515<<1)|0;HEAP16[$arrayidx516>>1]=$call514;var $287=$i;var $idxprom517=$287<<16>>16;var $arrayidx518=$lsp_int+($idxprom517<<1)|0;var $288=HEAP16[$arrayidx518>>1];var $conv519=$288<<16>>16;var $shl520=$conv519<<1;$L_temp=$shl520;var $289=$L_temp;var $290=$L_temp;var $conv521=$290&65535;var $conv522=$conv521<<16>>16;var $cmp523=($289|0)!=($conv522|0);if($cmp523){__label__=103;break}else{__label__=104;break}case 103:var $291=$pOverflow_addr;HEAP32[$291>>2]=1;var $292=$i;var $idxprom526=$292<<16>>16;var $arrayidx527=$lsp_int+($idxprom526<<1)|0;var $293=HEAP16[$arrayidx527>>1];var $conv528=$293<<16>>16;var $cmp529=($conv528|0)>0;var $cond531=$cmp529?32767:-32768;$L_temp=$cond531;__label__=104;break;case 104:var $294=$L_temp;var $conv533=$294&65535;var $295=$i;var $idxprom534=$295<<16>>16;var $arrayidx535=$lsp_int+($idxprom534<<1)|0;HEAP16[$arrayidx535>>1]=$conv533;__label__=105;break;case 105:var $296=$i;var $dec537=$296-1&65535;$i=$dec537;__label__=101;break;case 106:var $297=$st_addr;var $log_pg_mean=$297+374|0;var $298=HEAP16[$log_pg_mean>>1];var $conv539=$298<<16>>16;var $sub540=$conv539-2457|0;var $conv541=$sub540&65535;$lsf_variab_factor=$conv541;var $299=$lsf_variab_factor;var $300=$pOverflow_addr;var $call542=_mult109($299,9830,$300);var $conv543=$call542<<16>>16;var $sub544=4096-$conv543|0;var $conv545=$sub544&65535;$lsf_variab_factor=$conv545;var $301=$lsf_variab_factor;var $conv546=$301<<16>>16;var $cmp547=($conv546|0)>4095;if($cmp547){__label__=107;break}else{__label__=108;break}case 107:$lsf_variab_factor=32767;__label__=112;break;case 108:var $302=$lsf_variab_factor;var $conv551=$302<<16>>16;var $cmp552=($conv551|0)<0;if($cmp552){__label__=109;break}else{__label__=110;break}case 109:$lsf_variab_factor=0;__label__=111;break;case 110:var $303=$lsf_variab_factor;var $conv556=$303<<16>>16;var $shl557=$conv556<<3;var $conv558=$shl557&65535;$lsf_variab_factor=$conv558;__label__=111;break;case 111:__label__=112;break;case 112:var $304=$st_addr;var $L_pn_seed_rx=$304+8|0;var $call561=_pseudonoise($L_pn_seed_rx,3);$lsf_variab_index=$call561;var $arraydecay562=$lsp_int|0;var $arraydecay563=$lsf_int|0;var $305=$pOverflow_addr;_Lsp_lsf($arraydecay562,$arraydecay563,10,$305);var $arraydecay564=$lsf_int_variab|0;var $306=$arraydecay564;var $arraydecay565=$lsf_int|0;var $307=$arraydecay565;_llvm_memmove_p0i8_p0i8_i32($306,$307,20,1,0);$i=9;__label__=113;break;case 113:var $308=$i;var $conv567=$308<<16>>16;var $cmp568=($conv567|0)>=0;if($cmp568){__label__=114;break}else{__label__=116;break}case 114:var $309=$i;var $idxprom571=$309<<16>>16;var $arrayidx572=$lsf_int_variab+($idxprom571<<1)|0;var $310=HEAP16[$arrayidx572>>1];var $311=$lsf_variab_factor;var $312=$i;var $conv573=$312<<16>>16;var $313=$lsf_variab_index;var $conv574=$313<<16>>16;var $mul575=$conv574*10|0;var $add576=$conv573+$mul575|0;var $314=$st_addr;var $lsf_hist_mean577=$314+214|0;var $arrayidx578=$lsf_hist_mean577+($add576<<1)|0;var $315=HEAP16[$arrayidx578>>1];var $316=$pOverflow_addr;var $call579=_mult109($311,$315,$316);var $317=$pOverflow_addr;var $call580=_add_16($310,$call579,$317);var $318=$i;var $idxprom581=$318<<16>>16;var $arrayidx582=$lsf_int_variab+($idxprom581<<1)|0;HEAP16[$arrayidx582>>1]=$call580;__label__=115;break;case 115:var $319=$i;var $dec584=$319-1&65535;$i=$dec584;__label__=113;break;case 116:var $arraydecay586=$lsf_int|0;var $320=$pOverflow_addr;_Reorder_lsf($arraydecay586,205,10,$320);var $arraydecay587=$lsf_int_variab|0;var $321=$pOverflow_addr;_Reorder_lsf($arraydecay587,205,10,$321);var $322=$lsfState_addr;var $past_lsf_q=$322+20|0;var $arraydecay588=$past_lsf_q|0;var $323=$arraydecay588;var $arraydecay589=$lsf_int|0;var $324=$arraydecay589;_llvm_memmove_p0i8_p0i8_i32($323,$324,20,1,0);var $arraydecay590=$lsf_int|0;var $arraydecay591=$lsp_int|0;var $325=$pOverflow_addr;_Lsf_lsp($arraydecay590,$arraydecay591,10,$325);var $arraydecay592=$lsf_int_variab|0;var $arraydecay593=$lsp_int_variab|0;var $326=$pOverflow_addr;_Lsf_lsp($arraydecay592,$arraydecay593,10,$326);var $arraydecay594=$lsp_int|0;var $arraydecay595=$acoeff|0;var $327=$pOverflow_addr;_Lsp_Az($arraydecay594,$arraydecay595,$327);var $arraydecay596=$lsp_int_variab|0;var $arraydecay597=$acoeff_variab|0;var $328=$pOverflow_addr;_Lsp_Az($arraydecay596,$arraydecay597,$328);var $329=$A_t_addr;var $arrayidx598=$329|0;var $330=$arrayidx598;var $arraydecay599=$acoeff|0;var $331=$arraydecay599;_llvm_memmove_p0i8_p0i8_i32($330,$331,22,1,0);var $332=$A_t_addr;var $arrayidx600=$332+22|0;var $333=$arrayidx600;var $arraydecay601=$acoeff|0;var $334=$arraydecay601;_llvm_memmove_p0i8_p0i8_i32($333,$334,22,1,0);var $335=$A_t_addr;var $arrayidx602=$335+44|0;var $336=$arrayidx602;var $arraydecay603=$acoeff|0;var $337=$arraydecay603;_llvm_memmove_p0i8_p0i8_i32($336,$337,22,1,0);var $338=$A_t_addr;var $arrayidx604=$338+66|0;var $339=$arrayidx604;var $arraydecay605=$acoeff|0;var $340=$arraydecay605;_llvm_memmove_p0i8_p0i8_i32($339,$340,22,1,0);var $arrayidx606=$acoeff+2|0;var $arraydecay607=$refl|0;var $341=$pOverflow_addr;_A_Refl($arrayidx606,$arraydecay607,$341);$pred_err=32767;$i=0;__label__=117;break;case 117:var $342=$i;var $conv609=$342<<16>>16;var $cmp610=($conv609|0)<10;if($cmp610){__label__=118;break}else{__label__=123;break}case 118:var $343=$i;var $idxprom613=$343<<16>>16;var $arrayidx614=$refl+($idxprom613<<1)|0;var $344=HEAP16[$arrayidx614>>1];var $conv615=$344<<16>>16;var $345=$i;var $idxprom616=$345<<16>>16;var $arrayidx617=$refl+($idxprom616<<1)|0;var $346=HEAP16[$arrayidx617>>1];var $conv618=$346<<16>>16;var $mul619=$conv615*$conv618|0;var $shr620=$mul619>>15;$L_temp=$shr620;var $347=$L_temp;var $cmp621=($347|0)<=32767;if($cmp621){__label__=119;break}else{__label__=120;break}case 119:var $348=$L_temp;var $conv624=$348&65535;var $conv625=$conv624<<16>>16;var $sub626=32767-$conv625|0;var $conv627=$sub626&65535;$temp=$conv627;__label__=121;break;case 120:var $349=$pOverflow_addr;HEAP32[$349>>2]=1;$temp=0;__label__=121;break;case 121:var $350=$pred_err;var $351=$temp;var $352=$pOverflow_addr;var $call630=_mult109($350,$351,$352);$pred_err=$call630;__label__=122;break;case 122:var $353=$i;var $inc=$353+1&65535;$i=$inc;__label__=117;break;case 123:var $354=$pred_err;var $conv633=$354<<16>>16;var $355=$pOverflow_addr;_Log2($conv633,$log_pg_e,$log_pg_m,$355);var $356=HEAP16[$log_pg_e>>1];var $conv634=$356<<16>>16;var $sub635=$conv634-15|0;var $conv636=$sub635&65535;var $357=$pOverflow_addr;var $call637=_shl111($conv636,12,$357);$log_pg=$call637;var $358=$log_pg;var $359=HEAP16[$log_pg_m>>1];var $360=$pOverflow_addr;var $call638=_shr($359,3,$360);var $361=$pOverflow_addr;var $call639=_add_16($358,$call638,$361);var $362=$pOverflow_addr;var $call640=_sub(0,$call639,$362);var $363=$pOverflow_addr;var $call641=_shr($call640,1,$363);$log_pg=$call641;var $364=$st_addr;var $log_pg_mean642=$364+374|0;var $365=HEAP16[$log_pg_mean642>>1];var $366=$pOverflow_addr;var $call643=_mult109(29491,$365,$366);var $367=$log_pg;var $368=$pOverflow_addr;var $call644=_mult109(3277,$367,$368);var $369=$pOverflow_addr;var $call645=_add_16($call643,$call644,$369);var $370=$st_addr;var $log_pg_mean646=$370+374|0;HEAP16[$log_pg_mean646>>1]=$call645;var $371=$L_log_en_int;var $372=$pOverflow_addr;var $call647=_L_shr114($371,10,$372);$L_log_en_int=$call647;var $373=$L_log_en_int;var $374=$pOverflow_addr;var $call648=_L_add108($373,262144,$374);$L_log_en_int=$call648;var $375=$L_log_en_int;var $376=$log_pg;var $conv649=$376<<16>>16;var $377=$pOverflow_addr;var $call650=_L_shl116($conv649,4,$377);var $378=$pOverflow_addr;var $call651=_L_sub115($375,$call650,$378);$L_log_en_int=$call651;var $379=$L_log_en_int;var $380=$st_addr;var $log_en_adjust652=$380+394|0;var $381=HEAP16[$log_en_adjust652>>1];var $conv653=$381<<16>>16;var $382=$pOverflow_addr;var $call654=_L_shl116($conv653,5,$382);var $383=$pOverflow_addr;var $call655=_L_add108($379,$call654,$383);$L_log_en_int=$call655;var $384=$L_log_en_int;var $shr656=$384>>16;var $conv657=$shr656&65535;$log_en_int_e=$conv657;var $385=$L_log_en_int;var $386=$log_en_int_e;var $conv658=$386<<16>>16;var $shl659=$conv658<<16;var $387=$pOverflow_addr;var $call660=_L_sub115($385,$shl659,$387);var $388=$pOverflow_addr;var $call661=_L_shr114($call660,1,$388);var $conv662=$call661&65535;$log_en_int_m=$conv662;var $389=$log_en_int_e;var $390=$log_en_int_m;var $391=$pOverflow_addr;var $call663=_Pow2($389,$390,$391);var $conv664=$call663&65535;$level=$conv664;$i=0;__label__=124;break;case 124:var $392=$i;var $conv666=$392<<16>>16;var $cmp667=($conv666|0)<4;if($cmp667){__label__=125;break}else{__label__=131;break}case 125:var $393=$st_addr;var $L_pn_seed_rx670=$393+8|0;var $arraydecay671=$ex|0;var $394=$pOverflow_addr;_build_CN_code($L_pn_seed_rx670,$arraydecay671,$394);$j=39;__label__=126;break;case 126:var $395=$j;var $conv673=$395<<16>>16;var $cmp674=($conv673|0)>=0;if($cmp674){__label__=127;break}else{__label__=129;break}case 127:var $396=$level;var $397=$j;var $idxprom677=$397<<16>>16;var $arrayidx678=$ex+($idxprom677<<1)|0;var $398=HEAP16[$arrayidx678>>1];var $399=$pOverflow_addr;var $call679=_mult109($396,$398,$399);var $400=$j;var $idxprom680=$400<<16>>16;var $arrayidx681=$ex+($idxprom680<<1)|0;HEAP16[$arrayidx681>>1]=$call679;__label__=128;break;case 128:var $401=$j;var $dec683=$401-1&65535;$j=$dec683;__label__=126;break;case 129:var $arraydecay685=$acoeff_variab|0;var $arraydecay686=$ex|0;var $402=$i;var $conv687=$402<<16>>16;var $mul688=$conv687*40|0;var $403=$synth_addr;var $arrayidx689=$403+($mul688<<1)|0;var $404=$mem_syn_addr;_Syn_filt($arraydecay685,$arraydecay686,$arrayidx689,40,$404,1);__label__=130;break;case 130:var $405=$i;var $inc691=$405+1&65535;$i=$inc691;__label__=124;break;case 131:var $406=$averState_addr;var $hangVar=$406+14|0;HEAP16[$hangVar>>1]=20;var $407=$averState_addr;var $hangCount=$407+16|0;HEAP16[$hangCount>>1]=0;var $408=$new_state_addr;var $cmp693=($408|0)==2;if($cmp693){__label__=132;break}else{__label__=140;break}case 132:var $409=$st_addr;var $since_last_sid696=$409|0;var $410=HEAP16[$since_last_sid696>>1];$tmp_int_length=$410;var $411=$tmp_int_length;var $conv697=$411<<16>>16;var $cmp698=($conv697|0)>32;if($cmp698){__label__=133;break}else{__label__=134;break}case 133:$tmp_int_length=32;__label__=137;break;case 134:var $412=$tmp_int_length;var $conv702=$412<<16>>16;var $cmp703=($conv702|0)<=0;if($cmp703){__label__=135;break}else{__label__=136;break}case 135:$tmp_int_length=8;__label__=136;break;case 136:__label__=137;break;case 137:var $413=$tmp_int_length;var $conv708=$413<<16>>16;var $shl709=$conv708<<10;$L_temp=$shl709;var $414=$L_temp;var $415=$L_temp;var $conv710=$415&65535;var $conv711=$conv710<<16>>16;var $cmp712=($414|0)!=($conv711|0);if($cmp712){__label__=138;break}else{__label__=139;break}case 138:var $416=$pOverflow_addr;HEAP32[$416>>2]=1;var $417=$tmp_int_length;var $conv715=$417<<16>>16;var $cmp716=($conv715|0)>0;var $cond718=$cmp716?32767:-32768;$L_temp=$cond718;__label__=139;break;case 139:var $418=$L_temp;var $conv720=$418&65535;$temp=$conv720;var $419=$temp;var $call721=_div_s(1024,$419);var $420=$st_addr;var $true_sid_period_inv722=$420+2|0;HEAP16[$true_sid_period_inv722>>1]=$call721;var $421=$st_addr;var $since_last_sid723=$421|0;HEAP16[$since_last_sid723>>1]=0;var $422=$st_addr;var $lsp_old724=$422+32|0;var $arraydecay725=$lsp_old724|0;var $423=$arraydecay725;var $424=$st_addr;var $lsp726=$424+12|0;var $arraydecay727=$lsp726|0;var $425=$arraydecay727;_llvm_memmove_p0i8_p0i8_i32($423,$425,20,1,0);var $426=$st_addr;var $log_en728=$426+4|0;var $427=HEAP16[$log_en728>>1];var $428=$st_addr;var $old_log_en729=$428+6|0;HEAP16[$old_log_en729>>1]=$427;var $429=$st_addr;var $log_en730=$429+4|0;var $430=HEAP16[$log_en730>>1];var $conv731=$430<<16>>16;var $sub732=$conv731-256|0;var $conv733=$sub732&65535;var $431=$st_addr;var $log_en734=$431+4|0;HEAP16[$log_en734>>1]=$conv733;__label__=140;break;case 140:var $432=$st_addr;var $sid_frame736=$432+400|0;var $433=HEAP16[$sid_frame736>>1];var $conv737=$433<<16>>16;var $cmp738=($conv737|0)!=0;if($cmp738){__label__=141;break}else{__label__=145;break}case 141:var $434=$st_addr;var $valid_data741=$434+402|0;var $435=HEAP16[$valid_data741>>1];var $conv742=$435<<16>>16;var $cmp743=($conv742|0)!=0;if($cmp743){__label__=144;break}else{__label__=142;break}case 142:var $436=$st_addr;var $valid_data746=$436+402|0;var $437=HEAP16[$valid_data746>>1];var $conv747=$437<<16>>16;var $cmp748=($conv747|0)==0;if($cmp748){__label__=143;break}else{__label__=145;break}case 143:var $438=$st_addr;var $dtxHangoverAdded751=$438+404|0;var $439=HEAP16[$dtxHangoverAdded751>>1];var $conv752=$439<<16>>16;var $cmp753=($conv752|0)!=0;if($cmp753){__label__=144;break}else{__label__=145;break}case 144:var $440=$st_addr;var $since_last_sid756=$440|0;HEAP16[$since_last_sid756>>1]=0;var $441=$st_addr;var $data_updated757=$441+412|0;HEAP16[$data_updated757>>1]=1;__label__=145;break;case 145:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_dtx_dec["X"]=1;function _L_add108($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _mult109($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _abs_s110($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _shl111($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl111["X"]=1;function _L_mult112($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_mac113($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac113["X"]=1;function _L_shr114($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_sub115($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _L_shl116($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _dtx_dec_activity_update($st,$lsf,$frame,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $lsf_addr;var $frame_addr;var $pOverflow_addr;var $i;var $L_frame_en;var $L_temp;var $log_en_e=__stackBase__;var $log_en_m=__stackBase__+4;var $log_en;$st_addr=$st;$lsf_addr=$lsf;$frame_addr=$frame;$pOverflow_addr=$pOverflow;HEAP16[$log_en_m>>1]=0;$log_en=0;var $0=$st_addr;var $lsf_hist_ptr=$0+212|0;var $1=HEAP16[$lsf_hist_ptr>>1];var $conv=$1<<16>>16;var $add=$conv+10|0;var $conv1=$add&65535;HEAP16[$lsf_hist_ptr>>1]=$conv1;var $2=$st_addr;var $lsf_hist_ptr2=$2+212|0;var $3=HEAP16[$lsf_hist_ptr2>>1];var $conv3=$3<<16>>16;var $cmp=($conv3|0)==80;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$st_addr;var $lsf_hist_ptr5=$4+212|0;HEAP16[$lsf_hist_ptr5>>1]=0;__label__=2;break;case 2:var $5=$st_addr;var $lsf_hist_ptr6=$5+212|0;var $6=HEAP16[$lsf_hist_ptr6>>1];var $idxprom=$6<<16>>16;var $7=$st_addr;var $lsf_hist=$7+52|0;var $arrayidx=$lsf_hist+($idxprom<<1)|0;var $8=$arrayidx;var $9=$lsf_addr;var $10=$9;_llvm_memmove_p0i8_p0i8_i32($8,$10,20,1,0);$L_frame_en=0;$i=159;__label__=3;break;case 3:var $11=$i;var $conv7=$11<<16>>16;var $cmp8=($conv7|0)>=0;if($cmp8){__label__=4;break}else{__label__=9;break}case 4:var $12=$i;var $idxprom10=$12<<16>>16;var $13=$frame_addr;var $arrayidx11=$13+($idxprom10<<1)|0;var $14=HEAP16[$arrayidx11>>1];var $conv12=$14<<16>>16;var $15=$i;var $idxprom13=$15<<16>>16;var $16=$frame_addr;var $arrayidx14=$16+($idxprom13<<1)|0;var $17=HEAP16[$arrayidx14>>1];var $conv15=$17<<16>>16;var $mul=$conv12*$conv15|0;$L_temp=$mul;var $18=$L_temp;var $cmp16=($18|0)!=1073741824;if($cmp16){__label__=5;break}else{__label__=6;break}case 5:var $19=$L_temp;var $shl=$19<<1;$L_temp=$shl;__label__=7;break;case 6:$L_temp=2147483647;__label__=7;break;case 7:var $20=$L_frame_en;var $21=$L_temp;var $22=$pOverflow_addr;var $call=_L_add108($20,$21,$22);$L_frame_en=$call;__label__=8;break;case 8:var $23=$i;var $dec=$23-1&65535;$i=$dec;__label__=3;break;case 9:var $24=$L_frame_en;var $25=$pOverflow_addr;_Log2($24,$log_en_e,$log_en_m,$25);var $26=HEAP16[$log_en_e>>1];var $conv20=$26<<16>>16;var $shl21=$conv20<<10;$L_temp=$shl21;var $27=$L_temp;var $28=$L_temp;var $conv22=$28&65535;var $conv23=$conv22<<16>>16;var $cmp24=($27|0)!=($conv23|0);if($cmp24){__label__=10;break}else{__label__=11;break}case 10:var $29=$pOverflow_addr;HEAP32[$29>>2]=1;var $30=HEAP16[$log_en_e>>1];var $conv27=$30<<16>>16;var $cmp28=($conv27|0)>0;var $cond=$cmp28?32767:-32768;$L_temp=$cond;__label__=11;break;case 11:var $31=$L_temp;var $conv31=$31&65535;HEAP16[$log_en_e>>1]=$conv31;var $32=HEAP16[$log_en_m>>1];var $conv32=$32<<16>>16;var $cmp33=($conv32|0)<0;if($cmp33){__label__=12;break}else{__label__=13;break}case 12:var $33=HEAP16[$log_en_m>>1];var $conv36=$33<<16>>16;var $neg=$conv36^-1;var $shr=$neg>>5;var $neg37=$shr^-1;var $conv38=$neg37&65535;HEAP16[$log_en_m>>1]=$conv38;__label__=14;break;case 13:var $34=HEAP16[$log_en_m>>1];var $conv40=$34<<16>>16;var $shr41=$conv40>>5;var $conv42=$shr41&65535;HEAP16[$log_en_m>>1]=$conv42;__label__=14;break;case 14:var $35=HEAP16[$log_en_e>>1];var $conv44=$35<<16>>16;var $36=HEAP16[$log_en_m>>1];var $conv45=$36<<16>>16;var $add46=$conv44+$conv45|0;var $conv47=$add46&65535;$log_en=$conv47;var $37=$log_en;var $conv48=$37<<16>>16;var $sub=$conv48-8521|0;var $conv49=$sub&65535;$log_en=$conv49;var $38=$st_addr;var $log_en_hist_ptr=$38+392|0;var $39=HEAP16[$log_en_hist_ptr>>1];var $conv50=$39<<16>>16;var $add51=$conv50+1|0;var $conv52=$add51&65535;HEAP16[$log_en_hist_ptr>>1]=$conv52;var $40=$st_addr;var $log_en_hist_ptr53=$40+392|0;var $41=HEAP16[$log_en_hist_ptr53>>1];var $conv54=$41<<16>>16;var $cmp55=($conv54|0)==8;if($cmp55){__label__=15;break}else{__label__=16;break}case 15:var $42=$st_addr;var $log_en_hist_ptr58=$42+392|0;HEAP16[$log_en_hist_ptr58>>1]=0;__label__=16;break;case 16:var $43=$log_en;var $44=$st_addr;var $log_en_hist_ptr60=$44+392|0;var $45=HEAP16[$log_en_hist_ptr60>>1];var $idxprom61=$45<<16>>16;var $46=$st_addr;var $log_en_hist=$46+376|0;var $arrayidx62=$log_en_hist+($idxprom61<<1)|0;HEAP16[$arrayidx62>>1]=$43;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_dtx_dec_activity_update["X"]=1;function _rx_dtx_handler($st,$frame_type,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $frame_type_addr;var $pOverflow_addr;var $newState;var $encState;$st_addr=$st;$frame_type_addr=$frame_type;$pOverflow_addr=$pOverflow;var $0=$frame_type_addr;var $cmp=($0|0)==4;if($cmp){__label__=8;break}else{__label__=1;break}case 1:var $1=$frame_type_addr;var $cmp1=($1|0)==5;if($cmp1){__label__=8;break}else{__label__=2;break}case 2:var $2=$frame_type_addr;var $cmp3=($2|0)==6;if($cmp3){__label__=8;break}else{__label__=3;break}case 3:var $3=$st_addr;var $dtxGlobalState=$3+408|0;var $4=HEAP32[$dtxGlobalState>>2];var $cmp5=($4|0)==1;if($cmp5){__label__=5;break}else{__label__=4;break}case 4:var $5=$st_addr;var $dtxGlobalState7=$5+408|0;var $6=HEAP32[$dtxGlobalState7>>2];var $cmp8=($6|0)==2;if($cmp8){__label__=5;break}else{__label__=18;break}case 5:var $7=$frame_type_addr;var $cmp9=($7|0)==7;if($cmp9){__label__=8;break}else{__label__=6;break}case 6:var $8=$frame_type_addr;var $cmp11=($8|0)==3;if($cmp11){__label__=8;break}else{__label__=7;break}case 7:var $9=$frame_type_addr;var $cmp13=($9|0)==2;if($cmp13){__label__=8;break}else{__label__=18;break}case 8:$newState=1;var $10=$st_addr;var $dtxGlobalState14=$10+408|0;var $11=HEAP32[$dtxGlobalState14>>2];var $cmp15=($11|0)==2;if($cmp15){__label__=9;break}else{__label__=14;break}case 9:var $12=$frame_type_addr;var $cmp17=($12|0)==6;if($cmp17){__label__=13;break}else{__label__=10;break}case 10:var $13=$frame_type_addr;var $cmp19=($13|0)==4;if($cmp19){__label__=13;break}else{__label__=11;break}case 11:var $14=$frame_type_addr;var $cmp21=($14|0)==2;if($cmp21){__label__=13;break}else{__label__=12;break}case 12:var $15=$frame_type_addr;var $cmp23=($15|0)==7;if($cmp23){__label__=13;break}else{__label__=14;break}case 13:$newState=2;__label__=14;break;case 14:var $16=$st_addr;var $since_last_sid=$16|0;var $17=HEAP16[$since_last_sid>>1];var $conv=$17<<16>>16;var $add=$conv+1|0;var $conv25=$add&65535;HEAP16[$since_last_sid>>1]=$conv25;var $18=$frame_type_addr;var $cmp26=($18|0)!=5;if($cmp26){__label__=15;break}else{__label__=17;break}case 15:var $19=$st_addr;var $since_last_sid29=$19|0;var $20=HEAP16[$since_last_sid29>>1];var $conv30=$20<<16>>16;var $cmp31=($conv30|0)>50;if($cmp31){__label__=16;break}else{__label__=17;break}case 16:$newState=2;__label__=17;break;case 17:__label__=19;break;case 18:$newState=0;var $21=$st_addr;var $since_last_sid35=$21|0;HEAP16[$since_last_sid35>>1]=0;__label__=19;break;case 19:var $22=$st_addr;var $data_updated=$22+412|0;var $23=HEAP16[$data_updated>>1];var $conv37=$23<<16>>16;var $cmp38=($conv37|0)==0;if($cmp38){__label__=20;break}else{__label__=22;break}case 20:var $24=$frame_type_addr;var $cmp41=($24|0)==5;if($cmp41){__label__=21;break}else{__label__=22;break}case 21:var $25=$st_addr;var $decAnaElapsedCount=$25+398|0;HEAP16[$decAnaElapsedCount>>1]=0;__label__=22;break;case 22:var $26=$st_addr;var $decAnaElapsedCount45=$26+398|0;var $27=HEAP16[$decAnaElapsedCount45>>1];var $28=$pOverflow_addr;var $call=_add_16($27,1,$28);var $29=$st_addr;var $decAnaElapsedCount46=$29+398|0;HEAP16[$decAnaElapsedCount46>>1]=$call;var $30=$st_addr;var $dtxHangoverAdded=$30+404|0;HEAP16[$dtxHangoverAdded>>1]=0;var $31=$frame_type_addr;var $cmp47=($31|0)==4;if($cmp47){__label__=27;break}else{__label__=23;break}case 23:var $32=$frame_type_addr;var $cmp50=($32|0)==5;if($cmp50){__label__=27;break}else{__label__=24;break}case 24:var $33=$frame_type_addr;var $cmp53=($33|0)==6;if($cmp53){__label__=27;break}else{__label__=25;break}case 25:var $34=$frame_type_addr;var $cmp56=($34|0)==2;if($cmp56){__label__=27;break}else{__label__=26;break}case 26:var $35=$frame_type_addr;var $cmp59=($35|0)==7;if($cmp59){__label__=27;break}else{__label__=31;break}case 27:$encState=1;var $36=$frame_type_addr;var $cmp62=($36|0)==7;if($cmp62){__label__=28;break}else{__label__=30;break}case 28:var $37=$newState;var $cmp65=($37|0)==0;if($cmp65){__label__=29;break}else{__label__=30;break}case 29:$encState=0;__label__=30;break;case 30:__label__=32;break;case 31:$encState=0;__label__=32;break;case 32:var $38=$encState;var $cmp71=($38|0)==0;if($cmp71){__label__=33;break}else{__label__=34;break}case 33:var $39=$st_addr;var $dtxHangoverCount=$39+396|0;HEAP16[$dtxHangoverCount>>1]=7;__label__=41;break;case 34:var $40=$st_addr;var $decAnaElapsedCount75=$40+398|0;var $41=HEAP16[$decAnaElapsedCount75>>1];var $conv76=$41<<16>>16;var $cmp77=($conv76|0)>30;if($cmp77){__label__=35;break}else{__label__=36;break}case 35:var $42=$st_addr;var $dtxHangoverAdded80=$42+404|0;HEAP16[$dtxHangoverAdded80>>1]=1;var $43=$st_addr;var $decAnaElapsedCount81=$43+398|0;HEAP16[$decAnaElapsedCount81>>1]=0;var $44=$st_addr;var $dtxHangoverCount82=$44+396|0;HEAP16[$dtxHangoverCount82>>1]=0;__label__=40;break;case 36:var $45=$st_addr;var $dtxHangoverCount84=$45+396|0;var $46=HEAP16[$dtxHangoverCount84>>1];var $conv85=$46<<16>>16;var $cmp86=($conv85|0)==0;if($cmp86){__label__=37;break}else{__label__=38;break}case 37:var $47=$st_addr;var $decAnaElapsedCount89=$47+398|0;HEAP16[$decAnaElapsedCount89>>1]=0;__label__=39;break;case 38:var $48=$st_addr;var $dtxHangoverCount91=$48+396|0;var $49=HEAP16[$dtxHangoverCount91>>1];var $conv92=$49<<16>>16;var $sub=$conv92-1|0;var $conv93=$sub&65535;HEAP16[$dtxHangoverCount91>>1]=$conv93;__label__=39;break;case 39:__label__=40;break;case 40:__label__=41;break;case 41:var $50=$newState;var $cmp97=($50|0)!=0;if($cmp97){__label__=42;break}else{__label__=51;break}case 42:var $51=$st_addr;var $sid_frame=$51+400|0;HEAP16[$sid_frame>>1]=0;var $52=$st_addr;var $valid_data=$52+402|0;HEAP16[$valid_data>>1]=0;var $53=$frame_type_addr;var $cmp100=($53|0)==4;if($cmp100){__label__=43;break}else{__label__=44;break}case 43:var $54=$st_addr;var $sid_frame103=$54+400|0;HEAP16[$sid_frame103>>1]=1;__label__=50;break;case 44:var $55=$frame_type_addr;var $cmp105=($55|0)==5;if($cmp105){__label__=45;break}else{__label__=46;break}case 45:var $56=$st_addr;var $sid_frame108=$56+400|0;HEAP16[$sid_frame108>>1]=1;var $57=$st_addr;var $valid_data109=$57+402|0;HEAP16[$valid_data109>>1]=1;__label__=49;break;case 46:var $58=$frame_type_addr;var $cmp111=($58|0)==6;if($cmp111){__label__=47;break}else{__label__=48;break}case 47:var $59=$st_addr;var $sid_frame114=$59+400|0;HEAP16[$sid_frame114>>1]=1;var $60=$st_addr;var $dtxHangoverAdded115=$60+404|0;HEAP16[$dtxHangoverAdded115>>1]=0;__label__=48;break;case 48:__label__=49;break;case 49:__label__=50;break;case 50:__label__=51;break;case 51:var $61=$newState;return $61;default:assert(0,"bad label: "+__label__)}}_rx_dtx_handler["X"]=1;function _dtx_enc_init($st,$lsp_init_data_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $lsp_init_data_ptr_addr;var $s;$st_addr=$st;$lsp_init_data_ptr_addr=$lsp_init_data_ptr;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$st_addr;HEAP32[$1>>2]=0;var $call=_malloc(192);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $4=$lsp_init_data_ptr_addr;var $call4=_dtx_enc_reset($3,$4);var $5=$s;var $6=$st_addr;HEAP32[$6>>2]=$5;$retval=0;__label__=5;break;case 5:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _dtx_enc_reset($st,$lsp_init_data_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $lsp_init_data_ptr_addr;var $i;$st_addr=$st;$lsp_init_data_ptr_addr=$lsp_init_data_ptr;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$st_addr;var $hist_ptr=$1+176|0;HEAP16[$hist_ptr>>1]=0;var $2=$st_addr;var $log_en_index=$2+178|0;HEAP16[$log_en_index>>1]=0;var $3=$st_addr;var $init_lsf_vq_index=$3+180|0;HEAP16[$init_lsf_vq_index>>1]=0;var $4=$st_addr;var $lsp_index=$4+182|0;var $arrayidx=$lsp_index|0;HEAP16[$arrayidx>>1]=0;var $5=$st_addr;var $lsp_index1=$5+182|0;var $arrayidx2=$lsp_index1+2|0;HEAP16[$arrayidx2>>1]=0;var $6=$st_addr;var $lsp_index3=$6+182|0;var $arrayidx4=$lsp_index3+4|0;HEAP16[$arrayidx4>>1]=0;$i=0;__label__=3;break;case 3:var $7=$i;var $conv=$7<<16>>16;var $cmp5=($conv|0)<8;if($cmp5){__label__=4;break}else{__label__=6;break}case 4:var $8=$i;var $conv7=$8<<16>>16;var $mul=$conv7*10|0;var $9=$st_addr;var $lsp_hist=$9|0;var $arrayidx8=$lsp_hist+($mul<<1)|0;var $10=$arrayidx8;var $11=$lsp_init_data_ptr_addr;var $12=$11;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($10,$12,20,1);__label__=5;break;case 5:var $13=$i;var $inc=$13+1&65535;$i=$inc;__label__=3;break;case 6:var $14=$st_addr;var $log_en_hist=$14+160|0;var $arraydecay=$log_en_hist|0;var $15=$arraydecay;_memset($15,0,20,1);var $16=$st_addr;var $dtxHangoverCount=$16+188|0;HEAP16[$dtxHangoverCount>>1]=7;var $17=$st_addr;var $decAnaElapsedCount=$17+190|0;HEAP16[$decAnaElapsedCount>>1]=32767;$retval=1;__label__=7;break;case 7:var $18=$retval;return $18;default:assert(0,"bad label: "+__label__)}}_dtx_enc_reset["X"]=1;function _dtx_enc_exit($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$st_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$st_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$st_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _dtx_enc($st,$computeSidFlag,$qSt,$predState,$anap,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=100;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $computeSidFlag_addr;var $qSt_addr;var $predState_addr;var $anap_addr;var $pOverflow_addr;var $i;var $j;var $temp;var $log_en;var $lsf=__stackBase__;var $lsp=__stackBase__+20;var $lsp_q=__stackBase__+40;var $L_lsp=__stackBase__+60;$st_addr=$st;$computeSidFlag_addr=$computeSidFlag;$qSt_addr=$qSt;$predState_addr=$predState;$anap_addr=$anap;$pOverflow_addr=$pOverflow;var $0=$computeSidFlag_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$st_addr;var $log_en_index=$1+178|0;var $2=HEAP16[$log_en_index>>1];var $conv2=$2<<16>>16;var $cmp3=($conv2|0)==0;if($cmp3){__label__=2;break}else{__label__=41;break}case 2:$log_en=0;$i=9;__label__=3;break;case 3:var $3=$i;var $conv5=$3<<16>>16;var $cmp6=($conv5|0)>=0;if($cmp6){__label__=4;break}else{__label__=6;break}case 4:var $4=$i;var $idxprom=$4<<16>>16;var $arrayidx=$L_lsp+($idxprom<<2)|0;HEAP32[$arrayidx>>2]=0;__label__=5;break;case 5:var $5=$i;var $dec=$5-1&65535;$i=$dec;__label__=3;break;case 6:$i=7;__label__=7;break;case 7:var $6=$i;var $conv9=$6<<16>>16;var $cmp10=($conv9|0)>=0;if($cmp10){__label__=8;break}else{__label__=17;break}case 8:var $7=$i;var $idxprom13=$7<<16>>16;var $8=$st_addr;var $log_en_hist=$8+160|0;var $arrayidx14=$log_en_hist+($idxprom13<<1)|0;var $9=HEAP16[$arrayidx14>>1];var $conv15=$9<<16>>16;var $cmp16=($conv15|0)<0;if($cmp16){__label__=9;break}else{__label__=10;break}case 9:var $10=$i;var $idxprom19=$10<<16>>16;var $11=$st_addr;var $log_en_hist20=$11+160|0;var $arrayidx21=$log_en_hist20+($idxprom19<<1)|0;var $12=HEAP16[$arrayidx21>>1];var $conv22=$12<<16>>16;var $neg=$conv22^-1;var $shr=$neg>>2;var $neg23=$shr^-1;var $conv24=$neg23&65535;$temp=$conv24;__label__=11;break;case 10:var $13=$i;var $idxprom25=$13<<16>>16;var $14=$st_addr;var $log_en_hist26=$14+160|0;var $arrayidx27=$log_en_hist26+($idxprom25<<1)|0;var $15=HEAP16[$arrayidx27>>1];var $conv28=$15<<16>>16;var $shr29=$conv28>>2;var $conv30=$shr29&65535;$temp=$conv30;__label__=11;break;case 11:var $16=$log_en;var $17=$temp;var $18=$pOverflow_addr;var $call=_add_16($16,$17,$18);$log_en=$call;$j=9;__label__=12;break;case 12:var $19=$j;var $conv32=$19<<16>>16;var $cmp33=($conv32|0)>=0;if($cmp33){__label__=13;break}else{__label__=15;break}case 13:var $20=$j;var $idxprom36=$20<<16>>16;var $arrayidx37=$L_lsp+($idxprom36<<2)|0;var $21=HEAP32[$arrayidx37>>2];var $22=$i;var $conv38=$22<<16>>16;var $mul=$conv38*10|0;var $23=$j;var $conv39=$23<<16>>16;var $add=$mul+$conv39|0;var $24=$st_addr;var $lsp_hist=$24|0;var $arrayidx40=$lsp_hist+($add<<1)|0;var $25=HEAP16[$arrayidx40>>1];var $conv41=$25<<16>>16;var $26=$pOverflow_addr;var $call42=_L_add129($21,$conv41,$26);var $27=$j;var $idxprom43=$27<<16>>16;var $arrayidx44=$L_lsp+($idxprom43<<2)|0;HEAP32[$arrayidx44>>2]=$call42;__label__=14;break;case 14:var $28=$j;var $dec46=$28-1&65535;$j=$dec46;__label__=12;break;case 15:__label__=16;break;case 16:var $29=$i;var $dec49=$29-1&65535;$i=$dec49;__label__=7;break;case 17:var $30=$log_en;var $conv51=$30<<16>>16;var $cmp52=($conv51|0)<0;if($cmp52){__label__=18;break}else{__label__=19;break}case 18:var $31=$log_en;var $conv55=$31<<16>>16;var $neg56=$conv55^-1;var $shr57=$neg56>>1;var $neg58=$shr57^-1;var $conv59=$neg58&65535;$log_en=$conv59;__label__=20;break;case 19:var $32=$log_en;var $conv61=$32<<16>>16;var $shr62=$conv61>>1;var $conv63=$shr62&65535;$log_en=$conv63;__label__=20;break;case 20:$j=9;__label__=21;break;case 21:var $33=$j;var $conv66=$33<<16>>16;var $cmp67=($conv66|0)>=0;if($cmp67){__label__=22;break}else{__label__=27;break}case 22:var $34=$j;var $idxprom70=$34<<16>>16;var $arrayidx71=$L_lsp+($idxprom70<<2)|0;var $35=HEAP32[$arrayidx71>>2];var $cmp72=($35|0)<0;if($cmp72){__label__=23;break}else{__label__=24;break}case 23:var $36=$j;var $idxprom75=$36<<16>>16;var $arrayidx76=$L_lsp+($idxprom75<<2)|0;var $37=HEAP32[$arrayidx76>>2];var $neg77=$37^-1;var $shr78=$neg77>>3;var $neg79=$shr78^-1;var $conv80=$neg79&65535;var $38=$j;var $idxprom81=$38<<16>>16;var $arrayidx82=$lsp+($idxprom81<<1)|0;HEAP16[$arrayidx82>>1]=$conv80;__label__=25;break;case 24:var $39=$j;var $idxprom84=$39<<16>>16;var $arrayidx85=$L_lsp+($idxprom84<<2)|0;var $40=HEAP32[$arrayidx85>>2];var $shr86=$40>>3;var $conv87=$shr86&65535;var $41=$j;var $idxprom88=$41<<16>>16;var $arrayidx89=$lsp+($idxprom88<<1)|0;HEAP16[$arrayidx89>>1]=$conv87;__label__=25;break;case 25:__label__=26;break;case 26:var $42=$j;var $dec92=$42-1&65535;$j=$dec92;__label__=21;break;case 27:var $43=$log_en;var $conv94=$43<<16>>16;var $add95=$conv94+2560|0;var $conv96=$add95&65535;var $44=$st_addr;var $log_en_index97=$44+178|0;HEAP16[$log_en_index97>>1]=$conv96;var $45=$st_addr;var $log_en_index98=$45+178|0;var $46=HEAP16[$log_en_index98>>1];var $conv99=$46<<16>>16;var $add100=$conv99+128|0;var $conv101=$add100&65535;HEAP16[$log_en_index98>>1]=$conv101;var $47=$st_addr;var $log_en_index102=$47+178|0;var $48=HEAP16[$log_en_index102>>1];var $conv103=$48<<16>>16;var $cmp104=($conv103|0)<0;if($cmp104){__label__=28;break}else{__label__=29;break}case 28:var $49=$st_addr;var $log_en_index107=$49+178|0;var $50=HEAP16[$log_en_index107>>1];var $conv108=$50<<16>>16;var $neg109=$conv108^-1;var $shr110=$neg109>>8;var $neg111=$shr110^-1;var $conv112=$neg111&65535;var $51=$st_addr;var $log_en_index113=$51+178|0;HEAP16[$log_en_index113>>1]=$conv112;__label__=30;break;case 29:var $52=$st_addr;var $log_en_index115=$52+178|0;var $53=HEAP16[$log_en_index115>>1];var $conv116=$53<<16>>16;var $shr117=$conv116>>8;var $conv118=$shr117&65535;var $54=$st_addr;var $log_en_index119=$54+178|0;HEAP16[$log_en_index119>>1]=$conv118;__label__=30;break;case 30:var $55=$st_addr;var $log_en_index121=$55+178|0;var $56=HEAP16[$log_en_index121>>1];var $conv122=$56<<16>>16;var $cmp123=($conv122|0)>63;if($cmp123){__label__=31;break}else{__label__=32;break}case 31:var $57=$st_addr;var $log_en_index126=$57+178|0;HEAP16[$log_en_index126>>1]=63;__label__=35;break;case 32:var $58=$st_addr;var $log_en_index128=$58+178|0;var $59=HEAP16[$log_en_index128>>1];var $conv129=$59<<16>>16;var $cmp130=($conv129|0)<0;if($cmp130){__label__=33;break}else{__label__=34;break}case 33:var $60=$st_addr;var $log_en_index133=$60+178|0;HEAP16[$log_en_index133>>1]=0;__label__=34;break;case 34:__label__=35;break;case 35:var $61=$st_addr;var $log_en_index136=$61+178|0;var $62=HEAP16[$log_en_index136>>1];var $conv137=$62<<16>>16;var $shl=$conv137<<8;var $conv138=$shl&65535;$log_en=$conv138;var $63=$log_en;var $64=$pOverflow_addr;var $call139=_sub($63,11560,$64);$log_en=$call139;var $65=$log_en;var $conv140=$65<<16>>16;var $cmp141=($conv140|0)>0;if($cmp141){__label__=36;break}else{__label__=37;break}case 36:$log_en=0;__label__=40;break;case 37:var $66=$log_en;var $conv145=$66<<16>>16;var $cmp146=($conv145|0)<-14436;if($cmp146){__label__=38;break}else{__label__=39;break}case 38:$log_en=-14436;__label__=39;break;case 39:__label__=40;break;case 40:var $67=$log_en;var $68=$predState_addr;var $past_qua_en=$68|0;var $arrayidx151=$past_qua_en|0;HEAP16[$arrayidx151>>1]=$67;var $69=$log_en;var $70=$predState_addr;var $past_qua_en152=$70|0;var $arrayidx153=$past_qua_en152+2|0;HEAP16[$arrayidx153>>1]=$69;var $71=$log_en;var $72=$predState_addr;var $past_qua_en154=$72|0;var $arrayidx155=$past_qua_en154+4|0;HEAP16[$arrayidx155>>1]=$71;var $73=$log_en;var $74=$predState_addr;var $past_qua_en156=$74|0;var $arrayidx157=$past_qua_en156+6|0;HEAP16[$arrayidx157>>1]=$73;var $75=$log_en;var $conv158=$75<<16>>16;var $mul159=$conv158*5443|0;var $shr160=$mul159>>15;var $conv161=$shr160&65535;$log_en=$conv161;var $76=$log_en;var $77=$predState_addr;var $past_qua_en_MR122=$77+8|0;var $arrayidx162=$past_qua_en_MR122|0;HEAP16[$arrayidx162>>1]=$76;var $78=$log_en;var $79=$predState_addr;var $past_qua_en_MR122163=$79+8|0;var $arrayidx164=$past_qua_en_MR122163+2|0;HEAP16[$arrayidx164>>1]=$78;var $80=$log_en;var $81=$predState_addr;var $past_qua_en_MR122165=$81+8|0;var $arrayidx166=$past_qua_en_MR122165+4|0;HEAP16[$arrayidx166>>1]=$80;var $82=$log_en;var $83=$predState_addr;var $past_qua_en_MR122167=$83+8|0;var $arrayidx168=$past_qua_en_MR122167+6|0;HEAP16[$arrayidx168>>1]=$82;var $arraydecay=$lsp|0;var $arraydecay169=$lsf|0;var $84=$pOverflow_addr;_Lsp_lsf($arraydecay,$arraydecay169,10,$84);var $arraydecay170=$lsf|0;var $85=$pOverflow_addr;_Reorder_lsf($arraydecay170,205,10,$85);var $arraydecay171=$lsf|0;var $arraydecay172=$lsp|0;var $86=$pOverflow_addr;_Lsf_lsp($arraydecay171,$arraydecay172,10,$86);var $87=$qSt_addr;var $arraydecay173=$lsp|0;var $arraydecay174=$lsp_q|0;var $88=$st_addr;var $lsp_index=$88+182|0;var $arraydecay175=$lsp_index|0;var $89=$st_addr;var $init_lsf_vq_index=$89+180|0;var $90=$pOverflow_addr;_Q_plsf_3($87,8,$arraydecay173,$arraydecay174,$arraydecay175,$init_lsf_vq_index,$90);__label__=41;break;case 41:var $91=$st_addr;var $init_lsf_vq_index177=$91+180|0;var $92=HEAP16[$init_lsf_vq_index177>>1];var $93=$anap_addr;var $94=HEAP32[$93>>2];var $incdec_ptr=$94+2|0;HEAP32[$93>>2]=$incdec_ptr;HEAP16[$94>>1]=$92;var $95=$st_addr;var $lsp_index178=$95+182|0;var $arrayidx179=$lsp_index178|0;var $96=HEAP16[$arrayidx179>>1];var $97=$anap_addr;var $98=HEAP32[$97>>2];var $incdec_ptr180=$98+2|0;HEAP32[$97>>2]=$incdec_ptr180;HEAP16[$98>>1]=$96;var $99=$st_addr;var $lsp_index181=$99+182|0;var $arrayidx182=$lsp_index181+2|0;var $100=HEAP16[$arrayidx182>>1];var $101=$anap_addr;var $102=HEAP32[$101>>2];var $incdec_ptr183=$102+2|0;HEAP32[$101>>2]=$incdec_ptr183;HEAP16[$102>>1]=$100;var $103=$st_addr;var $lsp_index184=$103+182|0;var $arrayidx185=$lsp_index184+4|0;var $104=HEAP16[$arrayidx185>>1];var $105=$anap_addr;var $106=HEAP32[$105>>2];var $incdec_ptr186=$106+2|0;HEAP32[$105>>2]=$incdec_ptr186;HEAP16[$106>>1]=$104;var $107=$st_addr;var $log_en_index187=$107+178|0;var $108=HEAP16[$log_en_index187>>1];var $109=$anap_addr;var $110=HEAP32[$109>>2];var $incdec_ptr188=$110+2|0;HEAP32[$109>>2]=$incdec_ptr188;HEAP16[$110>>1]=$108;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_dtx_enc["X"]=1;function _L_add129($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _mult138($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _ec_gain_code_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<5;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $gbuf=$3|0;var $arrayidx=$gbuf+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=1;__label__=5;break;case 5:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=3;break;case 6:var $5=$state_addr;var $past_gain_code=$5+10|0;HEAP16[$past_gain_code>>1]=0;var $6=$state_addr;var $prev_gc=$6+12|0;HEAP16[$prev_gc>>1]=1;$retval=0;__label__=7;break;case 7:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _ec_gain_pitch_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<5;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $pbuf=$3|0;var $arrayidx=$pbuf+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=1640;__label__=5;break;case 5:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=3;break;case 6:var $5=$state_addr;var $past_gain_pit=$5+10|0;HEAP16[$past_gain_pit>>1]=0;var $6=$state_addr;var $prev_gp=$6+12|0;HEAP16[$prev_gp>>1]=16384;$retval=0;__label__=7;break;case 7:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _dtx_buffer($st,$lsp_new,$speech,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $lsp_new_addr;var $speech_addr;var $pOverflow_addr;var $i;var $L_frame_en;var $L_temp;var $log_en_e=__stackBase__;var $log_en_m=__stackBase__+4;var $log_en;var $p_speech;$st_addr=$st;$lsp_new_addr=$lsp_new;$speech_addr=$speech;$pOverflow_addr=$pOverflow;var $0=$speech_addr;var $arrayidx=$0|0;$p_speech=$arrayidx;var $1=$st_addr;var $hist_ptr=$1+176|0;var $2=HEAP16[$hist_ptr>>1];var $conv=$2<<16>>16;var $add=$conv+1|0;var $conv1=$add&65535;HEAP16[$hist_ptr>>1]=$conv1;var $3=$st_addr;var $hist_ptr2=$3+176|0;var $4=HEAP16[$hist_ptr2>>1];var $conv3=$4<<16>>16;var $cmp=($conv3|0)==8;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $hist_ptr5=$5+176|0;HEAP16[$hist_ptr5>>1]=0;__label__=2;break;case 2:var $6=$st_addr;var $hist_ptr6=$6+176|0;var $7=HEAP16[$hist_ptr6>>1];var $conv7=$7<<16>>16;var $mul=$conv7*10|0;var $8=$st_addr;var $lsp_hist=$8|0;var $arrayidx8=$lsp_hist+($mul<<1)|0;var $9=$arrayidx8;var $10=$lsp_new_addr;var $11=$10;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($9,$11,20,1);$L_frame_en=0;$i=160;__label__=3;break;case 3:var $12=$i;var $conv9=$12<<16>>16;var $cmp10=($conv9|0)!=0;if($cmp10){__label__=4;break}else{__label__=8;break}case 4:var $13=$p_speech;var $14=HEAP16[$13>>1];var $conv12=$14<<16>>16;var $15=$p_speech;var $16=HEAP16[$15>>1];var $conv13=$16<<16>>16;var $mul14=$conv12*$conv13|0;var $shl=$mul14<<1;var $17=$L_frame_en;var $add15=$17+$shl|0;$L_frame_en=$add15;var $18=$p_speech;var $incdec_ptr=$18+2|0;$p_speech=$incdec_ptr;var $19=$L_frame_en;var $cmp16=($19|0)<0;if($cmp16){__label__=5;break}else{__label__=6;break}case 5:$L_frame_en=2147483647;__label__=8;break;case 6:__label__=7;break;case 7:var $20=$i;var $dec=$20-1&65535;$i=$dec;__label__=3;break;case 8:var $21=$L_frame_en;var $22=$pOverflow_addr;_Log2($21,$log_en_e,$log_en_m,$22);var $23=HEAP16[$log_en_e>>1];var $conv20=$23<<16>>16;var $shl21=$conv20<<10;$L_temp=$shl21;var $24=$L_temp;var $25=$L_temp;var $conv22=$25&65535;var $conv23=$conv22<<16>>16;var $cmp24=($24|0)!=($conv23|0);if($cmp24){__label__=9;break}else{__label__=10;break}case 9:var $26=$pOverflow_addr;HEAP32[$26>>2]=1;var $27=HEAP16[$log_en_e>>1];var $conv27=$27<<16>>16;var $cmp28=($conv27|0)>0;var $cond=$cmp28?32767:-32768;var $conv30=$cond&65535;$log_en=$conv30;__label__=11;break;case 10:var $28=$L_temp;var $conv31=$28&65535;$log_en=$conv31;__label__=11;break;case 11:var $29=HEAP16[$log_en_m>>1];var $conv33=$29<<16>>16;var $shr=$conv33>>5;var $30=$log_en;var $conv34=$30<<16>>16;var $add35=$conv34+$shr|0;var $conv36=$add35&65535;$log_en=$conv36;var $31=$log_en;var $conv37=$31<<16>>16;var $sub=$conv37-8521|0;var $conv38=$sub&65535;$log_en=$conv38;var $32=$log_en;var $conv39=$32<<16>>16;var $shr40=$conv39>>1;var $conv41=$shr40&65535;var $33=$st_addr;var $hist_ptr42=$33+176|0;var $34=HEAP16[$hist_ptr42>>1];var $idxprom=$34<<16>>16;var $35=$st_addr;var $log_en_hist=$35+160|0;var $arrayidx43=$log_en_hist+($idxprom<<1)|0;HEAP16[$arrayidx43>>1]=$conv41;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_dtx_buffer["X"]=1;function _tx_dtx_handler($st,$vad_flag,$usedMode,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $vad_flag_addr;var $usedMode_addr;var $pOverflow_addr;var $compute_new_sid_possible;var $count;$st_addr=$st;$vad_flag_addr=$vad_flag;$usedMode_addr=$usedMode;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $decAnaElapsedCount=$0+190|0;var $1=HEAP16[$decAnaElapsedCount>>1];var $2=$pOverflow_addr;var $call=_add_16($1,1,$2);var $3=$st_addr;var $decAnaElapsedCount1=$3+190|0;HEAP16[$decAnaElapsedCount1>>1]=$call;$compute_new_sid_possible=0;var $4=$vad_flag_addr;var $conv=$4<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $dtxHangoverCount=$5+188|0;HEAP16[$dtxHangoverCount>>1]=7;__label__=8;break;case 2:var $6=$st_addr;var $dtxHangoverCount3=$6+188|0;var $7=HEAP16[$dtxHangoverCount3>>1];var $conv4=$7<<16>>16;var $cmp5=($conv4|0)==0;if($cmp5){__label__=3;break}else{__label__=4;break}case 3:var $8=$st_addr;var $decAnaElapsedCount8=$8+190|0;HEAP16[$decAnaElapsedCount8>>1]=0;var $9=$usedMode_addr;HEAP32[$9>>2]=8;$compute_new_sid_possible=1;__label__=7;break;case 4:var $10=$st_addr;var $dtxHangoverCount10=$10+188|0;var $11=HEAP16[$dtxHangoverCount10>>1];var $conv11=$11<<16>>16;var $sub=$conv11-1|0;var $conv12=$sub&65535;HEAP16[$dtxHangoverCount10>>1]=$conv12;var $12=$st_addr;var $decAnaElapsedCount13=$12+190|0;var $13=HEAP16[$decAnaElapsedCount13>>1];var $14=$st_addr;var $dtxHangoverCount14=$14+188|0;var $15=HEAP16[$dtxHangoverCount14>>1];var $16=$pOverflow_addr;var $call15=_add_16($13,$15,$16);$count=$call15;var $17=$count;var $conv16=$17<<16>>16;var $cmp17=($conv16|0)<30;if($cmp17){__label__=5;break}else{__label__=6;break}case 5:var $18=$usedMode_addr;HEAP32[$18>>2]=8;__label__=6;break;case 6:__label__=7;break;case 7:__label__=8;break;case 8:var $19=$compute_new_sid_possible;return $19;default:assert(0,"bad label: "+__label__)}}_tx_dtx_handler["X"]=1;function _ec_gain_code($st,$pred_state,$state,$gain_code,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $pred_state_addr;var $state_addr;var $gain_code_addr;var $pOverflow_addr;var $tmp;var $qua_ener_MR122=__stackBase__;var $qua_ener=__stackBase__+4;$st_addr=$st;$pred_state_addr=$pred_state;$state_addr=$state;$gain_code_addr=$gain_code;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $gbuf=$0|0;var $arraydecay=$gbuf|0;var $call=_gmed_n($arraydecay,5);$tmp=$call;var $1=$tmp;var $2=$st_addr;var $past_gain_code=$2+10|0;var $3=HEAP16[$past_gain_code>>1];var $4=$pOverflow_addr;var $call3=_sub($1,$3,$4);var $conv=$call3<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $past_gain_code5=$5+10|0;var $6=HEAP16[$past_gain_code5>>1];$tmp=$6;__label__=2;break;case 2:var $7=$tmp;var $8=$state_addr;var $idxprom=$8<<16>>16;var $arrayidx=_ec_gain_code_cdown+($idxprom<<1)|0;var $9=HEAP16[$arrayidx>>1];var $10=$pOverflow_addr;var $call6=_mult138($7,$9,$10);$tmp=$call6;var $11=$tmp;var $12=$gain_code_addr;HEAP16[$12>>1]=$11;var $13=$pred_state_addr;var $14=$pOverflow_addr;_gc_pred_average_limited($13,$qua_ener_MR122,$qua_ener,$14);var $15=$pred_state_addr;var $16=HEAP16[$qua_ener_MR122>>1];var $17=HEAP16[$qua_ener>>1];_gc_pred_update($15,$16,$17);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_ec_gain_code["X"]=1;function _ec_gain_code_update($st,$bfi,$prev_bf,$gain_code,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $bfi_addr;var $prev_bf_addr;var $gain_code_addr;var $pOverflow_addr;var $i;$st_addr=$st;$bfi_addr=$bfi;$prev_bf_addr=$prev_bf;$gain_code_addr=$gain_code;$pOverflow_addr=$pOverflow;var $0=$bfi_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $1=$prev_bf_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)!=0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $2=$gain_code_addr;var $3=HEAP16[$2>>1];var $4=$st_addr;var $prev_gc=$4+12|0;var $5=HEAP16[$prev_gc>>1];var $6=$pOverflow_addr;var $call=_sub($3,$5,$6);var $conv6=$call<<16>>16;var $cmp7=($conv6|0)>0;if($cmp7){__label__=3;break}else{__label__=4;break}case 3:var $7=$st_addr;var $prev_gc10=$7+12|0;var $8=HEAP16[$prev_gc10>>1];var $9=$gain_code_addr;HEAP16[$9>>1]=$8;__label__=4;break;case 4:__label__=5;break;case 5:var $10=$gain_code_addr;var $11=HEAP16[$10>>1];var $12=$st_addr;var $prev_gc12=$12+12|0;HEAP16[$prev_gc12>>1]=$11;__label__=6;break;case 6:var $13=$gain_code_addr;var $14=HEAP16[$13>>1];var $15=$st_addr;var $past_gain_code=$15+10|0;HEAP16[$past_gain_code>>1]=$14;$i=1;__label__=7;break;case 7:var $16=$i;var $conv14=$16<<16>>16;var $cmp15=($conv14|0)<5;if($cmp15){__label__=8;break}else{__label__=10;break}case 8:var $17=$i;var $idxprom=$17<<16>>16;var $18=$st_addr;var $gbuf=$18|0;var $arrayidx=$gbuf+($idxprom<<1)|0;var $19=HEAP16[$arrayidx>>1];var $20=$i;var $conv17=$20<<16>>16;var $sub=$conv17-1|0;var $21=$st_addr;var $gbuf18=$21|0;var $arrayidx19=$gbuf18+($sub<<1)|0;HEAP16[$arrayidx19>>1]=$19;__label__=9;break;case 9:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=7;break;case 10:var $23=$gain_code_addr;var $24=HEAP16[$23>>1];var $25=$st_addr;var $gbuf20=$25|0;var $arrayidx21=$gbuf20+8|0;HEAP16[$arrayidx21>>1]=$24;return;default:assert(0,"bad label: "+__label__)}}_ec_gain_code_update["X"]=1;function _ec_gain_pitch($st,$state,$gain_pitch,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $state_addr;var $gain_pitch_addr;var $pOverflow_addr;var $tmp;$st_addr=$st;$state_addr=$state;$gain_pitch_addr=$gain_pitch;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $pbuf=$0|0;var $arraydecay=$pbuf|0;var $call=_gmed_n($arraydecay,5);$tmp=$call;var $1=$tmp;var $2=$st_addr;var $past_gain_pit=$2+10|0;var $3=HEAP16[$past_gain_pit>>1];var $4=$pOverflow_addr;var $call1=_sub($1,$3,$4);var $conv=$call1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $past_gain_pit3=$5+10|0;var $6=HEAP16[$past_gain_pit3>>1];$tmp=$6;__label__=2;break;case 2:var $7=$tmp;var $8=$state_addr;var $idxprom=$8<<16>>16;var $arrayidx=_ec_gain_pitch_pdown+($idxprom<<1)|0;var $9=HEAP16[$arrayidx>>1];var $10=$pOverflow_addr;var $call4=_mult138($7,$9,$10);var $11=$gain_pitch_addr;HEAP16[$11>>1]=$call4;return;default:assert(0,"bad label: "+__label__)}}function _ec_gain_pitch_update($st,$bfi,$prev_bf,$gain_pitch,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $bfi_addr;var $prev_bf_addr;var $gain_pitch_addr;var $pOverflow_addr;var $i;$st_addr=$st;$bfi_addr=$bfi;$prev_bf_addr=$prev_bf;$gain_pitch_addr=$gain_pitch;$pOverflow_addr=$pOverflow;var $0=$bfi_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $1=$prev_bf_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)!=0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $2=$gain_pitch_addr;var $3=HEAP16[$2>>1];var $4=$st_addr;var $prev_gp=$4+12|0;var $5=HEAP16[$prev_gp>>1];var $6=$pOverflow_addr;var $call=_sub($3,$5,$6);var $conv6=$call<<16>>16;var $cmp7=($conv6|0)>0;if($cmp7){__label__=3;break}else{__label__=4;break}case 3:var $7=$st_addr;var $prev_gp10=$7+12|0;var $8=HEAP16[$prev_gp10>>1];var $9=$gain_pitch_addr;HEAP16[$9>>1]=$8;__label__=4;break;case 4:__label__=5;break;case 5:var $10=$gain_pitch_addr;var $11=HEAP16[$10>>1];var $12=$st_addr;var $prev_gp12=$12+12|0;HEAP16[$prev_gp12>>1]=$11;__label__=6;break;case 6:var $13=$gain_pitch_addr;var $14=HEAP16[$13>>1];var $15=$st_addr;var $past_gain_pit=$15+10|0;HEAP16[$past_gain_pit>>1]=$14;var $16=$st_addr;var $past_gain_pit14=$16+10|0;var $17=HEAP16[$past_gain_pit14>>1];var $18=$pOverflow_addr;var $call15=_sub($17,16384,$18);var $conv16=$call15<<16>>16;var $cmp17=($conv16|0)>0;if($cmp17){__label__=7;break}else{__label__=8;break}case 7:var $19=$st_addr;var $past_gain_pit20=$19+10|0;HEAP16[$past_gain_pit20>>1]=16384;__label__=8;break;case 8:$i=1;__label__=9;break;case 9:var $20=$i;var $conv22=$20<<16>>16;var $cmp23=($conv22|0)<5;if($cmp23){__label__=10;break}else{__label__=12;break}case 10:var $21=$i;var $idxprom=$21<<16>>16;var $22=$st_addr;var $pbuf=$22|0;var $arrayidx=$pbuf+($idxprom<<1)|0;var $23=HEAP16[$arrayidx>>1];var $24=$i;var $conv25=$24<<16>>16;var $sub=$conv25-1|0;var $25=$st_addr;var $pbuf26=$25|0;var $arrayidx27=$pbuf26+($sub<<1)|0;HEAP16[$arrayidx27>>1]=$23;__label__=11;break;case 11:var $26=$i;var $inc=$26+1&65535;$i=$inc;__label__=9;break;case 12:var $27=$st_addr;var $past_gain_pit28=$27+10|0;var $28=HEAP16[$past_gain_pit28>>1];var $29=$st_addr;var $pbuf29=$29|0;var $arrayidx30=$pbuf29+8|0;HEAP16[$arrayidx30>>1]=$28;return;default:assert(0,"bad label: "+__label__)}}_ec_gain_pitch_update["X"]=1;function _Enc_lag3($T0,$T0_frac,$T0_prev,$T0_min,$T0_max,$delta_flag,$flag4,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $T0_addr;var $T0_frac_addr;var $T0_prev_addr;var $T0_min_addr;var $T0_max_addr;var $delta_flag_addr;var $flag4_addr;var $pOverflow_addr;var $index;var $i;var $tmp_ind;var $uplag;var $tmp_lag;var $temp1;var $temp2;$T0_addr=$T0;$T0_frac_addr=$T0_frac;$T0_prev_addr=$T0_prev;$T0_min_addr=$T0_min;$T0_max_addr=$T0_max;$delta_flag_addr=$delta_flag;$flag4_addr=$flag4;$pOverflow_addr=$pOverflow;var $0=$delta_flag_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$T0_addr;var $conv2=$1<<16>>16;var $sub=$conv2-85|0;var $conv3=$sub&65535;$temp1=$conv3;var $2=$temp1;var $conv4=$2<<16>>16;var $cmp5=($conv4|0)<=0;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $3=$T0_addr;var $conv8=$3<<16>>16;var $shl=$conv8<<1;var $4=$T0_addr;var $conv9=$4<<16>>16;var $add=$shl+$conv9|0;var $sub10=$add-58|0;var $5=$T0_frac_addr;var $conv11=$5<<16>>16;var $add12=$sub10+$conv11|0;var $conv13=$add12&65535;$index=$conv13;__label__=4;break;case 3:var $6=$T0_addr;var $conv14=$6<<16>>16;var $add15=$conv14+112|0;var $conv16=$add15&65535;$index=$conv16;__label__=4;break;case 4:__label__=19;break;case 5:var $7=$flag4_addr;var $conv18=$7<<16>>16;var $cmp19=($conv18|0)==0;if($cmp19){__label__=6;break}else{__label__=7;break}case 6:var $8=$T0_addr;var $conv22=$8<<16>>16;var $9=$T0_min_addr;var $conv23=$9<<16>>16;var $sub24=$conv22-$conv23|0;var $conv25=$sub24&65535;$i=$conv25;var $10=$i;var $conv26=$10<<16>>16;var $11=$i;var $conv27=$11<<16>>16;var $shl28=$conv27<<1;var $add29=$conv26+$shl28|0;var $add30=$add29+2|0;var $12=$T0_frac_addr;var $conv31=$12<<16>>16;var $add32=$add30+$conv31|0;var $conv33=$add32&65535;$index=$conv33;__label__=18;break;case 7:var $13=$T0_prev_addr;$tmp_lag=$13;var $14=$tmp_lag;var $conv35=$14<<16>>16;var $15=$T0_min_addr;var $conv36=$15<<16>>16;var $sub37=$conv35-$conv36|0;var $conv38=$sub37&65535;$temp1=$conv38;var $16=$temp1;var $conv39=$16<<16>>16;var $sub40=$conv39-5|0;var $conv41=$sub40&65535;$temp2=$conv41;var $17=$temp2;var $conv42=$17<<16>>16;var $cmp43=($conv42|0)>0;if($cmp43){__label__=8;break}else{__label__=9;break}case 8:var $18=$T0_min_addr;var $conv46=$18<<16>>16;var $add47=$conv46+5|0;var $conv48=$add47&65535;$tmp_lag=$conv48;__label__=9;break;case 9:var $19=$T0_max_addr;var $conv50=$19<<16>>16;var $20=$tmp_lag;var $conv51=$20<<16>>16;var $sub52=$conv50-$conv51|0;var $conv53=$sub52&65535;$temp1=$conv53;var $21=$temp1;var $conv54=$21<<16>>16;var $sub55=$conv54-4|0;var $conv56=$sub55&65535;$temp2=$conv56;var $22=$temp2;var $conv57=$22<<16>>16;var $cmp58=($conv57|0)>0;if($cmp58){__label__=10;break}else{__label__=11;break}case 10:var $23=$T0_max_addr;var $conv61=$23<<16>>16;var $sub62=$conv61-4|0;var $conv63=$sub62&65535;$tmp_lag=$conv63;__label__=11;break;case 11:var $24=$T0_addr;var $conv65=$24<<16>>16;var $25=$T0_addr;var $conv66=$25<<16>>16;var $shl67=$conv66<<1;var $add68=$conv65+$shl67|0;var $conv69=$add68&65535;$uplag=$conv69;var $26=$T0_frac_addr;var $conv70=$26<<16>>16;var $27=$uplag;var $conv71=$27<<16>>16;var $add72=$conv71+$conv70|0;var $conv73=$add72&65535;$uplag=$conv73;var $28=$tmp_lag;var $conv74=$28<<16>>16;var $sub75=$conv74-2|0;var $conv76=$sub75&65535;$i=$conv76;var $29=$i;var $conv77=$29<<16>>16;var $30=$i;var $conv78=$30<<16>>16;var $shl79=$conv78<<1;var $add80=$conv77+$shl79|0;var $conv81=$add80&65535;$tmp_ind=$conv81;var $31=$tmp_ind;var $conv82=$31<<16>>16;var $32=$uplag;var $conv83=$32<<16>>16;var $sub84=$conv82-$conv83|0;var $conv85=$sub84&65535;$temp1=$conv85;var $33=$temp1;var $conv86=$33<<16>>16;var $cmp87=($conv86|0)>=0;if($cmp87){__label__=12;break}else{__label__=13;break}case 12:var $34=$T0_addr;var $conv90=$34<<16>>16;var $35=$tmp_lag;var $conv91=$35<<16>>16;var $sub92=$conv90-$conv91|0;var $add93=$sub92+5|0;var $conv94=$add93&65535;$index=$conv94;__label__=17;break;case 13:var $36=$tmp_lag;var $conv96=$36<<16>>16;var $add97=$conv96+1|0;var $conv98=$add97&65535;$i=$conv98;var $37=$i;var $conv99=$37<<16>>16;var $shl100=$conv99<<1;var $38=$i;var $conv101=$38<<16>>16;var $add102=$conv101+$shl100|0;var $conv103=$add102&65535;$i=$conv103;var $39=$i;var $conv104=$39<<16>>16;var $40=$uplag;var $conv105=$40<<16>>16;var $cmp106=($conv104|0)>($conv105|0);if($cmp106){__label__=14;break}else{__label__=15;break}case 14:var $41=$uplag;var $conv109=$41<<16>>16;var $42=$tmp_ind;var $conv110=$42<<16>>16;var $sub111=$conv109-$conv110|0;var $add112=$sub111+3|0;var $conv113=$add112&65535;$index=$conv113;__label__=16;break;case 15:var $43=$T0_addr;var $conv115=$43<<16>>16;var $44=$tmp_lag;var $conv116=$44<<16>>16;var $sub117=$conv115-$conv116|0;var $add118=$sub117+11|0;var $conv119=$add118&65535;$index=$conv119;__label__=16;break;case 16:__label__=17;break;case 17:__label__=18;break;case 18:__label__=19;break;case 19:var $45=$index;return $45;default:assert(0,"bad label: "+__label__)}}_Enc_lag3["X"]=1;function _Enc_lag6($T0,$T0_frac,$T0_min,$delta_flag,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $T0_addr;var $T0_frac_addr;var $T0_min_addr;var $delta_flag_addr;var $pOverflow_addr;var $index;var $i;var $temp;$T0_addr=$T0;$T0_frac_addr=$T0_frac;$T0_min_addr=$T0_min;$delta_flag_addr=$delta_flag;$pOverflow_addr=$pOverflow;var $0=$delta_flag_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$T0_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)<=94;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $2=$T0_addr;var $conv6=$2<<16>>16;var $shl=$conv6<<3;var $3=$T0_addr;var $conv7=$3<<16>>16;var $shl8=$conv7<<1;var $sub=$shl-$shl8|0;var $sub9=$sub-105|0;var $conv10=$sub9&65535;$i=$conv10;var $4=$i;var $conv11=$4<<16>>16;var $5=$T0_frac_addr;var $conv12=$5<<16>>16;var $add=$conv11+$conv12|0;var $conv13=$add&65535;$index=$conv13;__label__=4;break;case 3:var $6=$T0_addr;var $conv14=$6<<16>>16;var $add15=$conv14+368|0;var $conv16=$add15&65535;$index=$conv16;__label__=4;break;case 4:__label__=6;break;case 5:var $7=$T0_addr;var $conv18=$7<<16>>16;var $8=$T0_min_addr;var $conv19=$8<<16>>16;var $sub20=$conv18-$conv19|0;var $conv21=$sub20&65535;$temp=$conv21;var $9=$temp;var $conv22=$9<<16>>16;var $shl23=$conv22<<3;var $10=$temp;var $conv24=$10<<16>>16;var $shl25=$conv24<<1;var $sub26=$shl23-$shl25|0;var $conv27=$sub26&65535;$i=$conv27;var $11=$i;var $conv28=$11<<16>>16;var $add29=$conv28+3|0;var $conv30=$add29&65535;$i=$conv30;var $12=$i;var $conv31=$12<<16>>16;var $13=$T0_frac_addr;var $conv32=$13<<16>>16;var $add33=$conv31+$conv32|0;var $conv34=$add33&65535;$index=$conv34;__label__=6;break;case 6:var $14=$index;return $14;default:assert(0,"bad label: "+__label__)}}_Enc_lag6["X"]=1;function _ets_to_if2($frame_type_3gpp,$ets_input_ptr,$if2_output_ptr,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $frame_type_3gpp_addr;var $ets_input_ptr_addr;var $if2_output_ptr_addr;var $common_amr_tbls_addr;var $i;var $k;var $j;var $ptr_temp;var $bits_left;var $accum;var $reorderBits_ptr;var $numOfBits_ptr;$frame_type_3gpp_addr=$frame_type_3gpp;$ets_input_ptr_addr=$ets_input_ptr;$if2_output_ptr_addr=$if2_output_ptr;$common_amr_tbls_addr=$common_amr_tbls;$j=0;var $0=$common_amr_tbls_addr;var $reorderBits_ptr1=$0+100|0;var $1=HEAP32[$reorderBits_ptr1>>2];$reorderBits_ptr=$1;var $2=$common_amr_tbls_addr;var $numOfBits_ptr2=$2+96|0;var $3=HEAP32[$numOfBits_ptr2>>2];$numOfBits_ptr=$3;var $4=$frame_type_3gpp_addr;var $cmp=$4>>>0<8;if($cmp){__label__=1;break}else{__label__=11;break}case 1:var $5=$frame_type_3gpp_addr;var $conv=$5&255;var $conv3=$conv&255;var $6=$frame_type_3gpp_addr;var $7=$reorderBits_ptr;var $arrayidx=$7+($6<<2)|0;var $8=HEAP32[$arrayidx>>2];var $arrayidx4=$8|0;var $9=HEAP16[$arrayidx4>>1];var $idxprom=$9<<16>>16;var $10=$ets_input_ptr_addr;var $arrayidx5=$10+($idxprom<<1)|0;var $11=HEAP16[$arrayidx5>>1];var $conv6=$11<<16>>16;var $shl=$conv6<<4;var $or=$conv3|$shl;var $12=$frame_type_3gpp_addr;var $13=$reorderBits_ptr;var $arrayidx7=$13+($12<<2)|0;var $14=HEAP32[$arrayidx7>>2];var $arrayidx8=$14+2|0;var $15=HEAP16[$arrayidx8>>1];var $idxprom9=$15<<16>>16;var $16=$ets_input_ptr_addr;var $arrayidx10=$16+($idxprom9<<1)|0;var $17=HEAP16[$arrayidx10>>1];var $conv11=$17<<16>>16;var $shl12=$conv11<<5;var $or13=$or|$shl12;var $18=$frame_type_3gpp_addr;var $19=$reorderBits_ptr;var $arrayidx14=$19+($18<<2)|0;var $20=HEAP32[$arrayidx14>>2];var $arrayidx15=$20+4|0;var $21=HEAP16[$arrayidx15>>1];var $idxprom16=$21<<16>>16;var $22=$ets_input_ptr_addr;var $arrayidx17=$22+($idxprom16<<1)|0;var $23=HEAP16[$arrayidx17>>1];var $conv18=$23<<16>>16;var $shl19=$conv18<<6;var $or20=$or13|$shl19;var $24=$frame_type_3gpp_addr;var $25=$reorderBits_ptr;var $arrayidx21=$25+($24<<2)|0;var $26=HEAP32[$arrayidx21>>2];var $arrayidx22=$26+6|0;var $27=HEAP16[$arrayidx22>>1];var $idxprom23=$27<<16>>16;var $28=$ets_input_ptr_addr;var $arrayidx24=$28+($idxprom23<<1)|0;var $29=HEAP16[$arrayidx24>>1];var $conv25=$29<<16>>16;var $shl26=$conv25<<7;var $or27=$or20|$shl26;var $conv28=$or27&255;var $30=$j;var $inc=$30+1&65535;$j=$inc;var $idxprom29=$30<<16>>16;var $31=$if2_output_ptr_addr;var $arrayidx30=$31+$idxprom29|0;HEAP8[$arrayidx30]=$conv28;$i=4;__label__=2;break;case 2:var $32=$i;var $conv31=$32<<16>>16;var $33=$frame_type_3gpp_addr;var $34=$numOfBits_ptr;var $arrayidx32=$34+($33<<1)|0;var $35=HEAP16[$arrayidx32>>1];var $conv33=$35<<16>>16;var $sub=$conv33-7|0;var $cmp34=($conv31|0)<($sub|0);if($cmp34){__label__=3;break}else{__label__=4;break}case 3:var $36=$i;var $inc36=$36+1&65535;$i=$inc36;var $idxprom37=$36<<16>>16;var $37=$frame_type_3gpp_addr;var $38=$reorderBits_ptr;var $arrayidx38=$38+($37<<2)|0;var $39=HEAP32[$arrayidx38>>2];var $arrayidx39=$39+($idxprom37<<1)|0;var $40=HEAP16[$arrayidx39>>1];var $idxprom40=$40<<16>>16;var $41=$ets_input_ptr_addr;var $arrayidx41=$41+($idxprom40<<1)|0;var $42=HEAP16[$arrayidx41>>1];var $conv42=$42&255;var $43=$j;var $idxprom43=$43<<16>>16;var $44=$if2_output_ptr_addr;var $arrayidx44=$44+$idxprom43|0;HEAP8[$arrayidx44]=$conv42;var $45=$i;var $inc45=$45+1&65535;$i=$inc45;var $idxprom46=$45<<16>>16;var $46=$frame_type_3gpp_addr;var $47=$reorderBits_ptr;var $arrayidx47=$47+($46<<2)|0;var $48=HEAP32[$arrayidx47>>2];var $arrayidx48=$48+($idxprom46<<1)|0;var $49=HEAP16[$arrayidx48>>1];var $idxprom49=$49<<16>>16;var $50=$ets_input_ptr_addr;var $arrayidx50=$50+($idxprom49<<1)|0;var $51=HEAP16[$arrayidx50>>1];var $conv51=$51&255;var $conv52=$conv51&255;var $shl53=$conv52<<1;var $52=$j;var $idxprom54=$52<<16>>16;var $53=$if2_output_ptr_addr;var $arrayidx55=$53+$idxprom54|0;var $54=HEAPU8[$arrayidx55];var $conv56=$54&255;var $or57=$conv56|$shl53;var $conv58=$or57&255;HEAP8[$arrayidx55]=$conv58;var $55=$i;var $inc59=$55+1&65535;$i=$inc59;var $idxprom60=$55<<16>>16;var $56=$frame_type_3gpp_addr;var $57=$reorderBits_ptr;var $arrayidx61=$57+($56<<2)|0;var $58=HEAP32[$arrayidx61>>2];var $arrayidx62=$58+($idxprom60<<1)|0;var $59=HEAP16[$arrayidx62>>1];var $idxprom63=$59<<16>>16;var $60=$ets_input_ptr_addr;var $arrayidx64=$60+($idxprom63<<1)|0;var $61=HEAP16[$arrayidx64>>1];var $conv65=$61&255;var $conv66=$conv65&255;var $shl67=$conv66<<2;var $62=$j;var $idxprom68=$62<<16>>16;var $63=$if2_output_ptr_addr;var $arrayidx69=$63+$idxprom68|0;var $64=HEAPU8[$arrayidx69];var $conv70=$64&255;var $or71=$conv70|$shl67;var $conv72=$or71&255;HEAP8[$arrayidx69]=$conv72;var $65=$i;var $inc73=$65+1&65535;$i=$inc73;var $idxprom74=$65<<16>>16;var $66=$frame_type_3gpp_addr;var $67=$reorderBits_ptr;var $arrayidx75=$67+($66<<2)|0;var $68=HEAP32[$arrayidx75>>2];var $arrayidx76=$68+($idxprom74<<1)|0;var $69=HEAP16[$arrayidx76>>1];var $idxprom77=$69<<16>>16;var $70=$ets_input_ptr_addr;var $arrayidx78=$70+($idxprom77<<1)|0;var $71=HEAP16[$arrayidx78>>1];var $conv79=$71&255;var $conv80=$conv79&255;var $shl81=$conv80<<3;var $72=$j;var $idxprom82=$72<<16>>16;var $73=$if2_output_ptr_addr;var $arrayidx83=$73+$idxprom82|0;var $74=HEAPU8[$arrayidx83];var $conv84=$74&255;var $or85=$conv84|$shl81;var $conv86=$or85&255;HEAP8[$arrayidx83]=$conv86;var $75=$i;var $inc87=$75+1&65535;$i=$inc87;var $idxprom88=$75<<16>>16;var $76=$frame_type_3gpp_addr;var $77=$reorderBits_ptr;var $arrayidx89=$77+($76<<2)|0;var $78=HEAP32[$arrayidx89>>2];var $arrayidx90=$78+($idxprom88<<1)|0;var $79=HEAP16[$arrayidx90>>1];var $idxprom91=$79<<16>>16;var $80=$ets_input_ptr_addr;var $arrayidx92=$80+($idxprom91<<1)|0;var $81=HEAP16[$arrayidx92>>1];var $conv93=$81&255;var $conv94=$conv93&255;var $shl95=$conv94<<4;var $82=$j;var $idxprom96=$82<<16>>16;var $83=$if2_output_ptr_addr;var $arrayidx97=$83+$idxprom96|0;var $84=HEAPU8[$arrayidx97];var $conv98=$84&255;var $or99=$conv98|$shl95;var $conv100=$or99&255;HEAP8[$arrayidx97]=$conv100;var $85=$i;var $inc101=$85+1&65535;$i=$inc101;var $idxprom102=$85<<16>>16;var $86=$frame_type_3gpp_addr;var $87=$reorderBits_ptr;var $arrayidx103=$87+($86<<2)|0;var $88=HEAP32[$arrayidx103>>2];var $arrayidx104=$88+($idxprom102<<1)|0;var $89=HEAP16[$arrayidx104>>1];var $idxprom105=$89<<16>>16;var $90=$ets_input_ptr_addr;var $arrayidx106=$90+($idxprom105<<1)|0;var $91=HEAP16[$arrayidx106>>1];var $conv107=$91&255;var $conv108=$conv107&255;var $shl109=$conv108<<5;var $92=$j;var $idxprom110=$92<<16>>16;var $93=$if2_output_ptr_addr;var $arrayidx111=$93+$idxprom110|0;var $94=HEAPU8[$arrayidx111];var $conv112=$94&255;var $or113=$conv112|$shl109;var $conv114=$or113&255;HEAP8[$arrayidx111]=$conv114;var $95=$i;var $inc115=$95+1&65535;$i=$inc115;var $idxprom116=$95<<16>>16;var $96=$frame_type_3gpp_addr;var $97=$reorderBits_ptr;var $arrayidx117=$97+($96<<2)|0;var $98=HEAP32[$arrayidx117>>2];var $arrayidx118=$98+($idxprom116<<1)|0;var $99=HEAP16[$arrayidx118>>1];var $idxprom119=$99<<16>>16;var $100=$ets_input_ptr_addr;var $arrayidx120=$100+($idxprom119<<1)|0;var $101=HEAP16[$arrayidx120>>1];var $conv121=$101&255;var $conv122=$conv121&255;var $shl123=$conv122<<6;var $102=$j;var $idxprom124=$102<<16>>16;var $103=$if2_output_ptr_addr;var $arrayidx125=$103+$idxprom124|0;var $104=HEAPU8[$arrayidx125];var $conv126=$104&255;var $or127=$conv126|$shl123;var $conv128=$or127&255;HEAP8[$arrayidx125]=$conv128;var $105=$i;var $inc129=$105+1&65535;$i=$inc129;var $idxprom130=$105<<16>>16;var $106=$frame_type_3gpp_addr;var $107=$reorderBits_ptr;var $arrayidx131=$107+($106<<2)|0;var $108=HEAP32[$arrayidx131>>2];var $arrayidx132=$108+($idxprom130<<1)|0;var $109=HEAP16[$arrayidx132>>1];var $idxprom133=$109<<16>>16;var $110=$ets_input_ptr_addr;var $arrayidx134=$110+($idxprom133<<1)|0;var $111=HEAP16[$arrayidx134>>1];var $conv135=$111&255;var $conv136=$conv135&255;var $shl137=$conv136<<7;var $112=$j;var $inc138=$112+1&65535;$j=$inc138;var $idxprom139=$112<<16>>16;var $113=$if2_output_ptr_addr;var $arrayidx140=$113+$idxprom139|0;var $114=HEAPU8[$arrayidx140];var $conv141=$114&255;var $or142=$conv141|$shl137;var $conv143=$or142&255;HEAP8[$arrayidx140]=$conv143;__label__=2;break;case 4:var $115=$frame_type_3gpp_addr;var $116=$numOfBits_ptr;var $arrayidx144=$116+($115<<1)|0;var $117=HEAP16[$arrayidx144>>1];var $conv145=$117<<16>>16;var $add=$conv145+4|0;var $118=$frame_type_3gpp_addr;var $119=$numOfBits_ptr;var $arrayidx146=$119+($118<<1)|0;var $120=HEAP16[$arrayidx146>>1];var $conv147=$120<<16>>16;var $add148=$conv147+4|0;var $and=$add148&65528;var $sub149=$add-$and|0;var $conv150=$sub149&65535;$bits_left=$conv150;var $121=$bits_left;var $conv151=$121<<16>>16;var $cmp152=($conv151|0)!=0;if($cmp152){__label__=5;break}else{__label__=10;break}case 5:var $122=$j;var $idxprom155=$122<<16>>16;var $123=$if2_output_ptr_addr;var $arrayidx156=$123+$idxprom155|0;HEAP8[$arrayidx156]=0;$k=0;__label__=6;break;case 6:var $124=$k;var $conv158=$124<<16>>16;var $125=$bits_left;var $conv159=$125<<16>>16;var $cmp160=($conv158|0)<($conv159|0);if($cmp160){__label__=7;break}else{__label__=9;break}case 7:var $126=$i;var $inc163=$126+1&65535;$i=$inc163;var $idxprom164=$126<<16>>16;var $127=$frame_type_3gpp_addr;var $128=$reorderBits_ptr;var $arrayidx165=$128+($127<<2)|0;var $129=HEAP32[$arrayidx165>>2];var $arrayidx166=$129+($idxprom164<<1)|0;var $130=HEAP16[$arrayidx166>>1];var $idxprom167=$130<<16>>16;var $131=$ets_input_ptr_addr;var $arrayidx168=$131+($idxprom167<<1)|0;var $132=HEAP16[$arrayidx168>>1];var $conv169=$132&255;var $conv170=$conv169&255;var $133=$k;var $conv171=$133<<16>>16;var $shl172=$conv170<<$conv171;var $134=$j;var $idxprom173=$134<<16>>16;var $135=$if2_output_ptr_addr;var $arrayidx174=$135+$idxprom173|0;var $136=HEAPU8[$arrayidx174];var $conv175=$136&255;var $or176=$conv175|$shl172;var $conv177=$or176&255;HEAP8[$arrayidx174]=$conv177;__label__=8;break;case 8:var $137=$k;var $inc178=$137+1&65535;$k=$inc178;__label__=6;break;case 9:__label__=10;break;case 10:__label__=25;break;case 11:var $138=$frame_type_3gpp_addr;var $cmp180=($138|0)!=15;if($cmp180){__label__=12;break}else{__label__=23;break}case 12:var $139=$frame_type_3gpp_addr;var $conv183=$139&255;var $conv184=$conv183&255;var $140=$ets_input_ptr_addr;var $arrayidx185=$140|0;var $141=HEAP16[$arrayidx185>>1];var $conv186=$141<<16>>16;var $shl187=$conv186<<4;var $or188=$conv184|$shl187;var $142=$ets_input_ptr_addr;var $arrayidx189=$142+2|0;var $143=HEAP16[$arrayidx189>>1];var $conv190=$143<<16>>16;var $shl191=$conv190<<5;var $or192=$or188|$shl191;var $144=$ets_input_ptr_addr;var $arrayidx193=$144+4|0;var $145=HEAP16[$arrayidx193>>1];var $conv194=$145<<16>>16;var $shl195=$conv194<<6;var $or196=$or192|$shl195;var $146=$ets_input_ptr_addr;var $arrayidx197=$146+6|0;var $147=HEAP16[$arrayidx197>>1];var $conv198=$147<<16>>16;var $shl199=$conv198<<7;var $or200=$or196|$shl199;var $conv201=$or200&255;var $148=$j;var $inc202=$148+1&65535;$j=$inc202;var $idxprom203=$148<<16>>16;var $149=$if2_output_ptr_addr;var $arrayidx204=$149+$idxprom203|0;HEAP8[$arrayidx204]=$conv201;var $150=$ets_input_ptr_addr;var $arrayidx205=$150+8|0;$ptr_temp=$arrayidx205;var $151=$frame_type_3gpp_addr;var $152=$numOfBits_ptr;var $arrayidx206=$152+($151<<1)|0;var $153=HEAP16[$arrayidx206>>1];var $conv207=$153<<16>>16;var $add208=$conv207+4|0;var $and209=$add208&65528;var $conv210=$and209&65535;$bits_left=$conv210;var $154=$bits_left;var $conv211=$154<<16>>16;var $sub212=$conv211-7|0;var $shr=$sub212>>3;var $conv213=$shr&65535;$i=$conv213;__label__=13;break;case 13:var $155=$i;var $conv215=$155<<16>>16;var $cmp216=($conv215|0)>0;if($cmp216){__label__=14;break}else{__label__=16;break}case 14:var $156=$ptr_temp;var $incdec_ptr=$156+2|0;$ptr_temp=$incdec_ptr;var $157=HEAP16[$156>>1];var $conv219=$157&255;$accum=$conv219;var $158=$ptr_temp;var $incdec_ptr220=$158+2|0;$ptr_temp=$incdec_ptr220;var $159=HEAP16[$158>>1];var $conv221=$159&255;var $conv222=$conv221&255;var $shl223=$conv222<<1;var $160=$accum;var $conv224=$160&255;var $or225=$conv224|$shl223;var $conv226=$or225&255;$accum=$conv226;var $161=$ptr_temp;var $incdec_ptr227=$161+2|0;$ptr_temp=$incdec_ptr227;var $162=HEAP16[$161>>1];var $conv228=$162&255;var $conv229=$conv228&255;var $shl230=$conv229<<2;var $163=$accum;var $conv231=$163&255;var $or232=$conv231|$shl230;var $conv233=$or232&255;$accum=$conv233;var $164=$ptr_temp;var $incdec_ptr234=$164+2|0;$ptr_temp=$incdec_ptr234;var $165=HEAP16[$164>>1];var $conv235=$165&255;var $conv236=$conv235&255;var $shl237=$conv236<<3;var $166=$accum;var $conv238=$166&255;var $or239=$conv238|$shl237;var $conv240=$or239&255;$accum=$conv240;var $167=$ptr_temp;var $incdec_ptr241=$167+2|0;$ptr_temp=$incdec_ptr241;var $168=HEAP16[$167>>1];var $conv242=$168&255;var $conv243=$conv242&255;var $shl244=$conv243<<4;var $169=$accum;var $conv245=$169&255;var $or246=$conv245|$shl244;var $conv247=$or246&255;$accum=$conv247;var $170=$ptr_temp;var $incdec_ptr248=$170+2|0;$ptr_temp=$incdec_ptr248;var $171=HEAP16[$170>>1];var $conv249=$171&255;var $conv250=$conv249&255;var $shl251=$conv250<<5;var $172=$accum;var $conv252=$172&255;var $or253=$conv252|$shl251;var $conv254=$or253&255;$accum=$conv254;var $173=$ptr_temp;var $incdec_ptr255=$173+2|0;$ptr_temp=$incdec_ptr255;var $174=HEAP16[$173>>1];var $conv256=$174&255;var $conv257=$conv256&255;var $shl258=$conv257<<6;var $175=$accum;var $conv259=$175&255;var $or260=$conv259|$shl258;var $conv261=$or260&255;$accum=$conv261;var $176=$ptr_temp;var $incdec_ptr262=$176+2|0;$ptr_temp=$incdec_ptr262;var $177=HEAP16[$176>>1];var $conv263=$177&255;var $conv264=$conv263&255;var $shl265=$conv264<<7;var $178=$accum;var $conv266=$178&255;var $or267=$conv266|$shl265;var $conv268=$or267&255;$accum=$conv268;var $179=$accum;var $180=$j;var $inc269=$180+1&65535;$j=$inc269;var $idxprom270=$180<<16>>16;var $181=$if2_output_ptr_addr;var $arrayidx271=$181+$idxprom270|0;HEAP8[$arrayidx271]=$179;__label__=15;break;case 15:var $182=$i;var $dec=$182-1&65535;$i=$dec;__label__=13;break;case 16:var $183=$frame_type_3gpp_addr;var $184=$numOfBits_ptr;var $arrayidx274=$184+($183<<1)|0;var $185=HEAP16[$arrayidx274>>1];var $conv275=$185<<16>>16;var $add276=$conv275+4|0;var $186=$bits_left;var $conv277=$186<<16>>16;var $sub278=$add276-$conv277|0;var $conv279=$sub278&65535;$bits_left=$conv279;var $187=$bits_left;var $conv280=$187<<16>>16;var $cmp281=($conv280|0)!=0;if($cmp281){__label__=17;break}else{__label__=22;break}case 17:var $188=$j;var $idxprom284=$188<<16>>16;var $189=$if2_output_ptr_addr;var $arrayidx285=$189+$idxprom284|0;HEAP8[$arrayidx285]=0;$i=0;__label__=18;break;case 18:var $190=$i;var $conv287=$190<<16>>16;var $191=$bits_left;var $conv288=$191<<16>>16;var $cmp289=($conv287|0)<($conv288|0);if($cmp289){__label__=19;break}else{__label__=21;break}case 19:var $192=$i;var $idxprom292=$192<<16>>16;var $193=$ptr_temp;var $arrayidx293=$193+($idxprom292<<1)|0;var $194=HEAP16[$arrayidx293>>1];var $conv294=$194<<16>>16;var $195=$i;var $conv295=$195<<16>>16;var $shl296=$conv294<<$conv295;var $196=$j;var $idxprom297=$196<<16>>16;var $197=$if2_output_ptr_addr;var $arrayidx298=$197+$idxprom297|0;var $198=HEAPU8[$arrayidx298];var $conv299=$198&255;var $or300=$conv299|$shl296;var $conv301=$or300&255;HEAP8[$arrayidx298]=$conv301;__label__=20;break;case 20:var $199=$i;var $inc303=$199+1&65535;$i=$inc303;__label__=18;break;case 21:__label__=22;break;case 22:__label__=24;break;case 23:var $200=$frame_type_3gpp_addr;var $conv307=$200&255;var $201=$j;var $inc308=$201+1&65535;$j=$inc308;var $idxprom309=$201<<16>>16;var $202=$if2_output_ptr_addr;var $arrayidx310=$202+$idxprom309|0;HEAP8[$arrayidx310]=$conv307;__label__=24;break;case 24:__label__=25;break;case 25:;return;default:assert(0,"bad label: "+__label__)}}_ets_to_if2["X"]=1;function _ets_to_wmf($frame_type_3gpp,$ets_input_ptr,$wmf_output_ptr,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $frame_type_3gpp_addr;var $ets_input_ptr_addr;var $wmf_output_ptr_addr;var $common_amr_tbls_addr;var $i;var $k;var $j;var $ptr_temp;var $bits_left;var $accum;var $reorderBits_ptr;var $numOfBits_ptr;$frame_type_3gpp_addr=$frame_type_3gpp;$ets_input_ptr_addr=$ets_input_ptr;$wmf_output_ptr_addr=$wmf_output_ptr;$common_amr_tbls_addr=$common_amr_tbls;$k=0;$j=0;var $0=$common_amr_tbls_addr;var $reorderBits_ptr1=$0+100|0;var $1=HEAP32[$reorderBits_ptr1>>2];$reorderBits_ptr=$1;var $2=$common_amr_tbls_addr;var $numOfBits_ptr2=$2+96|0;var $3=HEAP32[$numOfBits_ptr2>>2];$numOfBits_ptr=$3;var $4=$frame_type_3gpp_addr;var $conv=$4&255;var $conv3=$conv&255;var $and=$conv3&15;var $conv4=$and&255;var $5=$j;var $inc=$5+1&65535;$j=$inc;var $idxprom=$5<<16>>16;var $6=$wmf_output_ptr_addr;var $arrayidx=$6+$idxprom|0;HEAP8[$arrayidx]=$conv4;var $7=$frame_type_3gpp_addr;var $cmp=$7>>>0<8;if($cmp){__label__=1;break}else{__label__=9;break}case 1:$i=0;__label__=2;break;case 2:var $8=$i;var $conv6=$8<<16>>16;var $9=$frame_type_3gpp_addr;var $10=$numOfBits_ptr;var $arrayidx7=$10+($9<<1)|0;var $11=HEAP16[$arrayidx7>>1];var $conv8=$11<<16>>16;var $sub=$conv8-7|0;var $cmp9=($conv6|0)<($sub|0);if($cmp9){__label__=3;break}else{__label__=4;break}case 3:var $12=$i;var $inc11=$12+1&65535;$i=$inc11;var $idxprom12=$12<<16>>16;var $13=$frame_type_3gpp_addr;var $14=$reorderBits_ptr;var $arrayidx13=$14+($13<<2)|0;var $15=HEAP32[$arrayidx13>>2];var $arrayidx14=$15+($idxprom12<<1)|0;var $16=HEAP16[$arrayidx14>>1];var $idxprom15=$16<<16>>16;var $17=$ets_input_ptr_addr;var $arrayidx16=$17+($idxprom15<<1)|0;var $18=HEAP16[$arrayidx16>>1];var $conv17=$18&255;var $conv18=$conv17&255;var $shl=$conv18<<7;var $conv19=$shl&255;var $19=$j;var $idxprom20=$19<<16>>16;var $20=$wmf_output_ptr_addr;var $arrayidx21=$20+$idxprom20|0;HEAP8[$arrayidx21]=$conv19;var $21=$i;var $inc22=$21+1&65535;$i=$inc22;var $idxprom23=$21<<16>>16;var $22=$frame_type_3gpp_addr;var $23=$reorderBits_ptr;var $arrayidx24=$23+($22<<2)|0;var $24=HEAP32[$arrayidx24>>2];var $arrayidx25=$24+($idxprom23<<1)|0;var $25=HEAP16[$arrayidx25>>1];var $idxprom26=$25<<16>>16;var $26=$ets_input_ptr_addr;var $arrayidx27=$26+($idxprom26<<1)|0;var $27=HEAP16[$arrayidx27>>1];var $conv28=$27&255;var $conv29=$conv28&255;var $shl30=$conv29<<6;var $28=$j;var $idxprom31=$28<<16>>16;var $29=$wmf_output_ptr_addr;var $arrayidx32=$29+$idxprom31|0;var $30=HEAPU8[$arrayidx32];var $conv33=$30&255;var $or=$conv33|$shl30;var $conv34=$or&255;HEAP8[$arrayidx32]=$conv34;var $31=$i;var $inc35=$31+1&65535;$i=$inc35;var $idxprom36=$31<<16>>16;var $32=$frame_type_3gpp_addr;var $33=$reorderBits_ptr;var $arrayidx37=$33+($32<<2)|0;var $34=HEAP32[$arrayidx37>>2];var $arrayidx38=$34+($idxprom36<<1)|0;var $35=HEAP16[$arrayidx38>>1];var $idxprom39=$35<<16>>16;var $36=$ets_input_ptr_addr;var $arrayidx40=$36+($idxprom39<<1)|0;var $37=HEAP16[$arrayidx40>>1];var $conv41=$37&255;var $conv42=$conv41&255;var $shl43=$conv42<<5;var $38=$j;var $idxprom44=$38<<16>>16;var $39=$wmf_output_ptr_addr;var $arrayidx45=$39+$idxprom44|0;var $40=HEAPU8[$arrayidx45];var $conv46=$40&255;var $or47=$conv46|$shl43;var $conv48=$or47&255;HEAP8[$arrayidx45]=$conv48;var $41=$i;var $inc49=$41+1&65535;$i=$inc49;var $idxprom50=$41<<16>>16;var $42=$frame_type_3gpp_addr;var $43=$reorderBits_ptr;var $arrayidx51=$43+($42<<2)|0;var $44=HEAP32[$arrayidx51>>2];var $arrayidx52=$44+($idxprom50<<1)|0;var $45=HEAP16[$arrayidx52>>1];var $idxprom53=$45<<16>>16;var $46=$ets_input_ptr_addr;var $arrayidx54=$46+($idxprom53<<1)|0;var $47=HEAP16[$arrayidx54>>1];var $conv55=$47&255;var $conv56=$conv55&255;var $shl57=$conv56<<4;var $48=$j;var $idxprom58=$48<<16>>16;var $49=$wmf_output_ptr_addr;var $arrayidx59=$49+$idxprom58|0;var $50=HEAPU8[$arrayidx59];var $conv60=$50&255;var $or61=$conv60|$shl57;var $conv62=$or61&255;HEAP8[$arrayidx59]=$conv62;var $51=$i;var $inc63=$51+1&65535;$i=$inc63;var $idxprom64=$51<<16>>16;var $52=$frame_type_3gpp_addr;var $53=$reorderBits_ptr;var $arrayidx65=$53+($52<<2)|0;var $54=HEAP32[$arrayidx65>>2];var $arrayidx66=$54+($idxprom64<<1)|0;var $55=HEAP16[$arrayidx66>>1];var $idxprom67=$55<<16>>16;var $56=$ets_input_ptr_addr;var $arrayidx68=$56+($idxprom67<<1)|0;var $57=HEAP16[$arrayidx68>>1];var $conv69=$57&255;var $conv70=$conv69&255;var $shl71=$conv70<<3;var $58=$j;var $idxprom72=$58<<16>>16;var $59=$wmf_output_ptr_addr;var $arrayidx73=$59+$idxprom72|0;var $60=HEAPU8[$arrayidx73];var $conv74=$60&255;var $or75=$conv74|$shl71;var $conv76=$or75&255;HEAP8[$arrayidx73]=$conv76;var $61=$i;var $inc77=$61+1&65535;$i=$inc77;var $idxprom78=$61<<16>>16;var $62=$frame_type_3gpp_addr;var $63=$reorderBits_ptr;var $arrayidx79=$63+($62<<2)|0;var $64=HEAP32[$arrayidx79>>2];var $arrayidx80=$64+($idxprom78<<1)|0;var $65=HEAP16[$arrayidx80>>1];var $idxprom81=$65<<16>>16;var $66=$ets_input_ptr_addr;var $arrayidx82=$66+($idxprom81<<1)|0;var $67=HEAP16[$arrayidx82>>1];var $conv83=$67&255;var $conv84=$conv83&255;var $shl85=$conv84<<2;var $68=$j;var $idxprom86=$68<<16>>16;var $69=$wmf_output_ptr_addr;var $arrayidx87=$69+$idxprom86|0;var $70=HEAPU8[$arrayidx87];var $conv88=$70&255;var $or89=$conv88|$shl85;var $conv90=$or89&255;HEAP8[$arrayidx87]=$conv90;var $71=$i;var $inc91=$71+1&65535;$i=$inc91;var $idxprom92=$71<<16>>16;var $72=$frame_type_3gpp_addr;var $73=$reorderBits_ptr;var $arrayidx93=$73+($72<<2)|0;var $74=HEAP32[$arrayidx93>>2];var $arrayidx94=$74+($idxprom92<<1)|0;var $75=HEAP16[$arrayidx94>>1];var $idxprom95=$75<<16>>16;var $76=$ets_input_ptr_addr;var $arrayidx96=$76+($idxprom95<<1)|0;var $77=HEAP16[$arrayidx96>>1];var $conv97=$77&255;var $conv98=$conv97&255;var $shl99=$conv98<<1;var $78=$j;var $idxprom100=$78<<16>>16;var $79=$wmf_output_ptr_addr;var $arrayidx101=$79+$idxprom100|0;var $80=HEAPU8[$arrayidx101];var $conv102=$80&255;var $or103=$conv102|$shl99;var $conv104=$or103&255;HEAP8[$arrayidx101]=$conv104;var $81=$i;var $inc105=$81+1&65535;$i=$inc105;var $idxprom106=$81<<16>>16;var $82=$frame_type_3gpp_addr;var $83=$reorderBits_ptr;var $arrayidx107=$83+($82<<2)|0;var $84=HEAP32[$arrayidx107>>2];var $arrayidx108=$84+($idxprom106<<1)|0;var $85=HEAP16[$arrayidx108>>1];var $idxprom109=$85<<16>>16;var $86=$ets_input_ptr_addr;var $arrayidx110=$86+($idxprom109<<1)|0;var $87=HEAP16[$arrayidx110>>1];var $conv111=$87&255;var $conv112=$conv111&255;var $88=$j;var $inc113=$88+1&65535;$j=$inc113;var $idxprom114=$88<<16>>16;var $89=$wmf_output_ptr_addr;var $arrayidx115=$89+$idxprom114|0;var $90=HEAPU8[$arrayidx115];var $conv116=$90&255;var $or117=$conv116|$conv112;var $conv118=$or117&255;HEAP8[$arrayidx115]=$conv118;__label__=2;break;case 4:var $91=$frame_type_3gpp_addr;var $92=$numOfBits_ptr;var $arrayidx119=$92+($91<<1)|0;var $93=HEAP16[$arrayidx119>>1];var $conv120=$93<<16>>16;var $94=$frame_type_3gpp_addr;var $95=$numOfBits_ptr;var $arrayidx121=$95+($94<<1)|0;var $96=HEAP16[$arrayidx121>>1];var $conv122=$96<<16>>16;var $and123=$conv122&65528;var $sub124=$conv120-$and123|0;var $conv125=$sub124&65535;$bits_left=$conv125;var $97=$j;var $idxprom126=$97<<16>>16;var $98=$wmf_output_ptr_addr;var $arrayidx127=$98+$idxprom126|0;HEAP8[$arrayidx127]=0;$k=0;__label__=5;break;case 5:var $99=$k;var $conv129=$99<<16>>16;var $100=$bits_left;var $conv130=$100<<16>>16;var $cmp131=($conv129|0)<($conv130|0);if($cmp131){__label__=6;break}else{__label__=8;break}case 6:var $101=$i;var $inc134=$101+1&65535;$i=$inc134;var $idxprom135=$101<<16>>16;var $102=$frame_type_3gpp_addr;var $103=$reorderBits_ptr;var $arrayidx136=$103+($102<<2)|0;var $104=HEAP32[$arrayidx136>>2];var $arrayidx137=$104+($idxprom135<<1)|0;var $105=HEAP16[$arrayidx137>>1];var $idxprom138=$105<<16>>16;var $106=$ets_input_ptr_addr;var $arrayidx139=$106+($idxprom138<<1)|0;var $107=HEAP16[$arrayidx139>>1];var $conv140=$107&255;var $conv141=$conv140&255;var $108=$k;var $conv142=$108<<16>>16;var $sub143=7-$conv142|0;var $shl144=$conv141<<$sub143;var $109=$j;var $idxprom145=$109<<16>>16;var $110=$wmf_output_ptr_addr;var $arrayidx146=$110+$idxprom145|0;var $111=HEAPU8[$arrayidx146];var $conv147=$111&255;var $or148=$conv147|$shl144;var $conv149=$or148&255;HEAP8[$arrayidx146]=$conv149;__label__=7;break;case 7:var $112=$k;var $inc150=$112+1&65535;$k=$inc150;__label__=5;break;case 8:__label__=18;break;case 9:var $113=$ets_input_ptr_addr;var $arrayidx152=$113|0;$ptr_temp=$arrayidx152;var $114=$frame_type_3gpp_addr;var $115=$numOfBits_ptr;var $arrayidx153=$115+($114<<1)|0;var $116=HEAP16[$arrayidx153>>1];var $conv154=$116<<16>>16;var $sub155=$conv154-7|0;var $conv156=$sub155&65535;$i=$conv156;__label__=10;break;case 10:var $117=$i;var $conv158=$117<<16>>16;var $cmp159=($conv158|0)>0;if($cmp159){__label__=11;break}else{__label__=13;break}case 11:var $118=$ptr_temp;var $incdec_ptr=$118+2|0;$ptr_temp=$incdec_ptr;var $119=HEAP16[$118>>1];var $conv162=$119&255;var $conv163=$conv162&255;var $shl164=$conv163<<7;var $conv165=$shl164&255;$accum=$conv165;var $120=$ptr_temp;var $incdec_ptr166=$120+2|0;$ptr_temp=$incdec_ptr166;var $121=HEAP16[$120>>1];var $conv167=$121&255;var $conv168=$conv167&255;var $shl169=$conv168<<6;var $122=$accum;var $conv170=$122&255;var $or171=$conv170|$shl169;var $conv172=$or171&255;$accum=$conv172;var $123=$ptr_temp;var $incdec_ptr173=$123+2|0;$ptr_temp=$incdec_ptr173;var $124=HEAP16[$123>>1];var $conv174=$124&255;var $conv175=$conv174&255;var $shl176=$conv175<<5;var $125=$accum;var $conv177=$125&255;var $or178=$conv177|$shl176;var $conv179=$or178&255;$accum=$conv179;var $126=$ptr_temp;var $incdec_ptr180=$126+2|0;$ptr_temp=$incdec_ptr180;var $127=HEAP16[$126>>1];var $conv181=$127&255;var $conv182=$conv181&255;var $shl183=$conv182<<4;var $128=$accum;var $conv184=$128&255;var $or185=$conv184|$shl183;var $conv186=$or185&255;$accum=$conv186;var $129=$ptr_temp;var $incdec_ptr187=$129+2|0;$ptr_temp=$incdec_ptr187;var $130=HEAP16[$129>>1];var $conv188=$130&255;var $conv189=$conv188&255;var $shl190=$conv189<<3;var $131=$accum;var $conv191=$131&255;var $or192=$conv191|$shl190;var $conv193=$or192&255;$accum=$conv193;var $132=$ptr_temp;var $incdec_ptr194=$132+2|0;$ptr_temp=$incdec_ptr194;var $133=HEAP16[$132>>1];var $conv195=$133&255;var $conv196=$conv195&255;var $shl197=$conv196<<2;var $134=$accum;var $conv198=$134&255;var $or199=$conv198|$shl197;var $conv200=$or199&255;$accum=$conv200;var $135=$ptr_temp;var $incdec_ptr201=$135+2|0;$ptr_temp=$incdec_ptr201;var $136=HEAP16[$135>>1];var $conv202=$136&255;var $conv203=$conv202&255;var $shl204=$conv203<<1;var $137=$accum;var $conv205=$137&255;var $or206=$conv205|$shl204;var $conv207=$or206&255;$accum=$conv207;var $138=$ptr_temp;var $incdec_ptr208=$138+2|0;$ptr_temp=$incdec_ptr208;var $139=HEAP16[$138>>1];var $conv209=$139&255;var $conv210=$conv209&255;var $140=$accum;var $conv211=$140&255;var $or212=$conv211|$conv210;var $conv213=$or212&255;$accum=$conv213;var $141=$accum;var $142=$j;var $inc214=$142+1&65535;$j=$inc214;var $idxprom215=$142<<16>>16;var $143=$wmf_output_ptr_addr;var $arrayidx216=$143+$idxprom215|0;HEAP8[$arrayidx216]=$141;__label__=12;break;case 12:var $144=$i;var $conv218=$144<<16>>16;var $sub219=$conv218-8|0;var $conv220=$sub219&65535;$i=$conv220;__label__=10;break;case 13:var $145=$frame_type_3gpp_addr;var $146=$numOfBits_ptr;var $arrayidx222=$146+($145<<1)|0;var $147=HEAP16[$arrayidx222>>1];var $conv223=$147<<16>>16;var $148=$frame_type_3gpp_addr;var $149=$numOfBits_ptr;var $arrayidx224=$149+($148<<1)|0;var $150=HEAP16[$arrayidx224>>1];var $conv225=$150<<16>>16;var $and226=$conv225&65528;var $sub227=$conv223-$and226|0;var $conv228=$sub227&65535;$bits_left=$conv228;var $151=$j;var $idxprom229=$151<<16>>16;var $152=$wmf_output_ptr_addr;var $arrayidx230=$152+$idxprom229|0;HEAP8[$arrayidx230]=0;$i=0;__label__=14;break;case 14:var $153=$i;var $conv232=$153<<16>>16;var $154=$bits_left;var $conv233=$154<<16>>16;var $cmp234=($conv232|0)<($conv233|0);if($cmp234){__label__=15;break}else{__label__=17;break}case 15:var $155=$ptr_temp;var $incdec_ptr237=$155+2|0;$ptr_temp=$incdec_ptr237;var $156=HEAP16[$155>>1];var $conv238=$156<<16>>16;var $157=$i;var $conv239=$157<<16>>16;var $sub240=7-$conv239|0;var $shl241=$conv238<<$sub240;var $158=$j;var $idxprom242=$158<<16>>16;var $159=$wmf_output_ptr_addr;var $arrayidx243=$159+$idxprom242|0;var $160=HEAPU8[$arrayidx243];var $conv244=$160&255;var $or245=$conv244|$shl241;var $conv246=$or245&255;HEAP8[$arrayidx243]=$conv246;__label__=16;break;case 16:var $161=$i;var $inc248=$161+1&65535;$i=$inc248;__label__=14;break;case 17:__label__=18;break;case 18:;return;default:assert(0,"bad label: "+__label__)}}_ets_to_wmf["X"]=1;function _shl159($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl159["X"]=1;function _L_mult160($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shr161($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _extract_h($L_var1){var __label__;var $L_var1_addr;$L_var1_addr=$L_var1;var $0=$L_var1_addr;var $shr=$0>>16;var $conv=$shr&65535;return $conv}function _extract_l($L_var1){var __label__;var $L_var1_addr;$L_var1_addr=$L_var1;var $0=$L_var1_addr;var $conv=$0&65535;return $conv}function _ets_to_ietf($frame_type_3gpp,$ets_input_ptr,$ietf_output_ptr,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $frame_type_3gpp_addr;var $ets_input_ptr_addr;var $ietf_output_ptr_addr;var $common_amr_tbls_addr;var $i;var $k;var $j;var $ptr_temp;var $bits_left;var $accum;var $reorderBits_ptr;var $numOfBits_ptr;$frame_type_3gpp_addr=$frame_type_3gpp;$ets_input_ptr_addr=$ets_input_ptr;$ietf_output_ptr_addr=$ietf_output_ptr;$common_amr_tbls_addr=$common_amr_tbls;$k=0;$j=0;var $0=$common_amr_tbls_addr;var $reorderBits_ptr1=$0+100|0;var $1=HEAP32[$reorderBits_ptr1>>2];$reorderBits_ptr=$1;var $2=$common_amr_tbls_addr;var $numOfBits_ptr2=$2+96|0;var $3=HEAP32[$numOfBits_ptr2>>2];$numOfBits_ptr=$3;var $4=$frame_type_3gpp_addr;var $shl=$4<<3;var $conv=$shl&255;var $5=$j;var $inc=$5+1&65535;$j=$inc;var $idxprom=$5<<16>>16;var $6=$ietf_output_ptr_addr;var $arrayidx=$6+$idxprom|0;HEAP8[$arrayidx]=$conv;var $7=$frame_type_3gpp_addr;var $cmp=$7>>>0<8;if($cmp){__label__=1;break}else{__label__=9;break}case 1:$i=0;__label__=2;break;case 2:var $8=$i;var $conv4=$8<<16>>16;var $9=$frame_type_3gpp_addr;var $10=$numOfBits_ptr;var $arrayidx5=$10+($9<<1)|0;var $11=HEAP16[$arrayidx5>>1];var $conv6=$11<<16>>16;var $sub=$conv6-7|0;var $cmp7=($conv4|0)<($sub|0);if($cmp7){__label__=3;break}else{__label__=4;break}case 3:var $12=$i;var $inc9=$12+1&65535;$i=$inc9;var $idxprom10=$12<<16>>16;var $13=$frame_type_3gpp_addr;var $14=$reorderBits_ptr;var $arrayidx11=$14+($13<<2)|0;var $15=HEAP32[$arrayidx11>>2];var $arrayidx12=$15+($idxprom10<<1)|0;var $16=HEAP16[$arrayidx12>>1];var $idxprom13=$16<<16>>16;var $17=$ets_input_ptr_addr;var $arrayidx14=$17+($idxprom13<<1)|0;var $18=HEAP16[$arrayidx14>>1];var $conv15=$18&255;var $conv16=$conv15&255;var $shl17=$conv16<<7;var $conv18=$shl17&255;var $19=$j;var $idxprom19=$19<<16>>16;var $20=$ietf_output_ptr_addr;var $arrayidx20=$20+$idxprom19|0;HEAP8[$arrayidx20]=$conv18;var $21=$i;var $inc21=$21+1&65535;$i=$inc21;var $idxprom22=$21<<16>>16;var $22=$frame_type_3gpp_addr;var $23=$reorderBits_ptr;var $arrayidx23=$23+($22<<2)|0;var $24=HEAP32[$arrayidx23>>2];var $arrayidx24=$24+($idxprom22<<1)|0;var $25=HEAP16[$arrayidx24>>1];var $idxprom25=$25<<16>>16;var $26=$ets_input_ptr_addr;var $arrayidx26=$26+($idxprom25<<1)|0;var $27=HEAP16[$arrayidx26>>1];var $conv27=$27&255;var $conv28=$conv27&255;var $shl29=$conv28<<6;var $28=$j;var $idxprom30=$28<<16>>16;var $29=$ietf_output_ptr_addr;var $arrayidx31=$29+$idxprom30|0;var $30=HEAPU8[$arrayidx31];var $conv32=$30&255;var $or=$conv32|$shl29;var $conv33=$or&255;HEAP8[$arrayidx31]=$conv33;var $31=$i;var $inc34=$31+1&65535;$i=$inc34;var $idxprom35=$31<<16>>16;var $32=$frame_type_3gpp_addr;var $33=$reorderBits_ptr;var $arrayidx36=$33+($32<<2)|0;var $34=HEAP32[$arrayidx36>>2];var $arrayidx37=$34+($idxprom35<<1)|0;var $35=HEAP16[$arrayidx37>>1];var $idxprom38=$35<<16>>16;var $36=$ets_input_ptr_addr;var $arrayidx39=$36+($idxprom38<<1)|0;var $37=HEAP16[$arrayidx39>>1];var $conv40=$37&255;var $conv41=$conv40&255;var $shl42=$conv41<<5;var $38=$j;var $idxprom43=$38<<16>>16;var $39=$ietf_output_ptr_addr;var $arrayidx44=$39+$idxprom43|0;var $40=HEAPU8[$arrayidx44];var $conv45=$40&255;var $or46=$conv45|$shl42;var $conv47=$or46&255;HEAP8[$arrayidx44]=$conv47;var $41=$i;var $inc48=$41+1&65535;$i=$inc48;var $idxprom49=$41<<16>>16;var $42=$frame_type_3gpp_addr;var $43=$reorderBits_ptr;var $arrayidx50=$43+($42<<2)|0;var $44=HEAP32[$arrayidx50>>2];var $arrayidx51=$44+($idxprom49<<1)|0;var $45=HEAP16[$arrayidx51>>1];var $idxprom52=$45<<16>>16;var $46=$ets_input_ptr_addr;var $arrayidx53=$46+($idxprom52<<1)|0;var $47=HEAP16[$arrayidx53>>1];var $conv54=$47&255;var $conv55=$conv54&255;var $shl56=$conv55<<4;var $48=$j;var $idxprom57=$48<<16>>16;var $49=$ietf_output_ptr_addr;var $arrayidx58=$49+$idxprom57|0;var $50=HEAPU8[$arrayidx58];var $conv59=$50&255;var $or60=$conv59|$shl56;var $conv61=$or60&255;HEAP8[$arrayidx58]=$conv61;var $51=$i;var $inc62=$51+1&65535;$i=$inc62;var $idxprom63=$51<<16>>16;var $52=$frame_type_3gpp_addr;var $53=$reorderBits_ptr;var $arrayidx64=$53+($52<<2)|0;var $54=HEAP32[$arrayidx64>>2];var $arrayidx65=$54+($idxprom63<<1)|0;var $55=HEAP16[$arrayidx65>>1];var $idxprom66=$55<<16>>16;var $56=$ets_input_ptr_addr;var $arrayidx67=$56+($idxprom66<<1)|0;var $57=HEAP16[$arrayidx67>>1];var $conv68=$57&255;var $conv69=$conv68&255;var $shl70=$conv69<<3;var $58=$j;var $idxprom71=$58<<16>>16;var $59=$ietf_output_ptr_addr;var $arrayidx72=$59+$idxprom71|0;var $60=HEAPU8[$arrayidx72];var $conv73=$60&255;var $or74=$conv73|$shl70;var $conv75=$or74&255;HEAP8[$arrayidx72]=$conv75;var $61=$i;var $inc76=$61+1&65535;$i=$inc76;var $idxprom77=$61<<16>>16;var $62=$frame_type_3gpp_addr;var $63=$reorderBits_ptr;var $arrayidx78=$63+($62<<2)|0;var $64=HEAP32[$arrayidx78>>2];var $arrayidx79=$64+($idxprom77<<1)|0;var $65=HEAP16[$arrayidx79>>1];var $idxprom80=$65<<16>>16;var $66=$ets_input_ptr_addr;var $arrayidx81=$66+($idxprom80<<1)|0;var $67=HEAP16[$arrayidx81>>1];var $conv82=$67&255;var $conv83=$conv82&255;var $shl84=$conv83<<2;var $68=$j;var $idxprom85=$68<<16>>16;var $69=$ietf_output_ptr_addr;var $arrayidx86=$69+$idxprom85|0;var $70=HEAPU8[$arrayidx86];var $conv87=$70&255;var $or88=$conv87|$shl84;var $conv89=$or88&255;HEAP8[$arrayidx86]=$conv89;var $71=$i;var $inc90=$71+1&65535;$i=$inc90;var $idxprom91=$71<<16>>16;var $72=$frame_type_3gpp_addr;var $73=$reorderBits_ptr;var $arrayidx92=$73+($72<<2)|0;var $74=HEAP32[$arrayidx92>>2];var $arrayidx93=$74+($idxprom91<<1)|0;var $75=HEAP16[$arrayidx93>>1];var $idxprom94=$75<<16>>16;var $76=$ets_input_ptr_addr;var $arrayidx95=$76+($idxprom94<<1)|0;var $77=HEAP16[$arrayidx95>>1];var $conv96=$77&255;var $conv97=$conv96&255;var $shl98=$conv97<<1;var $78=$j;var $idxprom99=$78<<16>>16;var $79=$ietf_output_ptr_addr;var $arrayidx100=$79+$idxprom99|0;var $80=HEAPU8[$arrayidx100];var $conv101=$80&255;var $or102=$conv101|$shl98;var $conv103=$or102&255;HEAP8[$arrayidx100]=$conv103;var $81=$i;var $inc104=$81+1&65535;$i=$inc104;var $idxprom105=$81<<16>>16;var $82=$frame_type_3gpp_addr;var $83=$reorderBits_ptr;var $arrayidx106=$83+($82<<2)|0;var $84=HEAP32[$arrayidx106>>2];var $arrayidx107=$84+($idxprom105<<1)|0;var $85=HEAP16[$arrayidx107>>1];var $idxprom108=$85<<16>>16;var $86=$ets_input_ptr_addr;var $arrayidx109=$86+($idxprom108<<1)|0;var $87=HEAP16[$arrayidx109>>1];var $conv110=$87&255;var $conv111=$conv110&255;var $88=$j;var $inc112=$88+1&65535;$j=$inc112;var $idxprom113=$88<<16>>16;var $89=$ietf_output_ptr_addr;var $arrayidx114=$89+$idxprom113|0;var $90=HEAPU8[$arrayidx114];var $conv115=$90&255;var $or116=$conv115|$conv111;var $conv117=$or116&255;HEAP8[$arrayidx114]=$conv117;__label__=2;break;case 4:var $91=$frame_type_3gpp_addr;var $92=$numOfBits_ptr;var $arrayidx118=$92+($91<<1)|0;var $93=HEAP16[$arrayidx118>>1];var $conv119=$93<<16>>16;var $94=$frame_type_3gpp_addr;var $95=$numOfBits_ptr;var $arrayidx120=$95+($94<<1)|0;var $96=HEAP16[$arrayidx120>>1];var $conv121=$96<<16>>16;var $and=$conv121&65528;var $sub122=$conv119-$and|0;var $conv123=$sub122&65535;$bits_left=$conv123;var $97=$j;var $idxprom124=$97<<16>>16;var $98=$ietf_output_ptr_addr;var $arrayidx125=$98+$idxprom124|0;HEAP8[$arrayidx125]=0;$k=0;__label__=5;break;case 5:var $99=$k;var $conv127=$99<<16>>16;var $100=$bits_left;var $conv128=$100<<16>>16;var $cmp129=($conv127|0)<($conv128|0);if($cmp129){__label__=6;break}else{__label__=8;break}case 6:var $101=$i;var $inc132=$101+1&65535;$i=$inc132;var $idxprom133=$101<<16>>16;var $102=$frame_type_3gpp_addr;var $103=$reorderBits_ptr;var $arrayidx134=$103+($102<<2)|0;var $104=HEAP32[$arrayidx134>>2];var $arrayidx135=$104+($idxprom133<<1)|0;var $105=HEAP16[$arrayidx135>>1];var $idxprom136=$105<<16>>16;var $106=$ets_input_ptr_addr;var $arrayidx137=$106+($idxprom136<<1)|0;var $107=HEAP16[$arrayidx137>>1];var $conv138=$107&255;var $conv139=$conv138&255;var $108=$k;var $conv140=$108<<16>>16;var $sub141=7-$conv140|0;var $shl142=$conv139<<$sub141;var $109=$j;var $idxprom143=$109<<16>>16;var $110=$ietf_output_ptr_addr;var $arrayidx144=$110+$idxprom143|0;var $111=HEAPU8[$arrayidx144];var $conv145=$111&255;var $or146=$conv145|$shl142;var $conv147=$or146&255;HEAP8[$arrayidx144]=$conv147;__label__=7;break;case 7:var $112=$k;var $inc148=$112+1&65535;$k=$inc148;__label__=5;break;case 8:__label__=18;break;case 9:var $113=$ets_input_ptr_addr;var $arrayidx150=$113|0;$ptr_temp=$arrayidx150;var $114=$frame_type_3gpp_addr;var $115=$numOfBits_ptr;var $arrayidx151=$115+($114<<1)|0;var $116=HEAP16[$arrayidx151>>1];var $conv152=$116<<16>>16;var $sub153=$conv152-7|0;var $conv154=$sub153&65535;$i=$conv154;__label__=10;break;case 10:var $117=$i;var $conv156=$117<<16>>16;var $cmp157=($conv156|0)>0;if($cmp157){__label__=11;break}else{__label__=13;break}case 11:var $118=$ptr_temp;var $incdec_ptr=$118+2|0;$ptr_temp=$incdec_ptr;var $119=HEAP16[$118>>1];var $conv160=$119&255;var $conv161=$conv160&255;var $shl162=$conv161<<7;var $conv163=$shl162&255;$accum=$conv163;var $120=$ptr_temp;var $incdec_ptr164=$120+2|0;$ptr_temp=$incdec_ptr164;var $121=HEAP16[$120>>1];var $conv165=$121&255;var $conv166=$conv165&255;var $shl167=$conv166<<6;var $122=$accum;var $conv168=$122&255;var $or169=$conv168|$shl167;var $conv170=$or169&255;$accum=$conv170;var $123=$ptr_temp;var $incdec_ptr171=$123+2|0;$ptr_temp=$incdec_ptr171;var $124=HEAP16[$123>>1];var $conv172=$124&255;var $conv173=$conv172&255;var $shl174=$conv173<<5;var $125=$accum;var $conv175=$125&255;var $or176=$conv175|$shl174;var $conv177=$or176&255;$accum=$conv177;var $126=$ptr_temp;var $incdec_ptr178=$126+2|0;$ptr_temp=$incdec_ptr178;var $127=HEAP16[$126>>1];var $conv179=$127&255;var $conv180=$conv179&255;var $shl181=$conv180<<4;var $128=$accum;var $conv182=$128&255;var $or183=$conv182|$shl181;var $conv184=$or183&255;$accum=$conv184;var $129=$ptr_temp;var $incdec_ptr185=$129+2|0;$ptr_temp=$incdec_ptr185;var $130=HEAP16[$129>>1];var $conv186=$130&255;var $conv187=$conv186&255;var $shl188=$conv187<<3;var $131=$accum;var $conv189=$131&255;var $or190=$conv189|$shl188;var $conv191=$or190&255;$accum=$conv191;var $132=$ptr_temp;var $incdec_ptr192=$132+2|0;$ptr_temp=$incdec_ptr192;var $133=HEAP16[$132>>1];var $conv193=$133&255;var $conv194=$conv193&255;var $shl195=$conv194<<2;var $134=$accum;var $conv196=$134&255;var $or197=$conv196|$shl195;var $conv198=$or197&255;$accum=$conv198;var $135=$ptr_temp;var $incdec_ptr199=$135+2|0;$ptr_temp=$incdec_ptr199;var $136=HEAP16[$135>>1];var $conv200=$136&255;var $conv201=$conv200&255;var $shl202=$conv201<<1;var $137=$accum;var $conv203=$137&255;var $or204=$conv203|$shl202;var $conv205=$or204&255;$accum=$conv205;var $138=$ptr_temp;var $incdec_ptr206=$138+2|0;$ptr_temp=$incdec_ptr206;var $139=HEAP16[$138>>1];var $conv207=$139&255;var $conv208=$conv207&255;var $140=$accum;var $conv209=$140&255;var $or210=$conv209|$conv208;var $conv211=$or210&255;$accum=$conv211;var $141=$accum;var $142=$j;var $inc212=$142+1&65535;$j=$inc212;var $idxprom213=$142<<16>>16;var $143=$ietf_output_ptr_addr;var $arrayidx214=$143+$idxprom213|0;HEAP8[$arrayidx214]=$141;__label__=12;break;case 12:var $144=$i;var $conv216=$144<<16>>16;var $sub217=$conv216-8|0;var $conv218=$sub217&65535;$i=$conv218;__label__=10;break;case 13:var $145=$frame_type_3gpp_addr;var $146=$numOfBits_ptr;var $arrayidx220=$146+($145<<1)|0;var $147=HEAP16[$arrayidx220>>1];var $conv221=$147<<16>>16;var $148=$frame_type_3gpp_addr;var $149=$numOfBits_ptr;var $arrayidx222=$149+($148<<1)|0;var $150=HEAP16[$arrayidx222>>1];var $conv223=$150<<16>>16;var $and224=$conv223&65528;var $sub225=$conv221-$and224|0;var $conv226=$sub225&65535;$bits_left=$conv226;var $151=$j;var $idxprom227=$151<<16>>16;var $152=$ietf_output_ptr_addr;var $arrayidx228=$152+$idxprom227|0;HEAP8[$arrayidx228]=0;$i=0;__label__=14;break;case 14:var $153=$i;var $conv230=$153<<16>>16;var $154=$bits_left;var $conv231=$154<<16>>16;var $cmp232=($conv230|0)<($conv231|0);if($cmp232){__label__=15;break}else{__label__=17;break}case 15:var $155=$ptr_temp;var $incdec_ptr235=$155+2|0;$ptr_temp=$incdec_ptr235;var $156=HEAP16[$155>>1];var $conv236=$156<<16>>16;var $157=$i;var $conv237=$157<<16>>16;var $sub238=7-$conv237|0;var $shl239=$conv236<<$sub238;var $158=$j;var $idxprom240=$158<<16>>16;var $159=$ietf_output_ptr_addr;var $arrayidx241=$159+$idxprom240|0;var $160=HEAPU8[$arrayidx241];var $conv242=$160&255;var $or243=$conv242|$shl239;var $conv244=$or243&255;HEAP8[$arrayidx241]=$conv244;__label__=16;break;case 16:var $161=$i;var $inc246=$161+1&65535;$i=$inc246;__label__=14;break;case 17:__label__=18;break;case 18:;return;default:assert(0,"bad label: "+__label__)}}_ets_to_ietf["X"]=1;function _Ex_ctrl($excitation,$excEnergy,$exEnergyHist,$voicedHangover,$prevBFI,$carefulFlag,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $excitation_addr;var $excEnergy_addr;var $exEnergyHist_addr;var $voicedHangover_addr;var $prevBFI_addr;var $carefulFlag_addr;var $pOverflow_addr;var $i;var $exp;var $testEnergy;var $scaleFactor;var $avgEnergy;var $prevEnergy;var $t0;$excitation_addr=$excitation;$excEnergy_addr=$excEnergy;$exEnergyHist_addr=$exEnergyHist;$voicedHangover_addr=$voicedHangover;$prevBFI_addr=$prevBFI;$carefulFlag_addr=$carefulFlag;$pOverflow_addr=$pOverflow;var $0=$exEnergyHist_addr;var $call=_gmed_n($0,9);$avgEnergy=$call;var $1=$exEnergyHist_addr;var $arrayidx=$1+14|0;var $2=HEAP16[$arrayidx>>1];var $conv=$2<<16>>16;var $3=$exEnergyHist_addr;var $arrayidx1=$3+16|0;var $4=HEAP16[$arrayidx1>>1];var $conv2=$4<<16>>16;var $add=$conv+$conv2|0;var $shr=$add>>1;var $conv3=$shr&65535;$prevEnergy=$conv3;var $5=$exEnergyHist_addr;var $arrayidx4=$5+16|0;var $6=HEAP16[$arrayidx4>>1];var $conv5=$6<<16>>16;var $7=$prevEnergy;var $conv6=$7<<16>>16;var $cmp=($conv5|0)<($conv6|0);if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $8=$exEnergyHist_addr;var $arrayidx8=$8+16|0;var $9=HEAP16[$arrayidx8>>1];$prevEnergy=$9;__label__=2;break;case 2:var $10=$excEnergy_addr;var $conv9=$10<<16>>16;var $11=$avgEnergy;var $conv10=$11<<16>>16;var $cmp11=($conv9|0)<($conv10|0);if($cmp11){__label__=3;break}else{__label__=19;break}case 3:var $12=$excEnergy_addr;var $conv13=$12<<16>>16;var $cmp14=($conv13|0)>5;if($cmp14){__label__=4;break}else{__label__=19;break}case 4:var $13=$prevEnergy;var $14=$pOverflow_addr;var $call17=_shl159($13,2,$14);$testEnergy=$call17;var $15=$voicedHangover_addr;var $conv18=$15<<16>>16;var $cmp19=($conv18|0)<7;if($cmp19){__label__=6;break}else{__label__=5;break}case 5:var $16=$prevBFI_addr;var $conv21=$16<<16>>16;var $cmp22=($conv21|0)!=0;if($cmp22){__label__=6;break}else{__label__=7;break}case 6:var $17=$testEnergy;var $18=$prevEnergy;var $19=$pOverflow_addr;var $call25=_sub($17,$18,$19);$testEnergy=$call25;__label__=7;break;case 7:var $20=$avgEnergy;var $conv27=$20<<16>>16;var $21=$testEnergy;var $conv28=$21<<16>>16;var $cmp29=($conv27|0)>($conv28|0);if($cmp29){__label__=8;break}else{__label__=9;break}case 8:var $22=$testEnergy;$avgEnergy=$22;__label__=9;break;case 9:var $23=$excEnergy_addr;var $call33=_norm_s($23);$exp=$call33;var $24=$excEnergy_addr;var $25=$exp;var $26=$pOverflow_addr;var $call34=_shl159($24,$25,$26);$excEnergy_addr=$call34;var $27=$excEnergy_addr;var $call35=_div_s(16383,$27);$excEnergy_addr=$call35;var $28=$avgEnergy;var $29=$excEnergy_addr;var $30=$pOverflow_addr;var $call36=_L_mult160($28,$29,$30);$t0=$call36;var $31=$t0;var $32=$exp;var $33=$pOverflow_addr;var $call37=_sub(20,$32,$33);var $34=$pOverflow_addr;var $call38=_L_shr161($31,$call37,$34);$t0=$call38;var $35=$t0;var $cmp39=($35|0)>32767;if($cmp39){__label__=10;break}else{__label__=11;break}case 10:$t0=32767;__label__=11;break;case 11:var $36=$t0;var $conv43=$36&65535;$scaleFactor=$conv43;var $37=$carefulFlag_addr;var $conv44=$37<<16>>16;var $cmp45=($conv44|0)!=0;if($cmp45){__label__=12;break}else{__label__=14;break}case 12:var $38=$scaleFactor;var $conv48=$38<<16>>16;var $cmp49=($conv48|0)>3072;if($cmp49){__label__=13;break}else{__label__=14;break}case 13:$scaleFactor=3072;__label__=14;break;case 14:$i=0;__label__=15;break;case 15:var $39=$i;var $conv53=$39<<16>>16;var $cmp54=($conv53|0)<40;if($cmp54){__label__=16;break}else{__label__=18;break}case 16:var $40=$scaleFactor;var $41=$i;var $idxprom=$41<<16>>16;var $42=$excitation_addr;var $arrayidx56=$42+($idxprom<<1)|0;var $43=HEAP16[$arrayidx56>>1];var $44=$pOverflow_addr;var $call57=_L_mult160($40,$43,$44);$t0=$call57;var $45=$t0;var $46=$pOverflow_addr;var $call58=_L_shr161($45,11,$46);$t0=$call58;var $47=$t0;var $conv59=$47&65535;var $48=$i;var $idxprom60=$48<<16>>16;var $49=$excitation_addr;var $arrayidx61=$49+($idxprom60<<1)|0;HEAP16[$arrayidx61>>1]=$conv59;__label__=17;break;case 17:var $50=$i;var $inc=$50+1&65535;$i=$inc;__label__=15;break;case 18:__label__=19;break;case 19:;return 0;default:assert(0,"bad label: "+__label__)}}_Ex_ctrl["X"]=1;function _shl162($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl162["X"]=1;function _mult163($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _gain_adapt_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $i;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$st_addr;var $onset=$1|0;HEAP16[$onset>>1]=0;var $2=$st_addr;var $prev_alpha=$2+2|0;HEAP16[$prev_alpha>>1]=0;var $3=$st_addr;var $prev_gc=$3+4|0;HEAP16[$prev_gc>>1]=0;$i=0;__label__=3;break;case 3:var $4=$i;var $conv=$4<<16>>16;var $cmp1=($conv|0)<5;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $5=$i;var $idxprom=$5<<16>>16;var $6=$st_addr;var $ltpg_mem=$6+6|0;var $arrayidx=$ltpg_mem+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=5;break;case 5:var $7=$i;var $inc=$7+1&65535;$i=$inc;__label__=3;break;case 6:$retval=0;__label__=7;break;case 7:var $8=$retval;return $8;default:assert(0,"bad label: "+__label__)}}function _gain_adapt_init($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $s;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$st_addr;HEAP32[$1>>2]=0;var $call=_malloc(16);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_gain_adapt_reset($3);var $4=$s;var $5=$st_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _gain_adapt_exit($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$st_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$st_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$st_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _gain_adapt($st,$ltpg,$gain_cod,$alpha,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $ltpg_addr;var $gain_cod_addr;var $alpha_addr;var $pOverflow_addr;var $adapt;var $result;var $filt;var $tmp;var $i;$st_addr=$st;$ltpg_addr=$ltpg;$gain_cod_addr=$gain_cod;$alpha_addr=$alpha;$pOverflow_addr=$pOverflow;var $0=$ltpg_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)<=2721;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$adapt=0;__label__=6;break;case 2:var $1=$ltpg_addr;var $conv3=$1<<16>>16;var $cmp4=($conv3|0)<=5443;if($cmp4){__label__=3;break}else{__label__=4;break}case 3:$adapt=1;__label__=5;break;case 4:$adapt=2;__label__=5;break;case 5:__label__=6;break;case 6:var $2=$gain_cod_addr;var $3=$pOverflow_addr;var $call=_shr_r($2,1,$3);$tmp=$call;var $4=$tmp;var $conv9=$4<<16>>16;var $5=$st_addr;var $prev_gc=$5+4|0;var $6=HEAP16[$prev_gc>>1];var $conv10=$6<<16>>16;var $cmp11=($conv9|0)>($conv10|0);if($cmp11){__label__=7;break}else{__label__=9;break}case 7:var $7=$gain_cod_addr;var $conv13=$7<<16>>16;var $cmp14=($conv13|0)>200;if($cmp14){__label__=8;break}else{__label__=9;break}case 8:var $8=$st_addr;var $onset=$8|0;HEAP16[$onset>>1]=8;__label__=12;break;case 9:var $9=$st_addr;var $onset18=$9|0;var $10=HEAP16[$onset18>>1];var $conv19=$10<<16>>16;var $cmp20=($conv19|0)!=0;if($cmp20){__label__=10;break}else{__label__=11;break}case 10:var $11=$st_addr;var $onset23=$11|0;var $12=HEAP16[$onset23>>1];var $dec=$12-1&65535;HEAP16[$onset23>>1]=$dec;__label__=11;break;case 11:__label__=12;break;case 12:var $13=$st_addr;var $onset26=$13|0;var $14=HEAP16[$onset26>>1];var $conv27=$14<<16>>16;var $cmp28=($conv27|0)!=0;if($cmp28){__label__=13;break}else{__label__=15;break}case 13:var $15=$adapt;var $conv31=$15<<16>>16;var $cmp32=($conv31|0)<2;if($cmp32){__label__=14;break}else{__label__=15;break}case 14:var $16=$adapt;var $conv35=$16<<16>>16;var $add=$conv35+1|0;var $conv36=$add&65535;$adapt=$conv36;__label__=15;break;case 15:var $17=$ltpg_addr;var $18=$st_addr;var $ltpg_mem=$18+6|0;var $arrayidx=$ltpg_mem|0;HEAP16[$arrayidx>>1]=$17;var $19=$st_addr;var $ltpg_mem38=$19+6|0;var $arraydecay=$ltpg_mem38|0;var $call39=_gmed_n($arraydecay,5);$filt=$call39;var $20=$adapt;var $conv40=$20<<16>>16;var $cmp41=($conv40|0)==0;if($cmp41){__label__=16;break}else{__label__=23;break}case 16:var $21=$filt;var $conv44=$21<<16>>16;var $cmp45=($conv44|0)>5443;if($cmp45){__label__=17;break}else{__label__=18;break}case 17:$result=0;__label__=22;break;case 18:var $22=$filt;var $conv49=$22<<16>>16;var $cmp50=($conv49|0)<0;if($cmp50){__label__=19;break}else{__label__=20;break}case 19:$result=16384;__label__=21;break;case 20:var $23=$filt;var $24=$pOverflow_addr;var $call54=_shl162($23,2,$24);$filt=$call54;var $25=$filt;var $26=$pOverflow_addr;var $call55=_mult163(24660,$25,$26);$result=$call55;var $27=$result;var $conv56=$27<<16>>16;var $sub=16384-$conv56|0;var $conv57=$sub&65535;$result=$conv57;__label__=21;break;case 21:__label__=22;break;case 22:__label__=24;break;case 23:$result=0;__label__=24;break;case 24:var $28=$st_addr;var $prev_alpha=$28+2|0;var $29=HEAP16[$prev_alpha>>1];var $conv62=$29<<16>>16;var $cmp63=($conv62|0)==0;if($cmp63){__label__=25;break}else{__label__=26;break}case 25:var $30=$result;var $31=$pOverflow_addr;var $call66=_shr($30,1,$31);$result=$call66;__label__=26;break;case 26:var $32=$result;var $33=$alpha_addr;HEAP16[$33>>1]=$32;var $34=$result;var $35=$st_addr;var $prev_alpha68=$35+2|0;HEAP16[$prev_alpha68>>1]=$34;var $36=$gain_cod_addr;var $37=$st_addr;var $prev_gc69=$37+4|0;HEAP16[$prev_gc69>>1]=$36;$i=4;__label__=27;break;case 27:var $38=$i;var $conv70=$38<<16>>16;var $cmp71=($conv70|0)>0;if($cmp71){__label__=28;break}else{__label__=30;break}case 28:var $39=$i;var $conv73=$39<<16>>16;var $sub74=$conv73-1|0;var $40=$st_addr;var $ltpg_mem75=$40+6|0;var $arrayidx76=$ltpg_mem75+($sub74<<1)|0;var $41=HEAP16[$arrayidx76>>1];var $42=$i;var $idxprom=$42<<16>>16;var $43=$st_addr;var $ltpg_mem77=$43+6|0;var $arrayidx78=$ltpg_mem77+($idxprom<<1)|0;HEAP16[$arrayidx78>>1]=$41;__label__=29;break;case 29:var $44=$i;var $dec79=$44-1&65535;$i=$dec79;__label__=27;break;case 30:;return;default:assert(0,"bad label: "+__label__)}}_gain_adapt["X"]=1;function _gainQuant_init($state){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s=__stackBase__;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=9;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(68);var $2=$call;HEAP32[$s>>2]=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=9;break;case 4:var $3=HEAP32[$s>>2];var $gain_idx_ptr=$3+28|0;HEAP32[$gain_idx_ptr>>2]=0;var $4=HEAP32[$s>>2];var $adaptSt=$4+64|0;HEAP32[$adaptSt>>2]=0;var $5=HEAP32[$s>>2];var $gc_predSt=$5+32|0;var $call4=_gc_pred_reset($gc_predSt);var $conv=$call4<<16>>16;var $tobool=($conv|0)!=0;if($tobool){__label__=7;break}else{__label__=5;break}case 5:var $6=HEAP32[$s>>2];var $gc_predUnqSt=$6+48|0;var $call5=_gc_pred_reset($gc_predUnqSt);var $conv6=$call5<<16>>16;var $tobool7=($conv6|0)!=0;if($tobool7){__label__=7;break}else{__label__=6;break}case 6:var $7=HEAP32[$s>>2];var $adaptSt9=$7+64|0;var $call10=_gain_adapt_init($adaptSt9);var $conv11=$call10<<16>>16;var $tobool12=($conv11|0)!=0;if($tobool12){__label__=7;break}else{__label__=8;break}case 7:_gainQuant_exit($s);$retval=-1;__label__=9;break;case 8:var $8=HEAP32[$s>>2];var $call15=_gainQuant_reset($8);var $9=HEAP32[$s>>2];var $10=$state_addr;HEAP32[$10>>2]=$9;$retval=0;__label__=9;break;case 9:var $11=$retval;STACKTOP=__stackBase__;return $11;default:assert(0,"bad label: "+__label__)}}_gainQuant_init["X"]=1;function _gainQuant_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $adaptSt=$4+64|0;_gain_adapt_exit($adaptSt);var $5=$state_addr;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$state_addr;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _gainQuant_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $sf0_exp_gcode0=$1|0;HEAP16[$sf0_exp_gcode0>>1]=0;var $2=$state_addr;var $sf0_frac_gcode0=$2+2|0;HEAP16[$sf0_frac_gcode0>>1]=0;var $3=$state_addr;var $sf0_exp_target_en=$3+4|0;HEAP16[$sf0_exp_target_en>>1]=0;var $4=$state_addr;var $sf0_frac_target_en=$4+6|0;HEAP16[$sf0_frac_target_en>>1]=0;var $5=$state_addr;var $sf0_exp_coeff=$5+8|0;var $arraydecay=$sf0_exp_coeff|0;var $6=$arraydecay;for(var $$dest=$6,$$stop=$$dest+10;$$dest<$$stop;$$dest++){HEAP8[$$dest]=0};var $7=$state_addr;var $sf0_frac_coeff=$7+18|0;var $arraydecay1=$sf0_frac_coeff|0;var $8=$arraydecay1;for(var $$dest=$8,$$stop=$$dest+10;$$dest<$$stop;$$dest++){HEAP8[$$dest]=0};var $9=$state_addr;var $gain_idx_ptr=$9+28|0;HEAP32[$gain_idx_ptr>>2]=0;var $10=$state_addr;var $gc_predSt=$10+32|0;var $call=_gc_pred_reset($gc_predSt);var $11=$state_addr;var $gc_predUnqSt=$11+48|0;var $call2=_gc_pred_reset($gc_predUnqSt);var $12=$state_addr;var $adaptSt=$12+64|0;var $13=HEAP32[$adaptSt>>2];var $call3=_gain_adapt_reset($13);$retval=0;__label__=3;break;case 3:var $14=$retval;return $14;default:assert(0,"bad label: "+__label__)}}function _gainQuant($st,$mode,$res,$exc,$code,$xn,$xn2,$y1,$Y2,$g_coeff,$even_subframe,$gp_limit,$sf0_gain_pit,$sf0_gain_cod,$gain_pit,$gain_cod,$anap,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=56;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $res_addr;var $exc_addr;var $code_addr;var $xn_addr;var $xn2_addr;var $y1_addr;var $Y2_addr;var $g_coeff_addr;var $even_subframe_addr;var $gp_limit_addr;var $sf0_gain_pit_addr;var $sf0_gain_cod_addr;var $gain_pit_addr;var $gain_cod_addr;var $anap_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $exp_gcode0=__stackBase__;var $frac_gcode0=__stackBase__+4;var $qua_ener_MR122=__stackBase__+8;var $qua_ener=__stackBase__+12;var $frac_coeff=__stackBase__+16;var $exp_coeff=__stackBase__+28;var $exp_en=__stackBase__+40;var $frac_en=__stackBase__+44;var $cod_gain_exp=__stackBase__+48;var $cod_gain_frac=__stackBase__+52;var $temp;$st_addr=$st;$mode_addr=$mode;$res_addr=$res;$exc_addr=$exc;$code_addr=$code;$xn_addr=$xn;$xn2_addr=$xn2;$y1_addr=$y1;$Y2_addr=$Y2;$g_coeff_addr=$g_coeff;$even_subframe_addr=$even_subframe;$gp_limit_addr=$gp_limit;$sf0_gain_pit_addr=$sf0_gain_pit;$sf0_gain_cod_addr=$sf0_gain_cod;$gain_pit_addr=$gain_pit;$gain_cod_addr=$gain_cod;$anap_addr=$anap;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$even_subframe_addr;var $conv=$1<<16>>16;var $cmp1=($conv|0)!=0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $2=$anap_addr;var $3=HEAP32[$2>>2];var $incdec_ptr=$3+2|0;HEAP32[$2>>2]=$incdec_ptr;var $4=$st_addr;var $gain_idx_ptr=$4+28|0;HEAP32[$gain_idx_ptr>>2]=$3;var $5=$st_addr;var $gc_predUnqSt=$5+48|0;var $past_qua_en=$gc_predUnqSt|0;var $arraydecay=$past_qua_en|0;var $6=$arraydecay;var $7=$st_addr;var $gc_predSt=$7+32|0;var $past_qua_en4=$gc_predSt|0;var $arraydecay5=$past_qua_en4|0;var $8=$arraydecay5;assert(8%1===0,"memcpy given "+8+" bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP8[$6]=HEAP8[$8];HEAP8[$6+1]=HEAP8[$8+1];HEAP8[$6+2]=HEAP8[$8+2];HEAP8[$6+3]=HEAP8[$8+3];HEAP8[$6+4]=HEAP8[$8+4];HEAP8[$6+5]=HEAP8[$8+5];HEAP8[$6+6]=HEAP8[$8+6];HEAP8[$6+7]=HEAP8[$8+7];var $9=$st_addr;var $gc_predUnqSt6=$9+48|0;var $past_qua_en_MR122=$gc_predUnqSt6+8|0;var $arraydecay7=$past_qua_en_MR122|0;var $10=$arraydecay7;var $11=$st_addr;var $gc_predSt8=$11+32|0;var $past_qua_en_MR1229=$gc_predSt8+8|0;var $arraydecay10=$past_qua_en_MR1229|0;var $12=$arraydecay10;assert(8%1===0,"memcpy given "+8+" bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP8[$10]=HEAP8[$12];HEAP8[$10+1]=HEAP8[$12+1];HEAP8[$10+2]=HEAP8[$12+2];HEAP8[$10+3]=HEAP8[$12+3];HEAP8[$10+4]=HEAP8[$12+4];HEAP8[$10+5]=HEAP8[$12+5];HEAP8[$10+6]=HEAP8[$12+6];HEAP8[$10+7]=HEAP8[$12+7];var $13=$st_addr;var $gc_predUnqSt11=$13+48|0;var $14=$mode_addr;var $15=$code_addr;var $16=$st_addr;var $sf0_exp_gcode0=$16|0;var $17=$st_addr;var $sf0_frac_gcode0=$17+2|0;var $18=$pOverflow_addr;_gc_pred($gc_predUnqSt11,$14,$15,$sf0_exp_gcode0,$sf0_frac_gcode0,$exp_en,$frac_en,$18);var $19=$mode_addr;var $20=$xn_addr;var $21=$xn2_addr;var $22=$y1_addr;var $23=$Y2_addr;var $24=$g_coeff_addr;var $25=$st_addr;var $sf0_frac_coeff=$25+18|0;var $arraydecay12=$sf0_frac_coeff|0;var $26=$st_addr;var $sf0_exp_coeff=$26+8|0;var $arraydecay13=$sf0_exp_coeff|0;var $27=$pOverflow_addr;_calc_filt_energies($19,$20,$21,$22,$23,$24,$arraydecay12,$arraydecay13,$cod_gain_frac,$cod_gain_exp,$27);var $28=HEAP16[$cod_gain_exp>>1];var $conv14=$28<<16>>16;var $add=$conv14+1|0;var $conv15=$add&65535;$temp=$conv15;var $29=HEAP16[$cod_gain_frac>>1];var $30=$temp;var $31=$pOverflow_addr;var $call=_shl172($29,$30,$31);var $32=$gain_cod_addr;HEAP16[$32>>1]=$call;var $33=$xn_addr;var $34=$st_addr;var $sf0_exp_target_en=$34+4|0;var $35=$st_addr;var $sf0_frac_target_en=$35+6|0;var $36=$pOverflow_addr;_calc_target_energy($33,$sf0_exp_target_en,$sf0_frac_target_en,$36);var $37=$st_addr;var $gc_predUnqSt16=$37+48|0;var $38=$st_addr;var $sf0_exp_gcode017=$38|0;var $39=HEAP16[$sf0_exp_gcode017>>1];var $40=$st_addr;var $sf0_frac_gcode018=$40+2|0;var $41=HEAP16[$sf0_frac_gcode018>>1];var $42=HEAP16[$cod_gain_exp>>1];var $43=HEAP16[$cod_gain_frac>>1];var $44=$pOverflow_addr;_MR475_update_unq_pred($gc_predUnqSt16,$39,$41,$42,$43,$44);__label__=4;break;case 3:var $45=$st_addr;var $gc_predUnqSt19=$45+48|0;var $46=$mode_addr;var $47=$code_addr;var $48=$pOverflow_addr;_gc_pred($gc_predUnqSt19,$46,$47,$exp_gcode0,$frac_gcode0,$exp_en,$frac_en,$48);var $49=$mode_addr;var $50=$xn_addr;var $51=$xn2_addr;var $52=$y1_addr;var $53=$Y2_addr;var $54=$g_coeff_addr;var $arraydecay20=$frac_coeff|0;var $arraydecay21=$exp_coeff|0;var $55=$pOverflow_addr;_calc_filt_energies($49,$50,$51,$52,$53,$54,$arraydecay20,$arraydecay21,$cod_gain_frac,$cod_gain_exp,$55);var $56=$xn_addr;var $57=$pOverflow_addr;_calc_target_energy($56,$exp_en,$frac_en,$57);var $58=$st_addr;var $gc_predSt22=$58+32|0;var $59=$st_addr;var $sf0_exp_gcode023=$59|0;var $60=HEAP16[$sf0_exp_gcode023>>1];var $61=$st_addr;var $sf0_frac_gcode024=$61+2|0;var $62=HEAP16[$sf0_frac_gcode024>>1];var $63=$st_addr;var $sf0_exp_coeff25=$63+8|0;var $arraydecay26=$sf0_exp_coeff25|0;var $64=$st_addr;var $sf0_frac_coeff27=$64+18|0;var $arraydecay28=$sf0_frac_coeff27|0;var $65=$st_addr;var $sf0_exp_target_en29=$65+4|0;var $66=HEAP16[$sf0_exp_target_en29>>1];var $67=$st_addr;var $sf0_frac_target_en30=$67+6|0;var $68=HEAP16[$sf0_frac_target_en30>>1];var $69=$code_addr;var $70=HEAP16[$exp_gcode0>>1];var $71=HEAP16[$frac_gcode0>>1];var $arraydecay31=$exp_coeff|0;var $arraydecay32=$frac_coeff|0;var $72=HEAP16[$exp_en>>1];var $73=HEAP16[$frac_en>>1];var $74=$gp_limit_addr;var $75=$sf0_gain_pit_addr;var $76=$sf0_gain_cod_addr;var $77=$gain_pit_addr;var $78=$gain_cod_addr;var $79=$pOverflow_addr;var $call33=_MR475_gain_quant($gc_predSt22,$60,$62,$arraydecay26,$arraydecay28,$66,$68,$69,$70,$71,$arraydecay31,$arraydecay32,$72,$73,$74,$75,$76,$77,$78,$79);var $80=$st_addr;var $gain_idx_ptr34=$80+28|0;var $81=HEAP32[$gain_idx_ptr34>>2];HEAP16[$81>>1]=$call33;__label__=4;break;case 4:__label__=12;break;case 5:var $82=$st_addr;var $gc_predSt36=$82+32|0;var $83=$mode_addr;var $84=$code_addr;var $85=$pOverflow_addr;_gc_pred($gc_predSt36,$83,$84,$exp_gcode0,$frac_gcode0,$exp_en,$frac_en,$85);var $86=$mode_addr;var $cmp37=($86|0)==7;if($cmp37){__label__=6;break}else{__label__=7;break}case 6:var $87=$xn2_addr;var $88=$Y2_addr;var $89=$pOverflow_addr;var $call40=_G_code($87,$88,$89);var $90=$gain_cod_addr;HEAP16[$90>>1]=$call40;var $91=$mode_addr;var $92=HEAP16[$exp_gcode0>>1];var $93=HEAP16[$frac_gcode0>>1];var $94=$gain_cod_addr;var $95=$common_amr_tbls_addr;var $qua_gain_code_ptr=$95+68|0;var $96=HEAP32[$qua_gain_code_ptr>>2];var $97=$pOverflow_addr;var $call41=_q_gain_code($91,$92,$93,$94,$qua_ener_MR122,$qua_ener,$96,$97);var $98=$anap_addr;var $99=HEAP32[$98>>2];var $incdec_ptr42=$99+2|0;HEAP32[$98>>2]=$incdec_ptr42;HEAP16[$99>>1]=$call41;__label__=11;break;case 7:var $100=$mode_addr;var $101=$xn_addr;var $102=$xn2_addr;var $103=$y1_addr;var $104=$Y2_addr;var $105=$g_coeff_addr;var $arraydecay44=$frac_coeff|0;var $arraydecay45=$exp_coeff|0;var $106=$pOverflow_addr;_calc_filt_energies($100,$101,$102,$103,$104,$105,$arraydecay44,$arraydecay45,$cod_gain_frac,$cod_gain_exp,$106);var $107=$mode_addr;var $cmp46=($107|0)==5;if($cmp46){__label__=8;break}else{__label__=9;break}case 8:var $108=$st_addr;var $adaptSt=$108+64|0;var $109=HEAP32[$adaptSt>>2];var $110=$res_addr;var $111=$exc_addr;var $112=$code_addr;var $arraydecay49=$frac_coeff|0;var $arraydecay50=$exp_coeff|0;var $113=HEAP16[$exp_en>>1];var $114=HEAP16[$frac_en>>1];var $115=HEAP16[$exp_gcode0>>1];var $116=HEAP16[$frac_gcode0>>1];var $117=HEAP16[$cod_gain_frac>>1];var $118=HEAP16[$cod_gain_exp>>1];var $119=$gp_limit_addr;var $120=$gain_pit_addr;var $121=$gain_cod_addr;var $122=$anap_addr;var $123=$common_amr_tbls_addr;var $124=$pOverflow_addr;_MR795_gain_quant($109,$110,$111,$112,$arraydecay49,$arraydecay50,$113,$114,$115,$116,40,$117,$118,$119,$120,$121,$qua_ener_MR122,$qua_ener,$122,$123,$124);__label__=10;break;case 9:var $125=$mode_addr;var $126=HEAP16[$exp_gcode0>>1];var $127=HEAP16[$frac_gcode0>>1];var $arraydecay52=$frac_coeff|0;var $arraydecay53=$exp_coeff|0;var $128=$gp_limit_addr;var $129=$gain_pit_addr;var $130=$gain_cod_addr;var $131=$common_amr_tbls_addr;var $132=$pOverflow_addr;var $call54=_Qua_gain($125,$126,$127,$arraydecay52,$arraydecay53,$128,$129,$130,$qua_ener_MR122,$qua_ener,$131,$132);var $133=$anap_addr;var $134=HEAP32[$133>>2];var $incdec_ptr55=$134+2|0;HEAP32[$133>>2]=$incdec_ptr55;HEAP16[$134>>1]=$call54;__label__=10;break;case 10:__label__=11;break;case 11:var $135=$st_addr;var $gc_predSt58=$135+32|0;var $136=HEAP16[$qua_ener_MR122>>1];var $137=HEAP16[$qua_ener>>1];_gc_pred_update($gc_predSt58,$136,$137);__label__=12;break;case 12:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_gainQuant["X"]=1;function _shl172($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl172["X"]=1;function _amrnb_fxp_mac_16_by_16bb175($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _gc_pred_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<4;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $past_qua_en=$3|0;var $arrayidx=$past_qua_en+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=-14336;var $4=$i;var $idxprom3=$4<<16>>16;var $5=$state_addr;var $past_qua_en_MR122=$5+8|0;var $arrayidx4=$past_qua_en_MR122+($idxprom3<<1)|0;HEAP16[$arrayidx4>>1]=-2381;__label__=5;break;case 5:var $6=$i;var $inc=$6+1&65535;$i=$inc;__label__=3;break;case 6:$retval=0;__label__=7;break;case 7:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _G_code($xn2,$y2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $xn2_addr;var $y2_addr;var $pOverflow_addr;var $i;var $xy;var $yy;var $exp_xy;var $exp_yy;var $gain;var $s;var $p_xn2;var $p_y2;var $temp;var $temp2;$xn2_addr=$xn2;$y2_addr=$y2;$pOverflow_addr=$pOverflow;var $0=$xn2_addr;$p_xn2=$0;var $1=$y2_addr;$p_y2=$1;var $2=$pOverflow_addr;$s=0;$i=10;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$p_y2;var $incdec_ptr=$4+2|0;$p_y2=$incdec_ptr;var $5=HEAP16[$4>>1];var $conv2=$5<<16>>16;var $shr=$conv2>>1;$temp2=$shr;var $6=$p_xn2;var $incdec_ptr3=$6+2|0;$p_xn2=$incdec_ptr3;var $7=HEAP16[$6>>1];var $conv4=$7<<16>>16;var $8=$temp2;var $9=$s;var $call=_amrnb_fxp_mac_16_by_16bb175($conv4,$8,$9);$s=$call;var $10=$p_y2;var $incdec_ptr5=$10+2|0;$p_y2=$incdec_ptr5;var $11=HEAP16[$10>>1];var $conv6=$11<<16>>16;var $shr7=$conv6>>1;$temp2=$shr7;var $12=$p_xn2;var $incdec_ptr8=$12+2|0;$p_xn2=$incdec_ptr8;var $13=HEAP16[$12>>1];var $conv9=$13<<16>>16;var $14=$temp2;var $15=$s;var $call10=_amrnb_fxp_mac_16_by_16bb175($conv9,$14,$15);$s=$call10;var $16=$p_y2;var $incdec_ptr11=$16+2|0;$p_y2=$incdec_ptr11;var $17=HEAP16[$16>>1];var $conv12=$17<<16>>16;var $shr13=$conv12>>1;$temp2=$shr13;var $18=$p_xn2;var $incdec_ptr14=$18+2|0;$p_xn2=$incdec_ptr14;var $19=HEAP16[$18>>1];var $conv15=$19<<16>>16;var $20=$temp2;var $21=$s;var $call16=_amrnb_fxp_mac_16_by_16bb175($conv15,$20,$21);$s=$call16;var $22=$p_y2;var $incdec_ptr17=$22+2|0;$p_y2=$incdec_ptr17;var $23=HEAP16[$22>>1];var $conv18=$23<<16>>16;var $shr19=$conv18>>1;$temp2=$shr19;var $24=$p_xn2;var $incdec_ptr20=$24+2|0;$p_xn2=$incdec_ptr20;var $25=HEAP16[$24>>1];var $conv21=$25<<16>>16;var $26=$temp2;var $27=$s;var $call22=_amrnb_fxp_mac_16_by_16bb175($conv21,$26,$27);$s=$call22;__label__=3;break;case 3:var $28=$i;var $dec=$28-1&65535;$i=$dec;__label__=1;break;case 4:var $29=$s;var $shl=$29<<1;$s=$shl;var $30=$s;var $add=$30+1|0;var $call23=_norm_l($add);$exp_xy=$call23;var $31=$exp_xy;var $conv24=$31<<16>>16;var $cmp25=($conv24|0)<17;if($cmp25){__label__=5;break}else{__label__=6;break}case 5:var $32=$s;var $33=$exp_xy;var $conv27=$33<<16>>16;var $sub=17-$conv27|0;var $shr28=$32>>($sub|0);var $conv29=$shr28&65535;$xy=$conv29;__label__=7;break;case 6:var $34=$s;var $35=$exp_xy;var $conv30=$35<<16>>16;var $sub31=$conv30-17|0;var $shl32=$34<<$sub31;var $conv33=$shl32&65535;$xy=$conv33;__label__=7;break;case 7:var $36=$xy;var $conv34=$36<<16>>16;var $cmp35=($conv34|0)<=0;if($cmp35){__label__=8;break}else{__label__=9;break}case 8:$retval=0;__label__=20;break;case 9:$s=0;var $37=$y2_addr;$p_y2=$37;$i=20;__label__=10;break;case 10:var $38=$i;var $conv40=$38<<16>>16;var $cmp41=($conv40|0)!=0;if($cmp41){__label__=11;break}else{__label__=13;break}case 11:var $39=$p_y2;var $incdec_ptr44=$39+2|0;$p_y2=$incdec_ptr44;var $40=HEAP16[$39>>1];var $conv45=$40<<16>>16;var $shr46=$conv45>>1;var $conv47=$shr46&65535;$temp=$conv47;var $41=$temp;var $conv48=$41<<16>>16;var $42=$temp;var $conv49=$42<<16>>16;var $mul=$conv48*$conv49|0;var $shr50=$mul>>2;var $43=$s;var $add51=$43+$shr50|0;$s=$add51;var $44=$p_y2;var $incdec_ptr52=$44+2|0;$p_y2=$incdec_ptr52;var $45=HEAP16[$44>>1];var $conv53=$45<<16>>16;var $shr54=$conv53>>1;var $conv55=$shr54&65535;$temp=$conv55;var $46=$temp;var $conv56=$46<<16>>16;var $47=$temp;var $conv57=$47<<16>>16;var $mul58=$conv56*$conv57|0;var $shr59=$mul58>>2;var $48=$s;var $add60=$48+$shr59|0;$s=$add60;__label__=12;break;case 12:var $49=$i;var $dec62=$49-1&65535;$i=$dec62;__label__=10;break;case 13:var $50=$s;var $shl64=$50<<3;$s=$shl64;var $51=$s;var $call65=_norm_l($51);$exp_yy=$call65;var $52=$exp_yy;var $conv66=$52<<16>>16;var $cmp67=($conv66|0)<16;if($cmp67){__label__=14;break}else{__label__=15;break}case 14:var $53=$s;var $54=$exp_yy;var $conv70=$54<<16>>16;var $sub71=16-$conv70|0;var $shr72=$53>>($sub71|0);var $conv73=$shr72&65535;$yy=$conv73;__label__=16;break;case 15:var $55=$s;var $56=$exp_yy;var $conv75=$56<<16>>16;var $sub76=$conv75-16|0;var $shl77=$55<<$sub76;var $conv78=$shl77&65535;$yy=$conv78;__label__=16;break;case 16:var $57=$xy;var $58=$yy;var $call80=_div_s($57,$58);$gain=$call80;var $59=$exp_xy;var $conv81=$59<<16>>16;var $add82=$conv81+5|0;var $conv83=$add82&65535;$i=$conv83;var $60=$exp_yy;var $conv84=$60<<16>>16;var $61=$i;var $conv85=$61<<16>>16;var $sub86=$conv85-$conv84|0;var $conv87=$sub86&65535;$i=$conv87;var $62=$i;var $conv88=$62<<16>>16;var $cmp89=($conv88|0)>1;if($cmp89){__label__=17;break}else{__label__=18;break}case 17:var $63=$i;var $conv92=$63<<16>>16;var $sub93=$conv92-1|0;var $64=$gain;var $conv94=$64<<16>>16;var $shr95=$conv94>>($sub93|0);var $conv96=$shr95&65535;$gain=$conv96;__label__=19;break;case 18:var $65=$i;var $conv98=$65<<16>>16;var $sub99=1-$conv98|0;var $66=$gain;var $conv100=$66<<16>>16;var $shl101=$conv100<<$sub99;var $conv102=$shl101&65535;$gain=$conv102;__label__=19;break;case 19:var $67=$gain;$retval=$67;__label__=20;break;case 20:var $68=$retval;return $68;default:assert(0,"bad label: "+__label__)}}_G_code["X"]=1;function _gc_pred($st,$mode,$code,$exp_gcode0,$frac_gcode0,$exp_en,$frac_en,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $code_addr;var $exp_gcode0_addr;var $frac_gcode0_addr;var $exp_en_addr;var $frac_en_addr;var $pOverflow_addr;var $i;var $L_temp1;var $L_temp2;var $L_tmp;var $ener_code;var $ener;var $exp=__stackBase__;var $frac=__stackBase__+4;var $exp_code;var $gcode0;var $tmp;var $p_code;$st_addr=$st;$mode_addr=$mode;$code_addr=$code;$exp_gcode0_addr=$exp_gcode0;$frac_gcode0_addr=$frac_gcode0;$exp_en_addr=$exp_en;$frac_en_addr=$frac_en;$pOverflow_addr=$pOverflow;var $0=$code_addr;var $arrayidx=$0|0;$p_code=$arrayidx;$ener_code=0;$i=10;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$p_code;var $incdec_ptr=$2+2|0;$p_code=$incdec_ptr;var $3=HEAP16[$2>>1];$tmp=$3;var $4=$tmp;var $conv3=$4<<16>>16;var $5=$tmp;var $conv4=$5<<16>>16;var $mul=$conv3*$conv4|0;var $shr=$mul>>3;var $6=$ener_code;var $add=$6+$shr|0;$ener_code=$add;var $7=$p_code;var $incdec_ptr5=$7+2|0;$p_code=$incdec_ptr5;var $8=HEAP16[$7>>1];$tmp=$8;var $9=$tmp;var $conv6=$9<<16>>16;var $10=$tmp;var $conv7=$10<<16>>16;var $mul8=$conv6*$conv7|0;var $shr9=$mul8>>3;var $11=$ener_code;var $add10=$11+$shr9|0;$ener_code=$add10;var $12=$p_code;var $incdec_ptr11=$12+2|0;$p_code=$incdec_ptr11;var $13=HEAP16[$12>>1];$tmp=$13;var $14=$tmp;var $conv12=$14<<16>>16;var $15=$tmp;var $conv13=$15<<16>>16;var $mul14=$conv12*$conv13|0;var $shr15=$mul14>>3;var $16=$ener_code;var $add16=$16+$shr15|0;$ener_code=$add16;var $17=$p_code;var $incdec_ptr17=$17+2|0;$p_code=$incdec_ptr17;var $18=HEAP16[$17>>1];$tmp=$18;var $19=$tmp;var $conv18=$19<<16>>16;var $20=$tmp;var $conv19=$20<<16>>16;var $mul20=$conv18*$conv19|0;var $shr21=$mul20>>3;var $21=$ener_code;var $add22=$21+$shr21|0;$ener_code=$add22;__label__=3;break;case 3:var $22=$i;var $dec=$22-1&65535;$i=$dec;__label__=1;break;case 4:var $23=$ener_code;var $shl=$23<<4;$ener_code=$shl;var $24=$ener_code;var $shr23=$24>>31;var $tobool=($shr23|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:$ener_code=2147483647;__label__=6;break;case 6:var $25=$mode_addr;var $cmp24=($25|0)==7;if($cmp24){__label__=7;break}else{__label__=12;break}case 7:var $26=$ener_code;var $27=$pOverflow_addr;var $call=_pv_round($26,$27);var $conv27=$call<<16>>16;var $mul28=$conv27*26214|0;var $shl29=$mul28<<1;$ener_code=$shl29;var $28=$ener_code;var $29=$pOverflow_addr;_Log2($28,$exp,$frac,$29);var $30=HEAP16[$exp>>1];var $conv30=$30<<16>>16;var $sub=$conv30-30|0;var $shl31=$sub<<16;$L_temp1=$shl31;var $31=$L_temp1;var $32=HEAP16[$frac>>1];var $conv32=$32<<16>>16;var $shl33=$conv32<<1;var $add34=$31+$shl33|0;$ener_code=$add34;$ener=783741;$i=0;__label__=8;break;case 8:var $33=$i;var $conv36=$33<<16>>16;var $cmp37=($conv36|0)<4;if($cmp37){__label__=9;break}else{__label__=11;break}case 9:var $34=$i;var $idxprom=$34<<16>>16;var $35=$st_addr;var $past_qua_en_MR122=$35+8|0;var $arrayidx40=$past_qua_en_MR122+($idxprom<<1)|0;var $36=HEAP16[$arrayidx40>>1];var $conv41=$36<<16>>16;var $37=$i;var $idxprom42=$37<<16>>16;var $arrayidx43=_pred_MR122+($idxprom42<<1)|0;var $38=HEAP16[$arrayidx43>>1];var $conv44=$38<<16>>16;var $mul45=$conv41*$conv44|0;var $shl46=$mul45<<1;$L_temp1=$shl46;var $39=$ener;var $40=$L_temp1;var $41=$pOverflow_addr;var $call47=_L_add180($39,$40,$41);$ener=$call47;__label__=10;break;case 10:var $42=$i;var $inc=$42+1&65535;$i=$inc;__label__=8;break;case 11:var $43=$ener;var $44=$ener_code;var $45=$pOverflow_addr;var $call50=_L_sub181($43,$44,$45);$L_temp1=$call50;var $46=$L_temp1;var $shr51=$46>>17;var $conv52=$shr51&65535;var $47=$exp_gcode0_addr;HEAP16[$47>>1]=$conv52;var $48=$exp_gcode0_addr;var $49=HEAP16[$48>>1];var $conv53=$49<<16>>16;var $shl54=$conv53<<15;$L_temp2=$shl54;var $50=$L_temp1;var $shr55=$50>>2;$L_temp1=$shr55;var $51=$L_temp1;var $52=$L_temp2;var $sub56=$51-$52|0;var $conv57=$sub56&65535;var $53=$frac_gcode0_addr;HEAP16[$53>>1]=$conv57;__label__=46;break;case 12:var $54=$ener_code;var $call58=_norm_l($54);$exp_code=$call58;var $55=$ener_code;var $56=$exp_code;var $57=$pOverflow_addr;var $call59=_L_shl182($55,$56,$57);$ener_code=$call59;var $58=$ener_code;var $59=$exp_code;_Log2_norm($58,$59,$exp,$frac);var $60=HEAP16[$exp>>1];var $conv60=$60<<16>>16;var $mul61=$conv60*-24660|0;var $shl62=$mul61<<1;$L_temp2=$shl62;var $61=HEAP16[$frac>>1];var $conv63=$61<<16>>16;var $mul64=$conv63*-24660|0;var $shr65=$mul64>>15;$L_tmp=$shr65;var $62=$L_tmp;var $and=$62&65536;var $tobool66=($and|0)!=0;if($tobool66){__label__=13;break}else{__label__=14;break}case 13:var $63=$L_tmp;var $or=$63|-65536;$L_tmp=$or;__label__=14;break;case 14:var $64=$L_tmp;var $shl69=$64<<1;$L_tmp=$shl69;var $65=$L_tmp;var $66=$L_temp2;var $67=$pOverflow_addr;var $call70=_L_add180($65,$66,$67);$L_tmp=$call70;var $68=$mode_addr;var $cmp71=($68|0)==6;if($cmp71){__label__=15;break}else{__label__=16;break}case 15:$L_temp2=2134784;var $69=$L_tmp;var $70=$L_temp2;var $71=$pOverflow_addr;var $call74=_L_add180($69,$70,$71);$L_tmp=$call74;__label__=26;break;case 16:var $72=$mode_addr;var $cmp76=($72|0)==5;if($cmp76){__label__=17;break}else{__label__=18;break}case 17:var $73=$ener_code;var $shr79=$73>>16;var $conv80=$shr79&65535;var $74=$frac_en_addr;HEAP16[$74>>1]=$conv80;var $75=$exp_code;var $conv81=$75<<16>>16;var $sub82=-11-$conv81|0;var $conv83=$sub82&65535;var $76=$exp_en_addr;HEAP16[$76>>1]=$conv83;$L_temp2=2183936;var $77=$L_tmp;var $78=$L_temp2;var $79=$pOverflow_addr;var $call84=_L_add180($77,$78,$79);$L_tmp=$call84;__label__=25;break;case 18:var $80=$mode_addr;var $cmp86=($80|0)==4;if($cmp86){__label__=19;break}else{__label__=20;break}case 19:$L_temp2=2085632;var $81=$L_tmp;var $82=$L_temp2;var $83=$pOverflow_addr;var $call89=_L_add180($81,$82,$83);$L_tmp=$call89;__label__=24;break;case 20:var $84=$mode_addr;var $cmp91=($84|0)==3;if($cmp91){__label__=21;break}else{__label__=22;break}case 21:$L_temp2=2065152;var $85=$L_tmp;var $86=$L_temp2;var $87=$pOverflow_addr;var $call94=_L_add180($85,$86,$87);$L_tmp=$call94;__label__=23;break;case 22:$L_temp2=2134784;var $88=$L_tmp;var $89=$L_temp2;var $90=$pOverflow_addr;var $call96=_L_add180($88,$89,$90);$L_tmp=$call96;__label__=23;break;case 23:__label__=24;break;case 24:__label__=25;break;case 25:__label__=26;break;case 26:var $91=$L_tmp;var $cmp101=($91|0)>2097151;if($cmp101){__label__=27;break}else{__label__=28;break}case 27:var $92=$pOverflow_addr;HEAP32[$92>>2]=1;$L_tmp=2147483647;__label__=32;break;case 28:var $93=$L_tmp;var $cmp105=($93|0)<-2097152;if($cmp105){__label__=29;break}else{__label__=30;break}case 29:var $94=$pOverflow_addr;HEAP32[$94>>2]=1;$L_tmp=-2147483648;__label__=31;break;case 30:var $95=$L_tmp;var $shl109=$95<<10;$L_tmp=$shl109;__label__=31;break;case 31:__label__=32;break;case 32:$i=0;__label__=33;break;case 33:var $96=$i;var $conv113=$96<<16>>16;var $cmp114=($conv113|0)<4;if($cmp114){__label__=34;break}else{__label__=36;break}case 34:var $97=$i;var $idxprom117=$97<<16>>16;var $arrayidx118=_pred+($idxprom117<<1)|0;var $98=HEAP16[$arrayidx118>>1];var $conv119=$98<<16>>16;var $99=$i;var $idxprom120=$99<<16>>16;var $100=$st_addr;var $past_qua_en=$100|0;var $arrayidx121=$past_qua_en+($idxprom120<<1)|0;var $101=HEAP16[$arrayidx121>>1];var $conv122=$101<<16>>16;var $mul123=$conv119*$conv122|0;var $shl124=$mul123<<1;$L_temp2=$shl124;var $102=$L_tmp;var $103=$L_temp2;var $104=$pOverflow_addr;var $call125=_L_add180($102,$103,$104);$L_tmp=$call125;__label__=35;break;case 35:var $105=$i;var $inc127=$105+1&65535;$i=$inc127;__label__=33;break;case 36:var $106=$L_tmp;var $shr129=$106>>16;var $conv130=$shr129&65535;$gcode0=$conv130;var $107=$mode_addr;var $cmp131=($107|0)==4;if($cmp131){__label__=37;break}else{__label__=38;break}case 37:var $108=$gcode0;var $conv134=$108<<16>>16;var $mul135=$conv134*5439|0;var $shl136=$mul135<<1;$L_tmp=$shl136;__label__=39;break;case 38:var $109=$gcode0;var $conv138=$109<<16>>16;var $mul139=$conv138*5443|0;var $shl140=$mul139<<1;$L_tmp=$shl140;__label__=39;break;case 39:var $110=$L_tmp;var $cmp142=($110|0)<0;if($cmp142){__label__=40;break}else{__label__=41;break}case 40:var $111=$L_tmp;var $neg=$111^-1;var $shr145=$neg>>8;var $neg146=$shr145^-1;$L_tmp=$neg146;__label__=42;break;case 41:var $112=$L_tmp;var $shr148=$112>>8;$L_tmp=$shr148;__label__=42;break;case 42:var $113=$L_tmp;var $shr150=$113>>16;var $conv151=$shr150&65535;var $114=$exp_gcode0_addr;HEAP16[$114>>1]=$conv151;var $115=$L_tmp;var $cmp152=($115|0)<0;if($cmp152){__label__=43;break}else{__label__=44;break}case 43:var $116=$L_tmp;var $neg155=$116^-1;var $shr156=$neg155>>1;var $neg157=$shr156^-1;$L_temp1=$neg157;__label__=45;break;case 44:var $117=$L_tmp;var $shr159=$117>>1;$L_temp1=$shr159;__label__=45;break;case 45:var $118=$exp_gcode0_addr;var $119=HEAP16[$118>>1];var $conv161=$119<<16>>16;var $shl162=$conv161<<15;$L_temp2=$shl162;var $120=$L_temp1;var $121=$L_temp2;var $122=$pOverflow_addr;var $call163=_L_sub181($120,$121,$122);var $conv164=$call163&65535;var $123=$frac_gcode0_addr;HEAP16[$123>>1]=$conv164;__label__=46;break;case 46:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_gc_pred["X"]=1;function _L_add180($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _L_sub181($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _L_shl182($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _gc_pred_update($st,$qua_ener_MR122,$qua_ener){var __label__;var $st_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;$st_addr=$st;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;var $0=$st_addr;var $past_qua_en=$0|0;var $arrayidx=$past_qua_en+4|0;var $1=HEAP16[$arrayidx>>1];var $2=$st_addr;var $past_qua_en1=$2|0;var $arrayidx2=$past_qua_en1+6|0;HEAP16[$arrayidx2>>1]=$1;var $3=$st_addr;var $past_qua_en_MR122=$3+8|0;var $arrayidx3=$past_qua_en_MR122+4|0;var $4=HEAP16[$arrayidx3>>1];var $5=$st_addr;var $past_qua_en_MR1224=$5+8|0;var $arrayidx5=$past_qua_en_MR1224+6|0;HEAP16[$arrayidx5>>1]=$4;var $6=$st_addr;var $past_qua_en6=$6|0;var $arrayidx7=$past_qua_en6+2|0;var $7=HEAP16[$arrayidx7>>1];var $8=$st_addr;var $past_qua_en8=$8|0;var $arrayidx9=$past_qua_en8+4|0;HEAP16[$arrayidx9>>1]=$7;var $9=$st_addr;var $past_qua_en_MR12210=$9+8|0;var $arrayidx11=$past_qua_en_MR12210+2|0;var $10=HEAP16[$arrayidx11>>1];var $11=$st_addr;var $past_qua_en_MR12212=$11+8|0;var $arrayidx13=$past_qua_en_MR12212+4|0;HEAP16[$arrayidx13>>1]=$10;var $12=$st_addr;var $past_qua_en14=$12|0;var $arrayidx15=$past_qua_en14|0;var $13=HEAP16[$arrayidx15>>1];var $14=$st_addr;var $past_qua_en16=$14|0;var $arrayidx17=$past_qua_en16+2|0;HEAP16[$arrayidx17>>1]=$13;var $15=$st_addr;var $past_qua_en_MR12218=$15+8|0;var $arrayidx19=$past_qua_en_MR12218|0;var $16=HEAP16[$arrayidx19>>1];var $17=$st_addr;var $past_qua_en_MR12220=$17+8|0;var $arrayidx21=$past_qua_en_MR12220+2|0;HEAP16[$arrayidx21>>1]=$16;var $18=$qua_ener_MR122_addr;var $19=$st_addr;var $past_qua_en_MR12222=$19+8|0;var $arrayidx23=$past_qua_en_MR12222|0;HEAP16[$arrayidx23>>1]=$18;var $20=$qua_ener_addr;var $21=$st_addr;var $past_qua_en24=$21|0;var $arrayidx25=$past_qua_en24|0;HEAP16[$arrayidx25>>1]=$20;return}_gc_pred_update["X"]=1;function _get_const_tbls($tbl_struct_ptr){var __label__;var $tbl_struct_ptr_addr;$tbl_struct_ptr_addr=$tbl_struct_ptr;var $0=$tbl_struct_ptr_addr;var $dgray_ptr=$0|0;HEAP32[$dgray_ptr>>2]=_dgray|0;var $1=$tbl_struct_ptr_addr;var $dico1_lsf_3_ptr=$1+4|0;HEAP32[$dico1_lsf_3_ptr>>2]=_dico1_lsf_3|0;var $2=$tbl_struct_ptr_addr;var $dico1_lsf_5_ptr=$2+8|0;HEAP32[$dico1_lsf_5_ptr>>2]=_dico1_lsf_5|0;var $3=$tbl_struct_ptr_addr;var $dico2_lsf_3_ptr=$3+12|0;HEAP32[$dico2_lsf_3_ptr>>2]=_dico2_lsf_3|0;var $4=$tbl_struct_ptr_addr;var $dico2_lsf_5_ptr=$4+16|0;HEAP32[$dico2_lsf_5_ptr>>2]=_dico2_lsf_5|0;var $5=$tbl_struct_ptr_addr;var $dico3_lsf_3_ptr=$5+20|0;HEAP32[$dico3_lsf_3_ptr>>2]=_dico3_lsf_3|0;var $6=$tbl_struct_ptr_addr;var $dico3_lsf_5_ptr=$6+24|0;HEAP32[$dico3_lsf_5_ptr>>2]=_dico3_lsf_5|0;var $7=$tbl_struct_ptr_addr;var $dico4_lsf_5_ptr=$7+28|0;HEAP32[$dico4_lsf_5_ptr>>2]=_dico4_lsf_5|0;var $8=$tbl_struct_ptr_addr;var $dico5_lsf_5_ptr=$8+32|0;HEAP32[$dico5_lsf_5_ptr>>2]=_dico5_lsf_5|0;var $9=$tbl_struct_ptr_addr;var $gray_ptr=$9+36|0;HEAP32[$gray_ptr>>2]=_gray|0;var $10=$tbl_struct_ptr_addr;var $lsp_init_data_ptr=$10+40|0;HEAP32[$lsp_init_data_ptr>>2]=_lsp_init_data|0;var $11=$tbl_struct_ptr_addr;var $mean_lsf_3_ptr=$11+44|0;HEAP32[$mean_lsf_3_ptr>>2]=_mean_lsf_3|0;var $12=$tbl_struct_ptr_addr;var $mean_lsf_5_ptr=$12+48|0;HEAP32[$mean_lsf_5_ptr>>2]=_mean_lsf_5|0;var $13=$tbl_struct_ptr_addr;var $mr515_3_lsf_ptr=$13+52|0;HEAP32[$mr515_3_lsf_ptr>>2]=_mr515_3_lsf|0;var $14=$tbl_struct_ptr_addr;var $mr795_1_lsf_ptr=$14+56|0;HEAP32[$mr795_1_lsf_ptr>>2]=_mr795_1_lsf|0;var $15=$tbl_struct_ptr_addr;var $past_rq_init_ptr=$15+60|0;HEAP32[$past_rq_init_ptr>>2]=_past_rq_init|0;var $16=$tbl_struct_ptr_addr;var $pred_fac_3_ptr=$16+64|0;HEAP32[$pred_fac_3_ptr>>2]=_pred_fac_3|0;var $17=$tbl_struct_ptr_addr;var $qua_gain_code_ptr=$17+68|0;HEAP32[$qua_gain_code_ptr>>2]=_qua_gain_code|0;var $18=$tbl_struct_ptr_addr;var $qua_gain_pitch_ptr=$18+72|0;HEAP32[$qua_gain_pitch_ptr>>2]=_qua_gain_pitch|0;var $19=$tbl_struct_ptr_addr;var $startPos_ptr=$19+76|0;HEAP32[$startPos_ptr>>2]=_startPos|0;var $20=$tbl_struct_ptr_addr;var $table_gain_lowrates_ptr=$20+80|0;HEAP32[$table_gain_lowrates_ptr>>2]=_table_gain_lowrates|0;var $21=$tbl_struct_ptr_addr;var $table_gain_highrates_ptr=$21+84|0;HEAP32[$table_gain_highrates_ptr>>2]=_table_gain_highrates|0;var $22=$tbl_struct_ptr_addr;var $prmno_ptr=$22+88|0;HEAP32[$prmno_ptr>>2]=_prmno|0;var $23=$tbl_struct_ptr_addr;var $bitno_ptr=$23+92|0;HEAP32[$bitno_ptr>>2]=_bitno|0;var $24=$tbl_struct_ptr_addr;var $numOfBits_ptr=$24+96|0;HEAP32[$numOfBits_ptr>>2]=_numOfBits|0;var $25=$tbl_struct_ptr_addr;var $reorderBits_ptr=$25+100|0;HEAP32[$reorderBits_ptr>>2]=_reorderBits|0;var $26=$tbl_struct_ptr_addr;var $numCompressedBytes_ptr=$26+104|0;HEAP32[$numCompressedBytes_ptr>>2]=_numCompressedBytes|0;var $27=$tbl_struct_ptr_addr;var $window_200_40_ptr=$27+108|0;HEAP32[$window_200_40_ptr>>2]=_window_200_40|0;var $28=$tbl_struct_ptr_addr;var $window_160_80_ptr=$28+112|0;HEAP32[$window_160_80_ptr>>2]=_window_160_80|0;var $29=$tbl_struct_ptr_addr;var $window_232_8_ptr=$29+116|0;HEAP32[$window_232_8_ptr>>2]=_window_232_8|0;var $30=$tbl_struct_ptr_addr;var $ph_imp_low_MR795_ptr=$30+120|0;HEAP32[$ph_imp_low_MR795_ptr>>2]=_ph_imp_low_MR795|0;var $31=$tbl_struct_ptr_addr;var $ph_imp_mid_MR795_ptr=$31+124|0;HEAP32[$ph_imp_mid_MR795_ptr>>2]=_ph_imp_mid_MR795|0;var $32=$tbl_struct_ptr_addr;var $ph_imp_low_ptr=$32+128|0;HEAP32[$ph_imp_low_ptr>>2]=_ph_imp_low|0;var $33=$tbl_struct_ptr_addr;var $ph_imp_mid_ptr=$33+132|0;HEAP32[$ph_imp_mid_ptr>>2]=_ph_imp_mid|0;return}_get_const_tbls["X"]=1;function _gc_pred_average_limited($st,$ener_avg_MR122,$ener_avg,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $ener_avg_MR122_addr;var $ener_avg_addr;var $pOverflow_addr;var $av_pred_en;var $i;$st_addr=$st;$ener_avg_MR122_addr=$ener_avg_MR122;$ener_avg_addr=$ener_avg;$pOverflow_addr=$pOverflow;$av_pred_en=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<4;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$av_pred_en;var $2=$i;var $idxprom=$2<<16>>16;var $3=$st_addr;var $past_qua_en_MR122=$3+8|0;var $arrayidx=$past_qua_en_MR122+($idxprom<<1)|0;var $4=HEAP16[$arrayidx>>1];var $5=$pOverflow_addr;var $call=_add_16($1,$4,$5);$av_pred_en=$call;__label__=3;break;case 3:var $6=$i;var $inc=$6+1&65535;$i=$inc;__label__=1;break;case 4:var $7=$av_pred_en;var $conv2=$7<<16>>16;var $cmp3=($conv2|0)<0;if($cmp3){__label__=5;break}else{__label__=6;break}case 5:var $8=$av_pred_en;var $conv5=$8<<16>>16;var $shr=$conv5>>2;var $or=$shr|49152;var $conv6=$or&65535;$av_pred_en=$conv6;__label__=7;break;case 6:var $9=$av_pred_en;var $conv7=$9<<16>>16;var $shr8=$conv7>>2;var $conv9=$shr8&65535;$av_pred_en=$conv9;__label__=7;break;case 7:var $10=$av_pred_en;var $conv10=$10<<16>>16;var $cmp11=($conv10|0)<-2381;if($cmp11){__label__=8;break}else{__label__=9;break}case 8:$av_pred_en=-2381;__label__=9;break;case 9:var $11=$av_pred_en;var $12=$ener_avg_MR122_addr;HEAP16[$12>>1]=$11;$av_pred_en=0;$i=0;__label__=10;break;case 10:var $13=$i;var $conv16=$13<<16>>16;var $cmp17=($conv16|0)<4;if($cmp17){__label__=11;break}else{__label__=13;break}case 11:var $14=$av_pred_en;var $15=$i;var $idxprom20=$15<<16>>16;var $16=$st_addr;var $past_qua_en=$16|0;var $arrayidx21=$past_qua_en+($idxprom20<<1)|0;var $17=HEAP16[$arrayidx21>>1];var $18=$pOverflow_addr;var $call22=_add_16($14,$17,$18);$av_pred_en=$call22;__label__=12;break;case 12:var $19=$i;var $inc24=$19+1&65535;$i=$inc24;__label__=10;break;case 13:var $20=$av_pred_en;var $conv26=$20<<16>>16;var $cmp27=($conv26|0)<0;if($cmp27){__label__=14;break}else{__label__=15;break}case 14:var $21=$av_pred_en;var $conv30=$21<<16>>16;var $shr31=$conv30>>2;var $or32=$shr31|49152;var $conv33=$or32&65535;$av_pred_en=$conv33;__label__=16;break;case 15:var $22=$av_pred_en;var $conv35=$22<<16>>16;var $shr36=$conv35>>2;var $conv37=$shr36&65535;$av_pred_en=$conv37;__label__=16;break;case 16:var $23=$av_pred_en;var $conv39=$23<<16>>16;var $cmp40=($conv39|0)<-14336;if($cmp40){__label__=17;break}else{__label__=18;break}case 17:$av_pred_en=-14336;__label__=18;break;case 18:var $24=$av_pred_en;var $25=$ener_avg_addr;HEAP16[$25>>1]=$24;return;default:assert(0,"bad label: "+__label__)}}_gc_pred_average_limited["X"]=1;function _gmed_n($ind,$n){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $ind_addr;var $n_addr;var $i;var $j;var $ix;var $max;var $medianIndex;var $tmp=__stackBase__;var $tmp2=__stackBase__+20;$ind_addr=$ind;$n_addr=$n;$ix=0;var $arraydecay=$tmp2|0;var $0=$arraydecay;var $1=$ind_addr;var $2=$1;var $3=$n_addr;var $conv=$3<<16>>16;var $mul=$conv<<1|0;_llvm_memmove_p0i8_p0i8_i32($0,$2,$mul,1,0);$i=0;__label__=1;break;case 1:var $4=$i;var $conv2=$4<<16>>16;var $5=$n_addr;var $conv3=$5<<16>>16;var $cmp=($conv2|0)<($conv3|0);if($cmp){__label__=2;break}else{__label__=10;break}case 2:$max=-32767;$j=0;__label__=3;break;case 3:var $6=$j;var $conv6=$6<<16>>16;var $7=$n_addr;var $conv7=$7<<16>>16;var $cmp8=($conv6|0)<($conv7|0);if($cmp8){__label__=4;break}else{__label__=8;break}case 4:var $arraydecay11=$tmp2|0;var $8=$j;var $conv12=$8<<16>>16;var $add_ptr=$arraydecay11+($conv12<<1)|0;var $9=HEAP16[$add_ptr>>1];var $conv13=$9<<16>>16;var $10=$max;var $conv14=$10<<16>>16;var $cmp15=($conv13|0)>=($conv14|0);if($cmp15){__label__=5;break}else{__label__=6;break}case 5:var $arraydecay17=$tmp2|0;var $11=$j;var $conv18=$11<<16>>16;var $add_ptr19=$arraydecay17+($conv18<<1)|0;var $12=HEAP16[$add_ptr19>>1];$max=$12;var $13=$j;$ix=$13;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$j;var $inc=$14+1&65535;$j=$inc;__label__=3;break;case 8:var $arraydecay20=$tmp2|0;var $15=$ix;var $conv21=$15<<16>>16;var $add_ptr22=$arraydecay20+($conv21<<1)|0;HEAP16[$add_ptr22>>1]=-32768;var $16=$ix;var $arraydecay23=$tmp|0;var $17=$i;var $conv24=$17<<16>>16;var $add_ptr25=$arraydecay23+($conv24<<1)|0;HEAP16[$add_ptr25>>1]=$16;__label__=9;break;case 9:var $18=$i;var $inc27=$18+1&65535;$i=$inc27;__label__=1;break;case 10:var $arraydecay29=$tmp|0;var $19=$n_addr;var $conv30=$19<<16>>16;var $shr=$conv30>>1;var $add_ptr31=$arraydecay29+($shr<<1)|0;var $20=HEAP16[$add_ptr31>>1];$medianIndex=$20;var $21=$ind_addr;var $22=$medianIndex;var $conv32=$22<<16>>16;var $add_ptr33=$21+($conv32<<1)|0;var $23=HEAP16[$add_ptr33>>1];STACKTOP=__stackBase__;return $23;default:assert(0,"bad label: "+__label__)}}_gmed_n["X"]=1;function _amrnb_fxp_mac_16_by_16bb193($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _L_shl200($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_sub201($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _G_pitch($mode,$xn,$y1,$g_coeff,$L_subfr,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $mode_addr;var $xn_addr;var $y1_addr;var $g_coeff_addr;var $L_subfr_addr;var $pOverflow_addr;var $i;var $xy;var $yy;var $exp_xy;var $exp_yy;var $gain;var $tmp;var $s;var $s1;var $L_temp;var $p_xn;var $p_y1;$mode_addr=$mode;$xn_addr=$xn;$y1_addr=$y1;$g_coeff_addr=$g_coeff;$L_subfr_addr=$L_subfr;$pOverflow_addr=$pOverflow;var $0=$xn_addr;var $arrayidx=$0|0;$p_xn=$arrayidx;var $1=$y1_addr;var $arrayidx6=$1|0;$p_y1=$arrayidx6;var $2=$pOverflow_addr;HEAP32[$2>>2]=0;$s=0;var $3=$L_subfr_addr;var $conv=$3<<16>>16;var $shr=$conv>>2;var $conv7=$shr&65535;$i=$conv7;__label__=1;break;case 1:var $4=$i;var $conv8=$4<<16>>16;var $cmp=($conv8|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $5=$p_y1;var $6=HEAP16[$5>>1];var $conv10=$6<<16>>16;var $7=$p_y1;var $8=HEAP16[$7>>1];var $conv11=$8<<16>>16;var $9=$s;var $call=_amrnb_fxp_mac_16_by_16bb193($conv10,$conv11,$9);$s=$call;var $10=$p_y1;var $incdec_ptr=$10+2|0;$p_y1=$incdec_ptr;var $11=$p_y1;var $12=HEAP16[$11>>1];var $conv12=$12<<16>>16;var $13=$p_y1;var $14=HEAP16[$13>>1];var $conv13=$14<<16>>16;var $15=$s;var $call14=_amrnb_fxp_mac_16_by_16bb193($conv12,$conv13,$15);$s=$call14;var $16=$p_y1;var $incdec_ptr15=$16+2|0;$p_y1=$incdec_ptr15;var $17=$p_y1;var $18=HEAP16[$17>>1];var $conv16=$18<<16>>16;var $19=$p_y1;var $20=HEAP16[$19>>1];var $conv17=$20<<16>>16;var $21=$s;var $call18=_amrnb_fxp_mac_16_by_16bb193($conv16,$conv17,$21);$s=$call18;var $22=$p_y1;var $incdec_ptr19=$22+2|0;$p_y1=$incdec_ptr19;var $23=$p_y1;var $24=HEAP16[$23>>1];var $conv20=$24<<16>>16;var $25=$p_y1;var $26=HEAP16[$25>>1];var $conv21=$26<<16>>16;var $27=$s;var $call22=_amrnb_fxp_mac_16_by_16bb193($conv20,$conv21,$27);$s=$call22;var $28=$p_y1;var $incdec_ptr23=$28+2|0;$p_y1=$incdec_ptr23;__label__=3;break;case 3:var $29=$i;var $dec=$29-1&65535;$i=$dec;__label__=1;break;case 4:var $30=$s;var $cmp24=($30|0)>=0;var $conv25=$cmp24&1;var $31=$s;var $cmp26=($31|0)<1073741824;var $conv27=$cmp26&1;var $and=$conv25&$conv27;var $tobool=($and|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $32=$s;var $shl=$32<<1;$s=$shl;var $33=$s;var $add=$33+1|0;$s=$add;var $34=$s;var $call28=_norm_l($34);$exp_yy=$call28;var $35=$s;var $36=$exp_yy;var $conv29=$36<<16>>16;var $shl30=$35<<$conv29;$L_temp=$shl30;var $37=$L_temp;var $38=$pOverflow_addr;var $call31=_pv_round($37,$38);$yy=$call31;__label__=11;break;case 6:$s=0;var $39=$y1_addr;var $arrayidx32=$39|0;$p_y1=$arrayidx32;var $40=$L_subfr_addr;var $conv33=$40<<16>>16;var $shr34=$conv33>>1;var $conv35=$shr34&65535;$i=$conv35;__label__=7;break;case 7:var $41=$i;var $conv37=$41<<16>>16;var $cmp38=($conv37|0)!=0;if($cmp38){__label__=8;break}else{__label__=10;break}case 8:var $42=$p_y1;var $incdec_ptr41=$42+2|0;$p_y1=$incdec_ptr41;var $43=HEAP16[$42>>1];var $conv42=$43<<16>>16;var $shr43=$conv42>>2;var $conv44=$shr43&65535;$tmp=$conv44;var $44=$tmp;var $conv45=$44<<16>>16;var $45=$tmp;var $conv46=$45<<16>>16;var $46=$s;var $call47=_amrnb_fxp_mac_16_by_16bb193($conv45,$conv46,$46);$s=$call47;var $47=$p_y1;var $incdec_ptr48=$47+2|0;$p_y1=$incdec_ptr48;var $48=HEAP16[$47>>1];var $conv49=$48<<16>>16;var $shr50=$conv49>>2;var $conv51=$shr50&65535;$tmp=$conv51;var $49=$tmp;var $conv52=$49<<16>>16;var $50=$tmp;var $conv53=$50<<16>>16;var $51=$s;var $call54=_amrnb_fxp_mac_16_by_16bb193($conv52,$conv53,$51);$s=$call54;__label__=9;break;case 9:var $52=$i;var $dec56=$52-1&65535;$i=$dec56;__label__=7;break;case 10:var $53=$s;var $shl58=$53<<1;$s=$shl58;var $54=$s;var $add59=$54+1|0;$s=$add59;var $55=$s;var $call60=_norm_l($55);$exp_yy=$call60;var $56=$s;var $57=$exp_yy;var $conv61=$57<<16>>16;var $shl62=$56<<$conv61;$L_temp=$shl62;var $58=$L_temp;var $59=$pOverflow_addr;var $call63=_pv_round($58,$59);$yy=$call63;var $60=$exp_yy;var $conv64=$60<<16>>16;var $sub=$conv64-4|0;var $conv65=$sub&65535;$exp_yy=$conv65;__label__=11;break;case 11:$s=0;var $61=$y1_addr;var $arrayidx66=$61|0;$p_y1=$arrayidx66;var $62=$pOverflow_addr;HEAP32[$62>>2]=0;var $63=$L_subfr_addr;$i=$63;__label__=12;break;case 12:var $64=$i;var $conv68=$64<<16>>16;var $cmp69=($conv68|0)!=0;if($cmp69){__label__=13;break}else{__label__=19;break}case 13:var $65=$p_xn;var $incdec_ptr72=$65+2|0;$p_xn=$incdec_ptr72;var $66=HEAP16[$65>>1];var $conv73=$66<<16>>16;var $67=$p_y1;var $incdec_ptr74=$67+2|0;$p_y1=$incdec_ptr74;var $68=HEAP16[$67>>1];var $conv75=$68<<16>>16;var $mul=$conv73*$conv75|0;$L_temp=$mul;var $69=$s;$s1=$69;var $70=$s1;var $71=$L_temp;var $add76=$70+$71|0;$s=$add76;var $72=$s1;var $73=$L_temp;var $xor=$72^$73;var $cmp77=($xor|0)>0;if($cmp77){__label__=14;break}else{__label__=17;break}case 14:var $74=$s1;var $75=$s;var $xor80=$74^$75;var $cmp81=($xor80|0)<0;if($cmp81){__label__=15;break}else{__label__=16;break}case 15:var $76=$pOverflow_addr;HEAP32[$76>>2]=1;__label__=19;break;case 16:__label__=17;break;case 17:__label__=18;break;case 18:var $77=$i;var $dec87=$77-1&65535;$i=$dec87;__label__=12;break;case 19:var $78=$pOverflow_addr;var $79=HEAP32[$78>>2];var $tobool89=($79|0)!=0;if($tobool89){__label__=21;break}else{__label__=20;break}case 20:var $80=$s;var $shl91=$80<<1;$s=$shl91;var $81=$s;var $add92=$81+1|0;$s=$add92;var $82=$s;var $call93=_norm_l($82);$exp_xy=$call93;var $83=$s;var $84=$exp_xy;var $conv94=$84<<16>>16;var $shl95=$83<<$conv94;$L_temp=$shl95;var $85=$L_temp;var $86=$pOverflow_addr;var $call96=_pv_round($85,$86);$xy=$call96;__label__=26;break;case 21:$s=0;var $87=$y1_addr;var $arrayidx98=$87|0;$p_y1=$arrayidx98;var $88=$xn_addr;var $arrayidx99=$88|0;$p_xn=$arrayidx99;var $89=$L_subfr_addr;var $conv100=$89<<16>>16;var $shr101=$conv100>>2;var $conv102=$shr101&65535;$i=$conv102;__label__=22;break;case 22:var $90=$i;var $conv104=$90<<16>>16;var $cmp105=($conv104|0)!=0;if($cmp105){__label__=23;break}else{__label__=25;break}case 23:var $91=$p_y1;var $incdec_ptr108=$91+2|0;$p_y1=$incdec_ptr108;var $92=HEAP16[$91>>1];var $conv109=$92<<16>>16;var $shr110=$conv109>>2;$L_temp=$shr110;var $93=$p_xn;var $incdec_ptr111=$93+2|0;$p_xn=$incdec_ptr111;var $94=HEAP16[$93>>1];var $conv112=$94<<16>>16;var $95=$L_temp;var $96=$s;var $call113=_amrnb_fxp_mac_16_by_16bb193($conv112,$95,$96);$s=$call113;var $97=$p_y1;var $incdec_ptr114=$97+2|0;$p_y1=$incdec_ptr114;var $98=HEAP16[$97>>1];var $conv115=$98<<16>>16;var $shr116=$conv115>>2;$L_temp=$shr116;var $99=$p_xn;var $incdec_ptr117=$99+2|0;$p_xn=$incdec_ptr117;var $100=HEAP16[$99>>1];var $conv118=$100<<16>>16;var $101=$L_temp;var $102=$s;var $call119=_amrnb_fxp_mac_16_by_16bb193($conv118,$101,$102);$s=$call119;var $103=$p_y1;var $incdec_ptr120=$103+2|0;$p_y1=$incdec_ptr120;var $104=HEAP16[$103>>1];var $conv121=$104<<16>>16;var $shr122=$conv121>>2;$L_temp=$shr122;var $105=$p_xn;var $incdec_ptr123=$105+2|0;$p_xn=$incdec_ptr123;var $106=HEAP16[$105>>1];var $conv124=$106<<16>>16;var $107=$L_temp;var $108=$s;var $call125=_amrnb_fxp_mac_16_by_16bb193($conv124,$107,$108);$s=$call125;var $109=$p_y1;var $incdec_ptr126=$109+2|0;$p_y1=$incdec_ptr126;var $110=HEAP16[$109>>1];var $conv127=$110<<16>>16;var $shr128=$conv127>>2;$L_temp=$shr128;var $111=$p_xn;var $incdec_ptr129=$111+2|0;$p_xn=$incdec_ptr129;var $112=HEAP16[$111>>1];var $conv130=$112<<16>>16;var $113=$L_temp;var $114=$s;var $call131=_amrnb_fxp_mac_16_by_16bb193($conv130,$113,$114);$s=$call131;__label__=24;break;case 24:var $115=$i;var $dec133=$115-1&65535;$i=$dec133;__label__=22;break;case 25:var $116=$s;var $shl135=$116<<1;$s=$shl135;var $117=$s;var $add136=$117+1|0;$s=$add136;var $118=$s;var $call137=_norm_l($118);$exp_xy=$call137;var $119=$s;var $120=$exp_xy;var $conv138=$120<<16>>16;var $shl139=$119<<$conv138;$L_temp=$shl139;var $121=$L_temp;var $122=$pOverflow_addr;var $call140=_pv_round($121,$122);$xy=$call140;var $123=$exp_xy;var $conv141=$123<<16>>16;var $sub142=$conv141-4|0;var $conv143=$sub142&65535;$exp_xy=$conv143;__label__=26;break;case 26:var $124=$yy;var $125=$g_coeff_addr;var $arrayidx145=$125|0;HEAP16[$arrayidx145>>1]=$124;var $126=$exp_yy;var $conv146=$126<<16>>16;var $sub147=15-$conv146|0;var $conv148=$sub147&65535;var $127=$g_coeff_addr;var $arrayidx149=$127+2|0;HEAP16[$arrayidx149>>1]=$conv148;var $128=$xy;var $129=$g_coeff_addr;var $arrayidx150=$129+4|0;HEAP16[$arrayidx150>>1]=$128;var $130=$exp_xy;var $conv151=$130<<16>>16;var $sub152=15-$conv151|0;var $conv153=$sub152&65535;var $131=$g_coeff_addr;var $arrayidx154=$131+6|0;HEAP16[$arrayidx154>>1]=$conv153;var $132=$xy;var $conv155=$132<<16>>16;var $cmp156=($conv155|0)<4;if($cmp156){__label__=27;break}else{__label__=28;break}case 27:$retval=0;__label__=33;break;case 28:var $133=$xy;var $conv160=$133<<16>>16;var $shr161=$conv160>>1;var $conv162=$shr161&65535;$xy=$conv162;var $134=$xy;var $135=$yy;var $call163=_div_s($134,$135);$gain=$call163;var $136=$exp_xy;var $conv164=$136<<16>>16;var $137=$exp_yy;var $conv165=$137<<16>>16;var $sub166=$conv164-$conv165|0;var $conv167=$sub166&65535;$i=$conv167;var $138=$gain;var $139=$i;var $140=$pOverflow_addr;var $call168=_shr($138,$139,$140);$gain=$call168;var $141=$gain;var $conv169=$141<<16>>16;var $cmp170=($conv169|0)>19661;if($cmp170){__label__=29;break}else{__label__=30;break}case 29:$gain=19661;__label__=30;break;case 30:var $142=$mode_addr;var $cmp174=($142|0)==7;if($cmp174){__label__=31;break}else{__label__=32;break}case 31:var $143=$gain;var $conv177=$143<<16>>16;var $and178=$conv177&65532;var $conv179=$and178&65535;$gain=$conv179;__label__=32;break;case 32:var $144=$gain;$retval=$144;__label__=33;break;case 33:var $145=$retval;return $145;default:assert(0,"bad label: "+__label__)}}_G_pitch["X"]=1;function _hp_max($corr,$scal_sig,$L_frame,$lag_max,$lag_min,$cor_hp_max,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $corr_addr;var $scal_sig_addr;var $L_frame_addr;var $lag_max_addr;var $lag_min_addr;var $cor_hp_max_addr;var $pOverflow_addr;var $i;var $p;var $p1;var $max;var $t0;var $t1;var $max16;var $t016;var $cor_max;var $shift;var $shift1;var $shift2;var $L_temp;$corr_addr=$corr;$scal_sig_addr=$scal_sig;$L_frame_addr=$L_frame;$lag_max_addr=$lag_max;$lag_min_addr=$lag_min;$cor_hp_max_addr=$cor_hp_max;$pOverflow_addr=$pOverflow;$max=-2147483648;$t0=0;var $0=$lag_max_addr;var $conv=$0<<16>>16;var $sub=$conv-1|0;var $conv1=$sub&65535;$i=$conv1;__label__=1;break;case 1:var $1=$i;var $conv2=$1<<16>>16;var $2=$lag_min_addr;var $conv3=$2<<16>>16;var $cmp=($conv2|0)>($conv3|0);if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $3=$i;var $conv5=$3<<16>>16;var $sub6=-$conv5|0;var $4=$corr_addr;var $arrayidx=$4+($sub6<<2)|0;var $5=HEAP32[$arrayidx>>2];var $6=$pOverflow_addr;var $call=_L_shl200($5,1,$6);$t0=$call;var $7=$t0;var $8=$i;var $conv7=$8<<16>>16;var $sub8=-$conv7|0;var $sub9=$sub8-1|0;var $9=$corr_addr;var $arrayidx10=$9+($sub9<<2)|0;var $10=HEAP32[$arrayidx10>>2];var $11=$pOverflow_addr;var $call11=_L_sub201($7,$10,$11);$L_temp=$call11;var $12=$L_temp;var $13=$i;var $conv12=$13<<16>>16;var $sub13=-$conv12|0;var $add=$sub13+1|0;var $14=$corr_addr;var $arrayidx14=$14+($add<<2)|0;var $15=HEAP32[$arrayidx14>>2];var $16=$pOverflow_addr;var $call15=_L_sub201($12,$15,$16);$t0=$call15;var $17=$t0;var $call16=_L_abs($17);$t0=$call16;var $18=$t0;var $19=$max;var $cmp17=($18|0)>=($19|0);if($cmp17){__label__=3;break}else{__label__=4;break}case 3:var $20=$t0;$max=$20;__label__=4;break;case 4:__label__=5;break;case 5:var $21=$i;var $dec=$21-1&65535;$i=$dec;__label__=1;break;case 6:var $22=$scal_sig_addr;$p=$22;var $23=$scal_sig_addr;var $arrayidx19=$23|0;$p1=$arrayidx19;$t0=0;$i=0;__label__=7;break;case 7:var $24=$i;var $conv21=$24<<16>>16;var $25=$L_frame_addr;var $conv22=$25<<16>>16;var $cmp23=($conv21|0)<($conv22|0);if($cmp23){__label__=8;break}else{__label__=10;break}case 8:var $26=$t0;var $27=$p;var $28=HEAP16[$27>>1];var $29=$p1;var $30=HEAP16[$29>>1];var $31=$pOverflow_addr;var $call26=_L_mac202($26,$28,$30,$31);$t0=$call26;__label__=9;break;case 9:var $32=$i;var $inc=$32+1&65535;$i=$inc;var $33=$p;var $incdec_ptr=$33+2|0;$p=$incdec_ptr;var $34=$p1;var $incdec_ptr28=$34+2|0;$p1=$incdec_ptr28;__label__=7;break;case 10:var $35=$scal_sig_addr;$p=$35;var $36=$scal_sig_addr;var $arrayidx30=$36-2|0;$p1=$arrayidx30;$t1=0;$i=0;__label__=11;break;case 11:var $37=$i;var $conv32=$37<<16>>16;var $38=$L_frame_addr;var $conv33=$38<<16>>16;var $cmp34=($conv32|0)<($conv33|0);if($cmp34){__label__=12;break}else{__label__=14;break}case 12:var $39=$t1;var $40=$p;var $41=HEAP16[$40>>1];var $42=$p1;var $43=HEAP16[$42>>1];var $44=$pOverflow_addr;var $call37=_L_mac202($39,$41,$43,$44);$t1=$call37;__label__=13;break;case 13:var $45=$i;var $inc39=$45+1&65535;$i=$inc39;var $46=$p;var $incdec_ptr40=$46+2|0;$p=$incdec_ptr40;var $47=$p1;var $incdec_ptr41=$47+2|0;$p1=$incdec_ptr41;__label__=11;break;case 14:var $48=$t0;var $49=$pOverflow_addr;var $call43=_L_shl200($48,1,$49);$L_temp=$call43;var $50=$t1;var $51=$pOverflow_addr;var $call44=_L_shl200($50,1,$51);$t1=$call44;var $52=$L_temp;var $53=$t1;var $54=$pOverflow_addr;var $call45=_L_sub201($52,$53,$54);$t0=$call45;var $55=$t0;var $call46=_L_abs($55);$t0=$call46;var $56=$max;var $call47=_norm_l($56);$t016=$call47;var $57=$t016;var $conv48=$57<<16>>16;var $sub49=$conv48-1|0;var $conv50=$sub49&65535;$shift1=$conv50;var $58=$max;var $59=$shift1;var $60=$pOverflow_addr;var $call51=_L_shl200($58,$59,$60);$L_temp=$call51;var $61=$L_temp;var $shr=$61>>16;var $conv52=$shr&65535;$max16=$conv52;var $62=$t0;var $call53=_norm_l($62);$shift2=$call53;var $63=$t0;var $64=$shift2;var $65=$pOverflow_addr;var $call54=_L_shl200($63,$64,$65);$L_temp=$call54;var $66=$L_temp;var $shr55=$66>>16;var $conv56=$shr55&65535;$t016=$conv56;var $67=$t016;var $conv57=$67<<16>>16;var $cmp58=($conv57|0)!=0;if($cmp58){__label__=15;break}else{__label__=16;break}case 15:var $68=$max16;var $69=$t016;var $call61=_div_s($68,$69);$cor_max=$call61;__label__=17;break;case 16:$cor_max=0;__label__=17;break;case 17:var $70=$shift1;var $conv63=$70<<16>>16;var $71=$shift2;var $conv64=$71<<16>>16;var $sub65=$conv63-$conv64|0;var $conv66=$sub65&65535;$shift=$conv66;var $72=$shift;var $conv67=$72<<16>>16;var $cmp68=($conv67|0)>=0;if($cmp68){__label__=18;break}else{__label__=19;break}case 18:var $73=$cor_max;var $74=$shift;var $75=$pOverflow_addr;var $call71=_shr($73,$74,$75);var $76=$cor_hp_max_addr;HEAP16[$76>>1]=$call71;__label__=20;break;case 19:var $77=$cor_max;var $78=$shift;var $call73=_negate204($78);var $79=$pOverflow_addr;var $call74=_shl203($77,$call73,$79);var $80=$cor_hp_max_addr;HEAP16[$80>>1]=$call74;__label__=20;break;case 20:;return 0;default:assert(0,"bad label: "+__label__)}}_hp_max["X"]=1;function _L_mac202($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac202["X"]=1;function _shl203($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl203["X"]=1;function _negate204($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _amrnb_fxp_mac_16_by_16bb207($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _if2_to_ets($frame_type_3gpp,$if2_input_ptr,$ets_output_ptr,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $frame_type_3gpp_addr;var $if2_input_ptr_addr;var $ets_output_ptr_addr;var $common_amr_tbls_addr;var $i;var $j;var $x;var $numCompressedBytes_ptr;var $numOfBits_ptr;var $reorderBits_ptr;$frame_type_3gpp_addr=$frame_type_3gpp;$if2_input_ptr_addr=$if2_input_ptr;$ets_output_ptr_addr=$ets_output_ptr;$common_amr_tbls_addr=$common_amr_tbls;$x=0;var $0=$common_amr_tbls_addr;var $numCompressedBytes_ptr1=$0+104|0;var $1=HEAP32[$numCompressedBytes_ptr1>>2];$numCompressedBytes_ptr=$1;var $2=$common_amr_tbls_addr;var $numOfBits_ptr2=$2+96|0;var $3=HEAP32[$numOfBits_ptr2>>2];$numOfBits_ptr=$3;var $4=$common_amr_tbls_addr;var $reorderBits_ptr3=$4+100|0;var $5=HEAP32[$reorderBits_ptr3>>2];$reorderBits_ptr=$5;var $6=$frame_type_3gpp_addr;var $cmp=$6>>>0<8;if($cmp){__label__=1;break}else{__label__=16;break}case 1:$j=4;__label__=2;break;case 2:var $7=$j;var $conv=$7<<16>>16;var $cmp4=($conv|0)<8;if($cmp4){__label__=3;break}else{__label__=5;break}case 3:var $8=$if2_input_ptr_addr;var $arrayidx=$8|0;var $9=HEAPU8[$arrayidx];var $conv6=$9&255;var $10=$j;var $conv7=$10<<16>>16;var $shr=$conv6>>($conv7|0);var $and=$shr&1;var $conv8=$and&65535;var $11=$x;var $inc=$11+1&65535;$x=$inc;var $idxprom=$11<<16>>16;var $12=$frame_type_3gpp_addr;var $13=$reorderBits_ptr;var $arrayidx9=$13+($12<<2)|0;var $14=HEAP32[$arrayidx9>>2];var $arrayidx10=$14+($idxprom<<1)|0;var $15=HEAP16[$arrayidx10>>1];var $idxprom11=$15<<16>>16;var $16=$ets_output_ptr_addr;var $arrayidx12=$16+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$conv8;__label__=4;break;case 4:var $17=$j;var $inc13=$17+1&65535;$j=$inc13;__label__=2;break;case 5:$i=1;__label__=6;break;case 6:var $18=$i;var $conv15=$18<<16>>16;var $19=$frame_type_3gpp_addr;var $20=$numCompressedBytes_ptr;var $arrayidx16=$20+($19<<1)|0;var $21=HEAP16[$arrayidx16>>1];var $conv17=$21<<16>>16;var $cmp18=($conv15|0)<($conv17|0);if($cmp18){__label__=7;break}else{__label__=15;break}case 7:$j=0;__label__=8;break;case 8:var $22=$j;var $conv22=$22<<16>>16;var $cmp23=($conv22|0)<8;if($cmp23){__label__=9;break}else{__label__=13;break}case 9:var $23=$x;var $conv26=$23<<16>>16;var $24=$frame_type_3gpp_addr;var $25=$numOfBits_ptr;var $arrayidx27=$25+($24<<1)|0;var $26=HEAP16[$arrayidx27>>1];var $conv28=$26<<16>>16;var $cmp29=($conv26|0)>=($conv28|0);if($cmp29){__label__=10;break}else{__label__=11;break}case 10:__label__=13;break;case 11:var $27=$i;var $idxprom32=$27<<16>>16;var $28=$if2_input_ptr_addr;var $arrayidx33=$28+$idxprom32|0;var $29=HEAPU8[$arrayidx33];var $conv34=$29&255;var $30=$j;var $conv35=$30<<16>>16;var $shr36=$conv34>>($conv35|0);var $and37=$shr36&1;var $conv38=$and37&65535;var $31=$x;var $inc39=$31+1&65535;$x=$inc39;var $idxprom40=$31<<16>>16;var $32=$frame_type_3gpp_addr;var $33=$reorderBits_ptr;var $arrayidx41=$33+($32<<2)|0;var $34=HEAP32[$arrayidx41>>2];var $arrayidx42=$34+($idxprom40<<1)|0;var $35=HEAP16[$arrayidx42>>1];var $idxprom43=$35<<16>>16;var $36=$ets_output_ptr_addr;var $arrayidx44=$36+($idxprom43<<1)|0;HEAP16[$arrayidx44>>1]=$conv38;__label__=12;break;case 12:var $37=$j;var $inc46=$37+1&65535;$j=$inc46;__label__=8;break;case 13:__label__=14;break;case 14:var $38=$i;var $inc49=$38+1&65535;$i=$inc49;__label__=6;break;case 15:__label__=29;break;case 16:$j=4;__label__=17;break;case 17:var $39=$j;var $conv52=$39<<16>>16;var $cmp53=($conv52|0)<8;if($cmp53){__label__=18;break}else{__label__=20;break}case 18:var $40=$if2_input_ptr_addr;var $arrayidx56=$40|0;var $41=HEAPU8[$arrayidx56];var $conv57=$41&255;var $42=$j;var $conv58=$42<<16>>16;var $shr59=$conv57>>($conv58|0);var $and60=$shr59&1;var $conv61=$and60&65535;var $43=$x;var $inc62=$43+1&65535;$x=$inc62;var $idxprom63=$43<<16>>16;var $44=$ets_output_ptr_addr;var $arrayidx64=$44+($idxprom63<<1)|0;HEAP16[$arrayidx64>>1]=$conv61;__label__=19;break;case 19:var $45=$j;var $inc66=$45+1&65535;$j=$inc66;__label__=17;break;case 20:$i=1;__label__=21;break;case 21:var $46=$i;var $conv69=$46<<16>>16;var $47=$frame_type_3gpp_addr;var $48=$numCompressedBytes_ptr;var $arrayidx70=$48+($47<<1)|0;var $49=HEAP16[$arrayidx70>>1];var $conv71=$49<<16>>16;var $cmp72=($conv69|0)<($conv71|0);if($cmp72){__label__=22;break}else{__label__=28;break}case 22:$j=0;__label__=23;break;case 23:var $50=$j;var $conv76=$50<<16>>16;var $cmp77=($conv76|0)<8;if($cmp77){__label__=24;break}else{__label__=26;break}case 24:var $51=$i;var $idxprom80=$51<<16>>16;var $52=$if2_input_ptr_addr;var $arrayidx81=$52+$idxprom80|0;var $53=HEAPU8[$arrayidx81];var $conv82=$53&255;var $54=$j;var $conv83=$54<<16>>16;var $shr84=$conv82>>($conv83|0);var $and85=$shr84&1;var $conv86=$and85&65535;var $55=$x;var $inc87=$55+1&65535;$x=$inc87;var $idxprom88=$55<<16>>16;var $56=$ets_output_ptr_addr;var $arrayidx89=$56+($idxprom88<<1)|0;HEAP16[$arrayidx89>>1]=$conv86;__label__=25;break;case 25:var $57=$j;var $inc91=$57+1&65535;$j=$inc91;__label__=23;break;case 26:__label__=27;break;case 27:var $58=$i;var $inc94=$58+1&65535;$i=$inc94;__label__=21;break;case 28:__label__=29;break;case 29:;return;default:assert(0,"bad label: "+__label__)}}_if2_to_ets["X"]=1;function _Interpol_3or6($pX,$frac,$flag3,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pX_addr;var $frac_addr;var $flag3_addr;var $pOverflow_addr;var $i;var $k;var $pX1;var $pX2;var $pC1;var $pC2;var $s;var $temp1;$pX_addr=$pX;$frac_addr=$frac;$flag3_addr=$flag3;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$flag3_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $2=$frac_addr;var $conv2=$2<<16>>16;var $shl=$conv2<<1;var $conv3=$shl&65535;$frac_addr=$conv3;__label__=2;break;case 2:var $3=$frac_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<0;if($cmp5){__label__=3;break}else{__label__=4;break}case 3:var $4=$frac_addr;var $conv8=$4<<16>>16;var $add=$conv8+6|0;var $conv9=$add&65535;$frac_addr=$conv9;var $5=$pX_addr;var $incdec_ptr=$5-2|0;$pX_addr=$incdec_ptr;__label__=4;break;case 4:var $6=$pX_addr;var $arrayidx=$6|0;$pX1=$arrayidx;var $7=$pX_addr;var $arrayidx11=$7+2|0;$pX2=$arrayidx11;var $8=$frac_addr;var $idxprom=$8<<16>>16;var $arrayidx12=_inter_6+($idxprom<<1)|0;$pC1=$arrayidx12;var $9=$frac_addr;var $conv13=$9<<16>>16;var $sub=6-$conv13|0;var $conv14=$sub&65535;$temp1=$conv14;var $10=$temp1;var $idxprom15=$10<<16>>16;var $arrayidx16=_inter_6+($idxprom15<<1)|0;$pC2=$arrayidx16;$s=16384;$k=0;$i=2;__label__=5;break;case 5:var $11=$i;var $conv17=$11<<16>>16;var $cmp18=($conv17|0)!=0;if($cmp18){__label__=6;break}else{__label__=8;break}case 6:var $12=$pX1;var $incdec_ptr20=$12-2|0;$pX1=$incdec_ptr20;var $13=HEAP16[$12>>1];var $conv21=$13<<16>>16;var $14=$k;var $idxprom22=$14<<16>>16;var $15=$pC1;var $arrayidx23=$15+($idxprom22<<1)|0;var $16=HEAP16[$arrayidx23>>1];var $conv24=$16<<16>>16;var $17=$s;var $call=_amrnb_fxp_mac_16_by_16bb207($conv21,$conv24,$17);$s=$call;var $18=$pX2;var $incdec_ptr25=$18+2|0;$pX2=$incdec_ptr25;var $19=HEAP16[$18>>1];var $conv26=$19<<16>>16;var $20=$k;var $idxprom27=$20<<16>>16;var $21=$pC2;var $arrayidx28=$21+($idxprom27<<1)|0;var $22=HEAP16[$arrayidx28>>1];var $conv29=$22<<16>>16;var $23=$s;var $call30=_amrnb_fxp_mac_16_by_16bb207($conv26,$conv29,$23);$s=$call30;var $24=$k;var $conv31=$24<<16>>16;var $add32=$conv31+6|0;var $conv33=$add32&65535;$k=$conv33;var $25=$pX1;var $incdec_ptr34=$25-2|0;$pX1=$incdec_ptr34;var $26=HEAP16[$25>>1];var $conv35=$26<<16>>16;var $27=$k;var $idxprom36=$27<<16>>16;var $28=$pC1;var $arrayidx37=$28+($idxprom36<<1)|0;var $29=HEAP16[$arrayidx37>>1];var $conv38=$29<<16>>16;var $30=$s;var $call39=_amrnb_fxp_mac_16_by_16bb207($conv35,$conv38,$30);$s=$call39;var $31=$pX2;var $incdec_ptr40=$31+2|0;$pX2=$incdec_ptr40;var $32=HEAP16[$31>>1];var $conv41=$32<<16>>16;var $33=$k;var $idxprom42=$33<<16>>16;var $34=$pC2;var $arrayidx43=$34+($idxprom42<<1)|0;var $35=HEAP16[$arrayidx43>>1];var $conv44=$35<<16>>16;var $36=$s;var $call45=_amrnb_fxp_mac_16_by_16bb207($conv41,$conv44,$36);$s=$call45;var $37=$k;var $conv46=$37<<16>>16;var $shl47=$conv46<<1;var $conv48=$shl47&65535;$k=$conv48;__label__=7;break;case 7:var $38=$i;var $dec=$38-1&65535;$i=$dec;__label__=5;break;case 8:var $39=$s;var $shr=$39>>15;var $conv49=$shr&65535;return $conv49;default:assert(0,"bad label: "+__label__)}}_Interpol_3or6["X"]=1;function _Int_lpc_1and3($lsp_old,$lsp_mid,$lsp_new,$Az,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_old_addr;var $lsp_mid_addr;var $lsp_new_addr;var $Az_addr;var $pOverflow_addr;var $i;var $lsp=__stackBase__;var $p_lsp_old;var $p_lsp_mid;var $p_lsp_new;var $p_lsp;$lsp_old_addr=$lsp_old;$lsp_mid_addr=$lsp_mid;$lsp_new_addr=$lsp_new;$Az_addr=$Az;$pOverflow_addr=$pOverflow;var $0=$lsp_old_addr;var $arrayidx=$0|0;$p_lsp_old=$arrayidx;var $1=$lsp_mid_addr;var $arrayidx1=$1|0;$p_lsp_mid=$arrayidx1;var $2=$lsp_new_addr;var $arrayidx2=$2|0;$p_lsp_new=$arrayidx2;var $arrayidx3=$lsp|0;$p_lsp=$arrayidx3;$i=5;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$p_lsp_old;var $incdec_ptr=$4+2|0;$p_lsp_old=$incdec_ptr;var $5=HEAP16[$4>>1];var $conv5=$5<<16>>16;var $shr=$conv5>>1;var $6=$p_lsp_mid;var $incdec_ptr6=$6+2|0;$p_lsp_mid=$incdec_ptr6;var $7=HEAP16[$6>>1];var $conv7=$7<<16>>16;var $shr8=$conv7>>1;var $add=$shr+$shr8|0;var $conv9=$add&65535;var $8=$p_lsp;var $incdec_ptr10=$8+2|0;$p_lsp=$incdec_ptr10;HEAP16[$8>>1]=$conv9;var $9=$p_lsp_old;var $incdec_ptr11=$9+2|0;$p_lsp_old=$incdec_ptr11;var $10=HEAP16[$9>>1];var $conv12=$10<<16>>16;var $shr13=$conv12>>1;var $11=$p_lsp_mid;var $incdec_ptr14=$11+2|0;$p_lsp_mid=$incdec_ptr14;var $12=HEAP16[$11>>1];var $conv15=$12<<16>>16;var $shr16=$conv15>>1;var $add17=$shr13+$shr16|0;var $conv18=$add17&65535;var $13=$p_lsp;var $incdec_ptr19=$13+2|0;$p_lsp=$incdec_ptr19;HEAP16[$13>>1]=$conv18;__label__=3;break;case 3:var $14=$i;var $dec=$14-1&65535;$i=$dec;__label__=1;break;case 4:var $arraydecay=$lsp|0;var $15=$Az_addr;var $16=$pOverflow_addr;_Lsp_Az($arraydecay,$15,$16);var $17=$Az_addr;var $add_ptr=$17+22|0;$Az_addr=$add_ptr;var $18=$lsp_mid_addr;var $19=$Az_addr;var $20=$pOverflow_addr;_Lsp_Az($18,$19,$20);var $21=$Az_addr;var $add_ptr20=$21+22|0;$Az_addr=$add_ptr20;var $22=$lsp_mid_addr;var $arrayidx21=$22|0;$p_lsp_mid=$arrayidx21;var $arrayidx22=$lsp|0;$p_lsp=$arrayidx22;$i=5;__label__=5;break;case 5:var $23=$i;var $conv24=$23<<16>>16;var $cmp25=($conv24|0)!=0;if($cmp25){__label__=6;break}else{__label__=8;break}case 6:var $24=$p_lsp_mid;var $incdec_ptr28=$24+2|0;$p_lsp_mid=$incdec_ptr28;var $25=HEAP16[$24>>1];var $conv29=$25<<16>>16;var $shr30=$conv29>>1;var $26=$p_lsp_new;var $incdec_ptr31=$26+2|0;$p_lsp_new=$incdec_ptr31;var $27=HEAP16[$26>>1];var $conv32=$27<<16>>16;var $shr33=$conv32>>1;var $add34=$shr30+$shr33|0;var $conv35=$add34&65535;var $28=$p_lsp;var $incdec_ptr36=$28+2|0;$p_lsp=$incdec_ptr36;HEAP16[$28>>1]=$conv35;var $29=$p_lsp_mid;var $incdec_ptr37=$29+2|0;$p_lsp_mid=$incdec_ptr37;var $30=HEAP16[$29>>1];var $conv38=$30<<16>>16;var $shr39=$conv38>>1;var $31=$p_lsp_new;var $incdec_ptr40=$31+2|0;$p_lsp_new=$incdec_ptr40;var $32=HEAP16[$31>>1];var $conv41=$32<<16>>16;var $shr42=$conv41>>1;var $add43=$shr39+$shr42|0;var $conv44=$add43&65535;var $33=$p_lsp;var $incdec_ptr45=$33+2|0;$p_lsp=$incdec_ptr45;HEAP16[$33>>1]=$conv44;__label__=7;break;case 7:var $34=$i;var $dec47=$34-1&65535;$i=$dec47;__label__=5;break;case 8:var $arraydecay49=$lsp|0;var $35=$Az_addr;var $36=$pOverflow_addr;_Lsp_Az($arraydecay49,$35,$36);var $37=$Az_addr;var $add_ptr50=$37+22|0;$Az_addr=$add_ptr50;var $38=$lsp_new_addr;var $39=$Az_addr;var $40=$pOverflow_addr;_Lsp_Az($38,$39,$40);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Int_lpc_1and3["X"]=1;function _Int_lpc_1and3_2($lsp_old,$lsp_mid,$lsp_new,$Az,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_old_addr;var $lsp_mid_addr;var $lsp_new_addr;var $Az_addr;var $pOverflow_addr;var $i;var $lsp=__stackBase__;var $p_lsp_old;var $p_lsp_mid;var $p_lsp_new;var $p_lsp;$lsp_old_addr=$lsp_old;$lsp_mid_addr=$lsp_mid;$lsp_new_addr=$lsp_new;$Az_addr=$Az;$pOverflow_addr=$pOverflow;var $0=$lsp_old_addr;var $arrayidx=$0|0;$p_lsp_old=$arrayidx;var $1=$lsp_mid_addr;var $arrayidx1=$1|0;$p_lsp_mid=$arrayidx1;var $2=$lsp_new_addr;var $arrayidx2=$2|0;$p_lsp_new=$arrayidx2;var $arrayidx3=$lsp|0;$p_lsp=$arrayidx3;$i=5;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$p_lsp_old;var $incdec_ptr=$4+2|0;$p_lsp_old=$incdec_ptr;var $5=HEAP16[$4>>1];var $conv5=$5<<16>>16;var $shr=$conv5>>1;var $6=$p_lsp_mid;var $incdec_ptr6=$6+2|0;$p_lsp_mid=$incdec_ptr6;var $7=HEAP16[$6>>1];var $conv7=$7<<16>>16;var $shr8=$conv7>>1;var $add=$shr+$shr8|0;var $conv9=$add&65535;var $8=$p_lsp;var $incdec_ptr10=$8+2|0;$p_lsp=$incdec_ptr10;HEAP16[$8>>1]=$conv9;var $9=$p_lsp_old;var $incdec_ptr11=$9+2|0;$p_lsp_old=$incdec_ptr11;var $10=HEAP16[$9>>1];var $conv12=$10<<16>>16;var $shr13=$conv12>>1;var $11=$p_lsp_mid;var $incdec_ptr14=$11+2|0;$p_lsp_mid=$incdec_ptr14;var $12=HEAP16[$11>>1];var $conv15=$12<<16>>16;var $shr16=$conv15>>1;var $add17=$shr13+$shr16|0;var $conv18=$add17&65535;var $13=$p_lsp;var $incdec_ptr19=$13+2|0;$p_lsp=$incdec_ptr19;HEAP16[$13>>1]=$conv18;__label__=3;break;case 3:var $14=$i;var $dec=$14-1&65535;$i=$dec;__label__=1;break;case 4:var $arraydecay=$lsp|0;var $15=$Az_addr;var $16=$pOverflow_addr;_Lsp_Az($arraydecay,$15,$16);var $17=$Az_addr;var $add_ptr=$17+44|0;$Az_addr=$add_ptr;var $18=$lsp_mid_addr;var $arrayidx20=$18|0;$p_lsp_mid=$arrayidx20;var $arrayidx21=$lsp|0;$p_lsp=$arrayidx21;$i=5;__label__=5;break;case 5:var $19=$i;var $conv23=$19<<16>>16;var $cmp24=($conv23|0)!=0;if($cmp24){__label__=6;break}else{__label__=8;break}case 6:var $20=$p_lsp_mid;var $incdec_ptr27=$20+2|0;$p_lsp_mid=$incdec_ptr27;var $21=HEAP16[$20>>1];var $conv28=$21<<16>>16;var $shr29=$conv28>>1;var $22=$p_lsp_new;var $incdec_ptr30=$22+2|0;$p_lsp_new=$incdec_ptr30;var $23=HEAP16[$22>>1];var $conv31=$23<<16>>16;var $shr32=$conv31>>1;var $add33=$shr29+$shr32|0;var $conv34=$add33&65535;var $24=$p_lsp;var $incdec_ptr35=$24+2|0;$p_lsp=$incdec_ptr35;HEAP16[$24>>1]=$conv34;var $25=$p_lsp_mid;var $incdec_ptr36=$25+2|0;$p_lsp_mid=$incdec_ptr36;var $26=HEAP16[$25>>1];var $conv37=$26<<16>>16;var $shr38=$conv37>>1;var $27=$p_lsp_new;var $incdec_ptr39=$27+2|0;$p_lsp_new=$incdec_ptr39;var $28=HEAP16[$27>>1];var $conv40=$28<<16>>16;var $shr41=$conv40>>1;var $add42=$shr38+$shr41|0;var $conv43=$add42&65535;var $29=$p_lsp;var $incdec_ptr44=$29+2|0;$p_lsp=$incdec_ptr44;HEAP16[$29>>1]=$conv43;__label__=7;break;case 7:var $30=$i;var $dec46=$30-1&65535;$i=$dec46;__label__=5;break;case 8:var $arraydecay48=$lsp|0;var $31=$Az_addr;var $32=$pOverflow_addr;_Lsp_Az($arraydecay48,$31,$32);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Int_lpc_1and3_2["X"]=1;function _L_abs($L_var1){var __label__;var $L_var1_addr;var $y;$L_var1_addr=$L_var1;var $0=$L_var1_addr;var $1=$L_var1_addr;var $cmp=($1|0)<0;var $conv=$cmp&1;var $sub=$0-$conv|0;$y=$sub;var $2=$y;var $3=$y;var $shr=$3>>31;var $xor=$2^$shr;$y=$xor;var $4=$y;return $4}function _Int_lpc_1to3($lsp_old,$lsp_new,$Az,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_old_addr;var $lsp_new_addr;var $Az_addr;var $pOverflow_addr;var $i;var $temp;var $lsp=__stackBase__;$lsp_old_addr=$lsp_old;$lsp_new_addr=$lsp_new;$Az_addr=$Az;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$lsp_old_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $4=$i;var $idxprom3=$4<<16>>16;var $5=$lsp_old_addr;var $arrayidx4=$5+($idxprom3<<1)|0;var $6=HEAP16[$arrayidx4>>1];var $conv5=$6<<16>>16;var $shr=$conv5>>2;var $sub=$conv2-$shr|0;var $conv6=$sub&65535;$temp=$conv6;var $7=$temp;var $conv7=$7<<16>>16;var $8=$i;var $idxprom8=$8<<16>>16;var $9=$lsp_new_addr;var $arrayidx9=$9+($idxprom8<<1)|0;var $10=HEAP16[$arrayidx9>>1];var $conv10=$10<<16>>16;var $shr11=$conv10>>2;var $add=$conv7+$shr11|0;var $conv12=$add&65535;var $11=$i;var $idxprom13=$11<<16>>16;var $arrayidx14=$lsp+($idxprom13<<1)|0;HEAP16[$arrayidx14>>1]=$conv12;__label__=3;break;case 3:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=1;break;case 4:var $arraydecay=$lsp|0;var $13=$Az_addr;var $14=$pOverflow_addr;_Lsp_Az($arraydecay,$13,$14);var $15=$Az_addr;var $add_ptr=$15+22|0;$Az_addr=$add_ptr;$i=0;__label__=5;break;case 5:var $16=$i;var $conv16=$16<<16>>16;var $cmp17=($conv16|0)<10;if($cmp17){__label__=6;break}else{__label__=8;break}case 6:var $17=$i;var $idxprom20=$17<<16>>16;var $18=$lsp_new_addr;var $arrayidx21=$18+($idxprom20<<1)|0;var $19=HEAP16[$arrayidx21>>1];var $conv22=$19<<16>>16;var $shr23=$conv22>>1;var $20=$i;var $idxprom24=$20<<16>>16;var $21=$lsp_old_addr;var $arrayidx25=$21+($idxprom24<<1)|0;var $22=HEAP16[$arrayidx25>>1];var $conv26=$22<<16>>16;var $shr27=$conv26>>1;var $add28=$shr23+$shr27|0;var $conv29=$add28&65535;var $23=$i;var $idxprom30=$23<<16>>16;var $arrayidx31=$lsp+($idxprom30<<1)|0;HEAP16[$arrayidx31>>1]=$conv29;__label__=7;break;case 7:var $24=$i;var $inc33=$24+1&65535;$i=$inc33;__label__=5;break;case 8:var $arraydecay35=$lsp|0;var $25=$Az_addr;var $26=$pOverflow_addr;_Lsp_Az($arraydecay35,$25,$26);var $27=$Az_addr;var $add_ptr36=$27+22|0;$Az_addr=$add_ptr36;$i=0;__label__=9;break;case 9:var $28=$i;var $conv38=$28<<16>>16;var $cmp39=($conv38|0)<10;if($cmp39){__label__=10;break}else{__label__=12;break}case 10:var $29=$i;var $idxprom42=$29<<16>>16;var $30=$lsp_new_addr;var $arrayidx43=$30+($idxprom42<<1)|0;var $31=HEAP16[$arrayidx43>>1];var $conv44=$31<<16>>16;var $32=$i;var $idxprom45=$32<<16>>16;var $33=$lsp_new_addr;var $arrayidx46=$33+($idxprom45<<1)|0;var $34=HEAP16[$arrayidx46>>1];var $conv47=$34<<16>>16;var $shr48=$conv47>>2;var $sub49=$conv44-$shr48|0;var $conv50=$sub49&65535;$temp=$conv50;var $35=$temp;var $conv51=$35<<16>>16;var $36=$i;var $idxprom52=$36<<16>>16;var $37=$lsp_old_addr;var $arrayidx53=$37+($idxprom52<<1)|0;var $38=HEAP16[$arrayidx53>>1];var $conv54=$38<<16>>16;var $shr55=$conv54>>2;var $add56=$conv51+$shr55|0;var $conv57=$add56&65535;var $39=$i;var $idxprom58=$39<<16>>16;var $arrayidx59=$lsp+($idxprom58<<1)|0;HEAP16[$arrayidx59>>1]=$conv57;__label__=11;break;case 11:var $40=$i;var $inc61=$40+1&65535;$i=$inc61;__label__=9;break;case 12:var $arraydecay63=$lsp|0;var $41=$Az_addr;var $42=$pOverflow_addr;_Lsp_Az($arraydecay63,$41,$42);var $43=$Az_addr;var $add_ptr64=$43+22|0;$Az_addr=$add_ptr64;var $44=$lsp_new_addr;var $45=$Az_addr;var $46=$pOverflow_addr;_Lsp_Az($44,$45,$46);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Int_lpc_1to3["X"]=1;function _Int_lpc_1to3_2($lsp_old,$lsp_new,$Az,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_old_addr;var $lsp_new_addr;var $Az_addr;var $pOverflow_addr;var $i;var $temp;var $lsp=__stackBase__;$lsp_old_addr=$lsp_old;$lsp_new_addr=$lsp_new;$Az_addr=$Az;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$lsp_old_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $4=$i;var $idxprom3=$4<<16>>16;var $5=$lsp_old_addr;var $arrayidx4=$5+($idxprom3<<1)|0;var $6=HEAP16[$arrayidx4>>1];var $conv5=$6<<16>>16;var $shr=$conv5>>2;var $sub=$conv2-$shr|0;var $conv6=$sub&65535;$temp=$conv6;var $7=$temp;var $conv7=$7<<16>>16;var $8=$i;var $idxprom8=$8<<16>>16;var $9=$lsp_new_addr;var $arrayidx9=$9+($idxprom8<<1)|0;var $10=HEAP16[$arrayidx9>>1];var $conv10=$10<<16>>16;var $shr11=$conv10>>2;var $add=$conv7+$shr11|0;var $conv12=$add&65535;var $11=$i;var $idxprom13=$11<<16>>16;var $arrayidx14=$lsp+($idxprom13<<1)|0;HEAP16[$arrayidx14>>1]=$conv12;__label__=3;break;case 3:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=1;break;case 4:var $arraydecay=$lsp|0;var $13=$Az_addr;var $14=$pOverflow_addr;_Lsp_Az($arraydecay,$13,$14);var $15=$Az_addr;var $add_ptr=$15+22|0;$Az_addr=$add_ptr;$i=0;__label__=5;break;case 5:var $16=$i;var $conv16=$16<<16>>16;var $cmp17=($conv16|0)<10;if($cmp17){__label__=6;break}else{__label__=8;break}case 6:var $17=$i;var $idxprom20=$17<<16>>16;var $18=$lsp_new_addr;var $arrayidx21=$18+($idxprom20<<1)|0;var $19=HEAP16[$arrayidx21>>1];var $conv22=$19<<16>>16;var $shr23=$conv22>>1;var $20=$i;var $idxprom24=$20<<16>>16;var $21=$lsp_old_addr;var $arrayidx25=$21+($idxprom24<<1)|0;var $22=HEAP16[$arrayidx25>>1];var $conv26=$22<<16>>16;var $shr27=$conv26>>1;var $add28=$shr23+$shr27|0;var $conv29=$add28&65535;var $23=$i;var $idxprom30=$23<<16>>16;var $arrayidx31=$lsp+($idxprom30<<1)|0;HEAP16[$arrayidx31>>1]=$conv29;__label__=7;break;case 7:var $24=$i;var $inc33=$24+1&65535;$i=$inc33;__label__=5;break;case 8:var $arraydecay35=$lsp|0;var $25=$Az_addr;var $26=$pOverflow_addr;_Lsp_Az($arraydecay35,$25,$26);var $27=$Az_addr;var $add_ptr36=$27+22|0;$Az_addr=$add_ptr36;$i=0;__label__=9;break;case 9:var $28=$i;var $conv38=$28<<16>>16;var $cmp39=($conv38|0)<10;if($cmp39){__label__=10;break}else{__label__=12;break}case 10:var $29=$i;var $idxprom42=$29<<16>>16;var $30=$lsp_new_addr;var $arrayidx43=$30+($idxprom42<<1)|0;var $31=HEAP16[$arrayidx43>>1];var $conv44=$31<<16>>16;var $32=$i;var $idxprom45=$32<<16>>16;var $33=$lsp_new_addr;var $arrayidx46=$33+($idxprom45<<1)|0;var $34=HEAP16[$arrayidx46>>1];var $conv47=$34<<16>>16;var $shr48=$conv47>>2;var $sub49=$conv44-$shr48|0;var $conv50=$sub49&65535;$temp=$conv50;var $35=$temp;var $conv51=$35<<16>>16;var $36=$i;var $idxprom52=$36<<16>>16;var $37=$lsp_old_addr;var $arrayidx53=$37+($idxprom52<<1)|0;var $38=HEAP16[$arrayidx53>>1];var $conv54=$38<<16>>16;var $shr55=$conv54>>2;var $add56=$conv51+$shr55|0;var $conv57=$add56&65535;var $39=$i;var $idxprom58=$39<<16>>16;var $arrayidx59=$lsp+($idxprom58<<1)|0;HEAP16[$arrayidx59>>1]=$conv57;__label__=11;break;case 11:var $40=$i;var $inc61=$40+1&65535;$i=$inc61;__label__=9;break;case 12:var $arraydecay63=$lsp|0;var $41=$Az_addr;var $42=$pOverflow_addr;_Lsp_Az($arraydecay63,$41,$42);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Int_lpc_1to3_2["X"]=1;function _Int_lsf($lsf_old,$lsf_new,$i_subfr,$lsf_out,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_old_addr;var $lsf_new_addr;var $i_subfr_addr;var $lsf_out_addr;var $pOverflow_addr;var $i;var $temp1;var $temp2;$lsf_old_addr=$lsf_old;$lsf_new_addr=$lsf_new;$i_subfr_addr=$i_subfr;$lsf_out_addr=$lsf_out;$pOverflow_addr=$pOverflow;var $0=$i_subfr_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=12;break}case 1:$i=9;__label__=2;break;case 2:var $1=$i;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)>=0;if($cmp3){__label__=3;break}else{__label__=11;break}case 3:var $2=$lsf_old_addr;var $3=$i;var $conv5=$3<<16>>16;var $add_ptr=$2+($conv5<<1)|0;var $4=HEAP16[$add_ptr>>1];var $conv6=$4<<16>>16;var $cmp7=($conv6|0)<0;if($cmp7){__label__=4;break}else{__label__=5;break}case 4:var $5=$lsf_old_addr;var $6=$i;var $conv10=$6<<16>>16;var $add_ptr11=$5+($conv10<<1)|0;var $7=HEAP16[$add_ptr11>>1];var $conv12=$7<<16>>16;var $neg=$conv12^-1;var $shr=$neg>>2;var $neg13=$shr^-1;var $conv14=$neg13&65535;$temp1=$conv14;__label__=6;break;case 5:var $8=$lsf_old_addr;var $9=$i;var $conv15=$9<<16>>16;var $add_ptr16=$8+($conv15<<1)|0;var $10=HEAP16[$add_ptr16>>1];var $conv17=$10<<16>>16;var $shr18=$conv17>>2;var $conv19=$shr18&65535;$temp1=$conv19;__label__=6;break;case 6:var $11=$lsf_new_addr;var $12=$i;var $conv20=$12<<16>>16;var $add_ptr21=$11+($conv20<<1)|0;var $13=HEAP16[$add_ptr21>>1];var $conv22=$13<<16>>16;var $cmp23=($conv22|0)<0;if($cmp23){__label__=7;break}else{__label__=8;break}case 7:var $14=$lsf_new_addr;var $15=$i;var $conv26=$15<<16>>16;var $add_ptr27=$14+($conv26<<1)|0;var $16=HEAP16[$add_ptr27>>1];var $conv28=$16<<16>>16;var $neg29=$conv28^-1;var $shr30=$neg29>>2;var $neg31=$shr30^-1;var $conv32=$neg31&65535;$temp2=$conv32;__label__=9;break;case 8:var $17=$lsf_new_addr;var $18=$i;var $conv34=$18<<16>>16;var $add_ptr35=$17+($conv34<<1)|0;var $19=HEAP16[$add_ptr35>>1];var $conv36=$19<<16>>16;var $shr37=$conv36>>2;var $conv38=$shr37&65535;$temp2=$conv38;__label__=9;break;case 9:var $20=$lsf_old_addr;var $21=$i;var $conv40=$21<<16>>16;var $add_ptr41=$20+($conv40<<1)|0;var $22=HEAP16[$add_ptr41>>1];var $conv42=$22<<16>>16;var $23=$temp1;var $conv43=$23<<16>>16;var $sub=$conv42-$conv43|0;var $conv44=$sub&65535;var $24=$temp2;var $25=$pOverflow_addr;var $call=_add_16($conv44,$24,$25);var $26=$lsf_out_addr;var $27=$i;var $conv45=$27<<16>>16;var $add_ptr46=$26+($conv45<<1)|0;HEAP16[$add_ptr46>>1]=$call;__label__=10;break;case 10:var $28=$i;var $dec=$28-1&65535;$i=$dec;__label__=2;break;case 11:__label__=45;break;case 12:var $29=$i_subfr_addr;var $conv48=$29<<16>>16;var $cmp49=($conv48|0)==40;if($cmp49){__label__=13;break}else{__label__=24;break}case 13:$i=9;__label__=14;break;case 14:var $30=$i;var $conv53=$30<<16>>16;var $cmp54=($conv53|0)>=0;if($cmp54){__label__=15;break}else{__label__=23;break}case 15:var $31=$lsf_old_addr;var $32=$i;var $conv57=$32<<16>>16;var $add_ptr58=$31+($conv57<<1)|0;var $33=HEAP16[$add_ptr58>>1];var $conv59=$33<<16>>16;var $cmp60=($conv59|0)<0;if($cmp60){__label__=16;break}else{__label__=17;break}case 16:var $34=$lsf_old_addr;var $35=$i;var $conv63=$35<<16>>16;var $add_ptr64=$34+($conv63<<1)|0;var $36=HEAP16[$add_ptr64>>1];var $conv65=$36<<16>>16;var $neg66=$conv65^-1;var $shr67=$neg66>>1;var $neg68=$shr67^-1;var $conv69=$neg68&65535;$temp1=$conv69;__label__=18;break;case 17:var $37=$lsf_old_addr;var $38=$i;var $conv71=$38<<16>>16;var $add_ptr72=$37+($conv71<<1)|0;var $39=HEAP16[$add_ptr72>>1];var $conv73=$39<<16>>16;var $shr74=$conv73>>1;var $conv75=$shr74&65535;$temp1=$conv75;__label__=18;break;case 18:var $40=$lsf_new_addr;var $41=$i;var $conv77=$41<<16>>16;var $add_ptr78=$40+($conv77<<1)|0;var $42=HEAP16[$add_ptr78>>1];var $conv79=$42<<16>>16;var $cmp80=($conv79|0)<0;if($cmp80){__label__=19;break}else{__label__=20;break}case 19:var $43=$lsf_new_addr;var $44=$i;var $conv83=$44<<16>>16;var $add_ptr84=$43+($conv83<<1)|0;var $45=HEAP16[$add_ptr84>>1];var $conv85=$45<<16>>16;var $neg86=$conv85^-1;var $shr87=$neg86>>1;var $neg88=$shr87^-1;var $conv89=$neg88&65535;$temp2=$conv89;__label__=21;break;case 20:var $46=$lsf_new_addr;var $47=$i;var $conv91=$47<<16>>16;var $add_ptr92=$46+($conv91<<1)|0;var $48=HEAP16[$add_ptr92>>1];var $conv93=$48<<16>>16;var $shr94=$conv93>>1;var $conv95=$shr94&65535;$temp2=$conv95;__label__=21;break;case 21:var $49=$temp1;var $conv97=$49<<16>>16;var $50=$temp2;var $conv98=$50<<16>>16;var $add=$conv97+$conv98|0;var $conv99=$add&65535;var $51=$lsf_out_addr;var $52=$i;var $conv100=$52<<16>>16;var $add_ptr101=$51+($conv100<<1)|0;HEAP16[$add_ptr101>>1]=$conv99;__label__=22;break;case 22:var $53=$i;var $dec103=$53-1&65535;$i=$dec103;__label__=14;break;case 23:__label__=44;break;case 24:var $54=$i_subfr_addr;var $conv106=$54<<16>>16;var $cmp107=($conv106|0)==80;if($cmp107){__label__=25;break}else{__label__=36;break}case 25:$i=9;__label__=26;break;case 26:var $55=$i;var $conv111=$55<<16>>16;var $cmp112=($conv111|0)>=0;if($cmp112){__label__=27;break}else{__label__=35;break}case 27:var $56=$lsf_old_addr;var $57=$i;var $conv115=$57<<16>>16;var $add_ptr116=$56+($conv115<<1)|0;var $58=HEAP16[$add_ptr116>>1];var $conv117=$58<<16>>16;var $cmp118=($conv117|0)<0;if($cmp118){__label__=28;break}else{__label__=29;break}case 28:var $59=$lsf_old_addr;var $60=$i;var $conv121=$60<<16>>16;var $add_ptr122=$59+($conv121<<1)|0;var $61=HEAP16[$add_ptr122>>1];var $conv123=$61<<16>>16;var $neg124=$conv123^-1;var $shr125=$neg124>>2;var $neg126=$shr125^-1;var $conv127=$neg126&65535;$temp1=$conv127;__label__=30;break;case 29:var $62=$lsf_old_addr;var $63=$i;var $conv129=$63<<16>>16;var $add_ptr130=$62+($conv129<<1)|0;var $64=HEAP16[$add_ptr130>>1];var $conv131=$64<<16>>16;var $shr132=$conv131>>2;var $conv133=$shr132&65535;$temp1=$conv133;__label__=30;break;case 30:var $65=$lsf_new_addr;var $66=$i;var $conv135=$66<<16>>16;var $add_ptr136=$65+($conv135<<1)|0;var $67=HEAP16[$add_ptr136>>1];var $conv137=$67<<16>>16;var $cmp138=($conv137|0)<0;if($cmp138){__label__=31;break}else{__label__=32;break}case 31:var $68=$lsf_new_addr;var $69=$i;var $conv141=$69<<16>>16;var $add_ptr142=$68+($conv141<<1)|0;var $70=HEAP16[$add_ptr142>>1];var $conv143=$70<<16>>16;var $neg144=$conv143^-1;var $shr145=$neg144>>2;var $neg146=$shr145^-1;var $conv147=$neg146&65535;$temp2=$conv147;__label__=33;break;case 32:var $71=$lsf_new_addr;var $72=$i;var $conv149=$72<<16>>16;var $add_ptr150=$71+($conv149<<1)|0;var $73=HEAP16[$add_ptr150>>1];var $conv151=$73<<16>>16;var $shr152=$conv151>>2;var $conv153=$shr152&65535;$temp2=$conv153;__label__=33;break;case 33:var $74=$temp1;var $75=$lsf_new_addr;var $76=$i;var $conv155=$76<<16>>16;var $add_ptr156=$75+($conv155<<1)|0;var $77=HEAP16[$add_ptr156>>1];var $conv157=$77<<16>>16;var $78=$temp2;var $conv158=$78<<16>>16;var $sub159=$conv157-$conv158|0;var $conv160=$sub159&65535;var $79=$pOverflow_addr;var $call161=_add_16($74,$conv160,$79);var $80=$lsf_out_addr;var $81=$i;var $conv162=$81<<16>>16;var $add_ptr163=$80+($conv162<<1)|0;HEAP16[$add_ptr163>>1]=$call161;__label__=34;break;case 34:var $82=$i;var $dec165=$82-1&65535;$i=$dec165;__label__=26;break;case 35:__label__=43;break;case 36:var $83=$i_subfr_addr;var $conv168=$83<<16>>16;var $cmp169=($conv168|0)==120;if($cmp169){__label__=37;break}else{__label__=42;break}case 37:$i=9;__label__=38;break;case 38:var $84=$i;var $conv173=$84<<16>>16;var $cmp174=($conv173|0)>=0;if($cmp174){__label__=39;break}else{__label__=41;break}case 39:var $85=$lsf_new_addr;var $86=$i;var $conv177=$86<<16>>16;var $add_ptr178=$85+($conv177<<1)|0;var $87=HEAP16[$add_ptr178>>1];var $88=$lsf_out_addr;var $89=$i;var $conv179=$89<<16>>16;var $add_ptr180=$88+($conv179<<1)|0;HEAP16[$add_ptr180>>1]=$87;__label__=40;break;case 40:var $90=$i;var $dec182=$90-1&65535;$i=$dec182;__label__=38;break;case 41:__label__=42;break;case 42:__label__=43;break;case 43:__label__=44;break;case 44:__label__=45;break;case 45:;return;default:assert(0,"bad label: "+__label__)}}_Int_lsf["X"]=1;function _Inv_sqrt($L_x,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $L_x_addr;var $pOverflow_addr;var $exp;var $i;var $a;var $tmp;var $L_y;$L_x_addr=$L_x;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_x_addr;var $cmp=($1|0)<=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=1073741823;__label__=5;break;case 2:var $2=$L_x_addr;var $call=_norm_l($2);$exp=$call;var $3=$exp;var $conv=$3<<16>>16;var $4=$L_x_addr;var $shl=$4<<$conv;$L_x_addr=$shl;var $5=$exp;var $conv2=$5<<16>>16;var $sub=30-$conv2|0;var $conv3=$sub&65535;$exp=$conv3;var $6=$exp;var $conv4=$6<<16>>16;var $and=$conv4&1;var $cmp5=($and|0)==0;if($cmp5){__label__=3;break}else{__label__=4;break}case 3:var $7=$L_x_addr;var $shr=$7>>1;$L_x_addr=$shr;__label__=4;break;case 4:var $8=$exp;var $conv9=$8<<16>>16;var $shr10=$conv9>>1;var $conv11=$shr10&65535;$exp=$conv11;var $9=$exp;var $conv12=$9<<16>>16;var $add=$conv12+1|0;var $conv13=$add&65535;$exp=$conv13;var $10=$L_x_addr;var $shr14=$10>>9;$L_x_addr=$shr14;var $11=$L_x_addr;var $shr15=$11>>16;var $conv16=$shr15&65535;$i=$conv16;var $12=$L_x_addr;var $shr17=$12>>1;var $conv18=$shr17&65535;$a=$conv18;var $13=$a;var $conv19=$13<<16>>16;var $and20=$conv19&32767;var $conv21=$and20&65535;$a=$conv21;var $14=$i;var $conv22=$14<<16>>16;var $sub23=$conv22-16|0;var $conv24=$sub23&65535;$i=$conv24;var $15=$i;var $idxprom=$15<<16>>16;var $arrayidx=_inv_sqrt_tbl+($idxprom<<1)|0;var $16=(tempInt=HEAPU8[$arrayidx]|HEAPU8[$arrayidx+1]<<8,tempInt<<16>>16);var $conv25=$16<<16>>16;var $shl26=$conv25<<16;$L_y=$shl26;var $17=$i;var $idxprom27=$17<<16>>16;var $arrayidx28=_inv_sqrt_tbl+($idxprom27<<1)|0;var $18=(tempInt=HEAPU8[$arrayidx28]|HEAPU8[$arrayidx28+1]<<8,tempInt<<16>>16);var $conv29=$18<<16>>16;var $19=$i;var $conv30=$19<<16>>16;var $add31=$conv30+1|0;var $arrayidx32=_inv_sqrt_tbl+($add31<<1)|0;var $20=(tempInt=HEAPU8[$arrayidx32]|HEAPU8[$arrayidx32+1]<<8,tempInt<<16>>16);var $conv33=$20<<16>>16;var $sub34=$conv29-$conv33|0;var $conv35=$sub34&65535;$tmp=$conv35;var $21=$tmp;var $conv36=$21<<16>>16;var $22=$a;var $conv37=$22<<16>>16;var $mul=$conv36*$conv37|0;var $shl38=$mul<<1;var $23=$L_y;var $sub39=$23-$shl38|0;$L_y=$sub39;var $24=$exp;var $conv40=$24<<16>>16;var $25=$L_y;var $shr41=$25>>($conv40|0);$L_y=$shr41;var $26=$L_y;$retval=$26;__label__=5;break;case 5:var $27=$retval;return $27;default:assert(0,"bad label: "+__label__)}}_Inv_sqrt["X"]=1;function _Mpy_32222($L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $product32;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var1_hi_addr;var $conv=$1<<16>>16;var $2=$L_var2_hi_addr;var $conv1=$2<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $3=$L_product;var $cmp=($3|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$L_product;var $shl=$4<<1;$L_product=$shl;__label__=3;break;case 2:$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_hi_addr;var $conv3=$5<<16>>16;var $6=$L_var2_lo_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$product32=$shr;var $7=$L_product;var $8=$product32;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$product32;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$L_sum;$L_product=$14;var $15=$L_var1_lo_addr;var $conv17=$15<<16>>16;var $16=$L_var2_hi_addr;var $conv18=$16<<16>>16;var $mul19=$conv17*$conv18|0;var $shr20=$mul19>>15;$product32=$shr20;var $17=$L_product;var $18=$product32;var $shl21=$18<<1;var $add22=$17+$shl21|0;$L_sum=$add22;var $19=$L_product;var $20=$product32;var $xor23=$19^$20;var $cmp24=($xor23|0)>0;if($cmp24){__label__=8;break}else{__label__=11;break}case 8:var $21=$L_sum;var $22=$L_product;var $xor27=$21^$22;var $shr28=$xor27>>31;var $tobool29=($shr28|0)!=0;if($tobool29){__label__=9;break}else{__label__=10;break}case 9:var $23=$L_product;var $shr31=$23>>31;var $tobool32=($shr31|0)!=0;var $cond33=$tobool32?-2147483648:2147483647;$L_sum=$cond33;__label__=10;break;case 10:__label__=11;break;case 11:var $24=$L_sum;return $24;default:assert(0,"bad label: "+__label__)}}_Mpy_32222["X"]=1;function _L_mac229($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac229["X"]=1;function _L_deposit_h($var1){var __label__;var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $shl=$conv<<16;return $shl}function _L_deposit_l($var1){var __label__;var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;return $conv}function _Levinson_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$state_addr;var $old_A=$1|0;var $arrayidx=$old_A|0;HEAP16[$arrayidx>>1]=4096;$i=1;__label__=3;break;case 3:var $2=$i;var $conv=$2<<16>>16;var $cmp1=($conv|0)<11;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $3=$i;var $idxprom=$3<<16>>16;var $4=$state_addr;var $old_A3=$4|0;var $arrayidx4=$old_A3+($idxprom<<1)|0;HEAP16[$arrayidx4>>1]=0;__label__=5;break;case 5:var $5=$i;var $inc=$5+1&65535;$i=$inc;__label__=3;break;case 6:$retval=0;__label__=7;break;case 7:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _Lag_window($m,$r_h,$r_l,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $r_h_addr;var $r_l_addr;var $pOverflow_addr;var $i;var $x;var $p_lag_h;var $p_lag_l;var $p_r_h;var $p_r_l;$m_addr=$m;$r_h_addr=$r_h;$r_l_addr=$r_l;$pOverflow_addr=$pOverflow;$p_lag_h=_lag_h|0;$p_lag_l=_lag_l|0;var $0=$r_h_addr;var $arrayidx=$0+2|0;$p_r_h=$arrayidx;var $1=$r_l_addr;var $arrayidx1=$1+2|0;$p_r_l=$arrayidx1;var $2=$m_addr;$i=$2;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$p_r_h;var $5=HEAP16[$4>>1];var $6=$p_r_l;var $7=HEAP16[$6>>1];var $8=$p_lag_h;var $incdec_ptr=$8+2|0;$p_lag_h=$incdec_ptr;var $9=HEAP16[$8>>1];var $10=$p_lag_l;var $incdec_ptr3=$10+2|0;$p_lag_l=$incdec_ptr3;var $11=HEAP16[$10>>1];var $12=$pOverflow_addr;var $call=_Mpy_32222($5,$7,$9,$11,$12);$x=$call;var $13=$x;var $shr=$13>>16;var $conv4=$shr&65535;var $14=$p_r_h;HEAP16[$14>>1]=$conv4;var $15=$x;var $shr5=$15>>1;var $16=$p_r_h;var $incdec_ptr6=$16+2|0;$p_r_h=$incdec_ptr6;var $17=HEAP16[$16>>1];var $conv7=$17<<16>>16;var $shl=$conv7<<15;var $sub=$shr5-$shl|0;var $conv8=$sub&65535;var $18=$p_r_l;var $incdec_ptr9=$18+2|0;$p_r_l=$incdec_ptr9;HEAP16[$18>>1]=$conv8;__label__=3;break;case 3:var $19=$i;var $dec=$19-1&65535;$i=$dec;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_Lag_window["X"]=1;function _L_Comp($hi,$lo,$pOverflow){var __label__;var $hi_addr;var $lo_addr;var $pOverflow_addr;var $L_32;var $temp32;$hi_addr=$hi;$lo_addr=$lo;$pOverflow_addr=$pOverflow;var $0=$hi_addr;var $conv=$0<<16>>16;var $shl=$conv<<16;$L_32=$shl;var $1=$L_32;var $2=$lo_addr;var $3=$pOverflow_addr;var $call=_L_mac229($1,$2,1,$3);$temp32=$call;var $4=$temp32;return $4}function _Levinson_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(22);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_Levinson_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _Levinson_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Mpy_32230($L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $product32;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var1_hi_addr;var $conv=$1<<16>>16;var $2=$L_var2_hi_addr;var $conv1=$2<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $3=$L_product;var $cmp=($3|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$L_product;var $shl=$4<<1;$L_product=$shl;__label__=3;break;case 2:$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_hi_addr;var $conv3=$5<<16>>16;var $6=$L_var2_lo_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$product32=$shr;var $7=$L_product;var $8=$product32;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$product32;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$L_sum;$L_product=$14;var $15=$L_var1_lo_addr;var $conv17=$15<<16>>16;var $16=$L_var2_hi_addr;var $conv18=$16<<16>>16;var $mul19=$conv17*$conv18|0;var $shr20=$mul19>>15;$product32=$shr20;var $17=$L_product;var $18=$product32;var $shl21=$18<<1;var $add22=$17+$shl21|0;$L_sum=$add22;var $19=$L_product;var $20=$product32;var $xor23=$19^$20;var $cmp24=($xor23|0)>0;if($cmp24){__label__=8;break}else{__label__=11;break}case 8:var $21=$L_sum;var $22=$L_product;var $xor27=$21^$22;var $shr28=$xor27>>31;var $tobool29=($shr28|0)!=0;if($tobool29){__label__=9;break}else{__label__=10;break}case 9:var $23=$L_product;var $shr31=$23>>31;var $tobool32=($shr31|0)!=0;var $cond33=$tobool32?-2147483648:2147483647;$L_sum=$cond33;__label__=10;break;case 10:__label__=11;break;case 11:var $24=$L_sum;return $24;default:assert(0,"bad label: "+__label__)}}_Mpy_32230["X"]=1;function _L_shl231($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _abs_s232($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _L_Extract($L_var,$pL_var_hi,$pL_var_lo,$pOverflow){var __label__;var $L_var_addr;var $pL_var_hi_addr;var $pL_var_lo_addr;var $pOverflow_addr;var $temp;$L_var_addr=$L_var;$pL_var_hi_addr=$pL_var_hi;$pL_var_lo_addr=$pL_var_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var_addr;var $shr=$1>>16;$temp=$shr;var $2=$temp;var $conv=$2&65535;var $3=$pL_var_hi_addr;HEAP16[$3>>1]=$conv;var $4=$L_var_addr;var $shr1=$4>>1;var $5=$temp;var $shl=$5<<15;var $sub=$shr1-$shl|0;var $conv2=$sub&65535;var $6=$pL_var_lo_addr;HEAP16[$6>>1]=$conv2;return}function _Levinson($st,$Rh,$Rl,$A,$rc,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=96;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $Rh_addr;var $Rl_addr;var $A_addr;var $rc_addr;var $pOverflow_addr;var $i;var $j;var $hi;var $lo;var $Kh;var $Kl;var $alp_h;var $alp_l;var $alp_exp;var $Ah=__stackBase__;var $Al=__stackBase__+24;var $Anh=__stackBase__+48;var $Anl=__stackBase__+72;var $t0;var $t1;var $t2;var $p_Rh;var $p_Rl;var $p_Ah;var $p_Al;var $p_Anh;var $p_Anl;var $p_A;$st_addr=$st;$Rh_addr=$Rh;$Rl_addr=$Rl;$A_addr=$A;$rc_addr=$rc;$pOverflow_addr=$pOverflow;var $0=$Rh_addr;var $add_ptr=$0+2|0;var $1=HEAP16[$add_ptr>>1];var $conv=$1<<16>>16;var $shl=$conv<<16;$t1=$shl;var $2=$Rl_addr;var $add_ptr1=$2+2|0;var $3=HEAP16[$add_ptr1>>1];var $conv2=$3<<16>>16;var $shl3=$conv2<<1;var $4=$t1;var $add=$4+$shl3|0;$t1=$add;var $5=$t1;var $call=_L_abs($5);$t2=$call;var $6=$t2;var $7=$Rh_addr;var $8=HEAP16[$7>>1];var $9=$Rl_addr;var $10=HEAP16[$9>>1];var $11=$pOverflow_addr;var $call4=_Div_32($6,$8,$10,$11);$t0=$call4;var $12=$t1;var $cmp=($12|0)>0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $13=$t0;var $call6=_L_negate($13);$t0=$call6;__label__=2;break;case 2:var $14=$t0;var $shr=$14>>16;var $conv7=$shr&65535;$Kh=$conv7;var $15=$t0;var $shr8=$15>>1;var $16=$Kh;var $conv9=$16<<16>>16;var $shl10=$conv9<<15;var $sub=$shr8-$shl10|0;var $conv11=$sub&65535;$Kl=$conv11;var $17=$t0;var $18=$pOverflow_addr;var $call12=_pv_round($17,$18);var $19=$rc_addr;HEAP16[$19>>1]=$call12;var $20=$t0;var $shr13=$20>>4;$t0=$shr13;var $21=$t0;var $shr14=$21>>16;var $conv15=$shr14&65535;var $arraydecay=$Ah|0;var $add_ptr16=$arraydecay+2|0;HEAP16[$add_ptr16>>1]=$conv15;var $22=$t0;var $shr17=$22>>1;var $arraydecay18=$Ah|0;var $add_ptr19=$arraydecay18+2|0;var $23=HEAP16[$add_ptr19>>1];var $conv20=$23<<16>>16;var $shl21=$conv20<<15;var $sub22=$shr17-$shl21|0;var $conv23=$sub22&65535;var $arraydecay24=$Al|0;var $add_ptr25=$arraydecay24+2|0;HEAP16[$add_ptr25>>1]=$conv23;var $24=$Kh;var $25=$Kl;var $26=$Kh;var $27=$Kl;var $28=$pOverflow_addr;var $call26=_Mpy_32230($24,$25,$26,$27,$28);$t0=$call26;var $29=$t0;var $call27=_L_abs($29);$t0=$call27;var $30=$t0;var $sub28=2147483647-$30|0;$t0=$sub28;var $31=$t0;var $shr29=$31>>16;var $conv30=$shr29&65535;$hi=$conv30;var $32=$t0;var $shr31=$32>>1;var $33=$hi;var $conv32=$33<<16>>16;var $shl33=$conv32<<15;var $sub34=$shr31-$shl33|0;var $conv35=$sub34&65535;$lo=$conv35;var $34=$Rh_addr;var $35=HEAP16[$34>>1];var $36=$Rl_addr;var $37=HEAP16[$36>>1];var $38=$hi;var $39=$lo;var $40=$pOverflow_addr;var $call36=_Mpy_32230($35,$37,$38,$39,$40);$t0=$call36;var $41=$t0;var $call37=_norm_l($41);$alp_exp=$call37;var $42=$t0;var $43=$alp_exp;var $conv38=$43<<16>>16;var $shl39=$42<<$conv38;$t0=$shl39;var $44=$t0;var $shr40=$44>>16;var $conv41=$shr40&65535;$alp_h=$conv41;var $45=$t0;var $shr42=$45>>1;var $46=$alp_h;var $conv43=$46<<16>>16;var $shl44=$conv43<<15;var $sub45=$shr42-$shl44|0;var $conv46=$sub45&65535;$alp_l=$conv46;$i=2;__label__=3;break;case 3:var $47=$i;var $conv47=$47<<16>>16;var $cmp48=($conv47|0)<=10;if($cmp48){__label__=4;break}else{__label__=20;break}case 4:$t0=0;var $48=$Rh_addr;var $arrayidx=$48+2|0;$p_Rh=$arrayidx;var $49=$Rl_addr;var $arrayidx50=$49+2|0;$p_Rl=$arrayidx50;var $50=$i;var $conv51=$50<<16>>16;var $sub52=$conv51-1|0;var $arrayidx53=$Ah+($sub52<<1)|0;$p_Ah=$arrayidx53;var $51=$i;var $conv54=$51<<16>>16;var $sub55=$conv54-1|0;var $arrayidx56=$Al+($sub55<<1)|0;$p_Al=$arrayidx56;$j=1;__label__=5;break;case 5:var $52=$j;var $conv58=$52<<16>>16;var $53=$i;var $conv59=$53<<16>>16;var $cmp60=($conv58|0)<($conv59|0);if($cmp60){__label__=6;break}else{__label__=8;break}case 6:var $54=$p_Rh;var $55=HEAP16[$54>>1];var $conv63=$55<<16>>16;var $56=$p_Al;var $incdec_ptr=$56-2|0;$p_Al=$incdec_ptr;var $57=HEAP16[$56>>1];var $conv64=$57<<16>>16;var $mul=$conv63*$conv64|0;var $shr65=$mul>>15;var $58=$t0;var $add66=$58+$shr65|0;$t0=$add66;var $59=$p_Rl;var $incdec_ptr67=$59+2|0;$p_Rl=$incdec_ptr67;var $60=HEAP16[$59>>1];var $conv68=$60<<16>>16;var $61=$p_Ah;var $62=HEAP16[$61>>1];var $conv69=$62<<16>>16;var $mul70=$conv68*$conv69|0;var $shr71=$mul70>>15;var $63=$t0;var $add72=$63+$shr71|0;$t0=$add72;var $64=$p_Rh;var $incdec_ptr73=$64+2|0;$p_Rh=$incdec_ptr73;var $65=HEAP16[$64>>1];var $conv74=$65<<16>>16;var $66=$p_Ah;var $incdec_ptr75=$66-2|0;$p_Ah=$incdec_ptr75;var $67=HEAP16[$66>>1];var $conv76=$67<<16>>16;var $mul77=$conv74*$conv76|0;var $68=$t0;var $add78=$68+$mul77|0;$t0=$add78;__label__=7;break;case 7:var $69=$j;var $inc=$69+1&65535;$j=$inc;__label__=5;break;case 8:var $70=$t0;var $shl79=$70<<5;$t0=$shl79;var $71=$Rh_addr;var $72=$i;var $conv80=$72<<16>>16;var $add_ptr81=$71+($conv80<<1)|0;var $73=HEAP16[$add_ptr81>>1];var $conv82=$73<<16>>16;var $shl83=$conv82<<16;var $74=$Rl_addr;var $75=$i;var $conv84=$75<<16>>16;var $add_ptr85=$74+($conv84<<1)|0;var $76=HEAP16[$add_ptr85>>1];var $conv86=$76<<16>>16;var $shl87=$conv86<<1;var $add88=$shl83+$shl87|0;$t1=$add88;var $77=$t1;var $78=$t0;var $add89=$78+$77|0;$t0=$add89;var $79=$t0;var $call90=_L_abs($79);$t1=$call90;var $80=$t1;var $81=$alp_h;var $82=$alp_l;var $83=$pOverflow_addr;var $call91=_Div_32($80,$81,$82,$83);$t2=$call91;var $84=$t0;var $cmp92=($84|0)>0;if($cmp92){__label__=9;break}else{__label__=10;break}case 9:var $85=$t2;var $call95=_L_negate($85);$t2=$call95;__label__=10;break;case 10:var $86=$t2;var $87=$alp_exp;var $88=$pOverflow_addr;var $call97=_L_shl231($86,$87,$88);$t2=$call97;var $89=$t2;var $shr98=$89>>16;var $conv99=$shr98&65535;$Kh=$conv99;var $90=$t2;var $shr100=$90>>1;var $91=$Kh;var $conv101=$91<<16>>16;var $shl102=$conv101<<15;var $sub103=$shr100-$shl102|0;var $conv104=$sub103&65535;$Kl=$conv104;var $92=$i;var $conv105=$92<<16>>16;var $cmp106=($conv105|0)<5;if($cmp106){__label__=11;break}else{__label__=12;break}case 11:var $93=$t2;var $add109=$93+32768|0;var $shr110=$add109>>16;var $conv111=$shr110&65535;var $94=$rc_addr;var $95=$i;var $conv112=$95<<16>>16;var $add_ptr113=$94+($conv112<<1)|0;var $add_ptr114=$add_ptr113-2|0;HEAP16[$add_ptr114>>1]=$conv111;__label__=12;break;case 12:var $96=$Kh;var $call116=_abs_s232($96);var $conv117=$call116<<16>>16;var $cmp118=($conv117|0)>32750;if($cmp118){__label__=13;break}else{__label__=14;break}case 13:var $97=$A_addr;var $98=$97;var $99=$st_addr;var $old_A=$99|0;var $arrayidx121=$old_A|0;var $100=$arrayidx121;assert(22%1===0,"memcpy given "+22+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($98,$100,22,1);var $101=$rc_addr;var $102=$101;HEAP8[$102]=0;HEAP8[$102+1]=0;HEAP8[$102+2]=0;HEAP8[$102+3]=0;HEAP8[$102+4]=0;HEAP8[$102+5]=0;HEAP8[$102+6]=0;HEAP8[$102+7]=0;$retval=0;__label__=25;break;case 14:var $103=$i;var $conv123=$103<<16>>16;var $sub124=$conv123-1|0;var $arrayidx125=$Ah+($sub124<<1)|0;$p_Ah=$arrayidx125;var $104=$i;var $conv126=$104<<16>>16;var $sub127=$conv126-1|0;var $arrayidx128=$Al+($sub127<<1)|0;$p_Al=$arrayidx128;var $arrayidx129=$Anh+2|0;$p_Anh=$arrayidx129;var $arrayidx130=$Anl+2|0;$p_Anl=$arrayidx130;$j=1;__label__=15;break;case 15:var $105=$j;var $conv132=$105<<16>>16;var $106=$i;var $conv133=$106<<16>>16;var $cmp134=($conv132|0)<($conv133|0);if($cmp134){__label__=16;break}else{__label__=18;break}case 16:var $107=$Kh;var $conv137=$107<<16>>16;var $108=$p_Al;var $incdec_ptr138=$108-2|0;$p_Al=$incdec_ptr138;var $109=HEAP16[$108>>1];var $conv139=$109<<16>>16;var $mul140=$conv137*$conv139|0;var $shr141=$mul140>>15;$t0=$shr141;var $110=$Kl;var $conv142=$110<<16>>16;var $111=$p_Ah;var $112=HEAP16[$111>>1];var $conv143=$112<<16>>16;var $mul144=$conv142*$conv143|0;var $shr145=$mul144>>15;var $113=$t0;var $add146=$113+$shr145|0;$t0=$add146;var $114=$Kh;var $conv147=$114<<16>>16;var $115=$p_Ah;var $incdec_ptr148=$115-2|0;$p_Ah=$incdec_ptr148;var $116=HEAP16[$115>>1];var $conv149=$116<<16>>16;var $mul150=$conv147*$conv149|0;var $117=$t0;var $add151=$117+$mul150|0;$t0=$add151;var $118=$j;var $idxprom=$118<<16>>16;var $arrayidx152=$Ah+($idxprom<<1)|0;var $119=HEAP16[$arrayidx152>>1];var $conv153=$119<<16>>16;var $shl154=$conv153<<15;var $120=$j;var $idxprom155=$120<<16>>16;var $arrayidx156=$Al+($idxprom155<<1)|0;var $121=HEAP16[$arrayidx156>>1];var $conv157=$121<<16>>16;var $add158=$shl154+$conv157|0;var $122=$t0;var $add159=$122+$add158|0;$t0=$add159;var $123=$t0;var $shr160=$123>>15;var $conv161=$shr160&65535;var $124=$p_Anh;HEAP16[$124>>1]=$conv161;var $125=$t0;var $126=$p_Anh;var $incdec_ptr162=$126+2|0;$p_Anh=$incdec_ptr162;var $127=HEAP16[$126>>1];var $conv163=$127<<16>>16;var $shl164=$conv163<<15;var $sub165=$125-$shl164|0;var $conv166=$sub165&65535;var $128=$p_Anl;var $incdec_ptr167=$128+2|0;$p_Anl=$incdec_ptr167;HEAP16[$128>>1]=$conv166;__label__=17;break;case 17:var $129=$j;var $inc169=$129+1&65535;$j=$inc169;__label__=15;break;case 18:var $130=$t2;var $shr171=$130>>20;var $conv172=$shr171&65535;var $131=$p_Anh;HEAP16[$131>>1]=$conv172;var $132=$t2;var $shr173=$132>>5;var $arraydecay174=$Anh|0;var $133=$i;var $conv175=$133<<16>>16;var $add_ptr176=$arraydecay174+($conv175<<1)|0;var $134=HEAP16[$add_ptr176>>1];var $conv177=$134<<16>>16;var $shl178=$conv177<<15;var $sub179=$shr173-$shl178|0;var $conv180=$sub179&65535;var $135=$p_Anl;HEAP16[$135>>1]=$conv180;var $136=$Kh;var $137=$Kl;var $138=$Kh;var $139=$Kl;var $140=$pOverflow_addr;var $call181=_Mpy_32230($136,$137,$138,$139,$140);$t0=$call181;var $141=$t0;var $call182=_L_abs($141);$t0=$call182;var $142=$t0;var $sub183=2147483647-$142|0;$t0=$sub183;var $143=$t0;var $shr184=$143>>16;var $conv185=$shr184&65535;$hi=$conv185;var $144=$t0;var $shr186=$144>>1;var $145=$hi;var $conv187=$145<<16>>16;var $shl188=$conv187<<15;var $sub189=$shr186-$shl188|0;var $conv190=$sub189&65535;$lo=$conv190;var $146=$alp_h;var $conv191=$146<<16>>16;var $147=$lo;var $conv192=$147<<16>>16;var $mul193=$conv191*$conv192|0;var $shr194=$mul193>>15;$t0=$shr194;var $148=$alp_l;var $conv195=$148<<16>>16;var $149=$hi;var $conv196=$149<<16>>16;var $mul197=$conv195*$conv196|0;var $shr198=$mul197>>15;var $150=$t0;var $add199=$150+$shr198|0;$t0=$add199;var $151=$alp_h;var $conv200=$151<<16>>16;var $152=$hi;var $conv201=$152<<16>>16;var $mul202=$conv200*$conv201|0;var $153=$t0;var $add203=$153+$mul202|0;$t0=$add203;var $154=$t0;var $shl204=$154<<1;$t0=$shl204;var $155=$t0;var $call205=_norm_l($155);$j=$call205;var $156=$j;var $conv206=$156<<16>>16;var $157=$t0;var $shl207=$157<<$conv206;$t0=$shl207;var $158=$t0;var $shr208=$158>>16;var $conv209=$shr208&65535;$alp_h=$conv209;var $159=$t0;var $shr210=$159>>1;var $160=$alp_h;var $conv211=$160<<16>>16;var $shl212=$conv211<<15;var $sub213=$shr210-$shl212|0;var $conv214=$sub213&65535;$alp_l=$conv214;var $161=$j;var $conv215=$161<<16>>16;var $162=$alp_exp;var $conv216=$162<<16>>16;var $add217=$conv216+$conv215|0;var $conv218=$add217&65535;$alp_exp=$conv218;var $arrayidx219=$Ah+2|0;var $163=$arrayidx219;var $arrayidx220=$Anh+2|0;var $164=$arrayidx220;var $165=$i;var $conv221=$165<<16>>16;var $mul222=$conv221<<1|0;assert($mul222%1===0,"memcpy given "+$mul222+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($163,$164,$mul222,1);var $arrayidx223=$Al+2|0;var $166=$arrayidx223;var $arrayidx224=$Anl+2|0;var $167=$arrayidx224;var $168=$i;var $conv225=$168<<16>>16;var $mul226=$conv225<<1|0;assert($mul226%1===0,"memcpy given "+$mul226+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($166,$167,$mul226,1);__label__=19;break;case 19:var $169=$i;var $inc228=$169+1&65535;$i=$inc228;__label__=3;break;case 20:var $170=$A_addr;var $arrayidx230=$170|0;$p_A=$arrayidx230;var $171=$p_A;var $incdec_ptr231=$171+2|0;$p_A=$incdec_ptr231;HEAP16[$171>>1]=4096;var $arrayidx232=$Ah+2|0;$p_Ah=$arrayidx232;var $arrayidx233=$Al+2|0;$p_Al=$arrayidx233;$i=1;__label__=21;break;case 21:var $172=$i;var $conv235=$172<<16>>16;var $cmp236=($conv235|0)<=10;if($cmp236){__label__=22;break}else{__label__=24;break}case 22:var $173=$p_Ah;var $incdec_ptr239=$173+2|0;$p_Ah=$incdec_ptr239;var $174=HEAP16[$173>>1];var $conv240=$174<<16>>16;var $shl241=$conv240<<15;var $175=$p_Al;var $incdec_ptr242=$175+2|0;$p_Al=$incdec_ptr242;var $176=HEAP16[$175>>1];var $conv243=$176<<16>>16;var $add244=$shl241+$conv243|0;$t0=$add244;var $177=$t0;var $add245=$177+8192|0;var $shr246=$add245>>14;var $conv247=$shr246&65535;var $178=$p_A;var $incdec_ptr248=$178+2|0;$p_A=$incdec_ptr248;HEAP16[$178>>1]=$conv247;var $179=$i;var $idxprom249=$179<<16>>16;var $180=$st_addr;var $old_A250=$180|0;var $arrayidx251=$old_A250+($idxprom249<<1)|0;HEAP16[$arrayidx251>>1]=$conv247;__label__=23;break;case 23:var $181=$i;var $inc253=$181+1&65535;$i=$inc253;__label__=21;break;case 24:$retval=0;__label__=25;break;case 25:var $182=$retval;STACKTOP=__stackBase__;return $182;default:assert(0,"bad label: "+__label__)}}_Levinson["X"]=1;function _Mpy_32_16233($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $cmp11=($xor10|0)<0;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $cmp14=($13|0)<0;var $cond=$cmp14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16233["X"]=1;function _L_negate($L_var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;$L_var1_addr=$L_var1;var $0=$L_var1_addr;var $cmp=($0|0)==-2147483648;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=2147483647;__label__=3;break;case 2:var $1=$L_var1_addr;var $sub=-$1|0;var $cond=$sub;__label__=3;break;case 3:var $cond;$L_var1_addr=$cond;var $2=$L_var1_addr;return $2;default:assert(0,"bad label: "+__label__)}}function _L_shr252($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _Log2_norm($L_x,$exp,$exponent,$fraction){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_x_addr;var $exp_addr;var $exponent_addr;var $fraction_addr;var $i;var $a;var $tmp;var $L_y;$L_x_addr=$L_x;$exp_addr=$exp;$exponent_addr=$exponent;$fraction_addr=$fraction;var $0=$L_x_addr;var $cmp=($0|0)<=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$exponent_addr;HEAP16[$1>>1]=0;var $2=$fraction_addr;HEAP16[$2>>1]=0;__label__=3;break;case 2:var $3=$exp_addr;var $conv=$3<<16>>16;var $sub=30-$conv|0;var $conv2=$sub&65535;var $4=$exponent_addr;HEAP16[$4>>1]=$conv2;var $5=$L_x_addr;var $shr=$5>>10;$L_x_addr=$shr;var $6=$L_x_addr;var $shr3=$6>>15;var $conv4=$shr3&65535;$i=$conv4;var $7=$L_x_addr;var $and=$7&32767;var $conv5=$and&65535;$a=$conv5;var $8=$i;var $conv6=$8<<16>>16;var $sub7=$conv6-32|0;var $conv8=$sub7&65535;$i=$conv8;var $9=$i;var $idxprom=$9<<16>>16;var $arrayidx=_log2_tbl+($idxprom<<1)|0;var $10=(tempInt=HEAPU8[$arrayidx]|HEAPU8[$arrayidx+1]<<8,tempInt<<16>>16);var $conv9=$10<<16>>16;var $shl=$conv9<<16;$L_y=$shl;var $11=$i;var $idxprom10=$11<<16>>16;var $arrayidx11=_log2_tbl+($idxprom10<<1)|0;var $12=(tempInt=HEAPU8[$arrayidx11]|HEAPU8[$arrayidx11+1]<<8,tempInt<<16>>16);var $conv12=$12<<16>>16;var $13=$i;var $conv13=$13<<16>>16;var $add=$conv13+1|0;var $arrayidx14=_log2_tbl+($add<<1)|0;var $14=(tempInt=HEAPU8[$arrayidx14]|HEAPU8[$arrayidx14+1]<<8,tempInt<<16>>16);var $conv15=$14<<16>>16;var $sub16=$conv12-$conv15|0;var $conv17=$sub16&65535;$tmp=$conv17;var $15=$tmp;var $conv18=$15<<16>>16;var $16=$a;var $conv19=$16<<16>>16;var $mul=$conv18*$conv19|0;var $shl20=$mul<<1;var $17=$L_y;var $sub21=$17-$shl20|0;$L_y=$sub21;var $18=$L_y;var $shr22=$18>>16;var $conv23=$shr22&65535;var $19=$fraction_addr;HEAP16[$19>>1]=$conv23;__label__=3;break;case 3:;return;default:assert(0,"bad label: "+__label__)}}_Log2_norm["X"]=1;function _Lsf_wt($lsf,$wf,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_addr;var $wf_addr;var $pOverflow_addr;var $temp;var $wgt_fct;var $i;var $p_wf;var $p_lsf;var $p_lsf_2;$lsf_addr=$lsf;$wf_addr=$wf;$pOverflow_addr=$pOverflow;var $0=$wf_addr;$p_wf=$0;var $1=$lsf_addr;var $arrayidx=$1|0;$p_lsf=$arrayidx;var $2=$lsf_addr;var $arrayidx1=$2+2|0;$p_lsf_2=$arrayidx1;var $3=$pOverflow_addr;var $4=$p_lsf_2;var $incdec_ptr=$4+2|0;$p_lsf_2=$incdec_ptr;var $5=HEAP16[$4>>1];var $6=$p_wf;var $incdec_ptr2=$6+2|0;$p_wf=$incdec_ptr2;HEAP16[$6>>1]=$5;$i=4;__label__=1;break;case 1:var $7=$i;var $conv=$7<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $8=$p_lsf_2;var $incdec_ptr4=$8+2|0;$p_lsf_2=$incdec_ptr4;var $9=HEAP16[$8>>1];var $conv5=$9<<16>>16;var $10=$p_lsf;var $incdec_ptr6=$10+2|0;$p_lsf=$incdec_ptr6;var $11=HEAP16[$10>>1];var $conv7=$11<<16>>16;var $sub=$conv5-$conv7|0;var $conv8=$sub&65535;var $12=$p_wf;var $incdec_ptr9=$12+2|0;$p_wf=$incdec_ptr9;HEAP16[$12>>1]=$conv8;var $13=$p_lsf_2;var $incdec_ptr10=$13+2|0;$p_lsf_2=$incdec_ptr10;var $14=HEAP16[$13>>1];var $conv11=$14<<16>>16;var $15=$p_lsf;var $incdec_ptr12=$15+2|0;$p_lsf=$incdec_ptr12;var $16=HEAP16[$15>>1];var $conv13=$16<<16>>16;var $sub14=$conv11-$conv13|0;var $conv15=$sub14&65535;var $17=$p_wf;var $incdec_ptr16=$17+2|0;$p_wf=$incdec_ptr16;HEAP16[$17>>1]=$conv15;__label__=3;break;case 3:var $18=$i;var $dec=$18-1&65535;$i=$dec;__label__=1;break;case 4:var $19=$p_lsf;var $20=HEAP16[$19>>1];var $conv17=$20<<16>>16;var $sub18=16384-$conv17|0;var $conv19=$sub18&65535;var $21=$p_wf;HEAP16[$21>>1]=$conv19;var $22=$wf_addr;$p_wf=$22;$i=10;__label__=5;break;case 5:var $23=$i;var $conv21=$23<<16>>16;var $cmp22=($conv21|0)!=0;if($cmp22){__label__=6;break}else{__label__=11;break}case 6:var $24=$p_wf;var $25=HEAP16[$24>>1];$wgt_fct=$25;var $26=$wgt_fct;var $conv25=$26<<16>>16;var $sub26=$conv25-1843|0;var $conv27=$sub26&65535;$temp=$conv27;var $27=$temp;var $conv28=$27<<16>>16;var $cmp29=($conv28|0)>0;if($cmp29){__label__=7;break}else{__label__=8;break}case 7:var $28=$temp;var $conv31=$28<<16>>16;var $mul=$conv31*6242|0;var $shr=$mul>>15;var $conv32=$shr&65535;$temp=$conv32;var $29=$temp;var $conv33=$29<<16>>16;var $sub34=1843-$conv33|0;var $conv35=$sub34&65535;$wgt_fct=$conv35;__label__=9;break;case 8:var $30=$wgt_fct;var $conv36=$30<<16>>16;var $mul37=$conv36*28160|0;var $shr38=$mul37>>15;var $conv39=$shr38&65535;$temp=$conv39;var $31=$temp;var $conv40=$31<<16>>16;var $sub41=3427-$conv40|0;var $conv42=$sub41&65535;$wgt_fct=$conv42;__label__=9;break;case 9:var $32=$wgt_fct;var $conv43=$32<<16>>16;var $shl=$conv43<<3;var $conv44=$shl&65535;var $33=$p_wf;var $incdec_ptr45=$33+2|0;$p_wf=$incdec_ptr45;HEAP16[$33>>1]=$conv44;__label__=10;break;case 10:var $34=$i;var $dec47=$34-1&65535;$i=$dec47;__label__=5;break;case 11:;return;default:assert(0,"bad label: "+__label__)}}_Lsf_wt["X"]=1;function _LTP_flag_update($st,$mode,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $pOverflow_addr;var $thresh;var $hi1=__stackBase__;var $lo1=__stackBase__+4;var $Ltmp;$st_addr=$st;$mode_addr=$mode;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$mode_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)==1;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:$thresh=18022;__label__=7;break;case 3:var $2=$mode_addr;var $conv5=$2<<16>>16;var $cmp6=($conv5|0)==6;if($cmp6){__label__=4;break}else{__label__=5;break}case 4:$thresh=19660;__label__=6;break;case 5:$thresh=21299;__label__=6;break;case 6:__label__=7;break;case 7:var $3=$st_addr;var $L_R0=$3+188|0;var $4=HEAP32[$L_R0>>2];var $5=$pOverflow_addr;_L_Extract($4,$hi1,$lo1,$5);var $6=HEAP16[$hi1>>1];var $7=HEAP16[$lo1>>1];var $8=$thresh;var $9=$pOverflow_addr;var $call=_Mpy_32_16233($6,$7,$8,$9);$Ltmp=$call;var $10=$st_addr;var $L_Rmax=$10+192|0;var $11=HEAP32[$L_Rmax>>2];var $12=$Ltmp;var $cmp11=($11|0)>($12|0);if($cmp11){__label__=8;break}else{__label__=9;break}case 8:var $13=$st_addr;var $LTP_flag=$13+196|0;HEAP32[$LTP_flag>>2]=1;__label__=10;break;case 9:var $14=$st_addr;var $LTP_flag15=$14+196|0;HEAP32[$LTP_flag15>>2]=0;__label__=10;break;case 10:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_LTP_flag_update["X"]=1;function _Log2($L_x,$pExponent,$pFraction,$pOverflow){var __label__;var $L_x_addr;var $pExponent_addr;var $pFraction_addr;var $pOverflow_addr;var $exp;var $result;$L_x_addr=$L_x;$pExponent_addr=$pExponent;$pFraction_addr=$pFraction;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_x_addr;var $call=_norm_l($1);$exp=$call;var $2=$L_x_addr;var $3=$exp;var $conv=$3<<16>>16;var $shl=$2<<$conv;$result=$shl;var $4=$result;var $5=$exp;var $6=$pExponent_addr;var $7=$pFraction_addr;_Log2_norm($4,$5,$6,$7);return}function _lpc_init($state){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s=__stackBase__;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(4);var $2=$call;HEAP32[$s>>2]=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=7;break;case 4:var $3=HEAP32[$s>>2];var $levinsonSt=$3|0;HEAP32[$levinsonSt>>2]=0;var $4=HEAP32[$s>>2];var $levinsonSt4=$4|0;var $call5=_Levinson_init($levinsonSt4);var $tobool=$call5<<16>>16!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:_lpc_exit($s);$retval=-1;__label__=7;break;case 6:var $5=HEAP32[$s>>2];var $call8=_lpc_reset($5);var $6=HEAP32[$s>>2];var $7=$state_addr;HEAP32[$7>>2]=$6;$retval=0;__label__=7;break;case 7:var $8=$retval;STACKTOP=__stackBase__;return $8;default:assert(0,"bad label: "+__label__)}}function _lpc_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $levinsonSt=$4|0;_Levinson_exit($levinsonSt);var $5=$state_addr;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$state_addr;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _lpc_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $levinsonSt=$1|0;var $2=HEAP32[$levinsonSt>>2];var $call=_Levinson_reset($2);$retval=0;__label__=3;break;case 3:var $3=$retval;return $3;default:assert(0,"bad label: "+__label__)}}function _lpc($st,$mode,$x,$x_12k2,$a,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=56;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $x_addr;var $x_12k2_addr;var $a_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $rc=__stackBase__;var $rLow=__stackBase__+8;var $rHigh=__stackBase__+32;var $window_160_80_ptr;var $window_232_8_ptr;var $window_200_40_ptr;$st_addr=$st;$mode_addr=$mode;$x_addr=$x;$x_12k2_addr=$x_12k2;$a_addr=$a;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$common_amr_tbls_addr;var $window_160_80_ptr1=$0+112|0;var $1=HEAP32[$window_160_80_ptr1>>2];$window_160_80_ptr=$1;var $2=$common_amr_tbls_addr;var $window_232_8_ptr2=$2+116|0;var $3=HEAP32[$window_232_8_ptr2>>2];$window_232_8_ptr=$3;var $4=$common_amr_tbls_addr;var $window_200_40_ptr3=$4+108|0;var $5=HEAP32[$window_200_40_ptr3>>2];$window_200_40_ptr=$5;var $6=$mode_addr;var $cmp=($6|0)==7;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $7=$x_12k2_addr;var $arraydecay=$rHigh|0;var $arraydecay4=$rLow|0;var $8=$window_160_80_ptr;var $9=$pOverflow_addr;var $call=_Autocorr($7,10,$arraydecay,$arraydecay4,$8,$9);var $arraydecay5=$rHigh|0;var $arraydecay6=$rLow|0;var $10=$pOverflow_addr;_Lag_window(10,$arraydecay5,$arraydecay6,$10);var $11=$st_addr;var $levinsonSt=$11|0;var $12=HEAP32[$levinsonSt>>2];var $arraydecay7=$rHigh|0;var $arraydecay8=$rLow|0;var $13=$a_addr;var $arrayidx=$13+22|0;var $arraydecay9=$rc|0;var $14=$pOverflow_addr;var $call10=_Levinson($12,$arraydecay7,$arraydecay8,$arrayidx,$arraydecay9,$14);var $15=$x_12k2_addr;var $arraydecay11=$rHigh|0;var $arraydecay12=$rLow|0;var $16=$window_232_8_ptr;var $17=$pOverflow_addr;var $call13=_Autocorr($15,10,$arraydecay11,$arraydecay12,$16,$17);var $arraydecay14=$rHigh|0;var $arraydecay15=$rLow|0;var $18=$pOverflow_addr;_Lag_window(10,$arraydecay14,$arraydecay15,$18);var $19=$st_addr;var $levinsonSt16=$19|0;var $20=HEAP32[$levinsonSt16>>2];var $arraydecay17=$rHigh|0;var $arraydecay18=$rLow|0;var $21=$a_addr;var $arrayidx19=$21+66|0;var $arraydecay20=$rc|0;var $22=$pOverflow_addr;var $call21=_Levinson($20,$arraydecay17,$arraydecay18,$arrayidx19,$arraydecay20,$22);__label__=3;break;case 2:var $23=$x_addr;var $arraydecay22=$rHigh|0;var $arraydecay23=$rLow|0;var $24=$window_200_40_ptr;var $25=$pOverflow_addr;var $call24=_Autocorr($23,10,$arraydecay22,$arraydecay23,$24,$25);var $arraydecay25=$rHigh|0;var $arraydecay26=$rLow|0;var $26=$pOverflow_addr;_Lag_window(10,$arraydecay25,$arraydecay26,$26);var $27=$st_addr;var $levinsonSt27=$27|0;var $28=HEAP32[$levinsonSt27>>2];var $arraydecay28=$rHigh|0;var $arraydecay29=$rLow|0;var $29=$a_addr;var $arrayidx30=$29+66|0;var $arraydecay31=$rc|0;var $30=$pOverflow_addr;var $call32=_Levinson($28,$arraydecay28,$arraydecay29,$arrayidx30,$arraydecay31,$30);__label__=3;break;case 3:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_lpc["X"]=1;function _L_shr_r($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var2_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)>31;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$result=0;__label__=7;break;case 2:var $1=$L_var1_addr;var $2=$var2_addr;var $3=$pOverflow_addr;var $call=_L_shr252($1,$2,$3);$result=$call;var $4=$var2_addr;var $conv2=$4<<16>>16;var $cmp3=($conv2|0)>0;if($cmp3){__label__=3;break}else{__label__=6;break}case 3:var $5=$L_var1_addr;var $6=$var2_addr;var $conv6=$6<<16>>16;var $sub=$conv6-1|0;var $shl=1<<$sub;var $and=$5&$shl;var $cmp7=($and|0)!=0;if($cmp7){__label__=4;break}else{__label__=5;break}case 4:var $7=$result;var $inc=$7+1|0;$result=$inc;__label__=5;break;case 5:__label__=6;break;case 6:__label__=7;break;case 7:var $8=$result;return $8;default:assert(0,"bad label: "+__label__)}}function _lsp_avg_reset($st,$mean_lsf_5_ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $mean_lsf_5_ptr_addr;$st_addr=$st;$mean_lsf_5_ptr_addr=$mean_lsf_5_ptr;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$st_addr;var $lsp_meanSave=$1|0;var $arrayidx=$lsp_meanSave|0;var $2=$arrayidx;var $3=$mean_lsf_5_ptr_addr;var $4=$3;_llvm_memmove_p0i8_p0i8_i32($2,$4,20,1,0);$retval=0;__label__=3;break;case 3:var $5=$retval;return $5;default:assert(0,"bad label: "+__label__)}}function _lsp_avg($st,$lsp,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $lsp_addr;var $pOverflow_addr;var $i;var $L_tmp;$st_addr=$st;$lsp_addr=$lsp;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$st_addr;var $lsp_meanSave=$2|0;var $arrayidx=$lsp_meanSave+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $shl=$conv2<<16;$L_tmp=$shl;var $4=$L_tmp;var $5=$i;var $idxprom3=$5<<16>>16;var $6=$st_addr;var $lsp_meanSave4=$6|0;var $arrayidx5=$lsp_meanSave4+($idxprom3<<1)|0;var $7=HEAP16[$arrayidx5>>1];var $8=$pOverflow_addr;var $call=_L_msu257($4,5243,$7,$8);$L_tmp=$call;var $9=$L_tmp;var $10=$i;var $idxprom6=$10<<16>>16;var $11=$lsp_addr;var $arrayidx7=$11+($idxprom6<<1)|0;var $12=HEAP16[$arrayidx7>>1];var $13=$pOverflow_addr;var $call8=_L_mac258($9,5243,$12,$13);$L_tmp=$call8;var $14=$L_tmp;var $15=$pOverflow_addr;var $call9=_pv_round($14,$15);var $16=$i;var $idxprom10=$16<<16>>16;var $17=$st_addr;var $lsp_meanSave11=$17|0;var $arrayidx12=$lsp_meanSave11+($idxprom10<<1)|0;HEAP16[$arrayidx12>>1]=$call9;__label__=3;break;case 3:var $18=$i;var $inc=$18+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_lsp_avg["X"]=1;function _L_msu257($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult259($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub260($3,$4,$5);$result=$call1;var $6=$result;return $6}function _L_mac258($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac258["X"]=1;function _L_mult259($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_sub260($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _Get_lsp_pol($lsp,$f,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_addr;var $f_addr;var $pOverflow_addr;var $i;var $j;var $hi;var $lo;var $t0;$lsp_addr=$lsp;$f_addr=$f;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$f_addr;var $incdec_ptr=$1+4|0;$f_addr=$incdec_ptr;HEAP32[$1>>2]=16777216;var $2=$lsp_addr;var $incdec_ptr1=$2+2|0;$lsp_addr=$incdec_ptr1;var $3=HEAP16[$2>>1];var $conv=$3<<16>>16;var $sub=-$conv|0;var $shl=$sub<<10;var $4=$f_addr;var $incdec_ptr2=$4+4|0;$f_addr=$incdec_ptr2;HEAP32[$4>>2]=$shl;var $5=$lsp_addr;var $incdec_ptr3=$5+2|0;$lsp_addr=$incdec_ptr3;$i=2;__label__=1;break;case 1:var $6=$i;var $conv4=$6<<16>>16;var $cmp=($conv4|0)<=5;if($cmp){__label__=2;break}else{__label__=8;break}case 2:var $7=$f_addr;var $add_ptr=$7-8|0;var $8=HEAP32[$add_ptr>>2];var $9=$f_addr;HEAP32[$9>>2]=$8;$j=1;__label__=3;break;case 3:var $10=$j;var $conv7=$10<<16>>16;var $11=$i;var $conv8=$11<<16>>16;var $cmp9=($conv7|0)<($conv8|0);if($cmp9){__label__=4;break}else{__label__=6;break}case 4:var $12=$f_addr;var $add_ptr12=$12-4|0;var $13=HEAP32[$add_ptr12>>2];var $shr=$13>>16;var $conv13=$shr&65535;$hi=$conv13;var $14=$f_addr;var $add_ptr14=$14-4|0;var $15=HEAP32[$add_ptr14>>2];var $shr15=$15>>1;var $16=$hi;var $conv16=$16<<16>>16;var $shl17=$conv16<<15;var $sub18=$shr15-$shl17|0;var $conv19=$sub18&65535;$lo=$conv19;var $17=$hi;var $conv20=$17<<16>>16;var $18=$lsp_addr;var $19=HEAP16[$18>>1];var $conv21=$19<<16>>16;var $mul=$conv20*$conv21|0;$t0=$mul;var $20=$lo;var $conv22=$20<<16>>16;var $21=$lsp_addr;var $22=HEAP16[$21>>1];var $conv23=$22<<16>>16;var $mul24=$conv22*$conv23|0;var $shr25=$mul24>>15;var $23=$t0;var $add=$23+$shr25|0;$t0=$add;var $24=$f_addr;var $add_ptr26=$24-8|0;var $25=HEAP32[$add_ptr26>>2];var $26=$f_addr;var $27=HEAP32[$26>>2];var $add27=$27+$25|0;HEAP32[$26>>2]=$add27;var $28=$t0;var $shl28=$28<<2;var $29=$f_addr;var $incdec_ptr29=$29-4|0;$f_addr=$incdec_ptr29;var $30=HEAP32[$29>>2];var $sub30=$30-$shl28|0;HEAP32[$29>>2]=$sub30;__label__=5;break;case 5:var $31=$j;var $inc=$31+1&65535;$j=$inc;__label__=3;break;case 6:var $32=$lsp_addr;var $incdec_ptr31=$32+2|0;$lsp_addr=$incdec_ptr31;var $33=HEAP16[$32>>1];var $conv32=$33<<16>>16;var $shl33=$conv32<<10;var $34=$f_addr;var $35=HEAP32[$34>>2];var $sub34=$35-$shl33|0;HEAP32[$34>>2]=$sub34;var $36=$i;var $conv35=$36<<16>>16;var $37=$f_addr;var $add_ptr36=$37+($conv35<<2)|0;$f_addr=$add_ptr36;var $38=$lsp_addr;var $incdec_ptr37=$38+2|0;$lsp_addr=$incdec_ptr37;__label__=7;break;case 7:var $39=$i;var $inc39=$39+1&65535;$i=$inc39;__label__=1;break;case 8:;return;default:assert(0,"bad label: "+__label__)}}_Get_lsp_pol["X"]=1;function _Lsf_lsp($lsf,$lsp,$m,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_addr;var $lsp_addr;var $m_addr;var $pOverflow_addr;var $i;var $ind;var $offset;var $L_tmp;$lsf_addr=$lsf;$lsp_addr=$lsp;$m_addr=$m;$pOverflow_addr=$pOverflow;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$m_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $idxprom=$2<<16>>16;var $3=$lsf_addr;var $arrayidx=$3+($idxprom<<1)|0;var $4=HEAP16[$arrayidx>>1];var $conv3=$4<<16>>16;var $shr=$conv3>>8;var $conv4=$shr&65535;$ind=$conv4;var $5=$i;var $idxprom5=$5<<16>>16;var $6=$lsf_addr;var $arrayidx6=$6+($idxprom5<<1)|0;var $7=HEAP16[$arrayidx6>>1];var $conv7=$7<<16>>16;var $and=$conv7&255;var $conv8=$and&65535;$offset=$conv8;var $8=$ind;var $conv9=$8<<16>>16;var $add=$conv9+1|0;var $arrayidx10=_table+($add<<1)|0;var $9=(tempInt=HEAPU8[$arrayidx10]|HEAPU8[$arrayidx10+1]<<8,tempInt<<16>>16);var $conv11=$9<<16>>16;var $10=$ind;var $idxprom12=$10<<16>>16;var $arrayidx13=_table+($idxprom12<<1)|0;var $11=(tempInt=HEAPU8[$arrayidx13]|HEAPU8[$arrayidx13+1]<<8,tempInt<<16>>16);var $conv14=$11<<16>>16;var $sub=$conv11-$conv14|0;var $12=$offset;var $conv15=$12<<16>>16;var $mul=$sub*$conv15|0;var $shr16=$mul>>8;$L_tmp=$shr16;var $13=$ind;var $idxprom17=$13<<16>>16;var $arrayidx18=_table+($idxprom17<<1)|0;var $14=(tempInt=HEAPU8[$arrayidx18]|HEAPU8[$arrayidx18+1]<<8,tempInt<<16>>16);var $conv19=$14<<16>>16;var $15=$L_tmp;var $conv20=$15&65535;var $conv21=$conv20<<16>>16;var $add22=$conv19+$conv21|0;var $conv23=$add22&65535;var $16=$i;var $idxprom24=$16<<16>>16;var $17=$lsp_addr;var $arrayidx25=$17+($idxprom24<<1)|0;HEAP16[$arrayidx25>>1]=$conv23;__label__=3;break;case 3:var $18=$i;var $inc=$18+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_Lsf_lsp["X"]=1;function _Lsp_lsf($lsp,$lsf,$m,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_addr;var $lsf_addr;var $m_addr;var $pOverflow_addr;var $i;var $ind;var $temp;var $L_tmp;var $p_lsp;var $p_lsf;$lsp_addr=$lsp;$lsf_addr=$lsf;$m_addr=$m;$pOverflow_addr=$pOverflow;var $0=$m_addr;var $conv=$0<<16>>16;var $sub=$conv-1|0;var $1=$lsp_addr;var $arrayidx=$1+($sub<<1)|0;$p_lsp=$arrayidx;var $2=$m_addr;var $conv1=$2<<16>>16;var $sub2=$conv1-1|0;var $3=$lsf_addr;var $arrayidx3=$3+($sub2<<1)|0;$p_lsf=$arrayidx3;var $4=$pOverflow_addr;$ind=63;var $5=$m_addr;var $conv4=$5<<16>>16;var $sub5=$conv4-1|0;var $conv6=$sub5&65535;$i=$conv6;__label__=1;break;case 1:var $6=$i;var $conv7=$6<<16>>16;var $cmp=($conv7|0)>=0;if($cmp){__label__=2;break}else{__label__=7;break}case 2:var $7=$p_lsp;var $incdec_ptr=$7-2|0;$p_lsp=$incdec_ptr;var $8=HEAP16[$7>>1];$temp=$8;__label__=3;break;case 3:var $9=$ind;var $idxprom=$9<<16>>16;var $arrayidx9=_table+($idxprom<<1)|0;var $10=(tempInt=HEAPU8[$arrayidx9]|HEAPU8[$arrayidx9+1]<<8,tempInt<<16>>16);var $conv10=$10<<16>>16;var $11=$temp;var $conv11=$11<<16>>16;var $cmp12=($conv10|0)<($conv11|0);if($cmp12){__label__=4;break}else{__label__=5;break}case 4:var $12=$ind;var $dec=$12-1&65535;$ind=$dec;__label__=3;break;case 5:var $13=$temp;var $conv14=$13<<16>>16;var $14=$ind;var $idxprom15=$14<<16>>16;var $arrayidx16=_table+($idxprom15<<1)|0;var $15=(tempInt=HEAPU8[$arrayidx16]|HEAPU8[$arrayidx16+1]<<8,tempInt<<16>>16);var $conv17=$15<<16>>16;var $sub18=$conv14-$conv17|0;var $16=$ind;var $idxprom19=$16<<16>>16;var $arrayidx20=_slope+($idxprom19<<1)|0;var $17=(tempInt=HEAPU8[$arrayidx20]|HEAPU8[$arrayidx20+1]<<8,tempInt<<16>>16);var $conv21=$17<<16>>16;var $mul=$sub18*$conv21|0;$L_tmp=$mul;var $18=$L_tmp;var $add=$18+2048|0;var $shr=$add>>12;$L_tmp=$shr;var $19=$L_tmp;var $conv22=$19&65535;var $conv23=$conv22<<16>>16;var $20=$ind;var $conv24=$20<<16>>16;var $shl=$conv24<<8;var $add25=$conv23+$shl|0;var $conv26=$add25&65535;var $21=$p_lsf;var $incdec_ptr27=$21-2|0;$p_lsf=$incdec_ptr27;HEAP16[$21>>1]=$conv26;__label__=6;break;case 6:var $22=$i;var $dec28=$22-1&65535;$i=$dec28;__label__=1;break;case 7:;return;default:assert(0,"bad label: "+__label__)}}_Lsp_lsf["X"]=1;function _Lsp_Az($lsp,$a,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=48;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsp_addr;var $a_addr;var $pOverflow_addr;var $i;var $j;var $f1=__stackBase__;var $f2=__stackBase__+24;var $t0;var $t1;var $p_a;var $p_f1;var $p_f2;$lsp_addr=$lsp;$a_addr=$a;$pOverflow_addr=$pOverflow;var $0=$a_addr;var $arrayidx=$0|0;$p_a=$arrayidx;var $1=$lsp_addr;var $arrayidx1=$1|0;var $arraydecay=$f1|0;var $2=$pOverflow_addr;_Get_lsp_pol($arrayidx1,$arraydecay,$2);var $3=$lsp_addr;var $arrayidx2=$3+2|0;var $arraydecay3=$f2|0;var $4=$pOverflow_addr;_Get_lsp_pol($arrayidx2,$arraydecay3,$4);var $arrayidx4=$f1+20|0;$p_f1=$arrayidx4;var $arrayidx5=$f2+20|0;$p_f2=$arrayidx5;$i=5;__label__=1;break;case 1:var $5=$i;var $conv=$5<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $6=$i;var $conv7=$6<<16>>16;var $sub=$conv7-1|0;var $arrayidx8=$f1+($sub<<2)|0;var $7=HEAP32[$arrayidx8>>2];var $8=$p_f1;var $incdec_ptr=$8-4|0;$p_f1=$incdec_ptr;var $9=HEAP32[$8>>2];var $add=$9+$7|0;HEAP32[$8>>2]=$add;var $10=$i;var $conv9=$10<<16>>16;var $sub10=$conv9-1|0;var $arrayidx11=$f2+($sub10<<2)|0;var $11=HEAP32[$arrayidx11>>2];var $12=$p_f2;var $incdec_ptr12=$12-4|0;$p_f2=$incdec_ptr12;var $13=HEAP32[$12>>2];var $sub13=$13-$11|0;HEAP32[$12>>2]=$sub13;__label__=3;break;case 3:var $14=$i;var $dec=$14-1&65535;$i=$dec;__label__=1;break;case 4:var $15=$p_a;var $incdec_ptr14=$15+2|0;$p_a=$incdec_ptr14;HEAP16[$15>>1]=4096;var $arrayidx15=$f1+4|0;$p_f1=$arrayidx15;var $arrayidx16=$f2+4|0;$p_f2=$arrayidx16;$i=1;$j=10;__label__=5;break;case 5:var $16=$i;var $conv18=$16<<16>>16;var $cmp19=($conv18|0)<=5;if($cmp19){__label__=6;break}else{__label__=8;break}case 6:var $17=$p_f1;var $18=HEAP32[$17>>2];var $19=$p_f2;var $20=HEAP32[$19>>2];var $add22=$18+$20|0;$t0=$add22;var $21=$p_f1;var $incdec_ptr23=$21+4|0;$p_f1=$incdec_ptr23;var $22=HEAP32[$21>>2];var $23=$p_f2;var $incdec_ptr24=$23+4|0;$p_f2=$incdec_ptr24;var $24=HEAP32[$23>>2];var $sub25=$22-$24|0;$t1=$sub25;var $25=$t0;var $add26=$25+4096|0;$t0=$add26;var $26=$t1;var $add27=$26+4096|0;$t1=$add27;var $27=$t0;var $shr=$27>>13;var $conv28=$shr&65535;var $28=$p_a;var $incdec_ptr29=$28+2|0;$p_a=$incdec_ptr29;HEAP16[$28>>1]=$conv28;var $29=$t1;var $shr30=$29>>13;var $conv31=$shr30&65535;var $30=$j;var $idxprom=$30<<16>>16;var $31=$a_addr;var $arrayidx32=$31+($idxprom<<1)|0;HEAP16[$arrayidx32>>1]=$conv31;__label__=7;break;case 7:var $32=$i;var $inc=$32+1&65535;$i=$inc;var $33=$j;var $dec34=$33-1&65535;$j=$dec34;__label__=5;break;case 8:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Lsp_Az["X"]=1;function _lsp_init($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $s;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=9;break;case 2:var $1=$st_addr;HEAP32[$1>>2]=0;var $call=_malloc(44);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=9;break;case 4:var $3=$s;var $qSt=$3+40|0;var $call4=_Q_plsf_init($qSt);var $conv=$call4<<16>>16;var $cmp5=0!=($conv|0);if($cmp5){__label__=5;break}else{__label__=6;break}case 5:$retval=-1;__label__=9;break;case 6:var $4=$s;var $call9=_lsp_reset($4);var $conv10=$call9<<16>>16;var $cmp11=0!=($conv10|0);if($cmp11){__label__=7;break}else{__label__=8;break}case 7:$retval=-1;__label__=9;break;case 8:var $5=$s;var $6=$st_addr;HEAP32[$6>>2]=$5;$retval=0;__label__=9;break;case 9:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _lsp_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$st_addr;var $lsp_old=$1|0;var $arraydecay=$lsp_old|0;var $2=$arraydecay;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($2,_lsp_init_data,20,1);var $3=$st_addr;var $lsp_old_q=$3+20|0;var $arraydecay1=$lsp_old_q|0;var $4=$arraydecay1;var $5=$st_addr;var $lsp_old2=$5|0;var $arraydecay3=$lsp_old2|0;var $6=$arraydecay3;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($4,$6,20,1);var $7=$st_addr;var $qSt=$7+40|0;var $8=HEAP32[$qSt>>2];var $call=_Q_plsf_reset($8);$retval=0;__label__=3;break;case 3:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _lsp_exit($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$st_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$st_addr;var $4=HEAP32[$3>>2];var $qSt=$4+40|0;_Q_plsf_exit($qSt);var $5=$st_addr;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$st_addr;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _lsp($st,$req_mode,$used_mode,$az,$azQ,$lsp_new,$anap,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=64;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $req_mode_addr;var $used_mode_addr;var $az_addr;var $azQ_addr;var $lsp_new_addr;var $anap_addr;var $pOverflow_addr;var $lsp_new_q=__stackBase__;var $lsp_mid=__stackBase__+20;var $lsp_mid_q=__stackBase__+40;var $pred_init_i=__stackBase__+60;$st_addr=$st;$req_mode_addr=$req_mode;$used_mode_addr=$used_mode;$az_addr=$az;$azQ_addr=$azQ;$lsp_new_addr=$lsp_new;$anap_addr=$anap;$pOverflow_addr=$pOverflow;var $0=$req_mode_addr;var $cmp=($0|0)==7;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $1=$az_addr;var $arrayidx=$1+22|0;var $arraydecay=$lsp_mid|0;var $2=$st_addr;var $lsp_old=$2|0;var $arraydecay1=$lsp_old|0;var $3=$pOverflow_addr;_Az_lsp($arrayidx,$arraydecay,$arraydecay1,$3);var $4=$az_addr;var $arrayidx2=$4+66|0;var $5=$lsp_new_addr;var $arraydecay3=$lsp_mid|0;var $6=$pOverflow_addr;_Az_lsp($arrayidx2,$5,$arraydecay3,$6);var $7=$st_addr;var $lsp_old4=$7|0;var $arraydecay5=$lsp_old4|0;var $arraydecay6=$lsp_mid|0;var $8=$lsp_new_addr;var $9=$az_addr;var $10=$pOverflow_addr;_Int_lpc_1and3_2($arraydecay5,$arraydecay6,$8,$9,$10);var $11=$used_mode_addr;var $cmp7=($11|0)!=8;if($cmp7){__label__=2;break}else{__label__=3;break}case 2:var $12=$st_addr;var $qSt=$12+40|0;var $13=HEAP32[$qSt>>2];var $arraydecay9=$lsp_mid|0;var $14=$lsp_new_addr;var $arraydecay10=$lsp_mid_q|0;var $arraydecay11=$lsp_new_q|0;var $15=$anap_addr;var $16=HEAP32[$15>>2];var $17=$pOverflow_addr;_Q_plsf_5($13,$arraydecay9,$14,$arraydecay10,$arraydecay11,$16,$17);var $18=$st_addr;var $lsp_old_q=$18+20|0;var $arraydecay12=$lsp_old_q|0;var $arraydecay13=$lsp_mid_q|0;var $arraydecay14=$lsp_new_q|0;var $19=$azQ_addr;var $20=$pOverflow_addr;_Int_lpc_1and3($arraydecay12,$arraydecay13,$arraydecay14,$19,$20);var $21=$anap_addr;var $22=HEAP32[$21>>2];var $add_ptr=$22+10|0;HEAP32[$21>>2]=$add_ptr;__label__=3;break;case 3:__label__=7;break;case 4:var $23=$az_addr;var $arrayidx15=$23+66|0;var $24=$lsp_new_addr;var $25=$st_addr;var $lsp_old16=$25|0;var $arraydecay17=$lsp_old16|0;var $26=$pOverflow_addr;_Az_lsp($arrayidx15,$24,$arraydecay17,$26);var $27=$st_addr;var $lsp_old18=$27|0;var $arraydecay19=$lsp_old18|0;var $28=$lsp_new_addr;var $29=$az_addr;var $30=$pOverflow_addr;_Int_lpc_1to3_2($arraydecay19,$28,$29,$30);var $31=$used_mode_addr;var $cmp20=($31|0)!=8;if($cmp20){__label__=5;break}else{__label__=6;break}case 5:var $32=$st_addr;var $qSt22=$32+40|0;var $33=HEAP32[$qSt22>>2];var $34=$req_mode_addr;var $35=$lsp_new_addr;var $arraydecay23=$lsp_new_q|0;var $36=$anap_addr;var $37=HEAP32[$36>>2];var $38=$pOverflow_addr;_Q_plsf_3($33,$34,$35,$arraydecay23,$37,$pred_init_i,$38);var $39=$st_addr;var $lsp_old_q24=$39+20|0;var $arraydecay25=$lsp_old_q24|0;var $arraydecay26=$lsp_new_q|0;var $40=$azQ_addr;var $41=$pOverflow_addr;_Int_lpc_1to3($arraydecay25,$arraydecay26,$40,$41);var $42=$anap_addr;var $43=HEAP32[$42>>2];var $add_ptr27=$43+6|0;HEAP32[$42>>2]=$add_ptr27;__label__=6;break;case 6:__label__=7;break;case 7:var $44=$st_addr;var $lsp_old30=$44|0;var $arraydecay31=$lsp_old30|0;var $45=$arraydecay31;var $46=$lsp_new_addr;var $47=$46;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($45,$47,20,1);var $48=$used_mode_addr;var $cmp32=($48|0)!=8;if($cmp32){__label__=8;break}else{__label__=9;break}case 8:var $49=$st_addr;var $lsp_old_q34=$49+20|0;var $arraydecay35=$lsp_old_q34|0;var $50=$arraydecay35;var $arraydecay36=$lsp_new_q|0;var $51=$arraydecay36;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($50,$51,20,1);__label__=9;break;case 9:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_lsp["X"]=1;function _mult_r($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product_arr;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product_arr=$mul;var $2=$L_product_arr;var $add=$2+16384|0;$L_product_arr=$add;var $3=$L_product_arr;var $shr=$3>>15;$L_product_arr=$shr;var $4=$L_product_arr;var $and=$4&65536;var $sub=-$and|0;var $5=$L_product_arr;var $or=$5|$sub;$L_product_arr=$or;var $6=$L_product_arr;var $cmp=($6|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $7=$pOverflow_addr;HEAP32[$7>>2]=1;$L_product_arr=32767;__label__=5;break;case 2:var $8=$L_product_arr;var $cmp3=($8|0)<-32768;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:var $9=$pOverflow_addr;HEAP32[$9>>2]=1;$L_product_arr=-32768;__label__=4;break;case 4:__label__=5;break;case 5:var $10=$L_product_arr;var $conv7=$10&65535;return $conv7;default:assert(0,"bad label: "+__label__)}}function _negate($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;$var1_addr=$conv3;var $2=$var1_addr;return $2;default:assert(0,"bad label: "+__label__)}}function _norm_l($L_var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var_out;var $y;$L_var1_addr=$L_var1;$var_out=0;var $0=$L_var1_addr;var $tobool=($0|0)!=0;if($tobool){__label__=1;break}else{__label__=11;break}case 1:var $1=$L_var1_addr;var $2=$L_var1_addr;var $cmp=($2|0)<0;var $conv=$cmp&1;var $sub=$1-$conv|0;$y=$sub;var $3=$y;var $4=$y;var $shr=$4>>31;var $xor=$3^$shr;$L_var1_addr=$xor;__label__=2;break;case 2:var $5=$L_var1_addr;var $and=1073741824&$5;var $tobool1=($and|0)!=0;var $lnot=$tobool1^1;if($lnot){__label__=3;break}else{__label__=10;break}case 3:var $6=$var_out;var $inc=$6+1&65535;$var_out=$inc;var $7=$L_var1_addr;var $and2=536870912&$7;var $tobool3=($and2|0)!=0;if($tobool3){__label__=4;break}else{__label__=5;break}case 4:__label__=10;break;case 5:var $8=$var_out;var $inc5=$8+1&65535;$var_out=$inc5;var $9=$L_var1_addr;var $and6=268435456&$9;var $tobool7=($and6|0)!=0;if($tobool7){__label__=6;break}else{__label__=7;break}case 6:__label__=10;break;case 7:var $10=$var_out;var $inc10=$10+1&65535;$var_out=$inc10;var $11=$L_var1_addr;var $and11=134217728&$11;var $tobool12=($and11|0)!=0;if($tobool12){__label__=8;break}else{__label__=9;break}case 8:__label__=10;break;case 9:var $12=$var_out;var $inc15=$12+1&65535;$var_out=$inc15;var $13=$L_var1_addr;var $shl=$13<<4;$L_var1_addr=$shl;__label__=2;break;case 10:__label__=11;break;case 11:var $14=$var_out;return $14;default:assert(0,"bad label: "+__label__)}}_norm_l["X"]=1;function _norm_s($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var_out;var $y;$var1_addr=$var1;$var_out=0;var $0=$var1_addr;var $tobool=$0<<16>>16!=0;if($tobool){__label__=1;break}else{__label__=11;break}case 1:var $1=$var1_addr;var $conv=$1<<16>>16;var $2=$var1_addr;var $conv1=$2<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $3=$y;var $conv4=$3<<16>>16;var $4=$y;var $conv5=$4<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$var1_addr=$conv6;__label__=2;break;case 2:var $5=$var1_addr;var $conv7=$5<<16>>16;var $and=16384&$conv7;var $tobool8=($and|0)!=0;var $lnot=$tobool8^1;if($lnot){__label__=3;break}else{__label__=10;break}case 3:var $6=$var_out;var $inc=$6+1&65535;$var_out=$inc;var $7=$var1_addr;var $conv9=$7<<16>>16;var $and10=8192&$conv9;var $tobool11=($and10|0)!=0;if($tobool11){__label__=4;break}else{__label__=5;break}case 4:__label__=10;break;case 5:var $8=$var_out;var $inc13=$8+1&65535;$var_out=$inc13;var $9=$var1_addr;var $conv14=$9<<16>>16;var $and15=4096&$conv14;var $tobool16=($and15|0)!=0;if($tobool16){__label__=6;break}else{__label__=7;break}case 6:__label__=10;break;case 7:var $10=$var_out;var $inc19=$10+1&65535;$var_out=$inc19;var $11=$var1_addr;var $conv20=$11<<16>>16;var $and21=2048&$conv20;var $tobool22=($and21|0)!=0;if($tobool22){__label__=8;break}else{__label__=9;break}case 8:__label__=10;break;case 9:var $12=$var_out;var $inc25=$12+1&65535;$var_out=$inc25;var $13=$var1_addr;var $conv26=$13<<16>>16;var $shl=$conv26<<4;var $conv27=$shl&65535;$var1_addr=$conv27;__label__=2;break;case 10:__label__=11;break;case 11:var $14=$var_out;return $14;default:assert(0,"bad label: "+__label__)}}_norm_s["X"]=1;function _ph_disp_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<5;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $gainMem=$3|0;var $arrayidx=$gainMem+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=5;break;case 5:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=3;break;case 6:var $5=$state_addr;var $prevState=$5+10|0;HEAP16[$prevState>>1]=0;var $6=$state_addr;var $prevCbGain=$6+12|0;HEAP16[$prevCbGain>>1]=0;var $7=$state_addr;var $lockFull=$7+14|0;HEAP16[$lockFull>>1]=0;var $8=$state_addr;var $onset=$8+16|0;HEAP16[$onset>>1]=0;$retval=0;__label__=7;break;case 7:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _ph_disp_lock($state){var __label__;var $state_addr;$state_addr=$state;var $0=$state_addr;var $lockFull=$0+14|0;HEAP16[$lockFull>>1]=1;return}function _ph_disp_release($state){var __label__;var $state_addr;$state_addr=$state;var $0=$state_addr;var $lockFull=$0+14|0;HEAP16[$lockFull>>1]=0;return}function _ol_ltp($st,$vadSt,$mode,$wsp,$T_op,$old_lags,$ol_gain_flg,$idx,$dtx,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $vadSt_addr;var $mode_addr;var $wsp_addr;var $T_op_addr;var $old_lags_addr;var $ol_gain_flg_addr;var $idx_addr;var $dtx_addr;var $pOverflow_addr;$st_addr=$st;$vadSt_addr=$vadSt;$mode_addr=$mode;$wsp_addr=$wsp;$T_op_addr=$T_op;$old_lags_addr=$old_lags;$ol_gain_flg_addr=$ol_gain_flg;$idx_addr=$idx;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $cmp=($0|0)!=6;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$ol_gain_flg_addr;var $arrayidx=$1|0;HEAP16[$arrayidx>>1]=0;var $2=$ol_gain_flg_addr;var $arrayidx1=$2+2|0;HEAP16[$arrayidx1>>1]=0;__label__=2;break;case 2:var $3=$mode_addr;var $cmp2=($3|0)==0;if($cmp2){__label__=4;break}else{__label__=3;break}case 3:var $4=$mode_addr;var $cmp3=($4|0)==1;if($cmp3){__label__=4;break}else{__label__=5;break}case 4:var $5=$vadSt_addr;var $6=$mode_addr;var $7=$wsp_addr;var $8=$idx_addr;var $9=$dtx_addr;var $10=$pOverflow_addr;var $call=_Pitch_ol($5,$6,$7,20,143,160,$8,$9,$10);var $11=$T_op_addr;HEAP16[$11>>1]=$call;__label__=12;break;case 5:var $12=$mode_addr;var $cmp5=$12>>>0<=5;if($cmp5){__label__=6;break}else{__label__=7;break}case 6:var $13=$vadSt_addr;var $14=$mode_addr;var $15=$wsp_addr;var $16=$idx_addr;var $17=$dtx_addr;var $18=$pOverflow_addr;var $call7=_Pitch_ol($13,$14,$15,20,143,80,$16,$17,$18);var $19=$T_op_addr;HEAP16[$19>>1]=$call7;__label__=11;break;case 7:var $20=$mode_addr;var $cmp9=($20|0)==6;if($cmp9){__label__=8;break}else{__label__=9;break}case 8:var $21=$st_addr;var $22=$vadSt_addr;var $23=$wsp_addr;var $24=$old_lags_addr;var $25=$ol_gain_flg_addr;var $26=$idx_addr;var $27=$dtx_addr;var $28=$pOverflow_addr;var $call11=_Pitch_ol_wgh($21,$22,$23,20,143,80,$24,$25,$26,$27,$28);var $29=$T_op_addr;HEAP16[$29>>1]=$call11;__label__=10;break;case 9:var $30=$vadSt_addr;var $31=$mode_addr;var $32=$wsp_addr;var $33=$idx_addr;var $34=$dtx_addr;var $35=$pOverflow_addr;var $call13=_Pitch_ol($30,$31,$32,18,143,80,$33,$34,$35);var $36=$T_op_addr;HEAP16[$36>>1]=$call13;__label__=10;break;case 10:__label__=11;break;case 11:__label__=12;break;case 12:;return;default:assert(0,"bad label: "+__label__)}}_ol_ltp["X"]=1;function _L_mult297($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_add298($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _L_shl299($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _Pitch_fr_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $T0_prev_subframe=$1|0;HEAP16[$T0_prev_subframe>>1]=0;$retval=0;__label__=3;break;case 3:var $2=$retval;return $2;default:assert(0,"bad label: "+__label__)}}function _ph_disp($state,$mode,$x,$cbGain,$ltpGain,$inno,$pitch_fac,$tmp_shift,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=160;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;var $mode_addr;var $x_addr;var $cbGain_addr;var $ltpGain_addr;var $inno_addr;var $pitch_fac_addr;var $tmp_shift_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $i;var $i1;var $tmp1;var $L_temp;var $L_temp2;var $impNr;var $inno_sav=__stackBase__;var $ps_poss=__stackBase__+80;var $nze;var $nPulse;var $ppos;var $ph_imp;var $p_inno;var $p_inno_sav;var $p_x;var $p_ph_imp;var $c_inno_sav;var $ph_imp_low_MR795_ptr;var $ph_imp_mid_MR795_ptr;var $ph_imp_low_ptr;var $ph_imp_mid_ptr;$state_addr=$state;$mode_addr=$mode;$x_addr=$x;$cbGain_addr=$cbGain;$ltpGain_addr=$ltpGain;$inno_addr=$inno;$pitch_fac_addr=$pitch_fac;$tmp_shift_addr=$tmp_shift;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$common_amr_tbls_addr;var $ph_imp_low_MR795_ptr1=$0+120|0;var $1=HEAP32[$ph_imp_low_MR795_ptr1>>2];$ph_imp_low_MR795_ptr=$1;var $2=$common_amr_tbls_addr;var $ph_imp_mid_MR795_ptr2=$2+124|0;var $3=HEAP32[$ph_imp_mid_MR795_ptr2>>2];$ph_imp_mid_MR795_ptr=$3;var $4=$common_amr_tbls_addr;var $ph_imp_low_ptr3=$4+128|0;var $5=HEAP32[$ph_imp_low_ptr3>>2];$ph_imp_low_ptr=$5;var $6=$common_amr_tbls_addr;var $ph_imp_mid_ptr4=$6+132|0;var $7=HEAP32[$ph_imp_mid_ptr4>>2];$ph_imp_mid_ptr=$7;var $8=$state_addr;var $gainMem=$8|0;var $arrayidx=$gainMem+6|0;var $9=HEAP16[$arrayidx>>1];var $10=$state_addr;var $gainMem5=$10|0;var $arrayidx6=$gainMem5+8|0;HEAP16[$arrayidx6>>1]=$9;var $11=$state_addr;var $gainMem7=$11|0;var $arrayidx8=$gainMem7+4|0;var $12=HEAP16[$arrayidx8>>1];var $13=$state_addr;var $gainMem9=$13|0;var $arrayidx10=$gainMem9+6|0;HEAP16[$arrayidx10>>1]=$12;var $14=$state_addr;var $gainMem11=$14|0;var $arrayidx12=$gainMem11+2|0;var $15=HEAP16[$arrayidx12>>1];var $16=$state_addr;var $gainMem13=$16|0;var $arrayidx14=$gainMem13+4|0;HEAP16[$arrayidx14>>1]=$15;var $17=$state_addr;var $gainMem15=$17|0;var $arrayidx16=$gainMem15|0;var $18=HEAP16[$arrayidx16>>1];var $19=$state_addr;var $gainMem17=$19|0;var $arrayidx18=$gainMem17+2|0;HEAP16[$arrayidx18>>1]=$18;var $20=$ltpGain_addr;var $21=$state_addr;var $gainMem19=$21|0;var $arrayidx20=$gainMem19|0;HEAP16[$arrayidx20>>1]=$20;var $22=$ltpGain_addr;var $conv=$22<<16>>16;var $cmp=($conv|0)<14746;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $23=$ltpGain_addr;var $conv22=$23<<16>>16;var $cmp23=($conv22|0)>9830;if($cmp23){__label__=2;break}else{__label__=3;break}case 2:$impNr=1;__label__=4;break;case 3:$impNr=0;__label__=4;break;case 4:__label__=6;break;case 5:$impNr=2;__label__=6;break;case 6:var $24=$state_addr;var $prevCbGain=$24+12|0;var $25=HEAP16[$prevCbGain>>1];var $conv28=$25<<16>>16;var $mul=$conv28<<14|0;var $shl=$mul<<1;$L_temp=$shl;var $26=$L_temp;var $cmp29=($26|0)>536870911;if($cmp29){__label__=7;break}else{__label__=8;break}case 7:var $27=$pOverflow_addr;HEAP32[$27>>2]=1;$L_temp=2147483647;__label__=12;break;case 8:var $28=$L_temp;var $cmp33=($28|0)<-536870912;if($cmp33){__label__=9;break}else{__label__=10;break}case 9:var $29=$pOverflow_addr;HEAP32[$29>>2]=1;$L_temp=-2147483648;__label__=11;break;case 10:var $30=$L_temp;var $shl37=$30<<2;$L_temp=$shl37;__label__=11;break;case 11:__label__=12;break;case 12:var $31=$L_temp;var $32=$pOverflow_addr;var $call=_pv_round($31,$32);$tmp1=$call;var $33=$cbGain_addr;var $conv40=$33<<16>>16;var $34=$tmp1;var $conv41=$34<<16>>16;var $cmp42=($conv40|0)>($conv41|0);if($cmp42){__label__=13;break}else{__label__=14;break}case 13:var $35=$state_addr;var $onset=$35+16|0;HEAP16[$onset>>1]=2;__label__=17;break;case 14:var $36=$state_addr;var $onset46=$36+16|0;var $37=HEAP16[$onset46>>1];var $conv47=$37<<16>>16;var $cmp48=($conv47|0)>0;if($cmp48){__label__=15;break}else{__label__=16;break}case 15:var $38=$state_addr;var $onset51=$38+16|0;var $39=HEAP16[$onset51>>1];var $conv52=$39<<16>>16;var $sub=$conv52-1|0;var $conv53=$sub&65535;HEAP16[$onset51>>1]=$conv53;__label__=16;break;case 16:__label__=17;break;case 17:var $40=$state_addr;var $onset56=$40+16|0;var $41=HEAP16[$onset56>>1];var $conv57=$41<<16>>16;var $cmp58=($conv57|0)==0;if($cmp58){__label__=18;break}else{__label__=27;break}case 18:$i1=0;$i=0;__label__=19;break;case 19:var $42=$i;var $conv61=$42<<16>>16;var $cmp62=($conv61|0)<5;if($cmp62){__label__=20;break}else{__label__=24;break}case 20:var $43=$i;var $idxprom=$43<<16>>16;var $44=$state_addr;var $gainMem64=$44|0;var $arrayidx65=$gainMem64+($idxprom<<1)|0;var $45=HEAP16[$arrayidx65>>1];var $conv66=$45<<16>>16;var $cmp67=($conv66|0)<9830;if($cmp67){__label__=21;break}else{__label__=22;break}case 21:var $46=$i1;var $conv70=$46<<16>>16;var $add=$conv70+1|0;var $conv71=$add&65535;$i1=$conv71;__label__=22;break;case 22:__label__=23;break;case 23:var $47=$i;var $inc=$47+1&65535;$i=$inc;__label__=19;break;case 24:var $48=$i1;var $conv73=$48<<16>>16;var $cmp74=($conv73|0)>2;if($cmp74){__label__=25;break}else{__label__=26;break}case 25:$impNr=0;__label__=26;break;case 26:__label__=27;break;case 27:var $49=$impNr;var $conv79=$49<<16>>16;var $50=$state_addr;var $prevState=$50+10|0;var $51=HEAP16[$prevState>>1];var $conv80=$51<<16>>16;var $add81=$conv80+1|0;var $cmp82=($conv79|0)>($add81|0);if($cmp82){__label__=28;break}else{__label__=30;break}case 28:var $52=$state_addr;var $onset84=$52+16|0;var $53=HEAP16[$onset84>>1];var $conv85=$53<<16>>16;var $cmp86=($conv85|0)==0;if($cmp86){__label__=29;break}else{__label__=30;break}case 29:var $54=$impNr;var $conv89=$54<<16>>16;var $sub90=$conv89-1|0;var $conv91=$sub90&65535;$impNr=$conv91;__label__=30;break;case 30:var $55=$impNr;var $conv93=$55<<16>>16;var $cmp94=($conv93|0)<2;if($cmp94){__label__=31;break}else{__label__=33;break}case 31:var $56=$state_addr;var $onset97=$56+16|0;var $57=HEAP16[$onset97>>1];var $conv98=$57<<16>>16;var $cmp99=($conv98|0)>0;if($cmp99){__label__=32;break}else{__label__=33;break}case 32:var $58=$impNr;var $conv102=$58<<16>>16;var $add103=$conv102+1|0;var $conv104=$add103&65535;$impNr=$conv104;__label__=33;break;case 33:var $59=$cbGain_addr;var $conv106=$59<<16>>16;var $cmp107=($conv106|0)<10;if($cmp107){__label__=34;break}else{__label__=35;break}case 34:$impNr=2;__label__=35;break;case 35:var $60=$state_addr;var $lockFull=$60+14|0;var $61=HEAP16[$lockFull>>1];var $conv111=$61<<16>>16;var $cmp112=($conv111|0)==1;if($cmp112){__label__=36;break}else{__label__=37;break}case 36:$impNr=0;__label__=37;break;case 37:var $62=$impNr;var $63=$state_addr;var $prevState116=$63+10|0;HEAP16[$prevState116>>1]=$62;var $64=$cbGain_addr;var $65=$state_addr;var $prevCbGain117=$65+12|0;HEAP16[$prevCbGain117>>1]=$64;var $66=$mode_addr;var $cmp118=($66|0)!=7;if($cmp118){__label__=38;break}else{__label__=69;break}case 38:var $67=$mode_addr;var $cmp121=($67|0)!=6;if($cmp121){__label__=39;break}else{__label__=69;break}case 39:var $68=$mode_addr;var $cmp124=($68|0)!=4;if($cmp124){__label__=40;break}else{__label__=69;break}case 40:var $69=$impNr;var $conv127=$69<<16>>16;var $cmp128=($conv127|0)<2;if($cmp128){__label__=41;break}else{__label__=69;break}case 41:$nze=0;var $70=$inno_addr;var $arrayidx131=$70|0;$p_inno=$arrayidx131;var $arrayidx132=$inno_sav|0;$p_inno_sav=$arrayidx132;$i=0;__label__=42;break;case 42:var $71=$i;var $conv134=$71<<16>>16;var $cmp135=($conv134|0)<40;if($cmp135){__label__=43;break}else{__label__=47;break}case 43:var $72=$p_inno;var $73=HEAP16[$72>>1];var $conv138=$73<<16>>16;var $cmp139=($conv138|0)!=0;if($cmp139){__label__=44;break}else{__label__=45;break}case 44:var $74=$i;var $75=$nze;var $idxprom142=$75<<16>>16;var $arrayidx143=$ps_poss+($idxprom142<<1)|0;HEAP16[$arrayidx143>>1]=$74;var $76=$nze;var $conv144=$76<<16>>16;var $add145=$conv144+1|0;var $conv146=$add145&65535;$nze=$conv146;__label__=45;break;case 45:var $77=$p_inno;var $78=HEAP16[$77>>1];var $79=$p_inno_sav;var $incdec_ptr=$79+2|0;$p_inno_sav=$incdec_ptr;HEAP16[$79>>1]=$78;var $80=$p_inno;var $incdec_ptr148=$80+2|0;$p_inno=$incdec_ptr148;HEAP16[$80>>1]=0;__label__=46;break;case 46:var $81=$i;var $inc150=$81+1&65535;$i=$inc150;__label__=42;break;case 47:var $82=$mode_addr;var $cmp152=($82|0)==5;if($cmp152){__label__=48;break}else{__label__=52;break}case 48:var $83=$impNr;var $conv155=$83<<16>>16;var $cmp156=($conv155|0)==0;if($cmp156){__label__=49;break}else{__label__=50;break}case 49:var $84=$ph_imp_low_MR795_ptr;$ph_imp=$84;__label__=51;break;case 50:var $85=$ph_imp_mid_MR795_ptr;$ph_imp=$85;__label__=51;break;case 51:__label__=56;break;case 52:var $86=$impNr;var $conv162=$86<<16>>16;var $cmp163=($conv162|0)==0;if($cmp163){__label__=53;break}else{__label__=54;break}case 53:var $87=$ph_imp_low_ptr;$ph_imp=$87;__label__=55;break;case 54:var $88=$ph_imp_mid_ptr;$ph_imp=$88;__label__=55;break;case 55:__label__=56;break;case 56:$nPulse=0;__label__=57;break;case 57:var $89=$nPulse;var $conv170=$89<<16>>16;var $90=$nze;var $conv171=$90<<16>>16;var $cmp172=($conv170|0)<($conv171|0);if($cmp172){__label__=58;break}else{__label__=68;break}case 58:var $91=$nPulse;var $idxprom175=$91<<16>>16;var $arrayidx176=$ps_poss+($idxprom175<<1)|0;var $92=HEAP16[$arrayidx176>>1];$ppos=$92;var $93=$ppos;var $idxprom177=$93<<16>>16;var $arrayidx178=$inno_sav+($idxprom177<<1)|0;var $94=HEAP16[$arrayidx178>>1];$c_inno_sav=$94;var $95=$ppos;var $idxprom179=$95<<16>>16;var $96=$inno_addr;var $arrayidx180=$96+($idxprom179<<1)|0;$p_inno=$arrayidx180;var $97=$ph_imp;$p_ph_imp=$97;var $98=$ppos;$i=$98;__label__=59;break;case 59:var $99=$i;var $conv182=$99<<16>>16;var $cmp183=($conv182|0)<40;if($cmp183){__label__=60;break}else{__label__=62;break}case 60:var $100=$c_inno_sav;var $conv186=$100<<16>>16;var $101=$p_ph_imp;var $incdec_ptr187=$101+2|0;$p_ph_imp=$incdec_ptr187;var $102=HEAP16[$101>>1];var $conv188=$102<<16>>16;var $mul189=$conv186*$conv188|0;var $shr=$mul189>>15;$L_temp=$shr;var $103=$L_temp;var $conv190=$103&65535;$tmp1=$conv190;var $104=$p_inno;var $105=HEAP16[$104>>1];var $106=$tmp1;var $107=$pOverflow_addr;var $call191=_add_16($105,$106,$107);var $108=$p_inno;HEAP16[$108>>1]=$call191;var $109=$p_inno;var $add_ptr=$109+2|0;$p_inno=$add_ptr;__label__=61;break;case 61:var $110=$i;var $inc193=$110+1&65535;$i=$inc193;__label__=59;break;case 62:var $111=$inno_addr;var $arrayidx195=$111|0;$p_inno=$arrayidx195;$i=0;__label__=63;break;case 63:var $112=$i;var $conv197=$112<<16>>16;var $113=$ppos;var $conv198=$113<<16>>16;var $cmp199=($conv197|0)<($conv198|0);if($cmp199){__label__=64;break}else{__label__=66;break}case 64:var $114=$c_inno_sav;var $conv202=$114<<16>>16;var $115=$p_ph_imp;var $incdec_ptr203=$115+2|0;$p_ph_imp=$incdec_ptr203;var $116=HEAP16[$115>>1];var $conv204=$116<<16>>16;var $mul205=$conv202*$conv204|0;var $shr206=$mul205>>15;$L_temp=$shr206;var $117=$L_temp;var $conv207=$117&65535;$tmp1=$conv207;var $118=$p_inno;var $119=HEAP16[$118>>1];var $120=$tmp1;var $121=$pOverflow_addr;var $call208=_add_16($119,$120,$121);var $122=$p_inno;HEAP16[$122>>1]=$call208;var $123=$p_inno;var $add_ptr209=$123+2|0;$p_inno=$add_ptr209;__label__=65;break;case 65:var $124=$i;var $inc211=$124+1&65535;$i=$inc211;__label__=63;break;case 66:__label__=67;break;case 67:var $125=$nPulse;var $inc214=$125+1&65535;$nPulse=$inc214;__label__=57;break;case 68:__label__=69;break;case 69:var $126=$inno_addr;var $arrayidx217=$126|0;$p_inno=$arrayidx217;var $127=$x_addr;var $arrayidx218=$127|0;$p_x=$arrayidx218;$i=0;__label__=70;break;case 70:var $128=$i;var $conv220=$128<<16>>16;var $cmp221=($conv220|0)<40;if($cmp221){__label__=71;break}else{__label__=73;break}case 71:var $129=$i;var $idxprom224=$129<<16>>16;var $130=$x_addr;var $arrayidx225=$130+($idxprom224<<1)|0;var $131=HEAP16[$arrayidx225>>1];var $132=$pitch_fac_addr;var $133=$pOverflow_addr;var $call226=_L_mult297($131,$132,$133);$L_temp=$call226;var $134=$p_inno;var $incdec_ptr227=$134+2|0;$p_inno=$incdec_ptr227;var $135=HEAP16[$134>>1];var $conv228=$135<<16>>16;var $136=$cbGain_addr;var $conv229=$136<<16>>16;var $mul230=$conv228*$conv229|0;var $shl231=$mul230<<1;$L_temp2=$shl231;var $137=$L_temp;var $138=$L_temp2;var $139=$pOverflow_addr;var $call232=_L_add298($137,$138,$139);$L_temp=$call232;var $140=$L_temp;var $141=$tmp_shift_addr;var $142=$pOverflow_addr;var $call233=_L_shl299($140,$141,$142);$L_temp=$call233;var $143=$L_temp;var $144=$pOverflow_addr;var $call234=_pv_round($143,$144);var $145=$p_x;var $incdec_ptr235=$145+2|0;$p_x=$incdec_ptr235;HEAP16[$145>>1]=$call234;__label__=72;break;case 72:var $146=$i;var $inc237=$146+1&65535;$i=$inc237;__label__=70;break;case 73:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_ph_disp["X"]=1;function _Pitch_fr_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(2);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_Pitch_fr_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _Pitch_fr_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _getRange($T0,$delta_low,$delta_range,$pitmin,$pitmax,$t0_min,$t0_max,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $T0_addr;var $delta_low_addr;var $delta_range_addr;var $pitmin_addr;var $pitmax_addr;var $t0_min_addr;var $t0_max_addr;var $pOverflow_addr;var $temp;$T0_addr=$T0;$delta_low_addr=$delta_low;$delta_range_addr=$delta_range;$pitmin_addr=$pitmin;$pitmax_addr=$pitmax;$t0_min_addr=$t0_min;$t0_max_addr=$t0_max;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$t0_min_addr;var $2=HEAP16[$1>>1];$temp=$2;var $3=$T0_addr;var $conv=$3<<16>>16;var $4=$delta_low_addr;var $conv1=$4<<16>>16;var $sub=$conv-$conv1|0;var $conv2=$sub&65535;$temp=$conv2;var $5=$temp;var $conv3=$5<<16>>16;var $6=$pitmin_addr;var $conv4=$6<<16>>16;var $cmp=($conv3|0)<($conv4|0);if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $7=$pitmin_addr;$temp=$7;__label__=2;break;case 2:var $8=$temp;var $9=$t0_min_addr;HEAP16[$9>>1]=$8;var $10=$delta_range_addr;var $conv6=$10<<16>>16;var $11=$temp;var $conv7=$11<<16>>16;var $add=$conv7+$conv6|0;var $conv8=$add&65535;$temp=$conv8;var $12=$temp;var $conv9=$12<<16>>16;var $13=$pitmax_addr;var $conv10=$13<<16>>16;var $cmp11=($conv9|0)>($conv10|0);if($cmp11){__label__=3;break}else{__label__=4;break}case 3:var $14=$pitmax_addr;$temp=$14;var $15=$pitmax_addr;var $conv14=$15<<16>>16;var $16=$delta_range_addr;var $conv15=$16<<16>>16;var $sub16=$conv14-$conv15|0;var $conv17=$sub16&65535;var $17=$t0_min_addr;HEAP16[$17>>1]=$conv17;__label__=4;break;case 4:var $18=$temp;var $19=$t0_max_addr;HEAP16[$19>>1]=$18;return;default:assert(0,"bad label: "+__label__)}}_getRange["X"]=1;function _Pitch_fr($st,$mode,$T_op,$exc,$xn,$h,$L_subfr,$i_subfr,$pit_frac,$resu3,$ana_index,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=96;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $T_op_addr;var $exc_addr;var $xn_addr;var $h_addr;var $L_subfr_addr;var $i_subfr_addr;var $pit_frac_addr;var $resu3_addr;var $ana_index_addr;var $pOverflow_addr;var $i;var $t_min;var $t_max;var $t0_min=__stackBase__;var $t0_max=__stackBase__+4;var $max;var $lag=__stackBase__+8;var $frac=__stackBase__+12;var $tmp_lag;var $corr;var $corr_v=__stackBase__+16;var $max_frac_lag;var $flag3;var $flag4;var $last_frac;var $delta_int_low;var $delta_int_range;var $delta_frc_low;var $delta_frc_range;var $pit_min;var $frame_offset;var $delta_search;$st_addr=$st;$mode_addr=$mode;$T_op_addr=$T_op;$exc_addr=$exc;$xn_addr=$xn;$h_addr=$h;$L_subfr_addr=$L_subfr;$i_subfr_addr=$i_subfr;$pit_frac_addr=$pit_frac;$resu3_addr=$resu3;$ana_index_addr=$ana_index;$pOverflow_addr=$pOverflow;HEAP16[$t0_min>>1]=0;var $0=$mode_addr;var $arrayidx=_mode_dep_parm+$0*18|0;var $max_frac_lag1=$arrayidx|0;var $1=HEAP16[$max_frac_lag1>>1];$max_frac_lag=$1;var $2=$mode_addr;var $arrayidx2=_mode_dep_parm+$2*18|0;var $flag33=$arrayidx2+2|0;var $3=HEAP16[$flag33>>1];$flag3=$3;var $4=$mode_addr;var $arrayidx4=_mode_dep_parm+$4*18|0;var $first_frac=$arrayidx4+4|0;var $5=HEAP16[$first_frac>>1];HEAP16[$frac>>1]=$5;var $6=$mode_addr;var $arrayidx5=_mode_dep_parm+$6*18|0;var $last_frac6=$arrayidx5+6|0;var $7=HEAP16[$last_frac6>>1];$last_frac=$7;var $8=$mode_addr;var $arrayidx7=_mode_dep_parm+$8*18|0;var $delta_int_low8=$arrayidx7+8|0;var $9=HEAP16[$delta_int_low8>>1];$delta_int_low=$9;var $10=$mode_addr;var $arrayidx9=_mode_dep_parm+$10*18|0;var $delta_int_range10=$arrayidx9+10|0;var $11=HEAP16[$delta_int_range10>>1];$delta_int_range=$11;var $12=$mode_addr;var $arrayidx11=_mode_dep_parm+$12*18|0;var $delta_frc_low12=$arrayidx11+12|0;var $13=HEAP16[$delta_frc_low12>>1];$delta_frc_low=$13;var $14=$mode_addr;var $arrayidx13=_mode_dep_parm+$14*18|0;var $delta_frc_range14=$arrayidx13+14|0;var $15=HEAP16[$delta_frc_range14>>1];$delta_frc_range=$15;var $16=$mode_addr;var $arrayidx15=_mode_dep_parm+$16*18|0;var $pit_min16=$arrayidx15+16|0;var $17=HEAP16[$pit_min16>>1];$pit_min=$17;$delta_search=1;var $18=$i_subfr_addr;var $conv=$18<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $19=$i_subfr_addr;var $conv18=$19<<16>>16;var $cmp19=($conv18|0)==80;if($cmp19){__label__=2;break}else{__label__=10;break}case 2:var $20=$mode_addr;var $cmp21=($20|0)!=0;if($cmp21){__label__=3;break}else{__label__=4;break}case 3:var $21=$mode_addr;var $cmp23=($21|0)!=1;if($cmp23){__label__=5;break}else{__label__=4;break}case 4:var $22=$i_subfr_addr;var $conv26=$22<<16>>16;var $cmp27=($conv26|0)!=80;if($cmp27){__label__=5;break}else{__label__=8;break}case 5:$delta_search=0;$frame_offset=1;var $23=$i_subfr_addr;var $conv30=$23<<16>>16;var $cmp31=($conv30|0)==0;if($cmp31){__label__=6;break}else{__label__=7;break}case 6:$frame_offset=0;__label__=7;break;case 7:var $24=$frame_offset;var $idxprom=$24<<16>>16;var $25=$T_op_addr;var $arrayidx34=$25+($idxprom<<1)|0;var $26=HEAP16[$arrayidx34>>1];var $27=$delta_int_low;var $28=$delta_int_range;var $29=$pit_min;var $30=$pOverflow_addr;_getRange($26,$27,$28,$29,143,$t0_min,$t0_max,$30);__label__=9;break;case 8:var $31=$st_addr;var $T0_prev_subframe=$31|0;var $32=HEAP16[$T0_prev_subframe>>1];var $33=$delta_frc_low;var $34=$delta_frc_range;var $35=$pit_min;var $36=$pOverflow_addr;_getRange($32,$33,$34,$35,143,$t0_min,$t0_max,$36);__label__=9;break;case 9:__label__=11;break;case 10:var $37=$st_addr;var $T0_prev_subframe37=$37|0;var $38=HEAP16[$T0_prev_subframe37>>1];var $39=$delta_frc_low;var $40=$delta_frc_range;var $41=$pit_min;var $42=$pOverflow_addr;_getRange($38,$39,$40,$41,143,$t0_min,$t0_max,$42);__label__=11;break;case 11:var $43=HEAP16[$t0_min>>1];var $conv39=$43<<16>>16;var $sub=$conv39-4|0;var $conv40=$sub&65535;$t_min=$conv40;var $44=HEAP16[$t0_max>>1];var $conv41=$44<<16>>16;var $add=$conv41+4|0;var $conv42=$add&65535;$t_max=$conv42;var $45=$t_min;var $conv43=$45<<16>>16;var $sub44=-$conv43|0;var $arrayidx45=$corr_v+($sub44<<1)|0;$corr=$arrayidx45;var $46=$exc_addr;var $47=$xn_addr;var $48=$h_addr;var $49=$L_subfr_addr;var $50=$t_min;var $51=$t_max;var $52=$corr;var $53=$pOverflow_addr;_Norm_Corr($46,$47,$48,$49,$50,$51,$52,$53);var $54=HEAP16[$t0_min>>1];var $idxprom46=$54<<16>>16;var $55=$corr;var $arrayidx47=$55+($idxprom46<<1)|0;var $56=HEAP16[$arrayidx47>>1];$max=$56;var $57=HEAP16[$t0_min>>1];HEAP16[$lag>>1]=$57;var $58=HEAP16[$t0_min>>1];var $conv48=$58<<16>>16;var $add49=$conv48+1|0;var $conv50=$add49&65535;$i=$conv50;__label__=12;break;case 12:var $59=$i;var $conv51=$59<<16>>16;var $60=HEAP16[$t0_max>>1];var $conv52=$60<<16>>16;var $cmp53=($conv51|0)<=($conv52|0);if($cmp53){__label__=13;break}else{__label__=17;break}case 13:var $61=$i;var $idxprom55=$61<<16>>16;var $62=$corr;var $arrayidx56=$62+($idxprom55<<1)|0;var $63=HEAP16[$arrayidx56>>1];var $conv57=$63<<16>>16;var $64=$max;var $conv58=$64<<16>>16;var $cmp59=($conv57|0)>=($conv58|0);if($cmp59){__label__=14;break}else{__label__=15;break}case 14:var $65=$i;var $idxprom62=$65<<16>>16;var $66=$corr;var $arrayidx63=$66+($idxprom62<<1)|0;var $67=HEAP16[$arrayidx63>>1];$max=$67;var $68=$i;HEAP16[$lag>>1]=$68;__label__=15;break;case 15:__label__=16;break;case 16:var $69=$i;var $inc=$69+1&65535;$i=$inc;__label__=12;break;case 17:var $70=$delta_search;var $conv65=$70<<16>>16;var $cmp66=($conv65|0)==0;if($cmp66){__label__=18;break}else{__label__=20;break}case 18:var $71=HEAP16[$lag>>1];var $conv69=$71<<16>>16;var $72=$max_frac_lag;var $conv70=$72<<16>>16;var $cmp71=($conv69|0)>($conv70|0);if($cmp71){__label__=19;break}else{__label__=20;break}case 19:HEAP16[$frac>>1]=0;__label__=42;break;case 20:var $73=$delta_search;var $conv75=$73<<16>>16;var $cmp76=($conv75|0)!=0;if($cmp76){__label__=21;break}else{__label__=40;break}case 21:var $74=$mode_addr;var $cmp79=($74|0)==0;if($cmp79){__label__=25;break}else{__label__=22;break}case 22:var $75=$mode_addr;var $cmp82=($75|0)==1;if($cmp82){__label__=25;break}else{__label__=23;break}case 23:var $76=$mode_addr;var $cmp85=($76|0)==2;if($cmp85){__label__=25;break}else{__label__=24;break}case 24:var $77=$mode_addr;var $cmp88=($77|0)==3;if($cmp88){__label__=25;break}else{__label__=40;break}case 25:var $78=$st_addr;var $T0_prev_subframe91=$78|0;var $79=HEAP16[$T0_prev_subframe91>>1];$tmp_lag=$79;var $80=$tmp_lag;var $conv92=$80<<16>>16;var $81=HEAP16[$t0_min>>1];var $conv93=$81<<16>>16;var $sub94=$conv92-$conv93|0;var $cmp95=($sub94|0)>5;if($cmp95){__label__=26;break}else{__label__=27;break}case 26:var $82=HEAP16[$t0_min>>1];var $conv98=$82<<16>>16;var $add99=$conv98+5|0;var $conv100=$add99&65535;$tmp_lag=$conv100;__label__=27;break;case 27:var $83=HEAP16[$t0_max>>1];var $conv102=$83<<16>>16;var $84=$tmp_lag;var $conv103=$84<<16>>16;var $sub104=$conv102-$conv103|0;var $cmp105=($sub104|0)>4;if($cmp105){__label__=28;break}else{__label__=29;break}case 28:var $85=HEAP16[$t0_max>>1];var $conv108=$85<<16>>16;var $sub109=$conv108-4|0;var $conv110=$sub109&65535;$tmp_lag=$conv110;__label__=29;break;case 29:var $86=HEAP16[$lag>>1];var $conv112=$86<<16>>16;var $87=$tmp_lag;var $conv113=$87<<16>>16;var $cmp114=($conv112|0)==($conv113|0);if($cmp114){__label__=31;break}else{__label__=30;break}case 30:var $88=HEAP16[$lag>>1];var $conv117=$88<<16>>16;var $89=$tmp_lag;var $conv118=$89<<16>>16;var $sub119=$conv118-1|0;var $cmp120=($conv117|0)==($sub119|0);if($cmp120){__label__=31;break}else{__label__=32;break}case 31:var $90=$last_frac;var $91=$corr;var $92=$flag3;var $93=$pOverflow_addr;_searchFrac($lag,$frac,$90,$91,$92,$93);__label__=39;break;case 32:var $94=HEAP16[$lag>>1];var $conv124=$94<<16>>16;var $95=$tmp_lag;var $conv125=$95<<16>>16;var $sub126=$conv125-2|0;var $cmp127=($conv124|0)==($sub126|0);if($cmp127){__label__=33;break}else{__label__=34;break}case 33:HEAP16[$frac>>1]=0;var $96=$last_frac;var $97=$corr;var $98=$flag3;var $99=$pOverflow_addr;_searchFrac($lag,$frac,$96,$97,$98,$99);__label__=38;break;case 34:var $100=HEAP16[$lag>>1];var $conv131=$100<<16>>16;var $101=$tmp_lag;var $conv132=$101<<16>>16;var $add133=$conv132+1|0;var $cmp134=($conv131|0)==($add133|0);if($cmp134){__label__=35;break}else{__label__=36;break}case 35:$last_frac=0;var $102=$last_frac;var $103=$corr;var $104=$flag3;var $105=$pOverflow_addr;_searchFrac($lag,$frac,$102,$103,$104,$105);__label__=37;break;case 36:HEAP16[$frac>>1]=0;__label__=37;break;case 37:__label__=38;break;case 38:__label__=39;break;case 39:__label__=41;break;case 40:var $106=$last_frac;var $107=$corr;var $108=$flag3;var $109=$pOverflow_addr;_searchFrac($lag,$frac,$106,$107,$108,$109);__label__=41;break;case 41:__label__=42;break;case 42:var $110=$flag3;var $conv144=$110<<16>>16;var $cmp145=($conv144|0)!=0;if($cmp145){__label__=43;break}else{__label__=49;break}case 43:$flag4=0;var $111=$mode_addr;var $cmp148=($111|0)==0;if($cmp148){__label__=47;break}else{__label__=44;break}case 44:var $112=$mode_addr;var $cmp151=($112|0)==1;if($cmp151){__label__=47;break}else{__label__=45;break}case 45:var $113=$mode_addr;var $cmp154=($113|0)==2;if($cmp154){__label__=47;break}else{__label__=46;break}case 46:var $114=$mode_addr;var $cmp157=($114|0)==3;if($cmp157){__label__=47;break}else{__label__=48;break}case 47:$flag4=1;__label__=48;break;case 48:var $115=HEAP16[$lag>>1];var $116=HEAP16[$frac>>1];var $117=$st_addr;var $T0_prev_subframe161=$117|0;var $118=HEAP16[$T0_prev_subframe161>>1];var $119=HEAP16[$t0_min>>1];var $120=HEAP16[$t0_max>>1];var $121=$delta_search;var $122=$flag4;var $123=$pOverflow_addr;var $call=_Enc_lag3($115,$116,$118,$119,$120,$121,$122,$123);var $124=$ana_index_addr;HEAP16[$124>>1]=$call;__label__=50;break;case 49:var $125=HEAP16[$lag>>1];var $126=HEAP16[$frac>>1];var $127=HEAP16[$t0_min>>1];var $128=$delta_search;var $129=$pOverflow_addr;var $call163=_Enc_lag6($125,$126,$127,$128,$129);var $130=$ana_index_addr;HEAP16[$130>>1]=$call163;__label__=50;break;case 50:var $131=HEAP16[$lag>>1];var $132=$st_addr;var $T0_prev_subframe165=$132|0;HEAP16[$T0_prev_subframe165>>1]=$131;var $133=$flag3;var $134=$resu3_addr;HEAP16[$134>>1]=$133;var $135=HEAP16[$frac>>1];var $136=$pit_frac_addr;HEAP16[$136>>1]=$135;var $137=HEAP16[$lag>>1];STACKTOP=__stackBase__;return $137;default:assert(0,"bad label: "+__label__)}}_Pitch_fr["X"]=1;function _Mpy_32316($L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $product32;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var1_hi_addr;var $conv=$1<<16>>16;var $2=$L_var2_hi_addr;var $conv1=$2<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $3=$L_product;var $cmp=($3|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$L_product;var $shl=$4<<1;$L_product=$shl;__label__=3;break;case 2:$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_hi_addr;var $conv3=$5<<16>>16;var $6=$L_var2_lo_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$product32=$shr;var $7=$L_product;var $8=$product32;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$product32;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$L_sum;$L_product=$14;var $15=$L_var1_lo_addr;var $conv17=$15<<16>>16;var $16=$L_var2_hi_addr;var $conv18=$16<<16>>16;var $mul19=$conv17*$conv18|0;var $shr20=$mul19>>15;$product32=$shr20;var $17=$L_product;var $18=$product32;var $shl21=$18<<1;var $add22=$17+$shl21|0;$L_sum=$add22;var $19=$L_product;var $20=$product32;var $xor23=$19^$20;var $cmp24=($xor23|0)>0;if($cmp24){__label__=8;break}else{__label__=11;break}case 8:var $21=$L_sum;var $22=$L_product;var $xor27=$21^$22;var $shr28=$xor27>>31;var $tobool29=($shr28|0)!=0;if($tobool29){__label__=9;break}else{__label__=10;break}case 9:var $23=$L_product;var $shr31=$23>>31;var $tobool32=($shr31|0)!=0;var $cond33=$tobool32?-2147483648:2147483647;$L_sum=$cond33;__label__=10;break;case 10:__label__=11;break;case 11:var $24=$L_sum;return $24;default:assert(0,"bad label: "+__label__)}}_Mpy_32316["X"]=1;function _Norm_Corr($exc,$xn,$h,$L_subfr,$t_min,$t_max,$corr_norm,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=160;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $exc_addr;var $xn_addr;var $h_addr;var $L_subfr_addr;var $t_min_addr;var $t_max_addr;var $corr_norm_addr;var $pOverflow_addr;var $i;var $j;var $k;var $corr_h;var $corr_l;var $norm_h;var $norm_l;var $s;var $s2;var $excf=__stackBase__;var $scaling;var $h_fac;var $s_excf;var $scaled_excf=__stackBase__+80;var $p_s_excf;var $p_excf;var $temp;var $p_x;var $p_h;$exc_addr=$exc;$xn_addr=$xn;$h_addr=$h;$L_subfr_addr=$L_subfr;$t_min_addr=$t_min;$t_max_addr=$t_max;$corr_norm_addr=$corr_norm;$pOverflow_addr=$pOverflow;var $0=$t_min_addr;var $conv=$0<<16>>16;var $sub=-$conv|0;var $conv1=$sub&65535;$k=$conv1;var $1=$k;var $idxprom=$1<<16>>16;var $2=$exc_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=$h_addr;var $arraydecay=$excf|0;var $4=$L_subfr_addr;_Convolve($arrayidx,$3,$arraydecay,$4);$s=0;var $arraydecay2=$scaled_excf|0;$p_s_excf=$arraydecay2;var $arraydecay3=$excf|0;$p_excf=$arraydecay3;var $5=$L_subfr_addr;var $conv4=$5<<16>>16;var $shr=$conv4>>1;var $conv5=$shr&65535;$j=$conv5;__label__=1;break;case 1:var $6=$j;var $conv6=$6<<16>>16;var $cmp=($conv6|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $7=$p_excf;var $incdec_ptr=$7+2|0;$p_excf=$incdec_ptr;var $8=HEAP16[$7>>1];$temp=$8;var $9=$temp;var $conv8=$9<<16>>16;var $shr9=$conv8>>2;var $conv10=$shr9&65535;var $10=$p_s_excf;var $incdec_ptr11=$10+2|0;$p_s_excf=$incdec_ptr11;HEAP16[$10>>1]=$conv10;var $11=$temp;var $conv12=$11<<16>>16;var $12=$temp;var $conv13=$12<<16>>16;var $mul=$conv12*$conv13|0;var $13=$s;var $add=$13+$mul|0;$s=$add;var $14=$p_excf;var $incdec_ptr14=$14+2|0;$p_excf=$incdec_ptr14;var $15=HEAP16[$14>>1];$temp=$15;var $16=$temp;var $conv15=$16<<16>>16;var $shr16=$conv15>>2;var $conv17=$shr16&65535;var $17=$p_s_excf;var $incdec_ptr18=$17+2|0;$p_s_excf=$incdec_ptr18;HEAP16[$17>>1]=$conv17;var $18=$temp;var $conv19=$18<<16>>16;var $19=$temp;var $conv20=$19<<16>>16;var $mul21=$conv19*$conv20|0;var $20=$s;var $add22=$20+$mul21|0;$s=$add22;__label__=3;break;case 3:var $21=$j;var $dec=$21-1&65535;$j=$dec;__label__=1;break;case 4:var $22=$s;var $cmp23=($22|0)<=33554432;if($cmp23){__label__=5;break}else{__label__=6;break}case 5:var $arraydecay25=$excf|0;$s_excf=$arraydecay25;$h_fac=12;$scaling=0;__label__=7;break;case 6:var $arraydecay26=$scaled_excf|0;$s_excf=$arraydecay26;$h_fac=14;$scaling=2;__label__=7;break;case 7:var $23=$t_min_addr;$i=$23;__label__=8;break;case 8:var $24=$i;var $conv28=$24<<16>>16;var $25=$t_max_addr;var $conv29=$25<<16>>16;var $cmp30=($conv28|0)<=($conv29|0);if($cmp30){__label__=9;break}else{__label__=20;break}case 9:$s2=0;$s=0;var $26=$xn_addr;$p_x=$26;var $27=$s_excf;$p_s_excf=$27;var $28=$L_subfr_addr;var $conv33=$28<<16>>16;var $shr34=$conv33>>1;var $conv35=$shr34&65535;$j=$conv35;__label__=10;break;case 10:var $29=$j;var $dec36=$29-1&65535;$j=$dec36;var $tobool=$29<<16>>16!=0;if($tobool){__label__=11;break}else{__label__=12;break}case 11:var $30=$p_x;var $incdec_ptr37=$30+2|0;$p_x=$incdec_ptr37;var $31=HEAP16[$30>>1];var $conv38=$31<<16>>16;var $32=$p_s_excf;var $33=HEAP16[$32>>1];var $conv39=$33<<16>>16;var $mul40=$conv38*$conv39|0;var $34=$s;var $add41=$34+$mul40|0;$s=$add41;var $35=$p_s_excf;var $36=HEAP16[$35>>1];var $conv42=$36<<16>>16;var $37=$p_s_excf;var $38=HEAP16[$37>>1];var $conv43=$38<<16>>16;var $mul44=$conv42*$conv43|0;var $39=$s2;var $add45=$39+$mul44|0;$s2=$add45;var $40=$p_s_excf;var $incdec_ptr46=$40+2|0;$p_s_excf=$incdec_ptr46;var $41=$p_x;var $incdec_ptr47=$41+2|0;$p_x=$incdec_ptr47;var $42=HEAP16[$41>>1];var $conv48=$42<<16>>16;var $43=$p_s_excf;var $44=HEAP16[$43>>1];var $conv49=$44<<16>>16;var $mul50=$conv48*$conv49|0;var $45=$s;var $add51=$45+$mul50|0;$s=$add51;var $46=$p_s_excf;var $47=HEAP16[$46>>1];var $conv52=$47<<16>>16;var $48=$p_s_excf;var $49=HEAP16[$48>>1];var $conv53=$49<<16>>16;var $mul54=$conv52*$conv53|0;var $50=$s2;var $add55=$50+$mul54|0;$s2=$add55;var $51=$p_s_excf;var $incdec_ptr56=$51+2|0;$p_s_excf=$incdec_ptr56;__label__=10;break;case 12:var $52=$s2;var $shl=$52<<1;$s2=$shl;var $53=$s2;var $54=$pOverflow_addr;var $call=_Inv_sqrt($53,$54);$s2=$call;var $55=$s2;var $shr57=$55>>16;var $conv58=$shr57&65535;$norm_h=$conv58;var $56=$s2;var $shr59=$56>>1;var $57=$norm_h;var $conv60=$57<<16>>16;var $shl61=$conv60<<15;var $sub62=$shr59-$shl61|0;var $conv63=$sub62&65535;$norm_l=$conv63;var $58=$s;var $shr64=$58>>15;var $conv65=$shr64&65535;$corr_h=$conv65;var $59=$s;var $60=$corr_h;var $conv66=$60<<16>>16;var $shl67=$conv66<<15;var $sub68=$59-$shl67|0;var $conv69=$sub68&65535;$corr_l=$conv69;var $61=$corr_h;var $62=$corr_l;var $63=$norm_h;var $64=$norm_l;var $65=$pOverflow_addr;var $call70=_Mpy_32316($61,$62,$63,$64,$65);$s=$call70;var $66=$s;var $conv71=$66&65535;var $67=$i;var $idxprom72=$67<<16>>16;var $68=$corr_norm_addr;var $arrayidx73=$68+($idxprom72<<1)|0;HEAP16[$arrayidx73>>1]=$conv71;var $69=$i;var $conv74=$69<<16>>16;var $70=$t_max_addr;var $conv75=$70<<16>>16;var $cmp76=($conv74|0)!=($conv75|0);if($cmp76){__label__=13;break}else{__label__=18;break}case 13:var $71=$k;var $dec79=$71-1&65535;$k=$dec79;var $72=$k;var $idxprom80=$72<<16>>16;var $73=$exc_addr;var $arrayidx81=$73+($idxprom80<<1)|0;var $74=HEAP16[$arrayidx81>>1];$temp=$74;var $75=$L_subfr_addr;var $conv82=$75<<16>>16;var $sub83=$conv82-1|0;var $76=$s_excf;var $arrayidx84=$76+($sub83<<1)|0;$p_s_excf=$arrayidx84;var $77=$L_subfr_addr;var $conv85=$77<<16>>16;var $sub86=$conv85-1|0;var $78=$h_addr;var $arrayidx87=$78+($sub86<<1)|0;$p_h=$arrayidx87;var $79=$L_subfr_addr;var $conv88=$79<<16>>16;var $sub89=$conv88-2|0;var $80=$s_excf;var $arrayidx90=$80+($sub89<<1)|0;$p_excf=$arrayidx90;var $81=$L_subfr_addr;var $conv91=$81<<16>>16;var $sub92=$conv91-1|0;var $shr93=$sub92>>1;var $conv94=$shr93&65535;$j=$conv94;__label__=14;break;case 14:var $82=$j;var $conv96=$82<<16>>16;var $cmp97=($conv96|0)!=0;if($cmp97){__label__=15;break}else{__label__=17;break}case 15:var $83=$temp;var $conv100=$83<<16>>16;var $84=$p_h;var $incdec_ptr101=$84-2|0;$p_h=$incdec_ptr101;var $85=HEAP16[$84>>1];var $conv102=$85<<16>>16;var $mul103=$conv100*$conv102|0;var $86=$h_fac;var $conv104=$86<<16>>16;var $shr105=$mul103>>($conv104|0);$s=$shr105;var $87=$s;var $conv106=$87&65535;var $conv107=$conv106<<16>>16;var $88=$p_excf;var $incdec_ptr108=$88-2|0;$p_excf=$incdec_ptr108;var $89=HEAP16[$88>>1];var $conv109=$89<<16>>16;var $add110=$conv107+$conv109|0;var $conv111=$add110&65535;var $90=$p_s_excf;var $incdec_ptr112=$90-2|0;$p_s_excf=$incdec_ptr112;HEAP16[$90>>1]=$conv111;var $91=$temp;var $conv113=$91<<16>>16;var $92=$p_h;var $incdec_ptr114=$92-2|0;$p_h=$incdec_ptr114;var $93=HEAP16[$92>>1];var $conv115=$93<<16>>16;var $mul116=$conv113*$conv115|0;var $94=$h_fac;var $conv117=$94<<16>>16;var $shr118=$mul116>>($conv117|0);$s=$shr118;var $95=$s;var $conv119=$95&65535;var $conv120=$conv119<<16>>16;var $96=$p_excf;var $incdec_ptr121=$96-2|0;$p_excf=$incdec_ptr121;var $97=HEAP16[$96>>1];var $conv122=$97<<16>>16;var $add123=$conv120+$conv122|0;var $conv124=$add123&65535;var $98=$p_s_excf;var $incdec_ptr125=$98-2|0;$p_s_excf=$incdec_ptr125;HEAP16[$98>>1]=$conv124;__label__=16;break;case 16:var $99=$j;var $dec127=$99-1&65535;$j=$dec127;__label__=14;break;case 17:var $100=$temp;var $conv129=$100<<16>>16;var $101=$p_h;var $102=HEAP16[$101>>1];var $conv130=$102<<16>>16;var $mul131=$conv129*$conv130|0;var $103=$h_fac;var $conv132=$103<<16>>16;var $shr133=$mul131>>($conv132|0);$s=$shr133;var $104=$s;var $conv134=$104&65535;var $conv135=$conv134<<16>>16;var $105=$p_excf;var $106=HEAP16[$105>>1];var $conv136=$106<<16>>16;var $add137=$conv135+$conv136|0;var $conv138=$add137&65535;var $107=$p_s_excf;var $incdec_ptr139=$107-2|0;$p_s_excf=$incdec_ptr139;HEAP16[$107>>1]=$conv138;var $108=$temp;var $conv140=$108<<16>>16;var $109=$scaling;var $conv141=$109<<16>>16;var $shr142=$conv140>>($conv141|0);var $conv143=$shr142&65535;var $110=$p_s_excf;HEAP16[$110>>1]=$conv143;__label__=18;break;case 18:__label__=19;break;case 19:var $111=$i;var $inc=$111+1&65535;$i=$inc;__label__=8;break;case 20:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Norm_Corr["X"]=1;function _searchFrac($lag,$frac,$last_frac,$corr,$flag3,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lag_addr;var $frac_addr;var $last_frac_addr;var $corr_addr;var $flag3_addr;var $pOverflow_addr;var $i;var $max;var $corr_int;$lag_addr=$lag;$frac_addr=$frac;$last_frac_addr=$last_frac;$corr_addr=$corr;$flag3_addr=$flag3;$pOverflow_addr=$pOverflow;var $0=$lag_addr;var $1=HEAP16[$0>>1];var $idxprom=$1<<16>>16;var $2=$corr_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=$frac_addr;var $4=HEAP16[$3>>1];var $5=$flag3_addr;var $6=$pOverflow_addr;var $call=_Interpol_3or6($arrayidx,$4,$5,$6);$max=$call;var $7=$frac_addr;var $8=HEAP16[$7>>1];var $conv=$8<<16>>16;var $add=$conv+1|0;var $conv1=$add&65535;$i=$conv1;__label__=1;break;case 1:var $9=$i;var $conv2=$9<<16>>16;var $10=$last_frac_addr;var $conv3=$10<<16>>16;var $cmp=($conv2|0)<=($conv3|0);if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $11=$lag_addr;var $12=HEAP16[$11>>1];var $idxprom5=$12<<16>>16;var $13=$corr_addr;var $arrayidx6=$13+($idxprom5<<1)|0;var $14=$i;var $15=$flag3_addr;var $16=$pOverflow_addr;var $call7=_Interpol_3or6($arrayidx6,$14,$15,$16);$corr_int=$call7;var $17=$corr_int;var $conv8=$17<<16>>16;var $18=$max;var $conv9=$18<<16>>16;var $cmp10=($conv8|0)>($conv9|0);if($cmp10){__label__=3;break}else{__label__=4;break}case 3:var $19=$corr_int;$max=$19;var $20=$i;var $21=$frac_addr;HEAP16[$21>>1]=$20;__label__=4;break;case 4:__label__=5;break;case 5:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=1;break;case 6:var $23=$flag3_addr;var $conv12=$23<<16>>16;var $cmp13=($conv12|0)==0;if($cmp13){__label__=7;break}else{__label__=10;break}case 7:var $24=$frac_addr;var $25=HEAP16[$24>>1];var $conv16=$25<<16>>16;var $cmp17=($conv16|0)==-3;if($cmp17){__label__=8;break}else{__label__=9;break}case 8:var $26=$frac_addr;HEAP16[$26>>1]=3;var $27=$lag_addr;var $28=HEAP16[$27>>1];var $dec=$28-1&65535;HEAP16[$27>>1]=$dec;__label__=9;break;case 9:__label__=15;break;case 10:var $29=$frac_addr;var $30=HEAP16[$29>>1];var $conv21=$30<<16>>16;var $cmp22=($conv21|0)==-2;if($cmp22){__label__=11;break}else{__label__=12;break}case 11:var $31=$frac_addr;HEAP16[$31>>1]=1;var $32=$lag_addr;var $33=HEAP16[$32>>1];var $dec25=$33-1&65535;HEAP16[$32>>1]=$dec25;__label__=12;break;case 12:var $34=$frac_addr;var $35=HEAP16[$34>>1];var $conv27=$35<<16>>16;var $cmp28=($conv27|0)==2;if($cmp28){__label__=13;break}else{__label__=14;break}case 13:var $36=$frac_addr;HEAP16[$36>>1]=-1;var $37=$lag_addr;var $38=HEAP16[$37>>1];var $inc31=$38+1&65535;HEAP16[$37>>1]=$inc31;__label__=14;break;case 14:__label__=15;break;case 15:;return;default:assert(0,"bad label: "+__label__)}}_searchFrac["X"]=1;function _Lag_max_wrapper($vadSt,$corr,$scal_sig,$scal_fac,$scal_flag,$L_frame,$lag_max,$lag_min,$cor_max,$dtx,$pOverflow){var __label__;var $vadSt_addr;var $corr_addr;var $scal_sig_addr;var $scal_fac_addr;var $scal_flag_addr;var $L_frame_addr;var $lag_max_addr;var $lag_min_addr;var $cor_max_addr;var $dtx_addr;var $pOverflow_addr;var $temp;$vadSt_addr=$vadSt;$corr_addr=$corr;$scal_sig_addr=$scal_sig;$scal_fac_addr=$scal_fac;$scal_flag_addr=$scal_flag;$L_frame_addr=$L_frame;$lag_max_addr=$lag_max;$lag_min_addr=$lag_min;$cor_max_addr=$cor_max;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;var $0=$vadSt_addr;var $1=$corr_addr;var $2=$scal_sig_addr;var $3=$scal_fac_addr;var $4=$scal_flag_addr;var $5=$L_frame_addr;var $6=$lag_max_addr;var $7=$lag_min_addr;var $8=$cor_max_addr;var $9=$dtx_addr;var $10=$pOverflow_addr;var $call=_Lag_max($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10);$temp=$call;var $11=$temp;return $11}function _amrnb_fxp_mac_16_by_16bb319($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _Mpy_32320($L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $product32;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$L_var1_hi_addr;var $conv=$1<<16>>16;var $2=$L_var2_hi_addr;var $conv1=$2<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $3=$L_product;var $cmp=($3|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $4=$L_product;var $shl=$4<<1;$L_product=$shl;__label__=3;break;case 2:$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_hi_addr;var $conv3=$5<<16>>16;var $6=$L_var2_lo_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$product32=$shr;var $7=$L_product;var $8=$product32;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$product32;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;__label__=6;break;case 6:__label__=7;break;case 7:var $14=$L_sum;$L_product=$14;var $15=$L_var1_lo_addr;var $conv17=$15<<16>>16;var $16=$L_var2_hi_addr;var $conv18=$16<<16>>16;var $mul19=$conv17*$conv18|0;var $shr20=$mul19>>15;$product32=$shr20;var $17=$L_product;var $18=$product32;var $shl21=$18<<1;var $add22=$17+$shl21|0;$L_sum=$add22;var $19=$L_product;var $20=$product32;var $xor23=$19^$20;var $cmp24=($xor23|0)>0;if($cmp24){__label__=8;break}else{__label__=11;break}case 8:var $21=$L_sum;var $22=$L_product;var $xor27=$21^$22;var $shr28=$xor27>>31;var $tobool29=($shr28|0)!=0;if($tobool29){__label__=9;break}else{__label__=10;break}case 9:var $23=$L_product;var $shr31=$23>>31;var $tobool32=($shr31|0)!=0;var $cond33=$tobool32?-2147483648:2147483647;$L_sum=$cond33;__label__=10;break;case 10:__label__=11;break;case 11:var $24=$L_sum;return $24;default:assert(0,"bad label: "+__label__)}}_Mpy_32320["X"]=1;function _Lag_max($vadSt,$corr,$scal_sig,$scal_fac,$scal_flag,$L_frame,$lag_max,$lag_min,$cor_max,$dtx,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $vadSt_addr;var $corr_addr;var $scal_sig_addr;var $scal_fac_addr;var $scal_flag_addr;var $L_frame_addr;var $lag_max_addr;var $lag_min_addr;var $cor_max_addr;var $dtx_addr;var $pOverflow_addr;var $i;var $p;var $max;var $t0;var $max_h;var $max_l;var $ener_h;var $ener_l;var $p_max;var $L_temp;var $L_temp_2;var $L_temp_3;var $p_corr;$vadSt_addr=$vadSt;$corr_addr=$corr;$scal_sig_addr=$scal_sig;$scal_fac_addr=$scal_fac;$scal_flag_addr=$scal_flag;$L_frame_addr=$L_frame;$lag_max_addr=$lag_max;$lag_min_addr=$lag_min;$cor_max_addr=$cor_max;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;$p_max=0;var $0=$lag_max_addr;var $conv=$0<<16>>16;var $sub=-$conv|0;var $1=$corr_addr;var $arrayidx=$1+($sub<<2)|0;$p_corr=$arrayidx;$max=-2147483648;var $2=$lag_max_addr;$p_max=$2;var $3=$lag_max_addr;$i=$3;__label__=1;break;case 1:var $4=$i;var $conv1=$4<<16>>16;var $5=$lag_min_addr;var $conv2=$5<<16>>16;var $cmp=($conv1|0)>=($conv2|0);if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $6=$p_corr;var $incdec_ptr=$6+4|0;$p_corr=$incdec_ptr;var $7=HEAP32[$6>>2];var $8=$max;var $cmp4=($7|0)>=($8|0);if($cmp4){__label__=3;break}else{__label__=4;break}case 3:var $9=$p_corr;var $incdec_ptr6=$9-4|0;$p_corr=$incdec_ptr6;var $10=$p_corr;var $incdec_ptr7=$10+4|0;$p_corr=$incdec_ptr7;var $11=HEAP32[$10>>2];$max=$11;var $12=$i;$p_max=$12;__label__=4;break;case 4:__label__=5;break;case 5:var $13=$i;var $dec=$13-1&65535;$i=$dec;__label__=1;break;case 6:$t0=0;var $14=$p_max;var $conv8=$14<<16>>16;var $sub9=-$conv8|0;var $15=$scal_sig_addr;var $arrayidx10=$15+($sub9<<1)|0;$p=$arrayidx10;var $16=$L_frame_addr;var $conv11=$16<<16>>16;var $shr=$conv11>>2;var $conv12=$shr&65535;$i=$conv12;__label__=7;break;case 7:var $17=$i;var $conv14=$17<<16>>16;var $cmp15=($conv14|0)!=0;if($cmp15){__label__=8;break}else{__label__=10;break}case 8:var $18=$p;var $19=HEAP16[$18>>1];var $conv18=$19<<16>>16;var $20=$p;var $21=HEAP16[$20>>1];var $conv19=$21<<16>>16;var $22=$t0;var $call=_amrnb_fxp_mac_16_by_16bb319($conv18,$conv19,$22);$t0=$call;var $23=$p;var $incdec_ptr20=$23+2|0;$p=$incdec_ptr20;var $24=$p;var $25=HEAP16[$24>>1];var $conv21=$25<<16>>16;var $26=$p;var $27=HEAP16[$26>>1];var $conv22=$27<<16>>16;var $28=$t0;var $call23=_amrnb_fxp_mac_16_by_16bb319($conv21,$conv22,$28);$t0=$call23;var $29=$p;var $incdec_ptr24=$29+2|0;$p=$incdec_ptr24;var $30=$p;var $31=HEAP16[$30>>1];var $conv25=$31<<16>>16;var $32=$p;var $33=HEAP16[$32>>1];var $conv26=$33<<16>>16;var $34=$t0;var $call27=_amrnb_fxp_mac_16_by_16bb319($conv25,$conv26,$34);$t0=$call27;var $35=$p;var $incdec_ptr28=$35+2|0;$p=$incdec_ptr28;var $36=$p;var $37=HEAP16[$36>>1];var $conv29=$37<<16>>16;var $38=$p;var $39=HEAP16[$38>>1];var $conv30=$39<<16>>16;var $40=$t0;var $call31=_amrnb_fxp_mac_16_by_16bb319($conv29,$conv30,$40);$t0=$call31;var $41=$p;var $incdec_ptr32=$41+2|0;$p=$incdec_ptr32;__label__=9;break;case 9:var $42=$i;var $dec34=$42-1&65535;$i=$dec34;__label__=7;break;case 10:var $43=$t0;var $shl=$43<<1;$t0=$shl;var $44=$dtx_addr;var $tobool=($44|0)!=0;if($tobool){__label__=11;break}else{__label__=12;break}case 11:var $45=$vadSt_addr;var $46=$max;var $47=$t0;var $48=$pOverflow_addr;_vad_tone_detection($45,$46,$47,$48);__label__=12;break;case 12:var $49=$t0;var $50=$pOverflow_addr;var $call38=_Inv_sqrt($49,$50);$t0=$call38;var $51=$scal_flag_addr;var $tobool39=$51<<16>>16!=0;if($tobool39){__label__=13;break}else{__label__=17;break}case 13:var $52=$t0;var $cmp41=($52|0)>1073741823;if($cmp41){__label__=14;break}else{__label__=15;break}case 14:$t0=2147483647;__label__=16;break;case 15:var $53=$t0;var $shl44=$53<<1;$t0=$shl44;__label__=16;break;case 16:__label__=17;break;case 17:var $54=$max;var $shr47=$54>>16;var $conv48=$shr47&65535;$max_h=$conv48;var $55=$max;var $shr49=$55>>1;$L_temp_2=$shr49;var $56=$max_h;var $conv50=$56<<16>>16;var $shl51=$conv50<<15;$L_temp_3=$shl51;var $57=$L_temp_2;var $58=$L_temp_3;var $sub52=$57-$58|0;$L_temp=$sub52;var $59=$L_temp;var $conv53=$59&65535;$max_l=$conv53;var $60=$t0;var $shr54=$60>>16;var $conv55=$shr54&65535;$ener_h=$conv55;var $61=$t0;var $shr56=$61>>1;$L_temp_2=$shr56;var $62=$ener_h;var $conv57=$62<<16>>16;var $shl58=$conv57<<15;$L_temp_3=$shl58;var $63=$L_temp_2;var $64=$L_temp_3;var $sub59=$63-$64|0;$L_temp=$sub59;var $65=$L_temp;var $conv60=$65&65535;$ener_l=$conv60;var $66=$max_h;var $67=$max_l;var $68=$ener_h;var $69=$ener_l;var $70=$pOverflow_addr;var $call61=_Mpy_32320($66,$67,$68,$69,$70);$t0=$call61;var $71=$scal_flag_addr;var $tobool62=$71<<16>>16!=0;if($tobool62){__label__=18;break}else{__label__=25;break}case 18:var $72=$t0;var $73=$scal_fac_addr;var $74=$pOverflow_addr;var $call64=_L_shr321($72,$73,$74);$t0=$call64;var $75=$t0;var $cmp65=($75|0)>65535;if($cmp65){__label__=19;break}else{__label__=20;break}case 19:var $76=$cor_max_addr;HEAP16[$76>>1]=32767;__label__=24;break;case 20:var $77=$t0;var $cmp69=($77|0)<-65536;if($cmp69){__label__=21;break}else{__label__=22;break}case 21:var $78=$cor_max_addr;HEAP16[$78>>1]=-32768;__label__=23;break;case 22:var $79=$t0;var $shr73=$79>>1;var $conv74=$shr73&65535;var $80=$cor_max_addr;HEAP16[$80>>1]=$conv74;__label__=23;break;case 23:__label__=24;break;case 24:__label__=26;break;case 25:var $81=$t0;var $conv78=$81&65535;var $82=$cor_max_addr;HEAP16[$82>>1]=$conv78;__label__=26;break;case 26:var $83=$p_max;return $83;default:assert(0,"bad label: "+__label__)}}_Lag_max["X"]=1;function _Pitch_ol($vadSt,$mode,$signal,$pit_min,$pit_max,$L_frame,$idx,$dtx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=1200;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $vadSt_addr;var $mode_addr;var $signal_addr;var $pit_min_addr;var $pit_max_addr;var $L_frame_addr;var $idx_addr;var $dtx_addr;var $pOverflow_addr;var $i;var $j;var $max1=__stackBase__;var $max2=__stackBase__+4;var $max3=__stackBase__+8;var $p_max1;var $p_max2;var $p_max3;var $scal_flag;var $t0;var $corr_hp_max=__stackBase__+12;var $corr=__stackBase__+16;var $corr_ptr;var $scaled_signal=__stackBase__+592;var $scal_sig;var $p_signal;var $scal_fac;var $L_temp;$vadSt_addr=$vadSt;$mode_addr=$mode;$signal_addr=$signal;$pit_min_addr=$pit_min;$pit_max_addr=$pit_max;$L_frame_addr=$L_frame;$idx_addr=$idx;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;$scal_flag=0;var $0=$dtx_addr;var $tobool=($0|0)!=0;if($tobool){__label__=1;break}else{__label__=6;break}case 1:var $1=$mode_addr;var $cmp=($1|0)==0;if($cmp){__label__=3;break}else{__label__=2;break}case 2:var $2=$mode_addr;var $cmp1=($2|0)==1;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:var $3=$vadSt_addr;var $4=$pOverflow_addr;_vad_tone_detection_update($3,1,$4);__label__=5;break;case 4:var $5=$vadSt_addr;var $6=$pOverflow_addr;_vad_tone_detection_update($5,0,$6);__label__=5;break;case 5:__label__=6;break;case 6:$t0=0;var $7=$pit_max_addr;var $conv=$7<<16>>16;var $sub=-$conv|0;var $8=$signal_addr;var $arrayidx=$8+($sub<<1)|0;$p_signal=$arrayidx;var $9=$pit_max_addr;var $conv4=$9<<16>>16;var $sub5=-$conv4|0;var $conv6=$sub5&65535;$i=$conv6;__label__=7;break;case 7:var $10=$i;var $conv7=$10<<16>>16;var $11=$L_frame_addr;var $conv8=$11<<16>>16;var $cmp9=($conv7|0)<($conv8|0);if($cmp9){__label__=8;break}else{__label__=12;break}case 8:var $12=$p_signal;var $13=HEAP16[$12>>1];var $conv11=$13<<16>>16;var $14=$p_signal;var $15=HEAP16[$14>>1];var $conv12=$15<<16>>16;var $mul=$conv11*$conv12|0;var $shl=$mul<<1;var $16=$t0;var $add=$16+$shl|0;$t0=$add;var $17=$p_signal;var $incdec_ptr=$17+2|0;$p_signal=$incdec_ptr;var $18=$t0;var $cmp13=($18|0)<0;if($cmp13){__label__=9;break}else{__label__=10;break}case 9:$t0=2147483647;__label__=12;break;case 10:__label__=11;break;case 11:var $19=$i;var $inc=$19+1&65535;$i=$inc;__label__=7;break;case 12:var $arrayidx17=$scaled_signal|0;$scal_sig=$arrayidx17;var $20=$pit_max_addr;var $conv18=$20<<16>>16;var $sub19=-$conv18|0;var $21=$signal_addr;var $arrayidx20=$21+($sub19<<1)|0;$p_signal=$arrayidx20;var $22=$t0;var $cmp21=($22|0)==2147483647;if($cmp21){__label__=13;break}else{__label__=20;break}case 13:var $23=$pit_max_addr;var $conv24=$23<<16>>16;var $24=$L_frame_addr;var $conv25=$24<<16>>16;var $add26=$conv24+$conv25|0;var $shr=$add26>>1;var $conv27=$shr&65535;$i=$conv27;__label__=14;break;case 14:var $25=$i;var $conv29=$25<<16>>16;var $cmp30=($conv29|0)!=0;if($cmp30){__label__=15;break}else{__label__=17;break}case 15:var $26=$p_signal;var $incdec_ptr33=$26+2|0;$p_signal=$incdec_ptr33;var $27=HEAP16[$26>>1];var $conv34=$27<<16>>16;var $shr35=$conv34>>3;var $conv36=$shr35&65535;var $28=$scal_sig;var $incdec_ptr37=$28+2|0;$scal_sig=$incdec_ptr37;HEAP16[$28>>1]=$conv36;var $29=$p_signal;var $incdec_ptr38=$29+2|0;$p_signal=$incdec_ptr38;var $30=HEAP16[$29>>1];var $conv39=$30<<16>>16;var $shr40=$conv39>>3;var $conv41=$shr40&65535;var $31=$scal_sig;var $incdec_ptr42=$31+2|0;$scal_sig=$incdec_ptr42;HEAP16[$31>>1]=$conv41;__label__=16;break;case 16:var $32=$i;var $dec=$32-1&65535;$i=$dec;__label__=14;break;case 17:var $33=$pit_max_addr;var $conv45=$33<<16>>16;var $34=$L_frame_addr;var $conv46=$34<<16>>16;var $add47=$conv45+$conv46|0;var $and=$add47&1;var $tobool48=($and|0)!=0;if($tobool48){__label__=18;break}else{__label__=19;break}case 18:var $35=$p_signal;var $36=HEAP16[$35>>1];var $conv50=$36<<16>>16;var $shr51=$conv50>>3;var $conv52=$shr51&65535;var $37=$scal_sig;HEAP16[$37>>1]=$conv52;__label__=19;break;case 19:$scal_fac=3;__label__=30;break;case 20:var $38=$t0;var $cmp55=($38|0)<1048576;if($cmp55){__label__=21;break}else{__label__=28;break}case 21:var $39=$pit_max_addr;var $conv58=$39<<16>>16;var $40=$L_frame_addr;var $conv59=$40<<16>>16;var $add60=$conv58+$conv59|0;var $shr61=$add60>>1;var $conv62=$shr61&65535;$i=$conv62;__label__=22;break;case 22:var $41=$i;var $conv64=$41<<16>>16;var $cmp65=($conv64|0)!=0;if($cmp65){__label__=23;break}else{__label__=25;break}case 23:var $42=$p_signal;var $incdec_ptr68=$42+2|0;$p_signal=$incdec_ptr68;var $43=HEAP16[$42>>1];var $conv69=$43<<16>>16;var $shl70=$conv69<<3;var $conv71=$shl70&65535;var $44=$scal_sig;var $incdec_ptr72=$44+2|0;$scal_sig=$incdec_ptr72;HEAP16[$44>>1]=$conv71;var $45=$p_signal;var $incdec_ptr73=$45+2|0;$p_signal=$incdec_ptr73;var $46=HEAP16[$45>>1];var $conv74=$46<<16>>16;var $shl75=$conv74<<3;var $conv76=$shl75&65535;var $47=$scal_sig;var $incdec_ptr77=$47+2|0;$scal_sig=$incdec_ptr77;HEAP16[$47>>1]=$conv76;__label__=24;break;case 24:var $48=$i;var $dec79=$48-1&65535;$i=$dec79;__label__=22;break;case 25:var $49=$pit_max_addr;var $conv81=$49<<16>>16;var $50=$L_frame_addr;var $conv82=$50<<16>>16;var $add83=$conv81+$conv82|0;var $and84=$add83&1;var $tobool85=($and84|0)!=0;if($tobool85){__label__=26;break}else{__label__=27;break}case 26:var $51=$p_signal;var $52=HEAP16[$51>>1];var $conv87=$52<<16>>16;var $shl88=$conv87<<3;var $conv89=$shl88&65535;var $53=$scal_sig;HEAP16[$53>>1]=$conv89;__label__=27;break;case 27:$scal_fac=-3;__label__=29;break;case 28:var $54=$scal_sig;var $55=$54;var $56=$p_signal;var $57=$56;var $58=$L_frame_addr;var $conv92=$58<<16>>16;var $59=$pit_max_addr;var $conv93=$59<<16>>16;var $add94=$conv92+$conv93|0;var $mul95=$add94<<1|0;assert($mul95%1===0,"memcpy given "+$mul95+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($55,$57,$mul95,1);$scal_fac=0;__label__=29;break;case 29:__label__=30;break;case 30:var $60=$pit_max_addr;var $idxprom=$60<<16>>16;var $arrayidx98=$corr+($idxprom<<2)|0;$corr_ptr=$arrayidx98;var $61=$pit_max_addr;var $idxprom99=$61<<16>>16;var $arrayidx100=$scaled_signal+($idxprom99<<1)|0;$scal_sig=$arrayidx100;var $62=$scal_sig;var $63=$L_frame_addr;var $64=$pit_max_addr;var $65=$pit_min_addr;var $66=$corr_ptr;_comp_corr($62,$63,$64,$65,$66);var $67=$mode_addr;var $cmp101=($67|0)==7;if($cmp101){__label__=31;break}else{__label__=32;break}case 31:$scal_flag=1;__label__=33;break;case 32:$scal_flag=0;__label__=33;break;case 33:var $68=$pit_min_addr;var $conv106=$68<<16>>16;var $shl107=$conv106<<2;$L_temp=$shl107;var $69=$L_temp;var $70=$L_temp;var $conv108=$70&65535;var $conv109=$conv108<<16>>16;var $cmp110=($69|0)!=($conv109|0);if($cmp110){__label__=34;break}else{__label__=35;break}case 34:var $71=$pOverflow_addr;HEAP32[$71>>2]=1;var $72=$pit_min_addr;var $conv113=$72<<16>>16;var $cmp114=($conv113|0)>0;var $cond=$cmp114?32767:-32768;var $conv116=$cond&65535;$j=$conv116;__label__=36;break;case 35:var $73=$L_temp;var $conv118=$73&65535;$j=$conv118;__label__=36;break;case 36:var $74=$vadSt_addr;var $75=$corr_ptr;var $76=$scal_sig;var $77=$scal_fac;var $78=$scal_flag;var $79=$L_frame_addr;var $80=$pit_max_addr;var $81=$j;var $82=$dtx_addr;var $83=$pOverflow_addr;var $call=_Lag_max($74,$75,$76,$77,$78,$79,$80,$81,$max1,$82,$83);$p_max1=$call;var $84=$j;var $conv120=$84<<16>>16;var $sub121=$conv120-1|0;var $conv122=$sub121&65535;$i=$conv122;var $85=$pit_min_addr;var $conv123=$85<<16>>16;var $shl124=$conv123<<1;var $conv125=$shl124&65535;$j=$conv125;var $86=$vadSt_addr;var $87=$corr_ptr;var $88=$scal_sig;var $89=$scal_fac;var $90=$scal_flag;var $91=$L_frame_addr;var $92=$i;var $93=$j;var $94=$dtx_addr;var $95=$pOverflow_addr;var $call126=_Lag_max($86,$87,$88,$89,$90,$91,$92,$93,$max2,$94,$95);$p_max2=$call126;var $96=$j;var $conv127=$96<<16>>16;var $sub128=$conv127-1|0;var $conv129=$sub128&65535;$i=$conv129;var $97=$vadSt_addr;var $98=$corr_ptr;var $99=$scal_sig;var $100=$scal_fac;var $101=$scal_flag;var $102=$L_frame_addr;var $103=$i;var $104=$pit_min_addr;var $105=$dtx_addr;var $106=$pOverflow_addr;var $call130=_Lag_max($97,$98,$99,$100,$101,$102,$103,$104,$max3,$105,$106);$p_max3=$call130;var $107=$dtx_addr;var $tobool131=($107|0)!=0;if($tobool131){__label__=37;break}else{__label__=40;break}case 37:var $108=$idx_addr;var $conv133=$108<<16>>16;var $cmp134=($conv133|0)==1;if($cmp134){__label__=38;break}else{__label__=39;break}case 38:var $109=$corr_ptr;var $110=$scal_sig;var $111=$L_frame_addr;var $112=$pit_max_addr;var $113=$pit_min_addr;var $114=$pOverflow_addr;var $call137=_hp_max($109,$110,$111,$112,$113,$corr_hp_max,$114);var $115=$vadSt_addr;var $116=HEAP16[$corr_hp_max>>1];_vad_complex_detection_update($115,$116);__label__=39;break;case 39:__label__=40;break;case 40:var $117=HEAP16[$max1>>1];var $conv140=$117<<16>>16;var $mul141=$conv140*27853|0;var $shr142=$mul141>>15;var $conv143=$shr142&65535;$i=$conv143;var $118=$i;var $conv144=$118<<16>>16;var $119=HEAP16[$max2>>1];var $conv145=$119<<16>>16;var $cmp146=($conv144|0)<($conv145|0);if($cmp146){__label__=41;break}else{__label__=42;break}case 41:var $120=HEAP16[$max2>>1];HEAP16[$max1>>1]=$120;var $121=$p_max2;$p_max1=$121;__label__=42;break;case 42:var $122=HEAP16[$max1>>1];var $conv150=$122<<16>>16;var $mul151=$conv150*27853|0;var $shr152=$mul151>>15;var $conv153=$shr152&65535;$i=$conv153;var $123=$i;var $conv154=$123<<16>>16;var $124=HEAP16[$max3>>1];var $conv155=$124<<16>>16;var $cmp156=($conv154|0)<($conv155|0);if($cmp156){__label__=43;break}else{__label__=44;break}case 43:var $125=$p_max3;$p_max1=$125;__label__=44;break;case 44:var $126=$p_max1;STACKTOP=__stackBase__;return $126;default:assert(0,"bad label: "+__label__)}}_Pitch_ol["X"]=1;function _L_shr321($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mac330($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac330["X"]=1;function _L_sub331($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _shl332($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl332["X"]=1;function _p_ol_wgh_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$st_addr;var $old_T0_med=$1|0;HEAP16[$old_T0_med>>1]=40;var $2=$st_addr;var $ada_w=$2+2|0;HEAP16[$ada_w>>1]=0;var $3=$st_addr;var $wght_flg=$3+4|0;HEAP16[$wght_flg>>1]=0;$retval=0;__label__=3;break;case 3:var $4=$retval;return $4;default:assert(0,"bad label: "+__label__)}}function _p_ol_wgh_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(6);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_p_ol_wgh_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _p_ol_wgh_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Pitch_ol_wgh($st,$vadSt,$signal,$pit_min,$pit_max,$L_frame,$old_lags,$ol_gain_flg,$idx,$dtx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=1192;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $vadSt_addr;var $signal_addr;var $pit_min_addr;var $pit_max_addr;var $L_frame_addr;var $old_lags_addr;var $ol_gain_flg_addr;var $idx_addr;var $dtx_addr;var $pOverflow_addr;var $i;var $max1=__stackBase__;var $p_max1;var $t0;var $corr_hp_max=__stackBase__+4;var $corr=__stackBase__+8;var $corr_ptr;var $scaled_signal=__stackBase__+584;var $scal_sig;$st_addr=$st;$vadSt_addr=$vadSt;$signal_addr=$signal;$pit_min_addr=$pit_min;$pit_max_addr=$pit_max;$L_frame_addr=$L_frame;$old_lags_addr=$old_lags;$ol_gain_flg_addr=$ol_gain_flg;$idx_addr=$idx;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;var $0=$pit_max_addr;var $idxprom=$0<<16>>16;var $arrayidx=$scaled_signal+($idxprom<<1)|0;$scal_sig=$arrayidx;$t0=0;var $1=$pit_max_addr;var $conv=$1<<16>>16;var $sub=-$conv|0;var $conv1=$sub&65535;$i=$conv1;__label__=1;break;case 1:var $2=$i;var $conv2=$2<<16>>16;var $3=$L_frame_addr;var $conv3=$3<<16>>16;var $cmp=($conv2|0)<($conv3|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$t0;var $5=$i;var $idxprom5=$5<<16>>16;var $6=$signal_addr;var $arrayidx6=$6+($idxprom5<<1)|0;var $7=HEAP16[$arrayidx6>>1];var $8=$i;var $idxprom7=$8<<16>>16;var $9=$signal_addr;var $arrayidx8=$9+($idxprom7<<1)|0;var $10=HEAP16[$arrayidx8>>1];var $11=$pOverflow_addr;var $call=_L_mac330($4,$7,$10,$11);$t0=$call;__label__=3;break;case 3:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=1;break;case 4:var $13=$t0;var $14=$pOverflow_addr;var $call9=_L_sub331($13,2147483647,$14);var $cmp10=($call9|0)==0;if($cmp10){__label__=5;break}else{__label__=10;break}case 5:var $15=$pit_max_addr;var $conv12=$15<<16>>16;var $sub13=-$conv12|0;var $conv14=$sub13&65535;$i=$conv14;__label__=6;break;case 6:var $16=$i;var $conv16=$16<<16>>16;var $17=$L_frame_addr;var $conv17=$17<<16>>16;var $cmp18=($conv16|0)<($conv17|0);if($cmp18){__label__=7;break}else{__label__=9;break}case 7:var $18=$i;var $idxprom21=$18<<16>>16;var $19=$signal_addr;var $arrayidx22=$19+($idxprom21<<1)|0;var $20=HEAP16[$arrayidx22>>1];var $21=$pOverflow_addr;var $call23=_shr($20,3,$21);var $22=$i;var $idxprom24=$22<<16>>16;var $23=$scal_sig;var $arrayidx25=$23+($idxprom24<<1)|0;HEAP16[$arrayidx25>>1]=$call23;__label__=8;break;case 8:var $24=$i;var $inc27=$24+1&65535;$i=$inc27;__label__=6;break;case 9:__label__=22;break;case 10:var $25=$t0;var $26=$pOverflow_addr;var $call29=_L_sub331($25,1048576,$26);var $cmp30=($call29|0)<0;if($cmp30){__label__=11;break}else{__label__=16;break}case 11:var $27=$pit_max_addr;var $conv33=$27<<16>>16;var $sub34=-$conv33|0;var $conv35=$sub34&65535;$i=$conv35;__label__=12;break;case 12:var $28=$i;var $conv37=$28<<16>>16;var $29=$L_frame_addr;var $conv38=$29<<16>>16;var $cmp39=($conv37|0)<($conv38|0);if($cmp39){__label__=13;break}else{__label__=15;break}case 13:var $30=$i;var $idxprom42=$30<<16>>16;var $31=$signal_addr;var $arrayidx43=$31+($idxprom42<<1)|0;var $32=HEAP16[$arrayidx43>>1];var $33=$pOverflow_addr;var $call44=_shl332($32,3,$33);var $34=$i;var $idxprom45=$34<<16>>16;var $35=$scal_sig;var $arrayidx46=$35+($idxprom45<<1)|0;HEAP16[$arrayidx46>>1]=$call44;__label__=14;break;case 14:var $36=$i;var $inc48=$36+1&65535;$i=$inc48;__label__=12;break;case 15:__label__=21;break;case 16:var $37=$pit_max_addr;var $conv51=$37<<16>>16;var $sub52=-$conv51|0;var $conv53=$sub52&65535;$i=$conv53;__label__=17;break;case 17:var $38=$i;var $conv55=$38<<16>>16;var $39=$L_frame_addr;var $conv56=$39<<16>>16;var $cmp57=($conv55|0)<($conv56|0);if($cmp57){__label__=18;break}else{__label__=20;break}case 18:var $40=$i;var $idxprom60=$40<<16>>16;var $41=$signal_addr;var $arrayidx61=$41+($idxprom60<<1)|0;var $42=HEAP16[$arrayidx61>>1];var $43=$i;var $idxprom62=$43<<16>>16;var $44=$scal_sig;var $arrayidx63=$44+($idxprom62<<1)|0;HEAP16[$arrayidx63>>1]=$42;__label__=19;break;case 19:var $45=$i;var $inc65=$45+1&65535;$i=$inc65;__label__=17;break;case 20:__label__=21;break;case 21:__label__=22;break;case 22:var $46=$pit_max_addr;var $idxprom68=$46<<16>>16;var $arrayidx69=$corr+($idxprom68<<2)|0;$corr_ptr=$arrayidx69;var $47=$scal_sig;var $48=$L_frame_addr;var $49=$pit_max_addr;var $50=$pit_min_addr;var $51=$corr_ptr;_comp_corr($47,$48,$49,$50,$51);var $52=$vadSt_addr;var $53=$corr_ptr;var $54=$scal_sig;var $55=$L_frame_addr;var $56=$pit_max_addr;var $57=$pit_min_addr;var $58=$st_addr;var $old_T0_med=$58|0;var $59=HEAP16[$old_T0_med>>1];var $60=$st_addr;var $wght_flg=$60+4|0;var $61=HEAP16[$wght_flg>>1];var $62=$idx_addr;var $idxprom70=$62<<16>>16;var $63=$ol_gain_flg_addr;var $arrayidx71=$63+($idxprom70<<1)|0;var $64=$dtx_addr;var $65=$pOverflow_addr;var $call72=_Lag_max333($52,$53,$54,$55,$56,$57,$59,$max1,$61,$arrayidx71,$64,$65);$p_max1=$call72;var $66=$idx_addr;var $idxprom73=$66<<16>>16;var $67=$ol_gain_flg_addr;var $arrayidx74=$67+($idxprom73<<1)|0;var $68=HEAP16[$arrayidx74>>1];var $conv75=$68<<16>>16;var $cmp76=($conv75|0)>0;if($cmp76){__label__=23;break}else{__label__=28;break}case 23:$i=4;__label__=24;break;case 24:var $69=$i;var $conv80=$69<<16>>16;var $cmp81=($conv80|0)>0;if($cmp81){__label__=25;break}else{__label__=27;break}case 25:var $70=$i;var $conv84=$70<<16>>16;var $sub85=$conv84-1|0;var $71=$old_lags_addr;var $arrayidx86=$71+($sub85<<1)|0;var $72=HEAP16[$arrayidx86>>1];var $73=$i;var $idxprom87=$73<<16>>16;var $74=$old_lags_addr;var $arrayidx88=$74+($idxprom87<<1)|0;HEAP16[$arrayidx88>>1]=$72;__label__=26;break;case 26:var $75=$i;var $dec=$75-1&65535;$i=$dec;__label__=24;break;case 27:var $76=$p_max1;var $77=$old_lags_addr;var $arrayidx91=$77|0;HEAP16[$arrayidx91>>1]=$76;var $78=$old_lags_addr;var $call92=_gmed_n($78,5);var $79=$st_addr;var $old_T0_med93=$79|0;HEAP16[$old_T0_med93>>1]=$call92;var $80=$st_addr;var $ada_w=$80+2|0;HEAP16[$ada_w>>1]=32767;__label__=29;break;case 28:var $81=$p_max1;var $82=$st_addr;var $old_T0_med95=$82|0;HEAP16[$old_T0_med95>>1]=$81;var $83=$st_addr;var $ada_w96=$83+2|0;var $84=HEAP16[$ada_w96>>1];var $conv97=$84<<16>>16;var $mul=$conv97*29491|0;var $shr=$mul>>15;var $conv98=$shr&65535;var $85=$st_addr;var $ada_w99=$85+2|0;HEAP16[$ada_w99>>1]=$conv98;__label__=29;break;case 29:var $86=$st_addr;var $ada_w101=$86+2|0;var $87=HEAP16[$ada_w101>>1];var $88=$pOverflow_addr;var $call102=_sub($87,9830,$88);var $conv103=$call102<<16>>16;var $cmp104=($conv103|0)<0;if($cmp104){__label__=30;break}else{__label__=31;break}case 30:var $89=$st_addr;var $wght_flg107=$89+4|0;HEAP16[$wght_flg107>>1]=0;__label__=32;break;case 31:var $90=$st_addr;var $wght_flg109=$90+4|0;HEAP16[$wght_flg109>>1]=1;__label__=32;break;case 32:var $91=$dtx_addr;var $tobool=($91|0)!=0;if($tobool){__label__=33;break}else{__label__=36;break}case 33:var $92=$idx_addr;var $93=$pOverflow_addr;var $call112=_sub($92,1,$93);var $conv113=$call112<<16>>16;var $cmp114=($conv113|0)==0;if($cmp114){__label__=34;break}else{__label__=35;break}case 34:var $94=$corr_ptr;var $95=$scal_sig;var $96=$L_frame_addr;var $97=$pit_max_addr;var $98=$pit_min_addr;var $99=$pOverflow_addr;var $call117=_hp_max($94,$95,$96,$97,$98,$corr_hp_max,$99);var $100=$vadSt_addr;var $101=HEAP16[$corr_hp_max>>1];_vad_complex_detection_update($100,$101);__label__=35;break;case 35:__label__=36;break;case 36:var $102=$p_max1;STACKTOP=__stackBase__;return $102;default:assert(0,"bad label: "+__label__)}}_Pitch_ol_wgh["X"]=1;function _Mpy_32_16334($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16334["X"]=1;function _L_mult336($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shl337($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mult340($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_sub342($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _Post_Process_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $y2_hi=$1|0;HEAP16[$y2_hi>>1]=0;var $2=$state_addr;var $y2_lo=$2+2|0;HEAP16[$y2_lo>>1]=0;var $3=$state_addr;var $y1_hi=$3+4|0;HEAP16[$y1_hi>>1]=0;var $4=$state_addr;var $y1_lo=$4+6|0;HEAP16[$y1_lo>>1]=0;var $5=$state_addr;var $x0=$5+8|0;HEAP16[$x0>>1]=0;var $6=$state_addr;var $x1=$6+10|0;HEAP16[$x1>>1]=0;$retval=0;__label__=3;break;case 3:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _Lag_max333($vadSt,$corr,$scal_sig,$L_frame,$lag_max,$lag_min,$old_lag,$cor_max,$wght_flg,$gain_flg,$dtx,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $vadSt_addr;var $corr_addr;var $scal_sig_addr;var $L_frame_addr;var $lag_max_addr;var $lag_min_addr;var $old_lag_addr;var $cor_max_addr;var $wght_flg_addr;var $gain_flg_addr;var $dtx_addr;var $pOverflow_addr;var $i;var $j;var $p;var $p1;var $max;var $t0;var $t0_h=__stackBase__;var $t0_l=__stackBase__+4;var $p_max;var $ww;var $we;var $t1;var $temp;$vadSt_addr=$vadSt;$corr_addr=$corr;$scal_sig_addr=$scal_sig;$L_frame_addr=$L_frame;$lag_max_addr=$lag_max;$lag_min_addr=$lag_min;$old_lag_addr=$old_lag;$cor_max_addr=$cor_max;$wght_flg_addr=$wght_flg;$gain_flg_addr=$gain_flg;$dtx_addr=$dtx;$pOverflow_addr=$pOverflow;$ww=_corrweight+500|0;var $0=$lag_max_addr;var $conv=$0<<16>>16;var $add=$conv+123|0;var $1=$old_lag_addr;var $conv1=$1<<16>>16;var $sub=$add-$conv1|0;var $arrayidx=_corrweight+($sub<<1)|0;$we=$arrayidx;$max=-2147483648;var $2=$lag_max_addr;$p_max=$2;var $3=$lag_max_addr;$i=$3;__label__=1;break;case 1:var $4=$i;var $conv2=$4<<16>>16;var $5=$lag_min_addr;var $conv3=$5<<16>>16;var $cmp=($conv2|0)>=($conv3|0);if($cmp){__label__=2;break}else{__label__=8;break}case 2:var $6=$i;var $conv5=$6<<16>>16;var $sub6=-$conv5|0;var $7=$corr_addr;var $arrayidx7=$7+($sub6<<2)|0;var $8=HEAP32[$arrayidx7>>2];$t0=$8;var $9=$i;var $conv8=$9<<16>>16;var $sub9=-$conv8|0;var $10=$corr_addr;var $arrayidx10=$10+($sub9<<2)|0;var $11=HEAP32[$arrayidx10>>2];var $12=$pOverflow_addr;_L_Extract($11,$t0_h,$t0_l,$12);var $13=HEAP16[$t0_h>>1];var $14=HEAP16[$t0_l>>1];var $15=$ww;var $16=HEAP16[$15>>1];var $17=$pOverflow_addr;var $call=_Mpy_32_16334($13,$14,$16,$17);$t0=$call;var $18=$ww;var $incdec_ptr=$18-2|0;$ww=$incdec_ptr;var $19=$wght_flg_addr;var $conv11=$19<<16>>16;var $cmp12=($conv11|0)>0;if($cmp12){__label__=3;break}else{__label__=4;break}case 3:var $20=$t0;var $21=$pOverflow_addr;_L_Extract($20,$t0_h,$t0_l,$21);var $22=HEAP16[$t0_h>>1];var $23=HEAP16[$t0_l>>1];var $24=$we;var $25=HEAP16[$24>>1];var $26=$pOverflow_addr;var $call14=_Mpy_32_16334($22,$23,$25,$26);$t0=$call14;var $27=$we;var $incdec_ptr15=$27-2|0;$we=$incdec_ptr15;__label__=4;break;case 4:var $28=$t0;var $29=$max;var $cmp16=($28|0)>=($29|0);if($cmp16){__label__=5;break}else{__label__=6;break}case 5:var $30=$t0;$max=$30;var $31=$i;$p_max=$31;__label__=6;break;case 6:__label__=7;break;case 7:var $32=$i;var $dec=$32-1&65535;$i=$dec;__label__=1;break;case 8:var $33=$scal_sig_addr;var $arrayidx20=$33|0;$p=$arrayidx20;var $34=$p_max;var $conv21=$34<<16>>16;var $sub22=-$conv21|0;var $35=$scal_sig_addr;var $arrayidx23=$35+($sub22<<1)|0;$p1=$arrayidx23;$t0=0;$t1=0;$j=0;__label__=9;break;case 9:var $36=$j;var $conv25=$36<<16>>16;var $37=$L_frame_addr;var $conv26=$37<<16>>16;var $cmp27=($conv25|0)<($conv26|0);if($cmp27){__label__=10;break}else{__label__=12;break}case 10:var $38=$t0;var $39=$p;var $40=HEAP16[$39>>1];var $41=$p1;var $42=HEAP16[$41>>1];var $43=$pOverflow_addr;var $call30=_L_mac330($38,$40,$42,$43);$t0=$call30;var $44=$t1;var $45=$p1;var $46=HEAP16[$45>>1];var $47=$p1;var $48=HEAP16[$47>>1];var $49=$pOverflow_addr;var $call31=_L_mac330($44,$46,$48,$49);$t1=$call31;__label__=11;break;case 11:var $50=$j;var $inc=$50+1&65535;$j=$inc;var $51=$p;var $incdec_ptr33=$51+2|0;$p=$incdec_ptr33;var $52=$p1;var $incdec_ptr34=$52+2|0;$p1=$incdec_ptr34;__label__=9;break;case 12:var $53=$dtx_addr;var $tobool=($53|0)!=0;if($tobool){__label__=13;break}else{__label__=14;break}case 13:var $54=$vadSt_addr;var $55=$pOverflow_addr;_vad_tone_detection_update($54,0,$55);var $56=$vadSt_addr;var $57=$t0;var $58=$t1;var $59=$pOverflow_addr;_vad_tone_detection($56,$57,$58,$59);__label__=14;break;case 14:var $60=$t1;var $61=$pOverflow_addr;var $call38=_pv_round($60,$61);$temp=$call38;var $62=$t0;var $63=$temp;var $64=$pOverflow_addr;var $call39=_L_msu335($62,$63,13107,$64);$t1=$call39;var $65=$t1;var $66=$pOverflow_addr;var $call40=_pv_round($65,$66);var $67=$gain_flg_addr;HEAP16[$67>>1]=$call40;var $68=$cor_max_addr;HEAP16[$68>>1]=0;var $69=$p_max;STACKTOP=__stackBase__;return $69;default:assert(0,"bad label: "+__label__)}}_Lag_max333["X"]=1;function _L_msu335($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult336($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub331($3,$4,$5);$result=$call1;var $6=$result;return $6}function _Post_Process($st,$signal,$lg,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $signal_addr;var $lg_addr;var $pOverflow_addr;var $i;var $x2;var $L_tmp;var $p_signal;var $c_a1;var $c_a2;var $c_b0;var $c_b1;var $c_b2;$st_addr=$st;$signal_addr=$signal;$lg_addr=$lg;$pOverflow_addr=$pOverflow;var $0=HEAP16[(_a+2|0)>>1];$c_a1=$0;var $1=HEAP16[(_a+4|0)>>1];$c_a2=$1;var $2=HEAP16[(_b|0)>>1];$c_b0=$2;var $3=HEAP16[(_b+2|0)>>1];$c_b1=$3;var $4=HEAP16[(_b+4|0)>>1];$c_b2=$4;var $5=$signal_addr;var $arrayidx=$5|0;$p_signal=$arrayidx;$i=0;__label__=1;break;case 1:var $6=$i;var $conv=$6<<16>>16;var $7=$lg_addr;var $conv1=$7<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $8=$st_addr;var $x1=$8+10|0;var $9=HEAP16[$x1>>1];$x2=$9;var $10=$st_addr;var $x0=$10+8|0;var $11=HEAP16[$x0>>1];var $12=$st_addr;var $x13=$12+10|0;HEAP16[$x13>>1]=$11;var $13=$p_signal;var $14=HEAP16[$13>>1];var $15=$st_addr;var $x04=$15+8|0;HEAP16[$x04>>1]=$14;var $16=$st_addr;var $y1_hi=$16+4|0;var $17=HEAP16[$y1_hi>>1];var $conv5=$17<<16>>16;var $18=$c_a1;var $conv6=$18<<16>>16;var $mul=$conv5*$conv6|0;$L_tmp=$mul;var $19=$st_addr;var $y1_lo=$19+6|0;var $20=HEAP16[$y1_lo>>1];var $conv7=$20<<16>>16;var $21=$c_a1;var $conv8=$21<<16>>16;var $mul9=$conv7*$conv8|0;var $shr=$mul9>>15;var $22=$L_tmp;var $add=$22+$shr|0;$L_tmp=$add;var $23=$st_addr;var $y2_hi=$23|0;var $24=HEAP16[$y2_hi>>1];var $conv10=$24<<16>>16;var $25=$c_a2;var $conv11=$25<<16>>16;var $mul12=$conv10*$conv11|0;var $26=$L_tmp;var $add13=$26+$mul12|0;$L_tmp=$add13;var $27=$st_addr;var $y2_lo=$27+2|0;var $28=HEAP16[$y2_lo>>1];var $conv14=$28<<16>>16;var $29=$c_a2;var $conv15=$29<<16>>16;var $mul16=$conv14*$conv15|0;var $shr17=$mul16>>15;var $30=$L_tmp;var $add18=$30+$shr17|0;$L_tmp=$add18;var $31=$st_addr;var $x019=$31+8|0;var $32=HEAP16[$x019>>1];var $conv20=$32<<16>>16;var $33=$c_b0;var $conv21=$33<<16>>16;var $mul22=$conv20*$conv21|0;var $34=$L_tmp;var $add23=$34+$mul22|0;$L_tmp=$add23;var $35=$st_addr;var $x124=$35+10|0;var $36=HEAP16[$x124>>1];var $conv25=$36<<16>>16;var $37=$c_b1;var $conv26=$37<<16>>16;var $mul27=$conv25*$conv26|0;var $38=$L_tmp;var $add28=$38+$mul27|0;$L_tmp=$add28;var $39=$x2;var $conv29=$39<<16>>16;var $40=$c_b2;var $conv30=$40<<16>>16;var $mul31=$conv29*$conv30|0;var $41=$L_tmp;var $add32=$41+$mul31|0;$L_tmp=$add32;var $42=$L_tmp;var $43=$pOverflow_addr;var $call=_L_shl337($42,3,$43);$L_tmp=$call;var $44=$L_tmp;var $45=$pOverflow_addr;var $call33=_L_shl337($44,1,$45);var $46=$pOverflow_addr;var $call34=_pv_round($call33,$46);var $47=$p_signal;var $incdec_ptr=$47+2|0;$p_signal=$incdec_ptr;HEAP16[$47>>1]=$call34;var $48=$st_addr;var $y1_hi35=$48+4|0;var $49=HEAP16[$y1_hi35>>1];var $50=$st_addr;var $y2_hi36=$50|0;HEAP16[$y2_hi36>>1]=$49;var $51=$st_addr;var $y1_lo37=$51+6|0;var $52=HEAP16[$y1_lo37>>1];var $53=$st_addr;var $y2_lo38=$53+2|0;HEAP16[$y2_lo38>>1]=$52;var $54=$L_tmp;var $shr39=$54>>16;var $conv40=$shr39&65535;var $55=$st_addr;var $y1_hi41=$55+4|0;HEAP16[$y1_hi41>>1]=$conv40;var $56=$L_tmp;var $shr42=$56>>1;var $57=$st_addr;var $y1_hi43=$57+4|0;var $58=HEAP16[$y1_hi43>>1];var $conv44=$58<<16>>16;var $shl=$conv44<<15;var $sub=$shr42-$shl|0;var $conv45=$sub&65535;var $59=$st_addr;var $y1_lo46=$59+6|0;HEAP16[$y1_lo46>>1]=$conv45;__label__=3;break;case 3:var $60=$i;var $inc=$60+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_Post_Process["X"]=1;function _Pow2($exponent,$fraction,$pOverflow){var __label__;var $exponent_addr;var $fraction_addr;var $pOverflow_addr;var $exp;var $i;var $a;var $tmp;var $L_x;$exponent_addr=$exponent;$fraction_addr=$fraction;$pOverflow_addr=$pOverflow;var $0=$fraction_addr;var $1=$pOverflow_addr;var $call=_L_mult340($0,32,$1);$L_x=$call;var $2=$L_x;var $shr=$2>>16;var $conv=$shr&65535;var $conv2=$conv<<16>>16;var $and=$conv2&31;var $conv3=$and&65535;$i=$conv3;var $3=$L_x;var $shr4=$3>>1;var $and5=$shr4&32767;var $conv6=$and5&65535;$a=$conv6;var $4=$i;var $idxprom=$4<<16>>16;var $arrayidx=_pow2_tbl+($idxprom<<1)|0;var $5=(tempInt=HEAPU8[$arrayidx]|HEAPU8[$arrayidx+1]<<8,tempInt<<16>>16);var $conv7=$5<<16>>16;var $shl=$conv7<<16;$L_x=$shl;var $6=$i;var $idxprom8=$6<<16>>16;var $arrayidx9=_pow2_tbl+($idxprom8<<1)|0;var $7=(tempInt=HEAPU8[$arrayidx9]|HEAPU8[$arrayidx9+1]<<8,tempInt<<16>>16);var $conv10=$7<<16>>16;var $8=$i;var $conv11=$8<<16>>16;var $add=$conv11+1|0;var $arrayidx12=_pow2_tbl+($add<<1)|0;var $9=(tempInt=HEAPU8[$arrayidx12]|HEAPU8[$arrayidx12+1]<<8,tempInt<<16>>16);var $conv13=$9<<16>>16;var $sub=$conv10-$conv13|0;var $conv14=$sub&65535;$tmp=$conv14;var $10=$L_x;var $11=$tmp;var $12=$a;var $13=$pOverflow_addr;var $call15=_L_msu341($10,$11,$12,$13);$L_x=$call15;var $14=$exponent_addr;var $conv16=$14<<16>>16;var $sub17=30-$conv16|0;var $conv18=$sub17&65535;$exp=$conv18;var $15=$L_x;var $16=$exp;var $17=$pOverflow_addr;var $call19=_L_shr_r($15,$16,$17);$L_x=$call19;var $18=$L_x;return $18}_Pow2["X"]=1;function _L_msu341($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult340($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub342($3,$4,$5);$result=$call1;var $6=$result;return $6}function _mult349($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _Pred_lt_3or6($exc,$T0,$frac,$L_subfr,$flag3,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $exc_addr;var $T0_addr;var $frac_addr;var $L_subfr_addr;var $flag3_addr;var $pOverflow_addr;var $i;var $j;var $k;var $pX0;var $pX2;var $pX3;var $p_exc;var $pC1;var $pC1_ref;var $pC2_ref;var $Coeff_1=__stackBase__;var $s1;var $s2;$exc_addr=$exc;$T0_addr=$T0;$frac_addr=$frac;$L_subfr_addr=$L_subfr;$flag3_addr=$flag3;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$T0_addr;var $conv=$1<<16>>16;var $sub=-$conv|0;var $2=$exc_addr;var $arrayidx=$2+($sub<<1)|0;$pX0=$arrayidx;var $3=$frac_addr;var $conv1=$3<<16>>16;var $sub2=-$conv1|0;var $conv3=$sub2&65535;$frac_addr=$conv3;var $4=$flag3_addr;var $conv4=$4<<16>>16;var $cmp=($conv4|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$frac_addr;var $conv6=$5<<16>>16;var $shl=$conv6<<1;var $conv7=$shl&65535;$frac_addr=$conv7;__label__=2;break;case 2:var $6=$frac_addr;var $conv8=$6<<16>>16;var $cmp9=($conv8|0)<0;if($cmp9){__label__=3;break}else{__label__=4;break}case 3:var $7=$frac_addr;var $conv12=$7<<16>>16;var $add=$conv12+6|0;var $conv13=$add&65535;$frac_addr=$conv13;var $8=$pX0;var $incdec_ptr=$8-2|0;$pX0=$incdec_ptr;__label__=4;break;case 4:var $9=$frac_addr;var $idxprom=$9<<16>>16;var $arrayidx15=_inter_6_pred_lt+($idxprom<<1)|0;$pC1_ref=$arrayidx15;var $10=$frac_addr;var $conv16=$10<<16>>16;var $sub17=6-$conv16|0;var $arrayidx18=_inter_6_pred_lt+($sub17<<1)|0;$pC2_ref=$arrayidx18;var $arraydecay=$Coeff_1|0;$pC1=$arraydecay;$k=0;$i=5;__label__=5;break;case 5:var $11=$i;var $conv19=$11<<16>>16;var $cmp20=($conv19|0)>0;if($cmp20){__label__=6;break}else{__label__=8;break}case 6:var $12=$k;var $idxprom22=$12<<16>>16;var $13=$pC1_ref;var $arrayidx23=$13+($idxprom22<<1)|0;var $14=HEAP16[$arrayidx23>>1];var $15=$pC1;var $incdec_ptr24=$15+2|0;$pC1=$incdec_ptr24;HEAP16[$15>>1]=$14;var $16=$k;var $idxprom25=$16<<16>>16;var $17=$pC2_ref;var $arrayidx26=$17+($idxprom25<<1)|0;var $18=HEAP16[$arrayidx26>>1];var $19=$pC1;var $incdec_ptr27=$19+2|0;$pC1=$incdec_ptr27;HEAP16[$19>>1]=$18;var $20=$k;var $conv28=$20<<16>>16;var $add29=$conv28+6|0;var $conv30=$add29&65535;$k=$conv30;var $21=$k;var $idxprom31=$21<<16>>16;var $22=$pC1_ref;var $arrayidx32=$22+($idxprom31<<1)|0;var $23=HEAP16[$arrayidx32>>1];var $24=$pC1;var $incdec_ptr33=$24+2|0;$pC1=$incdec_ptr33;HEAP16[$24>>1]=$23;var $25=$k;var $idxprom34=$25<<16>>16;var $26=$pC2_ref;var $arrayidx35=$26+($idxprom34<<1)|0;var $27=HEAP16[$arrayidx35>>1];var $28=$pC1;var $incdec_ptr36=$28+2|0;$pC1=$incdec_ptr36;HEAP16[$28>>1]=$27;var $29=$k;var $conv37=$29<<16>>16;var $add38=$conv37+6|0;var $conv39=$add38&65535;$k=$conv39;__label__=7;break;case 7:var $30=$i;var $dec=$30-1&65535;$i=$dec;__label__=5;break;case 8:var $31=$exc_addr;$p_exc=$31;var $32=$L_subfr_addr;var $conv40=$32<<16>>16;var $shr=$conv40>>1;var $conv41=$shr&65535;$j=$conv41;__label__=9;break;case 9:var $33=$j;var $conv43=$33<<16>>16;var $cmp44=($conv43|0)!=0;if($cmp44){__label__=10;break}else{__label__=16;break}case 10:var $34=$pX0;var $incdec_ptr47=$34+2|0;$pX0=$incdec_ptr47;var $35=$pX0;$pX2=$35;var $36=$pX0;var $incdec_ptr48=$36+2|0;$pX0=$incdec_ptr48;$pX3=$36;var $arraydecay49=$Coeff_1|0;$pC1=$arraydecay49;$s1=16384;$s2=16384;$i=5;__label__=11;break;case 11:var $37=$i;var $conv51=$37<<16>>16;var $cmp52=($conv51|0)>0;if($cmp52){__label__=12;break}else{__label__=14;break}case 12:var $38=$pX3;var $incdec_ptr55=$38-2|0;$pX3=$incdec_ptr55;var $39=HEAP16[$38>>1];var $conv56=$39<<16>>16;var $40=$pC1;var $41=HEAP16[$40>>1];var $conv57=$41<<16>>16;var $mul=$conv56*$conv57|0;var $42=$s2;var $add58=$42+$mul|0;$s2=$add58;var $43=$pX3;var $44=HEAP16[$43>>1];var $conv59=$44<<16>>16;var $45=$pC1;var $incdec_ptr60=$45+2|0;$pC1=$incdec_ptr60;var $46=HEAP16[$45>>1];var $conv61=$46<<16>>16;var $mul62=$conv59*$conv61|0;var $47=$s1;var $add63=$47+$mul62|0;$s1=$add63;var $48=$pX2;var $incdec_ptr64=$48+2|0;$pX2=$incdec_ptr64;var $49=HEAP16[$48>>1];var $conv65=$49<<16>>16;var $50=$pC1;var $51=HEAP16[$50>>1];var $conv66=$51<<16>>16;var $mul67=$conv65*$conv66|0;var $52=$s1;var $add68=$52+$mul67|0;$s1=$add68;var $53=$pX2;var $54=HEAP16[$53>>1];var $conv69=$54<<16>>16;var $55=$pC1;var $incdec_ptr70=$55+2|0;$pC1=$incdec_ptr70;var $56=HEAP16[$55>>1];var $conv71=$56<<16>>16;var $mul72=$conv69*$conv71|0;var $57=$s2;var $add73=$57+$mul72|0;$s2=$add73;var $58=$pX3;var $incdec_ptr74=$58-2|0;$pX3=$incdec_ptr74;var $59=HEAP16[$58>>1];var $conv75=$59<<16>>16;var $60=$pC1;var $61=HEAP16[$60>>1];var $conv76=$61<<16>>16;var $mul77=$conv75*$conv76|0;var $62=$s2;var $add78=$62+$mul77|0;$s2=$add78;var $63=$pX3;var $64=HEAP16[$63>>1];var $conv79=$64<<16>>16;var $65=$pC1;var $incdec_ptr80=$65+2|0;$pC1=$incdec_ptr80;var $66=HEAP16[$65>>1];var $conv81=$66<<16>>16;var $mul82=$conv79*$conv81|0;var $67=$s1;var $add83=$67+$mul82|0;$s1=$add83;var $68=$pX2;var $incdec_ptr84=$68+2|0;$pX2=$incdec_ptr84;var $69=HEAP16[$68>>1];var $conv85=$69<<16>>16;var $70=$pC1;var $71=HEAP16[$70>>1];var $conv86=$71<<16>>16;var $mul87=$conv85*$conv86|0;var $72=$s1;var $add88=$72+$mul87|0;$s1=$add88;var $73=$pX2;var $74=HEAP16[$73>>1];var $conv89=$74<<16>>16;var $75=$pC1;var $incdec_ptr90=$75+2|0;$pC1=$incdec_ptr90;var $76=HEAP16[$75>>1];var $conv91=$76<<16>>16;var $mul92=$conv89*$conv91|0;var $77=$s2;var $add93=$77+$mul92|0;$s2=$add93;__label__=13;break;case 13:var $78=$i;var $dec95=$78-1&65535;$i=$dec95;__label__=11;break;case 14:var $79=$s1;var $shr97=$79>>15;var $conv98=$shr97&65535;var $80=$p_exc;var $incdec_ptr99=$80+2|0;$p_exc=$incdec_ptr99;HEAP16[$80>>1]=$conv98;var $81=$s2;var $shr100=$81>>15;var $conv101=$shr100&65535;var $82=$p_exc;var $incdec_ptr102=$82+2|0;$p_exc=$incdec_ptr102;HEAP16[$82>>1]=$conv101;__label__=15;break;case 15:var $83=$j;var $dec104=$83-1&65535;$j=$dec104;__label__=9;break;case 16:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Pred_lt_3or6["X"]=1;function _preemphasis_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $mem_pre=$1|0;HEAP16[$mem_pre>>1]=0;$retval=0;__label__=3;break;case 3:var $2=$retval;return $2;default:assert(0,"bad label: "+__label__)}}function _Pre_Process_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $y2_hi=$1|0;HEAP16[$y2_hi>>1]=0;var $2=$state_addr;var $y2_lo=$2+2|0;HEAP16[$y2_lo>>1]=0;var $3=$state_addr;var $y1_hi=$3+4|0;HEAP16[$y1_hi>>1]=0;var $4=$state_addr;var $y1_lo=$4+6|0;HEAP16[$y1_lo>>1]=0;var $5=$state_addr;var $x0=$5+8|0;HEAP16[$x0>>1]=0;var $6=$state_addr;var $x1=$6+10|0;HEAP16[$x1>>1]=0;$retval=0;__label__=3;break;case 3:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _Pre_Process($st,$signal,$lg){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $signal_addr;var $lg_addr;var $i;var $x_n_2;var $x_n_1;var $L_tmp;var $p_signal;$st_addr=$st;$signal_addr=$signal;$lg_addr=$lg;var $0=$signal_addr;$p_signal=$0;var $1=$st_addr;var $x1=$1+10|0;var $2=HEAP16[$x1>>1];$x_n_2=$2;var $3=$st_addr;var $x0=$3+8|0;var $4=HEAP16[$x0>>1];$x_n_1=$4;var $5=$lg_addr;$i=$5;__label__=1;break;case 1:var $6=$i;var $conv=$6<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $7=$st_addr;var $y1_hi=$7+4|0;var $8=HEAP16[$y1_hi>>1];var $conv2=$8<<16>>16;var $mul=$conv2*7807|0;$L_tmp=$mul;var $9=$st_addr;var $y1_lo=$9+6|0;var $10=HEAP16[$y1_lo>>1];var $conv3=$10<<16>>16;var $mul4=$conv3*7807|0;var $shr=$mul4>>15;var $11=$L_tmp;var $add=$11+$shr|0;$L_tmp=$add;var $12=$st_addr;var $y2_hi=$12|0;var $13=HEAP16[$y2_hi>>1];var $conv5=$13<<16>>16;var $mul6=$conv5*-3733|0;var $14=$L_tmp;var $add7=$14+$mul6|0;$L_tmp=$add7;var $15=$st_addr;var $y1_hi8=$15+4|0;var $16=HEAP16[$y1_hi8>>1];var $17=$st_addr;var $y2_hi9=$17|0;HEAP16[$y2_hi9>>1]=$16;var $18=$st_addr;var $y2_lo=$18+2|0;var $19=HEAP16[$y2_lo>>1];var $conv10=$19<<16>>16;var $mul11=$conv10*-3733|0;var $shr12=$mul11>>15;var $20=$L_tmp;var $add13=$20+$shr12|0;$L_tmp=$add13;var $21=$st_addr;var $y1_lo14=$21+6|0;var $22=HEAP16[$y1_lo14>>1];var $23=$st_addr;var $y2_lo15=$23+2|0;HEAP16[$y2_lo15>>1]=$22;var $24=$x_n_2;var $conv16=$24<<16>>16;var $mul17=$conv16*1899|0;var $25=$L_tmp;var $add18=$25+$mul17|0;$L_tmp=$add18;var $26=$x_n_1;$x_n_2=$26;var $27=$x_n_1;var $conv19=$27<<16>>16;var $mul20=$conv19*-3798|0;var $28=$L_tmp;var $add21=$28+$mul20|0;$L_tmp=$add21;var $29=$p_signal;var $30=HEAP16[$29>>1];$x_n_1=$30;var $31=$x_n_1;var $conv22=$31<<16>>16;var $mul23=$conv22*1899|0;var $32=$L_tmp;var $add24=$32+$mul23|0;$L_tmp=$add24;var $33=$L_tmp;var $add25=$33+2048|0;var $shr26=$add25>>12;var $conv27=$shr26&65535;var $34=$p_signal;var $incdec_ptr=$34+2|0;$p_signal=$incdec_ptr;HEAP16[$34>>1]=$conv27;var $35=$L_tmp;var $shr28=$35>>12;var $conv29=$shr28&65535;var $36=$st_addr;var $y1_hi30=$36+4|0;HEAP16[$y1_hi30>>1]=$conv29;var $37=$L_tmp;var $shl=$37<<3;var $38=$st_addr;var $y1_hi31=$38+4|0;var $39=HEAP16[$y1_hi31>>1];var $conv32=$39<<16>>16;var $shl33=$conv32<<15;var $sub=$shl-$shl33|0;var $conv34=$sub&65535;var $40=$st_addr;var $y1_lo35=$40+6|0;HEAP16[$y1_lo35>>1]=$conv34;__label__=3;break;case 3:var $41=$i;var $dec=$41-1&65535;$i=$dec;__label__=1;break;case 4:var $42=$x_n_2;var $43=$st_addr;var $x136=$43+10|0;HEAP16[$x136>>1]=$42;var $44=$x_n_1;var $45=$st_addr;var $x037=$45+8|0;HEAP16[$x037>>1]=$44;return;default:assert(0,"bad label: "+__label__)}}_Pre_Process["X"]=1;function _pre_big($mode,$gamma1,$gamma1_12k2,$gamma2,$A_t,$frameOffset,$speech,$mem_w,$wsp,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=48;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $gamma1_addr;var $gamma1_12k2_addr;var $gamma2_addr;var $A_t_addr;var $frameOffset_addr;var $speech_addr;var $mem_w_addr;var $wsp_addr;var $pOverflow_addr;var $Ap1=__stackBase__;var $Ap2=__stackBase__+24;var $g1;var $aOffset;var $i;$mode_addr=$mode;$gamma1_addr=$gamma1;$gamma1_12k2_addr=$gamma1_12k2;$gamma2_addr=$gamma2;$A_t_addr=$A_t;$frameOffset_addr=$frameOffset;$speech_addr=$speech;$mem_w_addr=$mem_w;$wsp_addr=$wsp;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $cmp=$0>>>0<=5;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$gamma1_addr;$g1=$1;__label__=3;break;case 2:var $2=$gamma1_12k2_addr;$g1=$2;__label__=3;break;case 3:var $3=$frameOffset_addr;var $conv=$3<<16>>16;var $cmp1=($conv|0)>0;if($cmp1){__label__=4;break}else{__label__=5;break}case 4:$aOffset=22;__label__=6;break;case 5:$aOffset=0;__label__=6;break;case 6:$i=0;__label__=7;break;case 7:var $4=$i;var $conv6=$4<<16>>16;var $cmp7=($conv6|0)<2;if($cmp7){__label__=8;break}else{__label__=10;break}case 8:var $5=$aOffset;var $idxprom=$5<<16>>16;var $6=$A_t_addr;var $arrayidx=$6+($idxprom<<1)|0;var $7=$g1;var $arraydecay=$Ap1|0;_Weight_Ai($arrayidx,$7,$arraydecay);var $8=$aOffset;var $idxprom9=$8<<16>>16;var $9=$A_t_addr;var $arrayidx10=$9+($idxprom9<<1)|0;var $10=$gamma2_addr;var $arraydecay11=$Ap2|0;_Weight_Ai($arrayidx10,$10,$arraydecay11);var $arraydecay12=$Ap1|0;var $11=$frameOffset_addr;var $idxprom13=$11<<16>>16;var $12=$speech_addr;var $arrayidx14=$12+($idxprom13<<1)|0;var $13=$frameOffset_addr;var $idxprom15=$13<<16>>16;var $14=$wsp_addr;var $arrayidx16=$14+($idxprom15<<1)|0;_Residu($arraydecay12,$arrayidx14,$arrayidx16,40);var $arraydecay17=$Ap2|0;var $15=$frameOffset_addr;var $idxprom18=$15<<16>>16;var $16=$wsp_addr;var $arrayidx19=$16+($idxprom18<<1)|0;var $17=$frameOffset_addr;var $idxprom20=$17<<16>>16;var $18=$wsp_addr;var $arrayidx21=$18+($idxprom20<<1)|0;var $19=$mem_w_addr;_Syn_filt($arraydecay17,$arrayidx19,$arrayidx21,40,$19,1);var $20=$aOffset;var $conv22=$20<<16>>16;var $add=$conv22+11|0;var $conv23=$add&65535;$aOffset=$conv23;var $21=$frameOffset_addr;var $conv24=$21<<16>>16;var $add25=$conv24+40|0;var $conv26=$add25&65535;$frameOffset_addr=$conv26;__label__=9;break;case 9:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=7;break;case 10:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_pre_big["X"]=1;function _preemphasis($st,$signal,$g,$L,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $signal_addr;var $g_addr;var $L_addr;var $pOverflow_addr;var $p1;var $p2;var $temp;var $temp2;var $i;$st_addr=$st;$signal_addr=$signal;$g_addr=$g;$L_addr=$L;$pOverflow_addr=$pOverflow;var $0=$signal_addr;var $1=$L_addr;var $conv=$1<<16>>16;var $add_ptr=$0+($conv<<1)|0;var $add_ptr1=$add_ptr-2|0;$p1=$add_ptr1;var $2=$p1;var $add_ptr2=$2-2|0;$p2=$add_ptr2;var $3=$p1;var $4=HEAP16[$3>>1];$temp=$4;$i=0;__label__=1;break;case 1:var $5=$i;var $conv3=$5<<16>>16;var $6=$L_addr;var $conv4=$6<<16>>16;var $sub=$conv4-2|0;var $cmp=($conv3|0)<=($sub|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $7=$g_addr;var $8=$p2;var $incdec_ptr=$8-2|0;$p2=$incdec_ptr;var $9=HEAP16[$8>>1];var $10=$pOverflow_addr;var $call=_mult349($7,$9,$10);$temp2=$call;var $11=$p1;var $12=HEAP16[$11>>1];var $13=$temp2;var $14=$pOverflow_addr;var $call6=_sub($12,$13,$14);var $15=$p1;HEAP16[$15>>1]=$call6;var $16=$p1;var $incdec_ptr7=$16-2|0;$p1=$incdec_ptr7;__label__=3;break;case 3:var $17=$i;var $inc=$17+1&65535;$i=$inc;__label__=1;break;case 4:var $18=$g_addr;var $19=$st_addr;var $mem_pre=$19|0;var $20=HEAP16[$mem_pre>>1];var $21=$pOverflow_addr;var $call8=_mult349($18,$20,$21);$temp2=$call8;var $22=$p1;var $23=HEAP16[$22>>1];var $24=$temp2;var $25=$pOverflow_addr;var $call9=_sub($23,$24,$25);var $26=$p1;HEAP16[$26>>1]=$call9;var $27=$temp;var $28=$st_addr;var $mem_pre10=$28|0;HEAP16[$mem_pre10>>1]=$27;return;default:assert(0,"bad label: "+__label__)}}_preemphasis["X"]=1;function _Pre_Process_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(12);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_Pre_Process_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _Pre_Process_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Prm2bits($mode,$prm,$bits,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $prm_addr;var $bits_addr;var $common_amr_tbls_addr;var $i;var $p_mode;var $p_prm;var $prmno_ptr;$mode_addr=$mode;$prm_addr=$prm;$bits_addr=$bits;$common_amr_tbls_addr=$common_amr_tbls;var $0=$common_amr_tbls_addr;var $prmno_ptr1=$0+88|0;var $1=HEAP32[$prmno_ptr1>>2];$prmno_ptr=$1;var $2=$mode_addr;var $3=$common_amr_tbls_addr;var $bitno_ptr=$3+92|0;var $4=HEAP32[$bitno_ptr>>2];var $arrayidx=$4+($2<<2)|0;var $5=HEAP32[$arrayidx>>2];var $arrayidx2=$5|0;$p_mode=$arrayidx2;var $6=$prm_addr;var $arrayidx3=$6|0;$p_prm=$arrayidx3;var $7=$mode_addr;var $8=$prmno_ptr;var $arrayidx4=$8+($7<<1)|0;var $9=HEAP16[$arrayidx4>>1];$i=$9;__label__=1;break;case 1:var $10=$i;var $conv=$10<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $11=$p_prm;var $incdec_ptr=$11+2|0;$p_prm=$incdec_ptr;var $12=HEAP16[$11>>1];var $13=$p_mode;var $14=HEAP16[$13>>1];var $15=$bits_addr;_Int2bin($12,$14,$15);var $16=$p_mode;var $incdec_ptr6=$16+2|0;$p_mode=$incdec_ptr6;var $17=HEAP16[$16>>1];var $conv7=$17<<16>>16;var $18=$bits_addr;var $add_ptr=$18+($conv7<<1)|0;$bits_addr=$add_ptr;__label__=3;break;case 3:var $19=$i;var $dec=$19-1&65535;$i=$dec;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_Prm2bits["X"]=1;function _L_add350($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _Mpy_32_16354($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16354["X"]=1;function _L_shl355($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _Int2bin($value,$no_of_bits,$bitstream){var __label__;__label__=0;while(1)switch(__label__){case 0:var $value_addr;var $no_of_bits_addr;var $bitstream_addr;var $pt_bitstream;var $i;$value_addr=$value;$no_of_bits_addr=$no_of_bits;$bitstream_addr=$bitstream;var $0=$no_of_bits_addr;var $conv=$0<<16>>16;var $sub=$conv-1|0;var $1=$bitstream_addr;var $arrayidx=$1+($sub<<1)|0;$pt_bitstream=$arrayidx;var $2=$no_of_bits_addr;$i=$2;__label__=1;break;case 1:var $3=$i;var $conv1=$3<<16>>16;var $cmp=($conv1|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$value_addr;var $conv3=$4<<16>>16;var $and=$conv3&1;var $conv4=$and&65535;var $5=$pt_bitstream;var $incdec_ptr=$5-2|0;$pt_bitstream=$incdec_ptr;HEAP16[$5>>1]=$conv4;var $6=$value_addr;var $conv5=$6<<16>>16;var $shr=$conv5>>1;var $conv6=$shr&65535;$value_addr=$conv6;__label__=3;break;case 3:var $7=$i;var $dec=$7-1&65535;$i=$dec;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Post_Filter_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$state_addr;var $mem_syn_pst=$1+80|0;var $arraydecay=$mem_syn_pst|0;var $2=$arraydecay;_memset($2,0,20,1);var $3=$state_addr;var $res2=$3|0;var $arraydecay1=$res2|0;var $4=$arraydecay1;_memset($4,0,80,1);var $5=$state_addr;var $synth_buf=$5+104|0;var $arraydecay2=$synth_buf|0;var $6=$arraydecay2;_memset($6,0,340,1);var $7=$state_addr;var $agc_state=$7+102|0;var $call=_agc_reset($agc_state);var $8=$state_addr;var $preemph_state=$8+100|0;var $call3=_preemphasis_reset($preemph_state);$retval=0;__label__=3;break;case 3:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _Post_Filter($st,$mode,$syn,$Az_4,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=92;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $syn_addr;var $Az_4_addr;var $pOverflow_addr;var $Ap3=__stackBase__;var $Ap4=__stackBase__+24;var $Az;var $i_subfr;var $h=__stackBase__+48;var $i;var $temp1;var $temp2;var $L_tmp;var $L_tmp2;var $syn_work;$st_addr=$st;$mode_addr=$mode;$syn_addr=$syn;$Az_4_addr=$Az_4;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $synth_buf=$0+104|0;var $arrayidx=$synth_buf+20|0;$syn_work=$arrayidx;var $1=$syn_work;var $2=$1;var $3=$syn_addr;var $4=$3;_llvm_memmove_p0i8_p0i8_i32($2,$4,320,1,0);var $5=$Az_4_addr;$Az=$5;$i_subfr=0;__label__=1;break;case 1:var $6=$i_subfr;var $conv=$6<<16>>16;var $cmp=($conv|0)<160;if($cmp){__label__=2;break}else{__label__=27;break}case 2:var $7=$mode_addr;var $cmp2=($7|0)==7;if($cmp2){__label__=4;break}else{__label__=3;break}case 3:var $8=$mode_addr;var $cmp4=($8|0)==6;if($cmp4){__label__=4;break}else{__label__=5;break}case 4:var $9=$Az;var $arraydecay=$Ap3|0;_Weight_Ai($9,_gamma3_MR122|0,$arraydecay);var $10=$Az;var $arraydecay6=$Ap4|0;_Weight_Ai($10,_gamma4_MR122|0,$arraydecay6);__label__=6;break;case 5:var $11=$Az;var $arraydecay7=$Ap3|0;_Weight_Ai($11,_gamma3|0,$arraydecay7);var $12=$Az;var $arraydecay8=$Ap4|0;_Weight_Ai($12,_gamma4|0,$arraydecay8);__label__=6;break;case 6:var $arraydecay9=$Ap3|0;var $13=$i_subfr;var $idxprom=$13<<16>>16;var $14=$syn_work;var $arrayidx10=$14+($idxprom<<1)|0;var $15=$st_addr;var $res2=$15|0;var $arraydecay11=$res2|0;_Residu($arraydecay9,$arrayidx10,$arraydecay11,40);var $arraydecay12=$h|0;var $16=$arraydecay12;var $arraydecay13=$Ap3|0;var $17=$arraydecay13;_llvm_memmove_p0i8_p0i8_i32($16,$17,22,1,0);var $arrayidx14=$h+22|0;var $18=$arrayidx14;_memset($18,0,22,1);var $arraydecay15=$Ap4|0;var $arraydecay16=$h|0;var $arraydecay17=$h|0;var $arrayidx18=$h+22|0;_Syn_filt($arraydecay15,$arraydecay16,$arraydecay17,22,$arrayidx18,0);$L_tmp=0;$i=21;__label__=7;break;case 7:var $19=$i;var $conv20=$19<<16>>16;var $cmp21=($conv20|0)>=0;if($cmp21){__label__=8;break}else{__label__=13;break}case 8:var $20=$i;var $idxprom24=$20<<16>>16;var $arrayidx25=$h+($idxprom24<<1)|0;var $21=HEAP16[$arrayidx25>>1];var $conv26=$21<<16>>16;var $22=$i;var $idxprom27=$22<<16>>16;var $arrayidx28=$h+($idxprom27<<1)|0;var $23=HEAP16[$arrayidx28>>1];var $conv29=$23<<16>>16;var $mul=$conv26*$conv29|0;$L_tmp2=$mul;var $24=$L_tmp2;var $cmp30=($24|0)!=1073741824;if($cmp30){__label__=9;break}else{__label__=10;break}case 9:var $25=$L_tmp2;var $shl=$25<<1;$L_tmp2=$shl;__label__=11;break;case 10:var $26=$pOverflow_addr;HEAP32[$26>>2]=1;$L_tmp2=2147483647;__label__=13;break;case 11:var $27=$L_tmp;var $28=$L_tmp2;var $29=$pOverflow_addr;var $call=_L_add350($27,$28,$29);$L_tmp=$call;__label__=12;break;case 12:var $30=$i;var $dec=$30-1&65535;$i=$dec;__label__=7;break;case 13:var $31=$L_tmp;var $shr=$31>>16;var $conv35=$shr&65535;$temp1=$conv35;$L_tmp=0;$i=20;__label__=14;break;case 14:var $32=$i;var $conv37=$32<<16>>16;var $cmp38=($conv37|0)>=0;if($cmp38){__label__=15;break}else{__label__=20;break}case 15:var $33=$i;var $idxprom41=$33<<16>>16;var $arrayidx42=$h+($idxprom41<<1)|0;var $34=HEAP16[$arrayidx42>>1];var $conv43=$34<<16>>16;var $35=$i;var $conv44=$35<<16>>16;var $add=$conv44+1|0;var $arrayidx45=$h+($add<<1)|0;var $36=HEAP16[$arrayidx45>>1];var $conv46=$36<<16>>16;var $mul47=$conv43*$conv46|0;$L_tmp2=$mul47;var $37=$L_tmp2;var $cmp48=($37|0)!=1073741824;if($cmp48){__label__=16;break}else{__label__=17;break}case 16:var $38=$L_tmp2;var $shl51=$38<<1;$L_tmp2=$shl51;__label__=18;break;case 17:var $39=$pOverflow_addr;HEAP32[$39>>2]=1;$L_tmp2=2147483647;__label__=20;break;case 18:var $40=$L_tmp;var $41=$L_tmp2;var $42=$pOverflow_addr;var $call54=_L_add350($40,$41,$42);$L_tmp=$call54;__label__=19;break;case 19:var $43=$i;var $dec56=$43-1&65535;$i=$dec56;__label__=14;break;case 20:var $44=$L_tmp;var $shr58=$44>>16;var $conv59=$shr58&65535;$temp2=$conv59;var $45=$temp2;var $conv60=$45<<16>>16;var $cmp61=($conv60|0)<=0;if($cmp61){__label__=21;break}else{__label__=22;break}case 21:$temp2=0;__label__=25;break;case 22:var $46=$temp2;var $conv65=$46<<16>>16;var $mul66=$conv65*26214|0;var $shr67=$mul66>>15;$L_tmp=$shr67;var $47=$L_tmp;var $and=$47&65536;var $tobool=($and|0)!=0;if($tobool){__label__=23;break}else{__label__=24;break}case 23:var $48=$L_tmp;var $or=$48|-65536;$L_tmp=$or;__label__=24;break;case 24:var $49=$L_tmp;var $conv70=$49&65535;$temp2=$conv70;var $50=$temp2;var $51=$temp1;var $call71=_div_s($50,$51);$temp2=$call71;__label__=25;break;case 25:var $52=$st_addr;var $preemph_state=$52+100|0;var $53=$st_addr;var $res273=$53|0;var $arraydecay74=$res273|0;var $54=$temp2;var $55=$pOverflow_addr;_preemphasis($preemph_state,$arraydecay74,$54,40,$55);var $arraydecay75=$Ap4|0;var $56=$st_addr;var $res276=$56|0;var $arraydecay77=$res276|0;var $57=$i_subfr;var $idxprom78=$57<<16>>16;var $58=$syn_addr;var $arrayidx79=$58+($idxprom78<<1)|0;var $59=$st_addr;var $mem_syn_pst=$59+80|0;var $arraydecay80=$mem_syn_pst|0;_Syn_filt($arraydecay75,$arraydecay77,$arrayidx79,40,$arraydecay80,1);var $60=$st_addr;var $agc_state=$60+102|0;var $61=$i_subfr;var $idxprom81=$61<<16>>16;var $62=$syn_work;var $arrayidx82=$62+($idxprom81<<1)|0;var $63=$i_subfr;var $idxprom83=$63<<16>>16;var $64=$syn_addr;var $arrayidx84=$64+($idxprom83<<1)|0;var $65=$pOverflow_addr;_agc($agc_state,$arrayidx82,$arrayidx84,29491,40,$65);var $66=$Az;var $add_ptr=$66+22|0;$Az=$add_ptr;__label__=26;break;case 26:var $67=$i_subfr;var $conv86=$67<<16>>16;var $add87=$conv86+40|0;var $conv88=$add87&65535;$i_subfr=$conv88;__label__=1;break;case 27:var $68=$syn_work;var $arrayidx90=$68-20|0;var $69=$arrayidx90;var $70=$syn_work;var $arrayidx91=$70+300|0;var $71=$arrayidx91;_llvm_memmove_p0i8_p0i8_i32($69,$71,20,1,0);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Post_Filter["X"]=1;function _MR475_update_unq_pred($pred_st,$exp_gcode0,$frac_gcode0,$cod_gain_exp,$cod_gain_frac,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $pred_st_addr;var $exp_gcode0_addr;var $frac_gcode0_addr;var $cod_gain_exp_addr;var $cod_gain_frac_addr;var $pOverflow_addr;var $tmp;var $exp=__stackBase__;var $frac=__stackBase__+4;var $qua_ener;var $qua_ener_MR122;var $L_tmp;$pred_st_addr=$pred_st;$exp_gcode0_addr=$exp_gcode0;$frac_gcode0_addr=$frac_gcode0;$cod_gain_exp_addr=$cod_gain_exp;$cod_gain_frac_addr=$cod_gain_frac;$pOverflow_addr=$pOverflow;var $0=$cod_gain_frac_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)<=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$qua_ener=-5443;$qua_ener_MR122=-32768;__label__=8;break;case 2:var $1=$frac_gcode0_addr;var $2=$pOverflow_addr;var $call=_Pow2(14,$1,$2);var $conv7=$call&65535;$frac_gcode0_addr=$conv7;var $3=$cod_gain_frac_addr;var $conv8=$3<<16>>16;var $4=$frac_gcode0_addr;var $conv9=$4<<16>>16;var $cmp10=($conv8|0)>=($conv9|0);if($cmp10){__label__=3;break}else{__label__=4;break}case 3:var $5=$cod_gain_frac_addr;var $conv13=$5<<16>>16;var $shr=$conv13>>1;var $conv14=$shr&65535;$cod_gain_frac_addr=$conv14;var $6=$cod_gain_exp_addr;var $conv15=$6<<16>>16;var $add=$conv15+1|0;var $conv16=$add&65535;$cod_gain_exp_addr=$conv16;__label__=4;break;case 4:var $7=$cod_gain_frac_addr;var $8=$frac_gcode0_addr;var $call17=_div_s($7,$8);HEAP16[$frac>>1]=$call17;var $9=$cod_gain_exp_addr;var $conv18=$9<<16>>16;var $10=$exp_gcode0_addr;var $conv19=$10<<16>>16;var $sub=$conv18-$conv19|0;var $conv20=$sub&65535;$tmp=$conv20;var $11=$tmp;var $conv21=$11<<16>>16;var $sub22=$conv21-1|0;var $conv23=$sub22&65535;$tmp=$conv23;var $12=HEAP16[$frac>>1];var $conv24=$12<<16>>16;var $13=$pOverflow_addr;_Log2($conv24,$exp,$frac,$13);var $14=$tmp;var $conv25=$14<<16>>16;var $15=HEAP16[$exp>>1];var $conv26=$15<<16>>16;var $add27=$conv26+$conv25|0;var $conv28=$add27&65535;HEAP16[$exp>>1]=$conv28;var $16=HEAP16[$frac>>1];var $17=$pOverflow_addr;var $call29=_shr_r($16,5,$17);$qua_ener_MR122=$call29;var $18=HEAP16[$exp>>1];var $conv30=$18<<16>>16;var $shl=$conv30<<10;var $conv31=$shl&65535;$tmp=$conv31;var $19=$tmp;var $conv32=$19<<16>>16;var $20=$qua_ener_MR122;var $conv33=$20<<16>>16;var $add34=$conv33+$conv32|0;var $conv35=$add34&65535;$qua_ener_MR122=$conv35;var $21=$qua_ener_MR122;var $conv36=$21<<16>>16;var $cmp37=($conv36|0)>18284;if($cmp37){__label__=5;break}else{__label__=6;break}case 5:$qua_ener=3037;$qua_ener_MR122=18284;__label__=7;break;case 6:var $22=HEAP16[$exp>>1];var $23=HEAP16[$frac>>1];var $24=$pOverflow_addr;var $call41=_Mpy_32_16354($22,$23,24660,$24);$L_tmp=$call41;var $25=$L_tmp;var $26=$pOverflow_addr;var $call42=_L_shl355($25,13,$26);$L_tmp=$call42;var $27=$L_tmp;var $28=$pOverflow_addr;var $call43=_pv_round($27,$28);$qua_ener=$call43;__label__=7;break;case 7:__label__=8;break;case 8:var $29=$pred_st_addr;var $30=$qua_ener_MR122;var $31=$qua_ener;_gc_pred_update($29,$30,$31);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_MR475_update_unq_pred["X"]=1;function _L_shr358($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _MR475_gain_quant($pred_st,$sf0_exp_gcode0,$sf0_frac_gcode0,$sf0_exp_coeff,$sf0_frac_coeff,$sf0_exp_target_en,$sf0_frac_target_en,$sf1_code_nosharp,$sf1_exp_gcode0,$sf1_frac_gcode0,$sf1_exp_coeff,$sf1_frac_coeff,$sf1_exp_target_en,$sf1_frac_target_en,$gp_limit,$sf0_gain_pit,$sf0_gain_cod,$sf1_gain_pit,$sf1_gain_cod,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=76;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $pred_st_addr;var $sf0_exp_gcode0_addr=__stackBase__;var $sf0_frac_gcode0_addr;var $sf0_exp_coeff_addr;var $sf0_frac_coeff_addr;var $sf0_exp_target_en_addr;var $sf0_frac_target_en_addr;var $sf1_code_nosharp_addr;var $sf1_exp_gcode0_addr=__stackBase__+4;var $sf1_frac_gcode0_addr=__stackBase__+8;var $sf1_exp_coeff_addr;var $sf1_frac_coeff_addr;var $sf1_exp_target_en_addr;var $sf1_frac_target_en_addr;var $gp_limit_addr;var $sf0_gain_pit_addr;var $sf0_gain_cod_addr;var $sf1_gain_pit_addr;var $sf1_gain_cod_addr;var $pOverflow_addr;var $p;var $i;var $index;var $tmp;var $exp;var $sf0_gcode0=__stackBase__+12;var $sf1_gcode0;var $g_pitch;var $g2_pitch;var $g_code;var $g2_code;var $g_pit_cod;var $coeff=__stackBase__+16;var $coeff_lo=__stackBase__+36;var $exp_max=__stackBase__+56;var $L_tmp;var $dist_min;$pred_st_addr=$pred_st;HEAP16[$sf0_exp_gcode0_addr>>1]=$sf0_exp_gcode0;$sf0_frac_gcode0_addr=$sf0_frac_gcode0;$sf0_exp_coeff_addr=$sf0_exp_coeff;$sf0_frac_coeff_addr=$sf0_frac_coeff;$sf0_exp_target_en_addr=$sf0_exp_target_en;$sf0_frac_target_en_addr=$sf0_frac_target_en;$sf1_code_nosharp_addr=$sf1_code_nosharp;HEAP16[$sf1_exp_gcode0_addr>>1]=$sf1_exp_gcode0;HEAP16[$sf1_frac_gcode0_addr>>1]=$sf1_frac_gcode0;$sf1_exp_coeff_addr=$sf1_exp_coeff;$sf1_frac_coeff_addr=$sf1_frac_coeff;$sf1_exp_target_en_addr=$sf1_exp_target_en;$sf1_frac_target_en_addr=$sf1_frac_target_en;$gp_limit_addr=$gp_limit;$sf0_gain_pit_addr=$sf0_gain_pit;$sf0_gain_cod_addr=$sf0_gain_cod;$sf1_gain_pit_addr=$sf1_gain_pit;$sf1_gain_cod_addr=$sf1_gain_cod;$pOverflow_addr=$pOverflow;$index=0;var $0=$sf0_frac_gcode0_addr;var $1=$pOverflow_addr;var $call=_Pow2(14,$0,$1);var $conv=$call&65535;HEAP16[$sf0_gcode0>>1]=$conv;var $2=HEAP16[$sf1_frac_gcode0_addr>>1];var $3=$pOverflow_addr;var $call14=_Pow2(14,$2,$3);var $conv15=$call14&65535;$sf1_gcode0=$conv15;var $4=HEAP16[$sf0_exp_gcode0_addr>>1];var $conv16=$4<<16>>16;var $sub=$conv16-11|0;var $conv17=$sub&65535;$exp=$conv17;var $5=$sf0_exp_coeff_addr;var $arrayidx=$5|0;var $6=HEAP16[$arrayidx>>1];var $conv18=$6<<16>>16;var $sub19=$conv18-13|0;var $conv20=$sub19&65535;var $arrayidx21=$exp_max|0;HEAP16[$arrayidx21>>1]=$conv20;var $7=$sf0_exp_coeff_addr;var $arrayidx22=$7+2|0;var $8=HEAP16[$arrayidx22>>1];var $conv23=$8<<16>>16;var $sub24=$conv23-14|0;var $conv25=$sub24&65535;var $arrayidx26=$exp_max+2|0;HEAP16[$arrayidx26>>1]=$conv25;var $9=$sf0_exp_coeff_addr;var $arrayidx27=$9+4|0;var $10=HEAP16[$arrayidx27>>1];var $conv28=$10<<16>>16;var $11=$exp;var $conv29=$11<<16>>16;var $shl=$conv29<<1;var $add=$shl+15|0;var $add30=$conv28+$add|0;var $conv31=$add30&65535;var $arrayidx32=$exp_max+4|0;HEAP16[$arrayidx32>>1]=$conv31;var $12=$sf0_exp_coeff_addr;var $arrayidx33=$12+6|0;var $13=HEAP16[$arrayidx33>>1];var $conv34=$13<<16>>16;var $14=$exp;var $conv35=$14<<16>>16;var $add36=$conv34+$conv35|0;var $conv37=$add36&65535;var $arrayidx38=$exp_max+6|0;HEAP16[$arrayidx38>>1]=$conv37;var $15=$sf0_exp_coeff_addr;var $arrayidx39=$15+8|0;var $16=HEAP16[$arrayidx39>>1];var $conv40=$16<<16>>16;var $17=$exp;var $conv41=$17<<16>>16;var $add42=$conv41+1|0;var $add43=$conv40+$add42|0;var $conv44=$add43&65535;var $arrayidx45=$exp_max+8|0;HEAP16[$arrayidx45>>1]=$conv44;var $18=HEAP16[$sf1_exp_gcode0_addr>>1];var $conv46=$18<<16>>16;var $sub47=$conv46-11|0;var $conv48=$sub47&65535;$exp=$conv48;var $19=$sf1_exp_coeff_addr;var $arrayidx49=$19|0;var $20=HEAP16[$arrayidx49>>1];var $conv50=$20<<16>>16;var $sub51=$conv50-13|0;var $conv52=$sub51&65535;var $arrayidx53=$exp_max+10|0;HEAP16[$arrayidx53>>1]=$conv52;var $21=$sf1_exp_coeff_addr;var $arrayidx54=$21+2|0;var $22=HEAP16[$arrayidx54>>1];var $conv55=$22<<16>>16;var $sub56=$conv55-14|0;var $conv57=$sub56&65535;var $arrayidx58=$exp_max+12|0;HEAP16[$arrayidx58>>1]=$conv57;var $23=$sf1_exp_coeff_addr;var $arrayidx59=$23+4|0;var $24=HEAP16[$arrayidx59>>1];var $conv60=$24<<16>>16;var $25=$exp;var $conv61=$25<<16>>16;var $shl62=$conv61<<1;var $add63=$shl62+15|0;var $add64=$conv60+$add63|0;var $conv65=$add64&65535;var $arrayidx66=$exp_max+14|0;HEAP16[$arrayidx66>>1]=$conv65;var $26=$sf1_exp_coeff_addr;var $arrayidx67=$26+6|0;var $27=HEAP16[$arrayidx67>>1];var $conv68=$27<<16>>16;var $28=$exp;var $conv69=$28<<16>>16;var $add70=$conv68+$conv69|0;var $conv71=$add70&65535;var $arrayidx72=$exp_max+16|0;HEAP16[$arrayidx72>>1]=$conv71;var $29=$sf1_exp_coeff_addr;var $arrayidx73=$29+8|0;var $30=HEAP16[$arrayidx73>>1];var $conv74=$30<<16>>16;var $31=$exp;var $conv75=$31<<16>>16;var $add76=$conv75+1|0;var $add77=$conv74+$add76|0;var $conv78=$add77&65535;var $arrayidx79=$exp_max+18|0;HEAP16[$arrayidx79>>1]=$conv78;var $32=$sf0_exp_target_en_addr;var $conv80=$32<<16>>16;var $33=$sf1_exp_target_en_addr;var $conv81=$33<<16>>16;var $sub82=$conv80-$conv81|0;var $conv83=$sub82&65535;$exp=$conv83;var $34=$exp;var $conv84=$34<<16>>16;var $cmp=($conv84|0)>0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $35=$exp;var $conv86=$35<<16>>16;var $36=$sf1_frac_target_en_addr;var $conv87=$36<<16>>16;var $shr=$conv87>>($conv86|0);var $conv88=$shr&65535;$sf1_frac_target_en_addr=$conv88;__label__=3;break;case 2:var $37=$exp;var $conv89=$37<<16>>16;var $sub90=-$conv89|0;var $38=$sf0_frac_target_en_addr;var $conv91=$38<<16>>16;var $shr92=$conv91>>($sub90|0);var $conv93=$shr92&65535;$sf0_frac_target_en_addr=$conv93;__label__=3;break;case 3:$exp=0;var $39=$sf1_frac_target_en_addr;var $40=$pOverflow_addr;var $call94=_shr_r($39,1,$40);$tmp=$call94;var $41=$tmp;var $conv95=$41<<16>>16;var $42=$sf0_frac_target_en_addr;var $conv96=$42<<16>>16;var $cmp97=($conv95|0)>($conv96|0);if($cmp97){__label__=4;break}else{__label__=5;break}case 4:$exp=1;__label__=8;break;case 5:var $43=$sf0_frac_target_en_addr;var $conv101=$43<<16>>16;var $add102=$conv101+3|0;var $shr103=$add102>>2;var $conv104=$shr103&65535;$tmp=$conv104;var $44=$tmp;var $conv105=$44<<16>>16;var $45=$sf1_frac_target_en_addr;var $conv106=$45<<16>>16;var $cmp107=($conv105|0)>($conv106|0);if($cmp107){__label__=6;break}else{__label__=7;break}case 6:$exp=-1;__label__=7;break;case 7:__label__=8;break;case 8:$i=0;__label__=9;break;case 9:var $46=$i;var $conv112=$46<<16>>16;var $cmp113=($conv112|0)<5;if($cmp113){__label__=10;break}else{__label__=12;break}case 10:var $47=$exp;var $conv115=$47<<16>>16;var $48=$i;var $idxprom=$48<<16>>16;var $arrayidx116=$exp_max+($idxprom<<1)|0;var $49=HEAP16[$arrayidx116>>1];var $conv117=$49<<16>>16;var $add118=$conv117+$conv115|0;var $conv119=$add118&65535;HEAP16[$arrayidx116>>1]=$conv119;__label__=11;break;case 11:var $50=$i;var $inc=$50+1&65535;$i=$inc;__label__=9;break;case 12:var $arrayidx120=$exp_max|0;var $51=HEAP16[$arrayidx120>>1];$exp=$51;$i=9;__label__=13;break;case 13:var $52=$i;var $conv122=$52<<16>>16;var $cmp123=($conv122|0)>0;if($cmp123){__label__=14;break}else{__label__=18;break}case 14:var $53=$i;var $idxprom126=$53<<16>>16;var $arrayidx127=$exp_max+($idxprom126<<1)|0;var $54=HEAP16[$arrayidx127>>1];var $conv128=$54<<16>>16;var $55=$exp;var $conv129=$55<<16>>16;var $cmp130=($conv128|0)>($conv129|0);if($cmp130){__label__=15;break}else{__label__=16;break}case 15:var $56=$i;var $idxprom133=$56<<16>>16;var $arrayidx134=$exp_max+($idxprom133<<1)|0;var $57=HEAP16[$arrayidx134>>1];$exp=$57;__label__=16;break;case 16:__label__=17;break;case 17:var $58=$i;var $dec=$58-1&65535;$i=$dec;__label__=13;break;case 18:var $59=$exp;var $inc138=$59+1&65535;$exp=$inc138;var $60=$sf0_frac_coeff_addr;var $arrayidx139=$60|0;$p=$arrayidx139;$i=0;__label__=19;break;case 19:var $61=$i;var $conv141=$61<<16>>16;var $cmp142=($conv141|0)<5;if($cmp142){__label__=20;break}else{__label__=22;break}case 20:var $62=$exp;var $conv145=$62<<16>>16;var $63=$i;var $idxprom146=$63<<16>>16;var $arrayidx147=$exp_max+($idxprom146<<1)|0;var $64=HEAP16[$arrayidx147>>1];var $conv148=$64<<16>>16;var $sub149=$conv145-$conv148|0;var $conv150=$sub149&65535;$tmp=$conv150;var $65=$p;var $incdec_ptr=$65+2|0;$p=$incdec_ptr;var $66=HEAP16[$65>>1];var $conv151=$66<<16>>16;var $shl152=$conv151<<16;$L_tmp=$shl152;var $67=$L_tmp;var $68=$tmp;var $69=$pOverflow_addr;var $call153=_L_shr358($67,$68,$69);$L_tmp=$call153;var $70=$L_tmp;var $shr154=$70>>16;var $conv155=$shr154&65535;var $71=$i;var $idxprom156=$71<<16>>16;var $arrayidx157=$coeff+($idxprom156<<1)|0;HEAP16[$arrayidx157>>1]=$conv155;var $72=$L_tmp;var $shr158=$72>>1;var $73=$L_tmp;var $shr159=$73>>16;var $shl160=$shr159<<15;var $sub161=$shr158-$shl160|0;var $conv162=$sub161&65535;var $74=$i;var $idxprom163=$74<<16>>16;var $arrayidx164=$coeff_lo+($idxprom163<<1)|0;HEAP16[$arrayidx164>>1]=$conv162;__label__=21;break;case 21:var $75=$i;var $inc166=$75+1&65535;$i=$inc166;__label__=19;break;case 22:var $76=$sf1_frac_coeff_addr;var $arrayidx168=$76|0;$p=$arrayidx168;__label__=23;break;case 23:var $77=$i;var $conv170=$77<<16>>16;var $cmp171=($conv170|0)<10;if($cmp171){__label__=24;break}else{__label__=26;break}case 24:var $78=$exp;var $conv174=$78<<16>>16;var $79=$i;var $idxprom175=$79<<16>>16;var $arrayidx176=$exp_max+($idxprom175<<1)|0;var $80=HEAP16[$arrayidx176>>1];var $conv177=$80<<16>>16;var $sub178=$conv174-$conv177|0;var $conv179=$sub178&65535;$tmp=$conv179;var $81=$p;var $incdec_ptr180=$81+2|0;$p=$incdec_ptr180;var $82=HEAP16[$81>>1];var $conv181=$82<<16>>16;var $shl182=$conv181<<16;$L_tmp=$shl182;var $83=$L_tmp;var $84=$tmp;var $85=$pOverflow_addr;var $call183=_L_shr358($83,$84,$85);$L_tmp=$call183;var $86=$L_tmp;var $shr184=$86>>16;var $conv185=$shr184&65535;var $87=$i;var $idxprom186=$87<<16>>16;var $arrayidx187=$coeff+($idxprom186<<1)|0;HEAP16[$arrayidx187>>1]=$conv185;var $88=$L_tmp;var $shr188=$88>>1;var $89=$L_tmp;var $shr189=$89>>16;var $shl190=$shr189<<15;var $sub191=$shr188-$shl190|0;var $conv192=$sub191&65535;var $90=$i;var $idxprom193=$90<<16>>16;var $arrayidx194=$coeff_lo+($idxprom193<<1)|0;HEAP16[$arrayidx194>>1]=$conv192;__label__=25;break;case 25:var $91=$i;var $inc196=$91+1&65535;$i=$inc196;__label__=23;break;case 26:$dist_min=2147483647;$p=_table_gain_MR475351|0;$i=0;__label__=27;break;case 27:var $92=$i;var $conv199=$92<<16>>16;var $cmp200=($conv199|0)<256;if($cmp200){__label__=28;break}else{__label__=35;break}case 28:var $93=$p;var $incdec_ptr203=$93+2|0;$p=$incdec_ptr203;var $94=HEAP16[$93>>1];$g_pitch=$94;var $95=$p;var $incdec_ptr204=$95+2|0;$p=$incdec_ptr204;var $96=HEAP16[$95>>1];$g_code=$96;var $97=$g_code;var $conv205=$97<<16>>16;var $98=HEAP16[$sf0_gcode0>>1];var $conv206=$98<<16>>16;var $mul=$conv205*$conv206|0;var $shr207=$mul>>15;var $conv208=$shr207&65535;$g_code=$conv208;var $99=$g_pitch;var $conv209=$99<<16>>16;var $100=$g_pitch;var $conv210=$100<<16>>16;var $mul211=$conv209*$conv210|0;var $shr212=$mul211>>15;var $conv213=$shr212&65535;$g2_pitch=$conv213;var $101=$g_code;var $conv214=$101<<16>>16;var $102=$g_code;var $conv215=$102<<16>>16;var $mul216=$conv214*$conv215|0;var $shr217=$mul216>>15;var $conv218=$shr217&65535;$g2_code=$conv218;var $103=$g_code;var $conv219=$103<<16>>16;var $104=$g_pitch;var $conv220=$104<<16>>16;var $mul221=$conv219*$conv220|0;var $shr222=$mul221>>15;var $conv223=$shr222&65535;$g_pit_cod=$conv223;var $arrayidx224=$coeff|0;var $105=HEAP16[$arrayidx224>>1];var $arrayidx225=$coeff_lo|0;var $106=HEAP16[$arrayidx225>>1];var $107=$g2_pitch;var $108=$pOverflow_addr;var $call226=_Mpy_32_16354($105,$106,$107,$108);var $arrayidx227=$coeff+2|0;var $109=HEAP16[$arrayidx227>>1];var $arrayidx228=$coeff_lo+2|0;var $110=HEAP16[$arrayidx228>>1];var $111=$g_pitch;var $112=$pOverflow_addr;var $call229=_Mpy_32_16354($109,$110,$111,$112);var $add230=$call226+$call229|0;var $arrayidx231=$coeff+4|0;var $113=HEAP16[$arrayidx231>>1];var $arrayidx232=$coeff_lo+4|0;var $114=HEAP16[$arrayidx232>>1];var $115=$g2_code;var $116=$pOverflow_addr;var $call233=_Mpy_32_16354($113,$114,$115,$116);var $add234=$add230+$call233|0;var $arrayidx235=$coeff+6|0;var $117=HEAP16[$arrayidx235>>1];var $arrayidx236=$coeff_lo+6|0;var $118=HEAP16[$arrayidx236>>1];var $119=$g_code;var $120=$pOverflow_addr;var $call237=_Mpy_32_16354($117,$118,$119,$120);var $add238=$add234+$call237|0;var $arrayidx239=$coeff+8|0;var $121=HEAP16[$arrayidx239>>1];var $arrayidx240=$coeff_lo+8|0;var $122=HEAP16[$arrayidx240>>1];var $123=$g_pit_cod;var $124=$pOverflow_addr;var $call241=_Mpy_32_16354($121,$122,$123,$124);var $add242=$add238+$call241|0;$L_tmp=$add242;var $125=$g_pitch;var $conv243=$125<<16>>16;var $126=$gp_limit_addr;var $conv244=$126<<16>>16;var $sub245=$conv243-$conv244|0;var $conv246=$sub245&65535;$tmp=$conv246;var $127=$p;var $incdec_ptr247=$127+2|0;$p=$incdec_ptr247;var $128=HEAP16[$127>>1];$g_pitch=$128;var $129=$p;var $incdec_ptr248=$129+2|0;$p=$incdec_ptr248;var $130=HEAP16[$129>>1];$g_code=$130;var $131=$tmp;var $conv249=$131<<16>>16;var $cmp250=($conv249|0)<=0;if($cmp250){__label__=29;break}else{__label__=33;break}case 29:var $132=$g_pitch;var $conv252=$132<<16>>16;var $133=$gp_limit_addr;var $conv253=$133<<16>>16;var $cmp254=($conv252|0)<=($conv253|0);if($cmp254){__label__=30;break}else{__label__=33;break}case 30:var $134=$g_code;var $conv257=$134<<16>>16;var $135=$sf1_gcode0;var $conv258=$135<<16>>16;var $mul259=$conv257*$conv258|0;var $shr260=$mul259>>15;var $conv261=$shr260&65535;$g_code=$conv261;var $136=$g_pitch;var $conv262=$136<<16>>16;var $137=$g_pitch;var $conv263=$137<<16>>16;var $mul264=$conv262*$conv263|0;var $shr265=$mul264>>15;var $conv266=$shr265&65535;$g2_pitch=$conv266;var $138=$g_code;var $conv267=$138<<16>>16;var $139=$g_code;var $conv268=$139<<16>>16;var $mul269=$conv267*$conv268|0;var $shr270=$mul269>>15;var $conv271=$shr270&65535;$g2_code=$conv271;var $140=$g_code;var $conv272=$140<<16>>16;var $141=$g_pitch;var $conv273=$141<<16>>16;var $mul274=$conv272*$conv273|0;var $shr275=$mul274>>15;var $conv276=$shr275&65535;$g_pit_cod=$conv276;var $arrayidx277=$coeff+10|0;var $142=HEAP16[$arrayidx277>>1];var $arrayidx278=$coeff_lo+10|0;var $143=HEAP16[$arrayidx278>>1];var $144=$g2_pitch;var $145=$pOverflow_addr;var $call279=_Mpy_32_16354($142,$143,$144,$145);var $arrayidx280=$coeff+12|0;var $146=HEAP16[$arrayidx280>>1];var $arrayidx281=$coeff_lo+12|0;var $147=HEAP16[$arrayidx281>>1];var $148=$g_pitch;var $149=$pOverflow_addr;var $call282=_Mpy_32_16354($146,$147,$148,$149);var $add283=$call279+$call282|0;var $arrayidx284=$coeff+14|0;var $150=HEAP16[$arrayidx284>>1];var $arrayidx285=$coeff_lo+14|0;var $151=HEAP16[$arrayidx285>>1];var $152=$g2_code;var $153=$pOverflow_addr;var $call286=_Mpy_32_16354($150,$151,$152,$153);var $add287=$add283+$call286|0;var $arrayidx288=$coeff+16|0;var $154=HEAP16[$arrayidx288>>1];var $arrayidx289=$coeff_lo+16|0;var $155=HEAP16[$arrayidx289>>1];var $156=$g_code;var $157=$pOverflow_addr;var $call290=_Mpy_32_16354($154,$155,$156,$157);var $add291=$add287+$call290|0;var $arrayidx292=$coeff+18|0;var $158=HEAP16[$arrayidx292>>1];var $arrayidx293=$coeff_lo+18|0;var $159=HEAP16[$arrayidx293>>1];var $160=$g_pit_cod;var $161=$pOverflow_addr;var $call294=_Mpy_32_16354($158,$159,$160,$161);var $add295=$add291+$call294|0;var $162=$L_tmp;var $add296=$162+$add295|0;$L_tmp=$add296;var $163=$L_tmp;var $164=$dist_min;var $cmp297=($163|0)<($164|0);if($cmp297){__label__=31;break}else{__label__=32;break}case 31:var $165=$L_tmp;$dist_min=$165;var $166=$i;$index=$166;__label__=32;break;case 32:__label__=33;break;case 33:__label__=34;break;case 34:var $167=$i;var $inc303=$167+1&65535;$i=$inc303;__label__=27;break;case 35:var $168=$index;var $conv305=$168<<16>>16;var $shl306=$conv305<<2;var $conv307=$shl306&65535;$tmp=$conv307;var $169=$pred_st_addr;var $170=$tmp;var $idxprom308=$170<<16>>16;var $arrayidx309=_table_gain_MR475351+($idxprom308<<1)|0;var $171=HEAP16[$sf0_gcode0>>1];var $172=HEAP16[$sf0_exp_gcode0_addr>>1];var $173=$sf0_gain_pit_addr;var $174=$sf0_gain_cod_addr;var $175=$pOverflow_addr;_MR475_quant_store_results($169,$arrayidx309,$171,$172,$173,$174,$175);var $176=$pred_st_addr;var $177=$sf1_code_nosharp_addr;var $178=$pOverflow_addr;_gc_pred($176,0,$177,$sf1_exp_gcode0_addr,$sf1_frac_gcode0_addr,$sf0_exp_gcode0_addr,$sf0_gcode0,$178);var $179=HEAP16[$sf1_frac_gcode0_addr>>1];var $180=$pOverflow_addr;var $call310=_Pow2(14,$179,$180);var $conv311=$call310&65535;$sf1_gcode0=$conv311;var $181=$tmp;var $conv312=$181<<16>>16;var $add313=$conv312+2|0;var $conv314=$add313&65535;$tmp=$conv314;var $182=$pred_st_addr;var $183=$tmp;var $idxprom315=$183<<16>>16;var $arrayidx316=_table_gain_MR475351+($idxprom315<<1)|0;var $184=$sf1_gcode0;var $185=HEAP16[$sf1_exp_gcode0_addr>>1];var $186=$sf1_gain_pit_addr;var $187=$sf1_gain_cod_addr;var $188=$pOverflow_addr;_MR475_quant_store_results($182,$arrayidx316,$184,$185,$186,$187,$188);var $189=$index;STACKTOP=__stackBase__;return $189;default:assert(0,"bad label: "+__label__)}}_MR475_gain_quant["X"]=1;function _MR475_quant_store_results($pred_st,$p,$gcode0,$exp_gcode0,$gain_pit,$gain_cod,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=8;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $pred_st_addr;var $p_addr;var $gcode0_addr;var $exp_gcode0_addr;var $gain_pit_addr;var $gain_cod_addr;var $pOverflow_addr;var $g_code;var $exp=__stackBase__;var $frac=__stackBase__+4;var $tmp;var $L_tmp;var $qua_ener_MR122;var $qua_ener;$pred_st_addr=$pred_st;$p_addr=$p;$gcode0_addr=$gcode0;$exp_gcode0_addr=$exp_gcode0;$gain_pit_addr=$gain_pit;$gain_cod_addr=$gain_cod;$pOverflow_addr=$pOverflow;var $0=$p_addr;var $incdec_ptr=$0+2|0;$p_addr=$incdec_ptr;var $1=HEAP16[$0>>1];var $2=$gain_pit_addr;HEAP16[$2>>1]=$1;var $3=$p_addr;var $incdec_ptr4=$3+2|0;$p_addr=$incdec_ptr4;var $4=HEAP16[$3>>1];$g_code=$4;var $5=$g_code;var $conv=$5<<16>>16;var $6=$gcode0_addr;var $conv5=$6<<16>>16;var $mul=$conv*$conv5|0;var $shl=$mul<<1;$L_tmp=$shl;var $7=$exp_gcode0_addr;var $conv6=$7<<16>>16;var $sub=10-$conv6|0;var $conv7=$sub&65535;$tmp=$conv7;var $8=$L_tmp;var $9=$tmp;var $10=$pOverflow_addr;var $call=_L_shr358($8,$9,$10);$L_tmp=$call;var $11=$L_tmp;var $shr=$11>>16;var $conv8=$shr&65535;var $12=$gain_cod_addr;HEAP16[$12>>1]=$conv8;var $13=$g_code;var $conv9=$13<<16>>16;var $14=$pOverflow_addr;_Log2($conv9,$exp,$frac,$14);var $15=HEAP16[$exp>>1];var $conv10=$15<<16>>16;var $sub11=$conv10-12|0;var $conv12=$sub11&65535;HEAP16[$exp>>1]=$conv12;var $16=HEAP16[$frac>>1];var $17=$pOverflow_addr;var $call13=_shr_r($16,5,$17);$tmp=$call13;var $18=HEAP16[$exp>>1];var $conv14=$18<<16>>16;var $shl15=$conv14<<10;var $conv16=$shl15&65535;$qua_ener_MR122=$conv16;var $19=$tmp;var $conv17=$19<<16>>16;var $20=$qua_ener_MR122;var $conv18=$20<<16>>16;var $add=$conv17+$conv18|0;var $conv19=$add&65535;$qua_ener_MR122=$conv19;var $21=HEAP16[$exp>>1];var $22=HEAP16[$frac>>1];var $23=$pOverflow_addr;var $call20=_Mpy_32_16354($21,$22,24660,$23);$L_tmp=$call20;var $24=$L_tmp;var $shl21=$24<<13;$L_tmp=$shl21;var $25=$L_tmp;var $add22=$25+32768|0;var $shr23=$add22>>16;var $conv24=$shr23&65535;$qua_ener=$conv24;var $26=$pred_st_addr;var $27=$qua_ener_MR122;var $28=$qua_ener;_gc_pred_update($26,$27,$28);STACKTOP=__stackBase__;return}_MR475_quant_store_results["X"]=1;function _shl363($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl363["X"]=1;function _MR795_gain_quant($adapt_st,$res,$exc,$code,$frac_coeff,$exp_coeff,$exp_code_en,$frac_code_en,$exp_gcode0,$frac_gcode0,$L_subfr,$cod_gain_frac,$cod_gain_exp,$gp_limit,$gain_pit,$gain_cod,$qua_ener_MR122,$qua_ener,$anap,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=48;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $adapt_st_addr;var $res_addr;var $exc_addr;var $code_addr;var $frac_coeff_addr;var $exp_coeff_addr;var $exp_code_en_addr;var $frac_code_en_addr;var $exp_gcode0_addr;var $frac_gcode0_addr;var $L_subfr_addr;var $cod_gain_frac_addr;var $cod_gain_exp_addr;var $gp_limit_addr;var $gain_pit_addr;var $gain_cod_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;var $anap_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $frac_en=__stackBase__;var $exp_en=__stackBase__+8;var $ltpg=__stackBase__+16;var $alpha=__stackBase__+20;var $gcode0;var $g_pitch_cand=__stackBase__+24;var $g_pitch_cind=__stackBase__+32;var $gain_pit_index=__stackBase__+40;var $gain_cod_index=__stackBase__+44;var $exp;var $gain_cod_unq;$adapt_st_addr=$adapt_st;$res_addr=$res;$exc_addr=$exc;$code_addr=$code;$frac_coeff_addr=$frac_coeff;$exp_coeff_addr=$exp_coeff;$exp_code_en_addr=$exp_code_en;$frac_code_en_addr=$frac_code_en;$exp_gcode0_addr=$exp_gcode0;$frac_gcode0_addr=$frac_gcode0;$L_subfr_addr=$L_subfr;$cod_gain_frac_addr=$cod_gain_frac;$cod_gain_exp_addr=$cod_gain_exp;$gp_limit_addr=$gp_limit;$gain_pit_addr=$gain_pit;$gain_cod_addr=$gain_cod;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;$anap_addr=$anap;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;var $0=$gp_limit_addr;var $1=$gain_pit_addr;var $arraydecay=$g_pitch_cand|0;var $arraydecay1=$g_pitch_cind|0;var $2=$common_amr_tbls_addr;var $qua_gain_pitch_ptr=$2+72|0;var $3=HEAP32[$qua_gain_pitch_ptr>>2];var $4=$pOverflow_addr;var $call=_q_gain_pitch(5,$0,$1,$arraydecay,$arraydecay1,$3,$4);HEAP16[$gain_pit_index>>1]=$call;var $5=$frac_gcode0_addr;var $6=$pOverflow_addr;var $call2=_Pow2(14,$5,$6);var $conv=$call2&65535;$gcode0=$conv;var $7=$exp_gcode0_addr;var $8=$gcode0;var $arraydecay3=$g_pitch_cand|0;var $arraydecay4=$g_pitch_cind|0;var $9=$frac_coeff_addr;var $10=$exp_coeff_addr;var $11=$gain_pit_addr;var $12=$gain_cod_addr;var $13=$qua_ener_MR122_addr;var $14=$qua_ener_addr;var $15=$common_amr_tbls_addr;var $qua_gain_code_ptr=$15+68|0;var $16=HEAP32[$qua_gain_code_ptr>>2];var $17=$pOverflow_addr;_MR795_gain_code_quant3($7,$8,$arraydecay3,$arraydecay4,$9,$10,$11,$gain_pit_index,$12,$gain_cod_index,$13,$14,$16,$17);var $18=$res_addr;var $19=$exc_addr;var $20=$code_addr;var $21=$gain_pit_addr;var $22=HEAP16[$21>>1];var $23=$L_subfr_addr;var $arraydecay5=$frac_en|0;var $arraydecay6=$exp_en|0;var $24=$pOverflow_addr;_calc_unfilt_energies($18,$19,$20,$22,$23,$arraydecay5,$arraydecay6,$ltpg,$24);var $25=$adapt_st_addr;var $26=HEAP16[$ltpg>>1];var $27=$gain_cod_addr;var $28=HEAP16[$27>>1];var $29=$pOverflow_addr;_gain_adapt($25,$26,$28,$alpha,$29);var $arrayidx=$frac_en|0;var $30=HEAP16[$arrayidx>>1];var $conv7=$30<<16>>16;var $cmp=($conv7|0)!=0;if($cmp){__label__=1;break}else{__label__=3;break}case 1:var $31=HEAP16[$alpha>>1];var $conv9=$31<<16>>16;var $cmp10=($conv9|0)>0;if($cmp10){__label__=2;break}else{__label__=3;break}case 2:var $32=$frac_code_en_addr;var $arrayidx12=$frac_en+6|0;HEAP16[$arrayidx12>>1]=$32;var $33=$exp_code_en_addr;var $arrayidx13=$exp_en+6|0;HEAP16[$arrayidx13>>1]=$33;var $34=$cod_gain_exp_addr;var $35=$exp_gcode0_addr;var $36=$pOverflow_addr;var $call14=_sub($34,$35,$36);var $conv15=$call14<<16>>16;var $add=$conv15+10|0;var $conv16=$add&65535;$exp=$conv16;var $37=$cod_gain_frac_addr;var $38=$exp;var $39=$pOverflow_addr;var $call17=_shl363($37,$38,$39);$gain_cod_unq=$call17;var $40=$gain_pit_addr;var $41=HEAP16[$40>>1];var $42=$exp_gcode0_addr;var $43=$gcode0;var $arraydecay18=$frac_en|0;var $arraydecay19=$exp_en|0;var $44=HEAP16[$alpha>>1];var $45=$gain_cod_unq;var $46=$gain_cod_addr;var $47=$qua_ener_MR122_addr;var $48=$qua_ener_addr;var $49=$common_amr_tbls_addr;var $qua_gain_code_ptr20=$49+68|0;var $50=HEAP32[$qua_gain_code_ptr20>>2];var $51=$pOverflow_addr;var $call21=_MR795_gain_code_quant_mod($41,$42,$43,$arraydecay18,$arraydecay19,$44,$45,$46,$47,$48,$50,$51);HEAP16[$gain_cod_index>>1]=$call21;__label__=3;break;case 3:var $52=HEAP16[$gain_pit_index>>1];var $53=$anap_addr;var $54=HEAP32[$53>>2];var $incdec_ptr=$54+2|0;HEAP32[$53>>2]=$incdec_ptr;HEAP16[$54>>1]=$52;var $55=HEAP16[$gain_cod_index>>1];var $56=$anap_addr;var $57=HEAP32[$56>>2];var $incdec_ptr22=$57+2|0;HEAP32[$56>>2]=$incdec_ptr22;HEAP16[$57>>1]=$55;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_MR795_gain_quant["X"]=1;function _MR795_gain_code_quant3($exp_gcode0,$gcode0,$g_pitch_cand,$g_pitch_cind,$frac_coeff,$exp_coeff,$gain_pit,$gain_pit_ind,$gain_cod,$gain_cod_ind,$qua_ener_MR122,$qua_ener,$qua_gain_code_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=52;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $exp_gcode0_addr;var $gcode0_addr;var $g_pitch_cand_addr;var $g_pitch_cind_addr;var $frac_coeff_addr;var $exp_coeff_addr;var $gain_pit_addr;var $gain_pit_ind_addr;var $gain_cod_addr;var $gain_cod_ind_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;var $qua_gain_code_ptr_addr;var $pOverflow_addr;var $p;var $i;var $j;var $cod_ind;var $pit_ind;var $e_max;var $exp_code;var $g_pitch;var $g2_pitch;var $g_code;var $g2_code_h=__stackBase__;var $g2_code_l=__stackBase__+4;var $g_pit_cod_h=__stackBase__+8;var $g_pit_cod_l=__stackBase__+12;var $coeff=__stackBase__+16;var $coeff_lo=__stackBase__+28;var $exp_max=__stackBase__+40;var $L_tmp;var $L_tmp0;var $dist_min;$exp_gcode0_addr=$exp_gcode0;$gcode0_addr=$gcode0;$g_pitch_cand_addr=$g_pitch_cand;$g_pitch_cind_addr=$g_pitch_cind;$frac_coeff_addr=$frac_coeff;$exp_coeff_addr=$exp_coeff;$gain_pit_addr=$gain_pit;$gain_pit_ind_addr=$gain_pit_ind;$gain_cod_addr=$gain_cod;$gain_cod_ind_addr=$gain_cod_ind;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;$qua_gain_code_ptr_addr=$qua_gain_code_ptr;$pOverflow_addr=$pOverflow;var $0=$exp_gcode0_addr;var $conv=$0<<16>>16;var $sub=$conv-10|0;var $conv1=$sub&65535;$exp_code=$conv1;var $1=$exp_coeff_addr;var $arrayidx=$1|0;var $2=HEAP16[$arrayidx>>1];var $conv2=$2<<16>>16;var $sub3=$conv2-13|0;var $conv4=$sub3&65535;var $arrayidx5=$exp_max|0;HEAP16[$arrayidx5>>1]=$conv4;var $3=$exp_coeff_addr;var $arrayidx6=$3+2|0;var $4=HEAP16[$arrayidx6>>1];var $conv7=$4<<16>>16;var $sub8=$conv7-14|0;var $conv9=$sub8&65535;var $arrayidx10=$exp_max+2|0;HEAP16[$arrayidx10>>1]=$conv9;var $5=$exp_coeff_addr;var $arrayidx11=$5+4|0;var $6=HEAP16[$arrayidx11>>1];var $conv12=$6<<16>>16;var $7=$exp_code;var $8=$pOverflow_addr;var $call=_shl363($7,1,$8);var $conv13=$call<<16>>16;var $add=$conv12+$conv13|0;var $add14=$add+15|0;var $conv15=$add14&65535;var $arrayidx16=$exp_max+4|0;HEAP16[$arrayidx16>>1]=$conv15;var $9=$exp_coeff_addr;var $arrayidx17=$9+6|0;var $10=HEAP16[$arrayidx17>>1];var $conv18=$10<<16>>16;var $11=$exp_code;var $conv19=$11<<16>>16;var $add20=$conv18+$conv19|0;var $conv21=$add20&65535;var $arrayidx22=$exp_max+6|0;HEAP16[$arrayidx22>>1]=$conv21;var $12=$exp_coeff_addr;var $arrayidx23=$12+8|0;var $13=HEAP16[$arrayidx23>>1];var $conv24=$13<<16>>16;var $14=$exp_code;var $conv25=$14<<16>>16;var $add26=$conv25+1|0;var $add27=$conv24+$add26|0;var $conv28=$add27&65535;var $arrayidx29=$exp_max+8|0;HEAP16[$arrayidx29>>1]=$conv28;var $arrayidx30=$exp_max|0;var $15=HEAP16[$arrayidx30>>1];$e_max=$15;$i=1;__label__=1;break;case 1:var $16=$i;var $conv31=$16<<16>>16;var $cmp=($conv31|0)<5;if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $17=$i;var $idxprom=$17<<16>>16;var $arrayidx33=$exp_max+($idxprom<<1)|0;var $18=HEAP16[$arrayidx33>>1];var $conv34=$18<<16>>16;var $19=$e_max;var $conv35=$19<<16>>16;var $cmp36=($conv34|0)>($conv35|0);if($cmp36){__label__=3;break}else{__label__=4;break}case 3:var $20=$i;var $idxprom38=$20<<16>>16;var $arrayidx39=$exp_max+($idxprom38<<1)|0;var $21=HEAP16[$arrayidx39>>1];$e_max=$21;__label__=4;break;case 4:__label__=5;break;case 5:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=1;break;case 6:var $23=$e_max;var $24=$pOverflow_addr;var $call40=_add_16($23,1,$24);$e_max=$call40;$i=0;__label__=7;break;case 7:var $25=$i;var $conv42=$25<<16>>16;var $cmp43=($conv42|0)<5;if($cmp43){__label__=8;break}else{__label__=10;break}case 8:var $26=$e_max;var $conv46=$26<<16>>16;var $27=$i;var $idxprom47=$27<<16>>16;var $arrayidx48=$exp_max+($idxprom47<<1)|0;var $28=HEAP16[$arrayidx48>>1];var $conv49=$28<<16>>16;var $sub50=$conv46-$conv49|0;var $conv51=$sub50&65535;$j=$conv51;var $29=$i;var $idxprom52=$29<<16>>16;var $30=$frac_coeff_addr;var $arrayidx53=$30+($idxprom52<<1)|0;var $31=HEAP16[$arrayidx53>>1];var $conv54=$31<<16>>16;var $shl=$conv54<<16;$L_tmp=$shl;var $32=$L_tmp;var $33=$j;var $34=$pOverflow_addr;var $call55=_L_shr367($32,$33,$34);$L_tmp=$call55;var $35=$L_tmp;var $36=$i;var $idxprom56=$36<<16>>16;var $arrayidx57=$coeff+($idxprom56<<1)|0;var $37=$i;var $idxprom58=$37<<16>>16;var $arrayidx59=$coeff_lo+($idxprom58<<1)|0;var $38=$pOverflow_addr;_L_Extract($35,$arrayidx57,$arrayidx59,$38);__label__=9;break;case 9:var $39=$i;var $inc61=$39+1&65535;$i=$inc61;__label__=7;break;case 10:$dist_min=2147483647;$cod_ind=0;$pit_ind=0;$j=0;__label__=11;break;case 11:var $40=$j;var $conv64=$40<<16>>16;var $cmp65=($conv64|0)<3;if($cmp65){__label__=12;break}else{__label__=20;break}case 12:var $41=$j;var $idxprom68=$41<<16>>16;var $42=$g_pitch_cand_addr;var $arrayidx69=$42+($idxprom68<<1)|0;var $43=HEAP16[$arrayidx69>>1];$g_pitch=$43;var $44=$g_pitch;var $45=$g_pitch;var $46=$pOverflow_addr;var $call70=_mult364($44,$45,$46);$g2_pitch=$call70;var $arrayidx71=$coeff|0;var $47=HEAP16[$arrayidx71>>1];var $arrayidx72=$coeff_lo|0;var $48=HEAP16[$arrayidx72>>1];var $49=$g2_pitch;var $50=$pOverflow_addr;var $call73=_Mpy_32_16368($47,$48,$49,$50);$L_tmp0=$call73;var $51=$L_tmp0;var $arrayidx74=$coeff+2|0;var $52=HEAP16[$arrayidx74>>1];var $arrayidx75=$coeff_lo+2|0;var $53=HEAP16[$arrayidx75>>1];var $54=$g_pitch;var $55=$pOverflow_addr;var $call76=_Mac_32_16($51,$52,$53,$54,$55);$L_tmp0=$call76;var $56=$qua_gain_code_ptr_addr;var $arrayidx77=$56|0;$p=$arrayidx77;$i=0;__label__=13;break;case 13:var $57=$i;var $conv79=$57<<16>>16;var $cmp80=($conv79|0)<32;if($cmp80){__label__=14;break}else{__label__=18;break}case 14:var $58=$p;var $incdec_ptr=$58+2|0;$p=$incdec_ptr;var $59=HEAP16[$58>>1];$g_code=$59;var $60=$p;var $incdec_ptr83=$60+2|0;$p=$incdec_ptr83;var $61=$p;var $incdec_ptr84=$61+2|0;$p=$incdec_ptr84;var $62=$g_code;var $63=$gcode0_addr;var $64=$pOverflow_addr;var $call85=_mult364($62,$63,$64);$g_code=$call85;var $65=$g_code;var $66=$g_code;var $67=$pOverflow_addr;var $call86=_L_mult365($65,$66,$67);$L_tmp=$call86;var $68=$L_tmp;var $69=$pOverflow_addr;_L_Extract($68,$g2_code_h,$g2_code_l,$69);var $70=$g_code;var $71=$g_pitch;var $72=$pOverflow_addr;var $call87=_L_mult365($70,$71,$72);$L_tmp=$call87;var $73=$L_tmp;var $74=$pOverflow_addr;_L_Extract($73,$g_pit_cod_h,$g_pit_cod_l,$74);var $75=$L_tmp0;var $arrayidx88=$coeff+4|0;var $76=HEAP16[$arrayidx88>>1];var $arrayidx89=$coeff_lo+4|0;var $77=HEAP16[$arrayidx89>>1];var $78=HEAP16[$g2_code_h>>1];var $79=HEAP16[$g2_code_l>>1];var $80=$pOverflow_addr;var $call90=_Mac_32($75,$76,$77,$78,$79,$80);$L_tmp=$call90;var $81=$L_tmp;var $arrayidx91=$coeff+6|0;var $82=HEAP16[$arrayidx91>>1];var $arrayidx92=$coeff_lo+6|0;var $83=HEAP16[$arrayidx92>>1];var $84=$g_code;var $85=$pOverflow_addr;var $call93=_Mac_32_16($81,$82,$83,$84,$85);$L_tmp=$call93;var $86=$L_tmp;var $arrayidx94=$coeff+8|0;var $87=HEAP16[$arrayidx94>>1];var $arrayidx95=$coeff_lo+8|0;var $88=HEAP16[$arrayidx95>>1];var $89=HEAP16[$g_pit_cod_h>>1];var $90=HEAP16[$g_pit_cod_l>>1];var $91=$pOverflow_addr;var $call96=_Mac_32($86,$87,$88,$89,$90,$91);$L_tmp=$call96;var $92=$L_tmp;var $93=$dist_min;var $cmp97=($92|0)<($93|0);if($cmp97){__label__=15;break}else{__label__=16;break}case 15:var $94=$L_tmp;$dist_min=$94;var $95=$i;$cod_ind=$95;var $96=$j;$pit_ind=$96;__label__=16;break;case 16:__label__=17;break;case 17:var $97=$i;var $inc102=$97+1&65535;$i=$inc102;__label__=13;break;case 18:__label__=19;break;case 19:var $98=$j;var $inc105=$98+1&65535;$j=$inc105;__label__=11;break;case 20:var $99=$cod_ind;var $conv107=$99<<16>>16;var $shl108=$conv107<<2;var $100=$cod_ind;var $conv109=$100<<16>>16;var $sub110=$shl108-$conv109|0;var $101=$qua_gain_code_ptr_addr;var $arrayidx111=$101+($sub110<<1)|0;$p=$arrayidx111;var $102=$p;var $incdec_ptr112=$102+2|0;$p=$incdec_ptr112;var $103=HEAP16[$102>>1];$g_code=$103;var $104=$p;var $incdec_ptr113=$104+2|0;$p=$incdec_ptr113;var $105=HEAP16[$104>>1];var $106=$qua_ener_MR122_addr;HEAP16[$106>>1]=$105;var $107=$p;var $108=HEAP16[$107>>1];var $109=$qua_ener_addr;HEAP16[$109>>1]=$108;var $110=$g_code;var $111=$gcode0_addr;var $112=$pOverflow_addr;var $call114=_L_mult365($110,$111,$112);$L_tmp=$call114;var $113=$L_tmp;var $114=$exp_gcode0_addr;var $conv115=$114<<16>>16;var $sub116=9-$conv115|0;var $conv117=$sub116&65535;var $115=$pOverflow_addr;var $call118=_L_shr367($113,$conv117,$115);$L_tmp=$call118;var $116=$L_tmp;var $shr=$116>>16;var $conv119=$shr&65535;var $117=$gain_cod_addr;HEAP16[$117>>1]=$conv119;var $118=$cod_ind;var $119=$gain_cod_ind_addr;HEAP16[$119>>1]=$118;var $120=$pit_ind;var $idxprom120=$120<<16>>16;var $121=$g_pitch_cand_addr;var $arrayidx121=$121+($idxprom120<<1)|0;var $122=HEAP16[$arrayidx121>>1];var $123=$gain_pit_addr;HEAP16[$123>>1]=$122;var $124=$pit_ind;var $idxprom122=$124<<16>>16;var $125=$g_pitch_cind_addr;var $arrayidx123=$125+($idxprom122<<1)|0;var $126=HEAP16[$arrayidx123>>1];var $127=$gain_pit_ind_addr;HEAP16[$127>>1]=$126;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_MR795_gain_code_quant3["X"]=1;function _mult364($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mult365($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_shl366($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_shr367($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _Mpy_32_16368($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16368["X"]=1;function _L_sub369($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _MR795_gain_code_quant_mod($gain_pit,$exp_gcode0,$gcode0,$frac_en,$exp_en,$alpha,$gain_cod_unq,$gain_cod,$qua_ener_MR122,$qua_ener,$qua_gain_code_ptr,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=56;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $gain_pit_addr;var $exp_gcode0_addr;var $gcode0_addr;var $frac_en_addr;var $exp_en_addr;var $alpha_addr;var $gain_cod_unq_addr;var $gain_cod_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;var $qua_gain_code_ptr_addr;var $pOverflow_addr;var $p;var $i;var $index;var $tmp;var $one_alpha;var $exp=__stackBase__;var $e_max;var $g2_pitch;var $g_code;var $g2_code_h=__stackBase__+4;var $g2_code_l=__stackBase__+8;var $d2_code_h=__stackBase__+12;var $d2_code_l=__stackBase__+16;var $coeff=__stackBase__+20;var $coeff_lo=__stackBase__+32;var $exp_coeff=__stackBase__+44;var $L_tmp;var $L_t0;var $L_t1;var $dist_min;var $gain_code;$gain_pit_addr=$gain_pit;$exp_gcode0_addr=$exp_gcode0;$gcode0_addr=$gcode0;$frac_en_addr=$frac_en;$exp_en_addr=$exp_en;$alpha_addr=$alpha;$gain_cod_unq_addr=$gain_cod_unq;$gain_cod_addr=$gain_cod;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;$qua_gain_code_ptr_addr=$qua_gain_code_ptr;$pOverflow_addr=$pOverflow;var $0=$gain_cod_addr;var $1=HEAP16[$0>>1];var $2=$exp_gcode0_addr;var $conv=$2<<16>>16;var $sub=10-$conv|0;var $conv18=$sub&65535;var $3=$pOverflow_addr;var $call=_shl363($1,$conv18,$3);$gain_code=$call;var $4=$gain_pit_addr;var $5=$gain_pit_addr;var $6=$pOverflow_addr;var $call19=_mult364($4,$5,$6);$g2_pitch=$call19;var $7=$alpha_addr;var $conv20=$7<<16>>16;var $sub21=32767-$conv20|0;var $conv22=$sub21&65535;var $8=$pOverflow_addr;var $call23=_add_16($conv22,1,$8);$one_alpha=$call23;var $9=$alpha_addr;var $10=$frac_en_addr;var $arrayidx=$10+2|0;var $11=HEAP16[$arrayidx>>1];var $12=$pOverflow_addr;var $call24=_L_mult365($9,$11,$12);$L_t1=$call24;var $13=$L_t1;var $14=$pOverflow_addr;var $call25=_L_shl366($13,1,$14);$L_t1=$call25;var $15=$L_t1;var $shr=$15>>16;var $conv26=$shr&65535;$tmp=$conv26;var $16=$tmp;var $17=$g2_pitch;var $18=$pOverflow_addr;var $call27=_L_mult365($16,$17,$18);$L_t1=$call27;var $19=$exp_en_addr;var $arrayidx28=$19+2|0;var $20=HEAP16[$arrayidx28>>1];var $conv29=$20<<16>>16;var $sub30=$conv29-15|0;var $conv31=$sub30&65535;var $arrayidx32=$exp_coeff+2|0;HEAP16[$arrayidx32>>1]=$conv31;var $21=$alpha_addr;var $22=$frac_en_addr;var $arrayidx33=$22+4|0;var $23=HEAP16[$arrayidx33>>1];var $24=$pOverflow_addr;var $call34=_L_mult365($21,$23,$24);var $25=$pOverflow_addr;var $call35=_L_shl366($call34,1,$25);var $shr36=$call35>>16;var $conv37=$shr36&65535;$tmp=$conv37;var $26=$tmp;var $27=$gain_pit_addr;var $28=$pOverflow_addr;var $call38=_mult364($26,$27,$28);var $arrayidx39=$coeff+4|0;HEAP16[$arrayidx39>>1]=$call38;var $29=$exp_gcode0_addr;var $conv40=$29<<16>>16;var $sub41=$conv40-10|0;var $conv42=$sub41&65535;HEAP16[$exp>>1]=$conv42;var $30=$exp_en_addr;var $arrayidx43=$30+4|0;var $31=HEAP16[$arrayidx43>>1];var $32=HEAP16[$exp>>1];var $33=$pOverflow_addr;var $call44=_add_16($31,$32,$33);var $arrayidx45=$exp_coeff+4|0;HEAP16[$arrayidx45>>1]=$call44;var $34=$alpha_addr;var $35=$frac_en_addr;var $arrayidx46=$35+6|0;var $36=HEAP16[$arrayidx46>>1];var $37=$pOverflow_addr;var $call47=_L_mult365($34,$36,$37);var $38=$pOverflow_addr;var $call48=_L_shl366($call47,1,$38);var $shr49=$call48>>16;var $conv50=$shr49&65535;var $arrayidx51=$coeff+6|0;HEAP16[$arrayidx51>>1]=$conv50;var $39=$exp_gcode0_addr;var $40=$pOverflow_addr;var $call52=_shl363($39,1,$40);var $conv53=$call52<<16>>16;var $sub54=$conv53-7|0;var $conv55=$sub54&65535;HEAP16[$exp>>1]=$conv55;var $41=$exp_en_addr;var $arrayidx56=$41+6|0;var $42=HEAP16[$arrayidx56>>1];var $43=HEAP16[$exp>>1];var $44=$pOverflow_addr;var $call57=_add_16($42,$43,$44);var $arrayidx58=$exp_coeff+6|0;HEAP16[$arrayidx58>>1]=$call57;var $45=$one_alpha;var $46=$frac_en_addr;var $arrayidx59=$46+6|0;var $47=HEAP16[$arrayidx59>>1];var $48=$pOverflow_addr;var $call60=_mult364($45,$47,$48);var $arrayidx61=$coeff+8|0;HEAP16[$arrayidx61>>1]=$call60;var $arrayidx62=$exp_coeff+6|0;var $49=HEAP16[$arrayidx62>>1];var $50=$pOverflow_addr;var $call63=_add_16($49,1,$50);var $arrayidx64=$exp_coeff+8|0;HEAP16[$arrayidx64>>1]=$call63;var $51=$alpha_addr;var $52=$frac_en_addr;var $arrayidx65=$52|0;var $53=HEAP16[$arrayidx65>>1];var $54=$pOverflow_addr;var $call66=_L_mult365($51,$53,$54);$L_tmp=$call66;var $55=$L_tmp;var $56=$pOverflow_addr;var $call67=_sqrt_l_exp($55,$exp,$56);$L_t0=$call67;var $57=HEAP16[$exp>>1];var $conv68=$57<<16>>16;var $add=$conv68+47|0;var $conv69=$add&65535;HEAP16[$exp>>1]=$conv69;var $58=$exp_en_addr;var $arrayidx70=$58|0;var $59=HEAP16[$arrayidx70>>1];var $conv71=$59<<16>>16;var $60=HEAP16[$exp>>1];var $conv72=$60<<16>>16;var $sub73=$conv71-$conv72|0;var $conv74=$sub73&65535;var $arrayidx75=$exp_coeff|0;HEAP16[$arrayidx75>>1]=$conv74;var $arrayidx76=$exp_coeff|0;var $61=HEAP16[$arrayidx76>>1];var $conv77=$61<<16>>16;var $add78=$conv77+31|0;var $conv79=$add78&65535;$e_max=$conv79;$i=1;__label__=1;break;case 1:var $62=$i;var $conv80=$62<<16>>16;var $cmp=($conv80|0)<=4;if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $63=$i;var $idxprom=$63<<16>>16;var $arrayidx82=$exp_coeff+($idxprom<<1)|0;var $64=HEAP16[$arrayidx82>>1];var $conv83=$64<<16>>16;var $65=$e_max;var $conv84=$65<<16>>16;var $cmp85=($conv83|0)>($conv84|0);if($cmp85){__label__=3;break}else{__label__=4;break}case 3:var $66=$i;var $idxprom87=$66<<16>>16;var $arrayidx88=$exp_coeff+($idxprom87<<1)|0;var $67=HEAP16[$arrayidx88>>1];$e_max=$67;__label__=4;break;case 4:__label__=5;break;case 5:var $68=$i;var $inc=$68+1&65535;$i=$inc;__label__=1;break;case 6:var $69=$e_max;var $conv89=$69<<16>>16;var $arrayidx90=$exp_coeff+2|0;var $70=HEAP16[$arrayidx90>>1];var $conv91=$70<<16>>16;var $sub92=$conv89-$conv91|0;var $conv93=$sub92&65535;$tmp=$conv93;var $71=$L_t1;var $72=$tmp;var $73=$pOverflow_addr;var $call94=_L_shr367($71,$72,$73);$L_t1=$call94;$i=2;__label__=7;break;case 7:var $74=$i;var $conv96=$74<<16>>16;var $cmp97=($conv96|0)<=4;if($cmp97){__label__=8;break}else{__label__=10;break}case 8:var $75=$e_max;var $conv100=$75<<16>>16;var $76=$i;var $idxprom101=$76<<16>>16;var $arrayidx102=$exp_coeff+($idxprom101<<1)|0;var $77=HEAP16[$arrayidx102>>1];var $conv103=$77<<16>>16;var $sub104=$conv100-$conv103|0;var $conv105=$sub104&65535;$tmp=$conv105;var $78=$i;var $idxprom106=$78<<16>>16;var $arrayidx107=$coeff+($idxprom106<<1)|0;var $79=HEAP16[$arrayidx107>>1];var $conv108=$79<<16>>16;var $shl=$conv108<<16;$L_tmp=$shl;var $80=$L_tmp;var $81=$tmp;var $82=$pOverflow_addr;var $call109=_L_shr367($80,$81,$82);$L_tmp=$call109;var $83=$L_tmp;var $84=$i;var $idxprom110=$84<<16>>16;var $arrayidx111=$coeff+($idxprom110<<1)|0;var $85=$i;var $idxprom112=$85<<16>>16;var $arrayidx113=$coeff_lo+($idxprom112<<1)|0;var $86=$pOverflow_addr;_L_Extract($83,$arrayidx111,$arrayidx113,$86);__label__=9;break;case 9:var $87=$i;var $inc115=$87+1&65535;$i=$inc115;__label__=7;break;case 10:var $88=$e_max;var $conv117=$88<<16>>16;var $sub118=$conv117-31|0;var $conv119=$sub118&65535;HEAP16[$exp>>1]=$conv119;var $89=HEAP16[$exp>>1];var $conv120=$89<<16>>16;var $arrayidx121=$exp_coeff|0;var $90=HEAP16[$arrayidx121>>1];var $conv122=$90<<16>>16;var $sub123=$conv120-$conv122|0;var $conv124=$sub123&65535;$tmp=$conv124;var $91=$L_t0;var $92=$tmp;var $93=$pOverflow_addr;var $call125=_shr($92,1,$93);var $94=$pOverflow_addr;var $call126=_L_shr367($91,$call125,$94);$L_t0=$call126;var $95=$tmp;var $conv127=$95<<16>>16;var $and=$conv127&1;var $cmp128=($and|0)!=0;if($cmp128){__label__=11;break}else{__label__=12;break}case 11:var $96=$L_t0;var $arrayidx131=$coeff|0;var $arrayidx132=$coeff_lo|0;var $97=$pOverflow_addr;_L_Extract($96,$arrayidx131,$arrayidx132,$97);var $arrayidx133=$coeff|0;var $98=HEAP16[$arrayidx133>>1];var $arrayidx134=$coeff_lo|0;var $99=HEAP16[$arrayidx134>>1];var $100=$pOverflow_addr;var $call135=_Mpy_32_16368($98,$99,23170,$100);$L_t0=$call135;__label__=12;break;case 12:$dist_min=2147483647;$index=0;var $101=$qua_gain_code_ptr_addr;var $arrayidx137=$101|0;$p=$arrayidx137;$i=0;__label__=13;break;case 13:var $102=$i;var $conv139=$102<<16>>16;var $cmp140=($conv139|0)<32;if($cmp140){__label__=14;break}else{__label__=20;break}case 14:var $103=$p;var $incdec_ptr=$103+2|0;$p=$incdec_ptr;var $104=HEAP16[$103>>1];$g_code=$104;var $105=$p;var $incdec_ptr143=$105+2|0;$p=$incdec_ptr143;var $106=$p;var $incdec_ptr144=$106+2|0;$p=$incdec_ptr144;var $107=$g_code;var $108=$gcode0_addr;var $109=$pOverflow_addr;var $call145=_mult364($107,$108,$109);$g_code=$call145;var $110=$g_code;var $conv146=$110<<16>>16;var $111=$gain_code;var $conv147=$111<<16>>16;var $cmp148=($conv146|0)>=($conv147|0);if($cmp148){__label__=15;break}else{__label__=16;break}case 15:__label__=20;break;case 16:var $112=$g_code;var $113=$g_code;var $114=$pOverflow_addr;var $call152=_L_mult365($112,$113,$114);$L_tmp=$call152;var $115=$L_tmp;var $116=$pOverflow_addr;_L_Extract($115,$g2_code_h,$g2_code_l,$116);var $117=$g_code;var $118=$gain_cod_unq_addr;var $119=$pOverflow_addr;var $call153=_sub($117,$118,$119);$tmp=$call153;var $120=$tmp;var $121=$tmp;var $122=$pOverflow_addr;var $call154=_L_mult365($120,$121,$122);$L_tmp=$call154;var $123=$L_tmp;var $124=$pOverflow_addr;_L_Extract($123,$d2_code_h,$d2_code_l,$124);var $125=$L_t1;var $arrayidx155=$coeff+4|0;var $126=HEAP16[$arrayidx155>>1];var $arrayidx156=$coeff_lo+4|0;var $127=HEAP16[$arrayidx156>>1];var $128=$g_code;var $129=$pOverflow_addr;var $call157=_Mac_32_16($125,$126,$127,$128,$129);$L_tmp=$call157;var $130=$L_tmp;var $arrayidx158=$coeff+6|0;var $131=HEAP16[$arrayidx158>>1];var $arrayidx159=$coeff_lo+6|0;var $132=HEAP16[$arrayidx159>>1];var $133=HEAP16[$g2_code_h>>1];var $134=HEAP16[$g2_code_l>>1];var $135=$pOverflow_addr;var $call160=_Mac_32($130,$131,$132,$133,$134,$135);$L_tmp=$call160;var $136=$L_tmp;var $137=$pOverflow_addr;var $call161=_sqrt_l_exp($136,$exp,$137);$L_tmp=$call161;var $138=$L_tmp;var $139=HEAP16[$exp>>1];var $140=$pOverflow_addr;var $call162=_shr($139,1,$140);var $141=$pOverflow_addr;var $call163=_L_shr367($138,$call162,$141);$L_tmp=$call163;var $142=$L_tmp;var $143=$L_t0;var $144=$pOverflow_addr;var $call164=_L_sub369($142,$143,$144);var $145=$pOverflow_addr;var $call165=_pv_round($call164,$145);$tmp=$call165;var $146=$tmp;var $147=$tmp;var $148=$pOverflow_addr;var $call166=_L_mult365($146,$147,$148);$L_tmp=$call166;var $149=$L_tmp;var $arrayidx167=$coeff+8|0;var $150=HEAP16[$arrayidx167>>1];var $arrayidx168=$coeff_lo+8|0;var $151=HEAP16[$arrayidx168>>1];var $152=HEAP16[$d2_code_h>>1];var $153=HEAP16[$d2_code_l>>1];var $154=$pOverflow_addr;var $call169=_Mac_32($149,$150,$151,$152,$153,$154);$L_tmp=$call169;var $155=$L_tmp;var $156=$dist_min;var $cmp170=($155|0)<($156|0);if($cmp170){__label__=17;break}else{__label__=18;break}case 17:var $157=$L_tmp;$dist_min=$157;var $158=$i;$index=$158;__label__=18;break;case 18:__label__=19;break;case 19:var $159=$i;var $inc175=$159+1&65535;$i=$inc175;__label__=13;break;case 20:var $160=$index;var $conv177=$160<<16>>16;var $shl178=$conv177<<2;var $161=$index;var $conv179=$161<<16>>16;var $sub180=$shl178-$conv179|0;var $162=$qua_gain_code_ptr_addr;var $arrayidx181=$162+($sub180<<1)|0;$p=$arrayidx181;var $163=$p;var $incdec_ptr182=$163+2|0;$p=$incdec_ptr182;var $164=HEAP16[$163>>1];$g_code=$164;var $165=$p;var $incdec_ptr183=$165+2|0;$p=$incdec_ptr183;var $166=HEAP16[$165>>1];var $167=$qua_ener_MR122_addr;HEAP16[$167>>1]=$166;var $168=$p;var $169=HEAP16[$168>>1];var $170=$qua_ener_addr;HEAP16[$170>>1]=$169;var $171=$g_code;var $172=$gcode0_addr;var $173=$pOverflow_addr;var $call184=_L_mult365($171,$172,$173);$L_tmp=$call184;var $174=$L_tmp;var $175=$exp_gcode0_addr;var $conv185=$175<<16>>16;var $sub186=9-$conv185|0;var $conv187=$sub186&65535;var $176=$pOverflow_addr;var $call188=_L_shr367($174,$conv187,$176);$L_tmp=$call188;var $177=$L_tmp;var $shr189=$177>>16;var $conv190=$shr189&65535;var $178=$gain_cod_addr;HEAP16[$178>>1]=$conv190;var $179=$index;STACKTOP=__stackBase__;return $179;default:assert(0,"bad label: "+__label__)}}_MR795_gain_code_quant_mod["X"]=1;function _Mac_32_16($L_var3,$L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;var $L_var3_addr;var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $product;$L_var3_addr=$L_var3;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var3_addr;var $1=$L_var1_hi_addr;var $2=$var2_addr;var $3=$pOverflow_addr;var $call=_L_mac370($0,$1,$2,$3);$L_var3_addr=$call;var $4=$L_var1_lo_addr;var $5=$var2_addr;var $6=$pOverflow_addr;var $call1=_mult364($4,$5,$6);$product=$call1;var $7=$L_var3_addr;var $8=$product;var $9=$pOverflow_addr;var $call2=_L_mac370($7,$8,1,$9);$L_var3_addr=$call2;var $10=$L_var3_addr;return $10}function _Mac_32($L_var3,$L_var1_hi,$L_var1_lo,$L_var2_hi,$L_var2_lo,$pOverflow){var __label__;var $L_var3_addr;var $L_var1_hi_addr;var $L_var1_lo_addr;var $L_var2_hi_addr;var $L_var2_lo_addr;var $pOverflow_addr;var $product;$L_var3_addr=$L_var3;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$L_var2_hi_addr=$L_var2_hi;$L_var2_lo_addr=$L_var2_lo;$pOverflow_addr=$pOverflow;var $0=$L_var3_addr;var $1=$L_var1_hi_addr;var $2=$L_var2_hi_addr;var $3=$pOverflow_addr;var $call=_L_mac370($0,$1,$2,$3);$L_var3_addr=$call;var $4=$L_var1_hi_addr;var $5=$L_var2_lo_addr;var $6=$pOverflow_addr;var $call1=_mult364($4,$5,$6);$product=$call1;var $7=$L_var3_addr;var $8=$product;var $9=$pOverflow_addr;var $call2=_L_mac370($7,$8,1,$9);$L_var3_addr=$call2;var $10=$L_var1_lo_addr;var $11=$L_var2_hi_addr;var $12=$pOverflow_addr;var $call3=_mult364($10,$11,$12);$product=$call3;var $13=$L_var3_addr;var $14=$product;var $15=$pOverflow_addr;var $call4=_L_mac370($13,$14,1,$15);$L_var3_addr=$call4;var $16=$L_var3_addr;return $16}function _L_mac370($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac370["X"]=1;function _shl373($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl373["X"]=1;function _abs_s376($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _Vq_subvec4($lsf_r1,$dico,$wf1,$dico_size,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_r1_addr;var $dico_addr;var $wf1_addr;var $dico_size_addr;var $pOverflow_addr;var $i;var $temp;var $p_dico;var $index;var $dist_min;var $dist;var $lsf_r1_0;var $lsf_r1_1;var $lsf_r1_2;var $lsf_r1_3;var $wf1_0;var $wf1_1;var $wf1_2;var $wf1_3;$lsf_r1_addr=$lsf_r1;$dico_addr=$dico;$wf1_addr=$wf1;$dico_size_addr=$dico_size;$pOverflow_addr=$pOverflow;$index=0;var $0=$pOverflow_addr;$dist_min=2147483647;var $1=$dico_addr;$p_dico=$1;var $2=$lsf_r1_addr;var $arrayidx=$2|0;var $3=HEAP16[$arrayidx>>1];$lsf_r1_0=$3;var $4=$lsf_r1_addr;var $arrayidx1=$4+2|0;var $5=HEAP16[$arrayidx1>>1];$lsf_r1_1=$5;var $6=$lsf_r1_addr;var $arrayidx2=$6+4|0;var $7=HEAP16[$arrayidx2>>1];$lsf_r1_2=$7;var $8=$lsf_r1_addr;var $arrayidx3=$8+6|0;var $9=HEAP16[$arrayidx3>>1];$lsf_r1_3=$9;var $10=$wf1_addr;var $arrayidx4=$10|0;var $11=HEAP16[$arrayidx4>>1];$wf1_0=$11;var $12=$wf1_addr;var $arrayidx5=$12+2|0;var $13=HEAP16[$arrayidx5>>1];$wf1_1=$13;var $14=$wf1_addr;var $arrayidx6=$14+4|0;var $15=HEAP16[$arrayidx6>>1];$wf1_2=$15;var $16=$wf1_addr;var $arrayidx7=$16+6|0;var $17=HEAP16[$arrayidx7>>1];$wf1_3=$17;$i=0;__label__=1;break;case 1:var $18=$i;var $conv=$18<<16>>16;var $19=$dico_size_addr;var $conv8=$19<<16>>16;var $cmp=($conv|0)<($conv8|0);if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $20=$lsf_r1_0;var $conv10=$20<<16>>16;var $21=$p_dico;var $incdec_ptr=$21+2|0;$p_dico=$incdec_ptr;var $22=HEAP16[$21>>1];var $conv11=$22<<16>>16;var $sub=$conv10-$conv11|0;var $conv12=$sub&65535;$temp=$conv12;var $23=$wf1_0;var $conv13=$23<<16>>16;var $24=$temp;var $conv14=$24<<16>>16;var $mul=$conv13*$conv14|0;var $shr=$mul>>15;var $conv15=$shr&65535;$temp=$conv15;var $25=$temp;var $conv16=$25<<16>>16;var $26=$temp;var $conv17=$26<<16>>16;var $mul18=$conv16*$conv17|0;$dist=$mul18;var $27=$lsf_r1_1;var $conv19=$27<<16>>16;var $28=$p_dico;var $incdec_ptr20=$28+2|0;$p_dico=$incdec_ptr20;var $29=HEAP16[$28>>1];var $conv21=$29<<16>>16;var $sub22=$conv19-$conv21|0;var $conv23=$sub22&65535;$temp=$conv23;var $30=$wf1_1;var $conv24=$30<<16>>16;var $31=$temp;var $conv25=$31<<16>>16;var $mul26=$conv24*$conv25|0;var $shr27=$mul26>>15;var $conv28=$shr27&65535;$temp=$conv28;var $32=$temp;var $conv29=$32<<16>>16;var $33=$temp;var $conv30=$33<<16>>16;var $mul31=$conv29*$conv30|0;var $34=$dist;var $add=$34+$mul31|0;$dist=$add;var $35=$lsf_r1_2;var $conv32=$35<<16>>16;var $36=$p_dico;var $incdec_ptr33=$36+2|0;$p_dico=$incdec_ptr33;var $37=HEAP16[$36>>1];var $conv34=$37<<16>>16;var $sub35=$conv32-$conv34|0;var $conv36=$sub35&65535;$temp=$conv36;var $38=$wf1_2;var $conv37=$38<<16>>16;var $39=$temp;var $conv38=$39<<16>>16;var $mul39=$conv37*$conv38|0;var $shr40=$mul39>>15;var $conv41=$shr40&65535;$temp=$conv41;var $40=$temp;var $conv42=$40<<16>>16;var $41=$temp;var $conv43=$41<<16>>16;var $mul44=$conv42*$conv43|0;var $42=$dist;var $add45=$42+$mul44|0;$dist=$add45;var $43=$lsf_r1_3;var $conv46=$43<<16>>16;var $44=$p_dico;var $incdec_ptr47=$44+2|0;$p_dico=$incdec_ptr47;var $45=HEAP16[$44>>1];var $conv48=$45<<16>>16;var $sub49=$conv46-$conv48|0;var $conv50=$sub49&65535;$temp=$conv50;var $46=$wf1_3;var $conv51=$46<<16>>16;var $47=$temp;var $conv52=$47<<16>>16;var $mul53=$conv51*$conv52|0;var $shr54=$mul53>>15;var $conv55=$shr54&65535;$temp=$conv55;var $48=$temp;var $conv56=$48<<16>>16;var $49=$temp;var $conv57=$49<<16>>16;var $mul58=$conv56*$conv57|0;var $50=$dist;var $add59=$50+$mul58|0;$dist=$add59;var $51=$dist;var $52=$dist_min;var $cmp60=($51|0)<($52|0);if($cmp60){__label__=3;break}else{__label__=4;break}case 3:var $53=$dist;$dist_min=$53;var $54=$i;$index=$54;__label__=4;break;case 4:__label__=5;break;case 5:var $55=$i;var $inc=$55+1&65535;$i=$inc;__label__=1;break;case 6:var $56=$dico_addr;var $57=$index;var $conv62=$57<<16>>16;var $shl=$conv62<<2;var $add_ptr=$56+($shl<<1)|0;$p_dico=$add_ptr;var $58=$p_dico;var $incdec_ptr63=$58+2|0;$p_dico=$incdec_ptr63;var $59=HEAP16[$58>>1];var $60=$lsf_r1_addr;var $incdec_ptr64=$60+2|0;$lsf_r1_addr=$incdec_ptr64;HEAP16[$60>>1]=$59;var $61=$p_dico;var $incdec_ptr65=$61+2|0;$p_dico=$incdec_ptr65;var $62=HEAP16[$61>>1];var $63=$lsf_r1_addr;var $incdec_ptr66=$63+2|0;$lsf_r1_addr=$incdec_ptr66;HEAP16[$63>>1]=$62;var $64=$p_dico;var $incdec_ptr67=$64+2|0;$p_dico=$incdec_ptr67;var $65=HEAP16[$64>>1];var $66=$lsf_r1_addr;var $incdec_ptr68=$66+2|0;$lsf_r1_addr=$incdec_ptr68;HEAP16[$66>>1]=$65;var $67=$p_dico;var $68=HEAP16[$67>>1];var $69=$lsf_r1_addr;HEAP16[$69>>1]=$68;var $70=$index;return $70;default:assert(0,"bad label: "+__label__)}}_Vq_subvec4["X"]=1;function _q_gain_code($mode,$exp_gcode0,$frac_gcode0,$gain,$qua_ener_MR122,$qua_ener,$qua_gain_code_ptr,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $exp_gcode0_addr;var $frac_gcode0_addr;var $gain_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;var $qua_gain_code_ptr_addr;var $pOverflow_addr;var $p;var $i;var $index;var $gcode0;var $err;var $err_min;var $g_q0;var $temp;$mode_addr=$mode;$exp_gcode0_addr=$exp_gcode0;$frac_gcode0_addr=$frac_gcode0;$gain_addr=$gain;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;$qua_gain_code_ptr_addr=$qua_gain_code_ptr;$pOverflow_addr=$pOverflow;var $0=$mode_addr;var $cmp=($0|0)==7;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$gain_addr;var $2=HEAP16[$1>>1];var $conv=$2<<16>>16;var $shr=$conv>>1;var $conv1=$shr&65535;$g_q0=$conv1;__label__=3;break;case 2:var $3=$gain_addr;var $4=HEAP16[$3>>1];$g_q0=$4;__label__=3;break;case 3:var $5=$exp_gcode0_addr;var $6=$frac_gcode0_addr;var $7=$pOverflow_addr;var $call=_Pow2($5,$6,$7);var $conv2=$call&65535;$gcode0=$conv2;var $8=$mode_addr;var $cmp3=($8|0)==7;if($cmp3){__label__=4;break}else{__label__=5;break}case 4:var $9=$gcode0;var $10=$pOverflow_addr;var $call6=_shl373($9,4,$10);$gcode0=$call6;__label__=6;break;case 5:var $11=$gcode0;var $12=$pOverflow_addr;var $call8=_shl373($11,5,$12);$gcode0=$call8;__label__=6;break;case 6:var $13=$qua_gain_code_ptr_addr;var $arrayidx=$13|0;$p=$arrayidx;var $14=$gcode0;var $conv10=$14<<16>>16;var $15=$p;var $incdec_ptr=$15+2|0;$p=$incdec_ptr;var $16=HEAP16[$15>>1];var $conv11=$16<<16>>16;var $mul=$conv10*$conv11|0;var $shr12=$mul>>15;var $conv13=$shr12&65535;$err_min=$conv13;var $17=$g_q0;var $conv14=$17<<16>>16;var $18=$err_min;var $conv15=$18<<16>>16;var $sub=$conv14-$conv15|0;var $conv16=$sub&65535;$err_min=$conv16;var $19=$err_min;var $conv17=$19<<16>>16;var $cmp18=($conv17|0)<0;if($cmp18){__label__=7;break}else{__label__=8;break}case 7:var $20=$err_min;var $conv21=$20<<16>>16;var $sub22=-$conv21|0;var $conv23=$sub22&65535;$err_min=$conv23;__label__=8;break;case 8:var $21=$p;var $add_ptr=$21+4|0;$p=$add_ptr;$index=0;$i=1;__label__=9;break;case 9:var $22=$i;var $conv25=$22<<16>>16;var $cmp26=($conv25|0)<32;if($cmp26){__label__=10;break}else{__label__=16;break}case 10:var $23=$gcode0;var $conv28=$23<<16>>16;var $24=$p;var $incdec_ptr29=$24+2|0;$p=$incdec_ptr29;var $25=HEAP16[$24>>1];var $conv30=$25<<16>>16;var $mul31=$conv28*$conv30|0;var $shr32=$mul31>>15;var $conv33=$shr32&65535;$err=$conv33;var $26=$g_q0;var $conv34=$26<<16>>16;var $27=$err;var $conv35=$27<<16>>16;var $sub36=$conv34-$conv35|0;var $conv37=$sub36&65535;$err=$conv37;var $28=$err;var $conv38=$28<<16>>16;var $cmp39=($conv38|0)<0;if($cmp39){__label__=11;break}else{__label__=12;break}case 11:var $29=$err;var $conv42=$29<<16>>16;var $sub43=-$conv42|0;var $conv44=$sub43&65535;$err=$conv44;__label__=12;break;case 12:var $30=$p;var $add_ptr46=$30+4|0;$p=$add_ptr46;var $31=$err;var $conv47=$31<<16>>16;var $32=$err_min;var $conv48=$32<<16>>16;var $cmp49=($conv47|0)<($conv48|0);if($cmp49){__label__=13;break}else{__label__=14;break}case 13:var $33=$err;$err_min=$33;var $34=$i;$index=$34;__label__=14;break;case 14:__label__=15;break;case 15:var $35=$i;var $inc=$35+1&65535;$i=$inc;__label__=9;break;case 16:var $36=$index;var $conv53=$36<<16>>16;var $37=$index;var $conv54=$37<<16>>16;var $shl=$conv54<<1;var $add=$conv53+$shl|0;var $conv55=$add&65535;$temp=$conv55;var $38=$temp;var $idxprom=$38<<16>>16;var $39=$qua_gain_code_ptr_addr;var $arrayidx56=$39+($idxprom<<1)|0;$p=$arrayidx56;var $40=$gcode0;var $conv57=$40<<16>>16;var $41=$p;var $incdec_ptr58=$41+2|0;$p=$incdec_ptr58;var $42=HEAP16[$41>>1];var $conv59=$42<<16>>16;var $mul60=$conv57*$conv59|0;var $shr61=$mul60>>15;var $conv62=$shr61&65535;$temp=$conv62;var $43=$mode_addr;var $cmp63=($43|0)==7;if($cmp63){__label__=17;break}else{__label__=18;break}case 17:var $44=$temp;var $conv66=$44<<16>>16;var $shl67=$conv66<<1;var $conv68=$shl67&65535;var $45=$gain_addr;HEAP16[$45>>1]=$conv68;__label__=19;break;case 18:var $46=$temp;var $47=$gain_addr;HEAP16[$47>>1]=$46;__label__=19;break;case 19:var $48=$p;var $incdec_ptr71=$48+2|0;$p=$incdec_ptr71;var $49=HEAP16[$48>>1];var $50=$qua_ener_MR122_addr;HEAP16[$50>>1]=$49;var $51=$p;var $52=HEAP16[$51>>1];var $53=$qua_ener_addr;HEAP16[$53>>1]=$52;var $54=$index;return $54;default:assert(0,"bad label: "+__label__)}}_q_gain_code["X"]=1;function _q_gain_pitch($mode,$gp_limit,$gain,$gain_cand,$gain_cind,$qua_gain_pitch_ptr,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $gp_limit_addr;var $gain_addr;var $gain_cand_addr;var $gain_cind_addr;var $qua_gain_pitch_ptr_addr;var $pOverflow_addr;var $i;var $index;var $err;var $err_min;var $ii;$mode_addr=$mode;$gp_limit_addr=$gp_limit;$gain_addr=$gain;$gain_cand_addr=$gain_cand;$gain_cind_addr=$gain_cind;$qua_gain_pitch_ptr_addr=$qua_gain_pitch_ptr;$pOverflow_addr=$pOverflow;var $0=$gain_addr;var $1=HEAP16[$0>>1];var $2=$qua_gain_pitch_ptr_addr;var $arrayidx=$2|0;var $3=HEAP16[$arrayidx>>1];var $4=$pOverflow_addr;var $call=_sub($1,$3,$4);$err_min=$call;var $5=$err_min;var $call1=_abs_s376($5);$err_min=$call1;$index=0;$i=1;__label__=1;break;case 1:var $6=$i;var $conv=$6<<16>>16;var $cmp=($conv|0)<16;if($cmp){__label__=2;break}else{__label__=8;break}case 2:var $7=$i;var $idxprom=$7<<16>>16;var $8=$qua_gain_pitch_ptr_addr;var $arrayidx3=$8+($idxprom<<1)|0;var $9=HEAP16[$arrayidx3>>1];var $conv4=$9<<16>>16;var $10=$gp_limit_addr;var $conv5=$10<<16>>16;var $cmp6=($conv4|0)<=($conv5|0);if($cmp6){__label__=3;break}else{__label__=6;break}case 3:var $11=$gain_addr;var $12=HEAP16[$11>>1];var $13=$i;var $idxprom8=$13<<16>>16;var $14=$qua_gain_pitch_ptr_addr;var $arrayidx9=$14+($idxprom8<<1)|0;var $15=HEAP16[$arrayidx9>>1];var $16=$pOverflow_addr;var $call10=_sub($12,$15,$16);$err=$call10;var $17=$err;var $call11=_abs_s376($17);$err=$call11;var $18=$err;var $conv12=$18<<16>>16;var $19=$err_min;var $conv13=$19<<16>>16;var $cmp14=($conv12|0)<($conv13|0);if($cmp14){__label__=4;break}else{__label__=5;break}case 4:var $20=$err;$err_min=$20;var $21=$i;$index=$21;__label__=5;break;case 5:__label__=6;break;case 6:__label__=7;break;case 7:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=1;break;case 8:var $23=$mode_addr;var $cmp18=($23|0)==5;if($cmp18){__label__=9;break}else{__label__=21;break}case 9:var $24=$index;var $conv21=$24<<16>>16;var $cmp22=($conv21|0)==0;if($cmp22){__label__=10;break}else{__label__=11;break}case 10:var $25=$index;$ii=$25;__label__=16;break;case 11:var $26=$index;var $conv25=$26<<16>>16;var $cmp26=($conv25|0)==15;if($cmp26){__label__=13;break}else{__label__=12;break}case 12:var $27=$index;var $conv28=$27<<16>>16;var $add=$conv28+1|0;var $28=$qua_gain_pitch_ptr_addr;var $arrayidx29=$28+($add<<1)|0;var $29=HEAP16[$arrayidx29>>1];var $conv30=$29<<16>>16;var $30=$gp_limit_addr;var $conv31=$30<<16>>16;var $cmp32=($conv30|0)>($conv31|0);if($cmp32){__label__=13;break}else{__label__=14;break}case 13:var $31=$index;var $conv35=$31<<16>>16;var $sub=$conv35-2|0;var $conv36=$sub&65535;$ii=$conv36;__label__=15;break;case 14:var $32=$index;var $conv38=$32<<16>>16;var $sub39=$conv38-1|0;var $conv40=$sub39&65535;$ii=$conv40;__label__=15;break;case 15:__label__=16;break;case 16:$i=0;__label__=17;break;case 17:var $33=$i;var $conv44=$33<<16>>16;var $cmp45=($conv44|0)<3;if($cmp45){__label__=18;break}else{__label__=20;break}case 18:var $34=$ii;var $35=$i;var $idxprom48=$35<<16>>16;var $36=$gain_cind_addr;var $arrayidx49=$36+($idxprom48<<1)|0;HEAP16[$arrayidx49>>1]=$34;var $37=$ii;var $idxprom50=$37<<16>>16;var $38=$qua_gain_pitch_ptr_addr;var $arrayidx51=$38+($idxprom50<<1)|0;var $39=HEAP16[$arrayidx51>>1];var $40=$i;var $idxprom52=$40<<16>>16;var $41=$gain_cand_addr;var $arrayidx53=$41+($idxprom52<<1)|0;HEAP16[$arrayidx53>>1]=$39;var $42=$ii;var $conv54=$42<<16>>16;var $add55=$conv54+1|0;var $conv56=$add55&65535;$ii=$conv56;__label__=19;break;case 19:var $43=$i;var $inc58=$43+1&65535;$i=$inc58;__label__=17;break;case 20:var $44=$index;var $idxprom60=$44<<16>>16;var $45=$qua_gain_pitch_ptr_addr;var $arrayidx61=$45+($idxprom60<<1)|0;var $46=HEAP16[$arrayidx61>>1];var $47=$gain_addr;HEAP16[$47>>1]=$46;__label__=25;break;case 21:var $48=$mode_addr;var $cmp63=($48|0)==7;if($cmp63){__label__=22;break}else{__label__=23;break}case 22:var $49=$index;var $idxprom66=$49<<16>>16;var $50=$qua_gain_pitch_ptr_addr;var $arrayidx67=$50+($idxprom66<<1)|0;var $51=HEAP16[$arrayidx67>>1];var $conv68=$51<<16>>16;var $and=$conv68&65532;var $conv69=$and&65535;var $52=$gain_addr;HEAP16[$52>>1]=$conv69;__label__=24;break;case 23:var $53=$index;var $idxprom71=$53<<16>>16;var $54=$qua_gain_pitch_ptr_addr;var $arrayidx72=$54+($idxprom71<<1)|0;var $55=HEAP16[$arrayidx72>>1];var $56=$gain_addr;HEAP16[$56>>1]=$55;__label__=24;break;case 24:__label__=25;break;case 25:var $57=$index;return $57;default:assert(0,"bad label: "+__label__)}}_q_gain_pitch["X"]=1;function _Test_Vq_subvec4($lsf_r1,$dico,$wf1,$dico_size,$pOverflow){var __label__;var $lsf_r1_addr;var $dico_addr;var $wf1_addr;var $dico_size_addr;var $pOverflow_addr;var $tst_index4;$lsf_r1_addr=$lsf_r1;$dico_addr=$dico;$wf1_addr=$wf1;$dico_size_addr=$dico_size;$pOverflow_addr=$pOverflow;$tst_index4=0;var $0=$lsf_r1_addr;var $1=$dico_addr;var $2=$wf1_addr;var $3=$dico_size_addr;var $4=$pOverflow_addr;var $call=_Vq_subvec4($0,$1,$2,$3,$4);$tst_index4=$call;var $5=$tst_index4;return $5}function _Test_Vq_subvec3($lsf_r1,$dico,$wf1,$dico_size,$use_half,$pOverflow){var __label__;var $lsf_r1_addr;var $dico_addr;var $wf1_addr;var $dico_size_addr;var $use_half_addr;var $pOverflow_addr;var $tst_index3;$lsf_r1_addr=$lsf_r1;$dico_addr=$dico;$wf1_addr=$wf1;$dico_size_addr=$dico_size;$use_half_addr=$use_half;$pOverflow_addr=$pOverflow;$tst_index3=0;var $0=$lsf_r1_addr;var $1=$dico_addr;var $2=$wf1_addr;var $3=$dico_size_addr;var $4=$use_half_addr;var $5=$pOverflow_addr;var $call=_Vq_subvec3($0,$1,$2,$3,$4,$5);$tst_index3=$call;var $6=$tst_index3;return $6}function _Vq_subvec3($lsf_r1,$dico,$wf1,$dico_size,$use_half,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_r1_addr;var $dico_addr;var $wf1_addr;var $dico_size_addr;var $use_half_addr;var $pOverflow_addr;var $i;var $temp;var $p_dico;var $p_dico_index;var $index;var $dist_min;var $dist;var $lsf_r1_0;var $lsf_r1_1;var $lsf_r1_2;var $wf1_0;var $wf1_1;var $wf1_2;$lsf_r1_addr=$lsf_r1;$dico_addr=$dico;$wf1_addr=$wf1;$dico_size_addr=$dico_size;$use_half_addr=$use_half;$pOverflow_addr=$pOverflow;$p_dico_index=0;$index=0;var $0=$pOverflow_addr;$dist_min=2147483647;var $1=$dico_addr;$p_dico=$1;var $2=$lsf_r1_addr;var $arrayidx=$2|0;var $3=HEAP16[$arrayidx>>1];$lsf_r1_0=$3;var $4=$lsf_r1_addr;var $arrayidx1=$4+2|0;var $5=HEAP16[$arrayidx1>>1];$lsf_r1_1=$5;var $6=$lsf_r1_addr;var $arrayidx2=$6+4|0;var $7=HEAP16[$arrayidx2>>1];$lsf_r1_2=$7;var $8=$wf1_addr;var $arrayidx3=$8|0;var $9=HEAP16[$arrayidx3>>1];$wf1_0=$9;var $10=$wf1_addr;var $arrayidx4=$10+2|0;var $11=HEAP16[$arrayidx4>>1];$wf1_1=$11;var $12=$wf1_addr;var $arrayidx5=$12+4|0;var $13=HEAP16[$arrayidx5>>1];$wf1_2=$13;var $14=$use_half_addr;var $cmp=($14|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$p_dico_index=3;__label__=2;break;case 2:$i=0;__label__=3;break;case 3:var $15=$i;var $conv=$15<<16>>16;var $16=$dico_size_addr;var $conv6=$16<<16>>16;var $cmp7=($conv|0)<($conv6|0);if($cmp7){__label__=4;break}else{__label__=8;break}case 4:var $17=$lsf_r1_0;var $conv9=$17<<16>>16;var $18=$p_dico;var $incdec_ptr=$18+2|0;$p_dico=$incdec_ptr;var $19=HEAP16[$18>>1];var $conv10=$19<<16>>16;var $sub=$conv9-$conv10|0;var $conv11=$sub&65535;$temp=$conv11;var $20=$wf1_0;var $conv12=$20<<16>>16;var $21=$temp;var $conv13=$21<<16>>16;var $mul=$conv12*$conv13|0;var $shr=$mul>>15;var $conv14=$shr&65535;$temp=$conv14;var $22=$temp;var $conv15=$22<<16>>16;var $23=$temp;var $conv16=$23<<16>>16;var $mul17=$conv15*$conv16|0;$dist=$mul17;var $24=$lsf_r1_1;var $conv18=$24<<16>>16;var $25=$p_dico;var $incdec_ptr19=$25+2|0;$p_dico=$incdec_ptr19;var $26=HEAP16[$25>>1];var $conv20=$26<<16>>16;var $sub21=$conv18-$conv20|0;var $conv22=$sub21&65535;$temp=$conv22;var $27=$wf1_1;var $conv23=$27<<16>>16;var $28=$temp;var $conv24=$28<<16>>16;var $mul25=$conv23*$conv24|0;var $shr26=$mul25>>15;var $conv27=$shr26&65535;$temp=$conv27;var $29=$temp;var $conv28=$29<<16>>16;var $30=$temp;var $conv29=$30<<16>>16;var $mul30=$conv28*$conv29|0;var $31=$dist;var $add=$31+$mul30|0;$dist=$add;var $32=$lsf_r1_2;var $conv31=$32<<16>>16;var $33=$p_dico;var $incdec_ptr32=$33+2|0;$p_dico=$incdec_ptr32;var $34=HEAP16[$33>>1];var $conv33=$34<<16>>16;var $sub34=$conv31-$conv33|0;var $conv35=$sub34&65535;$temp=$conv35;var $35=$wf1_2;var $conv36=$35<<16>>16;var $36=$temp;var $conv37=$36<<16>>16;var $mul38=$conv36*$conv37|0;var $shr39=$mul38>>15;var $conv40=$shr39&65535;$temp=$conv40;var $37=$temp;var $conv41=$37<<16>>16;var $38=$temp;var $conv42=$38<<16>>16;var $mul43=$conv41*$conv42|0;var $39=$dist;var $add44=$39+$mul43|0;$dist=$add44;var $40=$dist;var $41=$dist_min;var $cmp45=($40|0)<($41|0);if($cmp45){__label__=5;break}else{__label__=6;break}case 5:var $42=$dist;$dist_min=$42;var $43=$i;$index=$43;__label__=6;break;case 6:var $44=$p_dico;var $45=$p_dico_index;var $conv49=$45<<16>>16;var $add_ptr=$44+($conv49<<1)|0;$p_dico=$add_ptr;__label__=7;break;case 7:var $46=$i;var $inc=$46+1&65535;$i=$inc;__label__=3;break;case 8:var $47=$dico_addr;var $48=$index;var $conv50=$48<<16>>16;var $mul51=$conv50*3|0;var $add_ptr52=$47+($mul51<<1)|0;$p_dico=$add_ptr52;var $49=$use_half_addr;var $cmp53=($49|0)!=0;if($cmp53){__label__=9;break}else{__label__=10;break}case 9:var $50=$index;var $conv56=$50<<16>>16;var $mul57=$conv56*3|0;var $51=$p_dico;var $add_ptr58=$51+($mul57<<1)|0;$p_dico=$add_ptr58;__label__=10;break;case 10:var $52=$p_dico;var $incdec_ptr60=$52+2|0;$p_dico=$incdec_ptr60;var $53=HEAP16[$52>>1];var $54=$lsf_r1_addr;var $incdec_ptr61=$54+2|0;$lsf_r1_addr=$incdec_ptr61;HEAP16[$54>>1]=$53;var $55=$p_dico;var $incdec_ptr62=$55+2|0;$p_dico=$incdec_ptr62;var $56=HEAP16[$55>>1];var $57=$lsf_r1_addr;var $incdec_ptr63=$57+2|0;$lsf_r1_addr=$incdec_ptr63;HEAP16[$57>>1]=$56;var $58=$p_dico;var $59=HEAP16[$58>>1];var $60=$lsf_r1_addr;HEAP16[$60>>1]=$59;var $61=$index;return $61;default:assert(0,"bad label: "+__label__)}}_Vq_subvec3["X"]=1;function _Q_plsf_3($st,$mode,$lsp1,$lsp1_q,$indice,$pred_init_i,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=140;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $lsp1_addr;var $lsp1_q_addr;var $indice_addr;var $pred_init_i_addr;var $pOverflow_addr;var $i;var $j;var $lsf1=__stackBase__;var $wf1=__stackBase__+20;var $lsf_p=__stackBase__+40;var $lsf_r1=__stackBase__+60;var $lsf1_q=__stackBase__+80;var $L_pred_init_err;var $L_min_pred_init_err;var $L_temp;var $temp_r1=__stackBase__+100;var $temp_p=__stackBase__+120;var $temp;$st_addr=$st;$mode_addr=$mode;$lsp1_addr=$lsp1;$lsp1_q_addr=$lsp1_q;$indice_addr=$indice;$pred_init_i_addr=$pred_init_i;$pOverflow_addr=$pOverflow;var $0=$lsp1_addr;var $arraydecay=$lsf1|0;var $1=$pOverflow_addr;_Lsp_lsf($0,$arraydecay,10,$1);var $arraydecay1=$lsf1|0;var $arraydecay2=$wf1|0;var $2=$pOverflow_addr;_Lsf_wt($arraydecay1,$arraydecay2,$2);var $3=$mode_addr;var $cmp=($3|0)!=8;if($cmp){__label__=1;break}else{__label__=6;break}case 1:$i=0;__label__=2;break;case 2:var $4=$i;var $conv=$4<<16>>16;var $cmp3=($conv|0)<10;if($cmp3){__label__=3;break}else{__label__=5;break}case 3:var $5=$i;var $idxprom=$5<<16>>16;var $6=$st_addr;var $past_rq=$6|0;var $arrayidx=$past_rq+($idxprom<<1)|0;var $7=HEAP16[$arrayidx>>1];var $conv5=$7<<16>>16;var $8=$i;var $conv6=$8<<16>>16;var $add_ptr=(_pred_fac_3|0)+($conv6<<1)|0;var $9=HEAP16[$add_ptr>>1];var $conv7=$9<<16>>16;var $mul=$conv5*$conv7|0;var $shr=$mul>>15;var $conv8=$shr&65535;$temp=$conv8;var $10=$i;var $conv9=$10<<16>>16;var $add_ptr10=(_mean_lsf_3|0)+($conv9<<1)|0;var $11=HEAP16[$add_ptr10>>1];var $conv11=$11<<16>>16;var $12=$temp;var $conv12=$12<<16>>16;var $add=$conv11+$conv12|0;var $conv13=$add&65535;var $arraydecay14=$lsf_p|0;var $13=$i;var $conv15=$13<<16>>16;var $add_ptr16=$arraydecay14+($conv15<<1)|0;HEAP16[$add_ptr16>>1]=$conv13;var $arraydecay17=$lsf1|0;var $14=$i;var $conv18=$14<<16>>16;var $add_ptr19=$arraydecay17+($conv18<<1)|0;var $15=HEAP16[$add_ptr19>>1];var $conv20=$15<<16>>16;var $arraydecay21=$lsf_p|0;var $16=$i;var $conv22=$16<<16>>16;var $add_ptr23=$arraydecay21+($conv22<<1)|0;var $17=HEAP16[$add_ptr23>>1];var $conv24=$17<<16>>16;var $sub=$conv20-$conv24|0;var $conv25=$sub&65535;var $arraydecay26=$lsf_r1|0;var $18=$i;var $conv27=$18<<16>>16;var $add_ptr28=$arraydecay26+($conv27<<1)|0;HEAP16[$add_ptr28>>1]=$conv25;__label__=4;break;case 4:var $19=$i;var $inc=$19+1&65535;$i=$inc;__label__=2;break;case 5:__label__=17;break;case 6:var $20=$pred_init_i_addr;HEAP16[$20>>1]=0;$L_min_pred_init_err=2147483647;$j=0;__label__=7;break;case 7:var $21=$j;var $conv30=$21<<16>>16;var $cmp31=($conv30|0)<8;if($cmp31){__label__=8;break}else{__label__=16;break}case 8:$L_pred_init_err=0;$i=0;__label__=9;break;case 9:var $22=$i;var $conv35=$22<<16>>16;var $cmp36=($conv35|0)<10;if($cmp36){__label__=10;break}else{__label__=12;break}case 10:var $23=$i;var $conv39=$23<<16>>16;var $add_ptr40=(_mean_lsf_3|0)+($conv39<<1)|0;var $24=HEAP16[$add_ptr40>>1];var $conv41=$24<<16>>16;var $25=$j;var $conv42=$25<<16>>16;var $mul43=$conv42*10|0;var $add_ptr44=(_past_rq_init|0)+($mul43<<1)|0;var $26=$i;var $conv45=$26<<16>>16;var $add_ptr46=$add_ptr44+($conv45<<1)|0;var $27=HEAP16[$add_ptr46>>1];var $conv47=$27<<16>>16;var $add48=$conv41+$conv47|0;var $conv49=$add48&65535;var $arraydecay50=$temp_p|0;var $28=$i;var $conv51=$28<<16>>16;var $add_ptr52=$arraydecay50+($conv51<<1)|0;HEAP16[$add_ptr52>>1]=$conv49;var $arraydecay53=$lsf1|0;var $29=$i;var $conv54=$29<<16>>16;var $add_ptr55=$arraydecay53+($conv54<<1)|0;var $30=HEAP16[$add_ptr55>>1];var $conv56=$30<<16>>16;var $arraydecay57=$temp_p|0;var $31=$i;var $conv58=$31<<16>>16;var $add_ptr59=$arraydecay57+($conv58<<1)|0;var $32=HEAP16[$add_ptr59>>1];var $conv60=$32<<16>>16;var $sub61=$conv56-$conv60|0;var $conv62=$sub61&65535;var $arraydecay63=$temp_r1|0;var $33=$i;var $conv64=$33<<16>>16;var $add_ptr65=$arraydecay63+($conv64<<1)|0;HEAP16[$add_ptr65>>1]=$conv62;var $arraydecay66=$temp_r1|0;var $34=$i;var $conv67=$34<<16>>16;var $add_ptr68=$arraydecay66+($conv67<<1)|0;var $35=HEAP16[$add_ptr68>>1];var $conv69=$35<<16>>16;var $arraydecay70=$temp_r1|0;var $36=$i;var $conv71=$36<<16>>16;var $add_ptr72=$arraydecay70+($conv71<<1)|0;var $37=HEAP16[$add_ptr72>>1];var $conv73=$37<<16>>16;var $mul74=$conv69*$conv73|0;$L_temp=$mul74;var $38=$L_pred_init_err;var $39=$L_temp;var $shl=$39<<1;var $add75=$38+$shl|0;$L_pred_init_err=$add75;__label__=11;break;case 11:var $40=$i;var $inc77=$40+1&65535;$i=$inc77;__label__=9;break;case 12:var $41=$L_pred_init_err;var $42=$L_min_pred_init_err;var $cmp79=($41|0)<($42|0);if($cmp79){__label__=13;break}else{__label__=14;break}case 13:var $43=$L_pred_init_err;$L_min_pred_init_err=$43;var $arraydecay82=$lsf_r1|0;var $44=$arraydecay82;var $arraydecay83=$temp_r1|0;var $45=$arraydecay83;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($44,$45,20,1);var $arraydecay84=$lsf_p|0;var $46=$arraydecay84;var $arraydecay85=$temp_p|0;var $47=$arraydecay85;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($46,$47,20,1);var $48=$st_addr;var $past_rq86=$48|0;var $arraydecay87=$past_rq86|0;var $49=$arraydecay87;var $50=$j;var $conv88=$50<<16>>16;var $mul89=$conv88*10|0;var $arrayidx90=_past_rq_init+($mul89<<1)|0;var $51=$arrayidx90;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($49,$51,20,1);var $52=$j;var $53=$pred_init_i_addr;HEAP16[$53>>1]=$52;__label__=14;break;case 14:__label__=15;break;case 15:var $54=$j;var $inc92=$54+1&65535;$j=$inc92;__label__=7;break;case 16:__label__=17;break;case 17:var $55=$mode_addr;var $cmp95=($55|0)==0;if($cmp95){__label__=19;break}else{__label__=18;break}case 18:var $56=$mode_addr;var $cmp97=($56|0)==1;if($cmp97){__label__=19;break}else{__label__=20;break}case 19:var $arraydecay100=$lsf_r1|0;var $arraydecay101=$wf1|0;var $57=$pOverflow_addr;var $call=_Vq_subvec3($arraydecay100,_dico1_lsf_3|0,$arraydecay101,256,0,$57);var $58=$indice_addr;HEAP16[$58>>1]=$call;var $arraydecay102=$lsf_r1|0;var $add_ptr103=$arraydecay102+6|0;var $arraydecay104=$wf1|0;var $add_ptr105=$arraydecay104+6|0;var $59=$pOverflow_addr;var $call106=_Vq_subvec3($add_ptr103,_dico2_lsf_3|0,$add_ptr105,256,1,$59);var $60=$indice_addr;var $add_ptr107=$60+2|0;HEAP16[$add_ptr107>>1]=$call106;var $arraydecay108=$lsf_r1|0;var $add_ptr109=$arraydecay108+12|0;var $arraydecay110=$wf1|0;var $add_ptr111=$arraydecay110+12|0;var $61=$pOverflow_addr;var $call112=_Vq_subvec4($add_ptr109,_mr515_3_lsf|0,$add_ptr111,128,$61);var $62=$indice_addr;var $add_ptr113=$62+4|0;HEAP16[$add_ptr113>>1]=$call112;__label__=24;break;case 20:var $63=$mode_addr;var $cmp115=($63|0)==5;if($cmp115){__label__=21;break}else{__label__=22;break}case 21:var $arraydecay118=$lsf_r1|0;var $arraydecay119=$wf1|0;var $64=$pOverflow_addr;var $call120=_Vq_subvec3($arraydecay118,_mr795_1_lsf|0,$arraydecay119,512,0,$64);var $65=$indice_addr;HEAP16[$65>>1]=$call120;var $arraydecay121=$lsf_r1|0;var $add_ptr122=$arraydecay121+6|0;var $arraydecay123=$wf1|0;var $add_ptr124=$arraydecay123+6|0;var $66=$pOverflow_addr;var $call125=_Vq_subvec3($add_ptr122,_dico2_lsf_3|0,$add_ptr124,512,0,$66);var $67=$indice_addr;var $add_ptr126=$67+2|0;HEAP16[$add_ptr126>>1]=$call125;var $arraydecay127=$lsf_r1|0;var $add_ptr128=$arraydecay127+12|0;var $arraydecay129=$wf1|0;var $add_ptr130=$arraydecay129+12|0;var $68=$pOverflow_addr;var $call131=_Vq_subvec4($add_ptr128,_dico3_lsf_3|0,$add_ptr130,512,$68);var $69=$indice_addr;var $add_ptr132=$69+4|0;HEAP16[$add_ptr132>>1]=$call131;__label__=23;break;case 22:var $arraydecay134=$lsf_r1|0;var $arraydecay135=$wf1|0;var $70=$pOverflow_addr;var $call136=_Vq_subvec3($arraydecay134,_dico1_lsf_3|0,$arraydecay135,256,0,$70);var $71=$indice_addr;HEAP16[$71>>1]=$call136;var $arraydecay137=$lsf_r1|0;var $add_ptr138=$arraydecay137+6|0;var $arraydecay139=$wf1|0;var $add_ptr140=$arraydecay139+6|0;var $72=$pOverflow_addr;var $call141=_Vq_subvec3($add_ptr138,_dico2_lsf_3|0,$add_ptr140,512,0,$72);var $73=$indice_addr;var $add_ptr142=$73+2|0;HEAP16[$add_ptr142>>1]=$call141;var $arraydecay143=$lsf_r1|0;var $add_ptr144=$arraydecay143+12|0;var $arraydecay145=$wf1|0;var $add_ptr146=$arraydecay145+12|0;var $74=$pOverflow_addr;var $call147=_Vq_subvec4($add_ptr144,_dico3_lsf_3|0,$add_ptr146,512,$74);var $75=$indice_addr;var $add_ptr148=$75+4|0;HEAP16[$add_ptr148>>1]=$call147;__label__=23;break;case 23:__label__=24;break;case 24:$i=0;__label__=25;break;case 25:var $76=$i;var $conv152=$76<<16>>16;var $cmp153=($conv152|0)<10;if($cmp153){__label__=26;break}else{__label__=28;break}case 26:var $arraydecay156=$lsf_r1|0;var $77=$i;var $conv157=$77<<16>>16;var $add_ptr158=$arraydecay156+($conv157<<1)|0;var $78=HEAP16[$add_ptr158>>1];var $conv159=$78<<16>>16;var $arraydecay160=$lsf_p|0;var $79=$i;var $conv161=$79<<16>>16;var $add_ptr162=$arraydecay160+($conv161<<1)|0;var $80=HEAP16[$add_ptr162>>1];var $conv163=$80<<16>>16;var $add164=$conv159+$conv163|0;var $conv165=$add164&65535;var $arraydecay166=$lsf1_q|0;var $81=$i;var $conv167=$81<<16>>16;var $add_ptr168=$arraydecay166+($conv167<<1)|0;HEAP16[$add_ptr168>>1]=$conv165;var $arraydecay169=$lsf_r1|0;var $82=$i;var $conv170=$82<<16>>16;var $add_ptr171=$arraydecay169+($conv170<<1)|0;var $83=HEAP16[$add_ptr171>>1];var $84=$i;var $idxprom172=$84<<16>>16;var $85=$st_addr;var $past_rq173=$85|0;var $arrayidx174=$past_rq173+($idxprom172<<1)|0;HEAP16[$arrayidx174>>1]=$83;__label__=27;break;case 27:var $86=$i;var $inc176=$86+1&65535;$i=$inc176;__label__=25;break;case 28:var $arraydecay178=$lsf1_q|0;var $87=$pOverflow_addr;_Reorder_lsf($arraydecay178,205,10,$87);var $arraydecay179=$lsf1_q|0;var $88=$lsp1_q_addr;var $89=$pOverflow_addr;_Lsf_lsp($arraydecay179,$88,10,$89);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Q_plsf_3["X"]=1;function _Q_plsf_5($st,$lsp1,$lsp2,$lsp1_q,$lsp2_q,$indice,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=180;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $lsp1_addr;var $lsp2_addr;var $lsp1_q_addr;var $lsp2_q_addr;var $indice_addr;var $pOverflow_addr;var $i;var $lsf1=__stackBase__;var $lsf2=__stackBase__+20;var $wf1=__stackBase__+40;var $wf2=__stackBase__+60;var $lsf_p=__stackBase__+80;var $lsf_r1=__stackBase__+100;var $lsf_r2=__stackBase__+120;var $lsf1_q=__stackBase__+140;var $lsf2_q=__stackBase__+160;var $p_lsf_p;var $p_lsf1;var $p_lsf2;var $p_lsf_r1;var $p_lsf_r2;$st_addr=$st;$lsp1_addr=$lsp1;$lsp2_addr=$lsp2;$lsp1_q_addr=$lsp1_q;$lsp2_q_addr=$lsp2_q;$indice_addr=$indice;$pOverflow_addr=$pOverflow;var $0=$lsp1_addr;var $arraydecay=$lsf1|0;var $1=$pOverflow_addr;_Lsp_lsf($0,$arraydecay,10,$1);var $2=$lsp2_addr;var $arraydecay1=$lsf2|0;var $3=$pOverflow_addr;_Lsp_lsf($2,$arraydecay1,10,$3);var $arraydecay2=$lsf1|0;var $arraydecay3=$wf1|0;var $4=$pOverflow_addr;_Lsf_wt($arraydecay2,$arraydecay3,$4);var $arraydecay4=$lsf2|0;var $arraydecay5=$wf2|0;var $5=$pOverflow_addr;_Lsf_wt($arraydecay4,$arraydecay5,$5);var $arrayidx=$lsf_p|0;$p_lsf_p=$arrayidx;var $arrayidx6=$lsf1|0;$p_lsf1=$arrayidx6;var $arrayidx7=$lsf2|0;$p_lsf2=$arrayidx7;var $arrayidx8=$lsf_r1|0;$p_lsf_r1=$arrayidx8;var $arrayidx9=$lsf_r2|0;$p_lsf_r2=$arrayidx9;$i=0;__label__=1;break;case 1:var $6=$i;var $conv=$6<<16>>16;var $cmp=($conv|0)<10;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $7=$i;var $idxprom=$7<<16>>16;var $arrayidx11=_mean_lsf_5+($idxprom<<1)|0;var $8=(tempInt=HEAPU8[$arrayidx11]|HEAPU8[$arrayidx11+1]<<8,tempInt<<16>>16);var $conv12=$8<<16>>16;var $9=$i;var $idxprom13=$9<<16>>16;var $10=$st_addr;var $past_rq=$10|0;var $arrayidx14=$past_rq+($idxprom13<<1)|0;var $11=HEAP16[$arrayidx14>>1];var $conv15=$11<<16>>16;var $mul=$conv15*21299|0;var $shr=$mul>>15;var $add=$conv12+$shr|0;var $conv16=$add&65535;var $12=$p_lsf_p;HEAP16[$12>>1]=$conv16;var $13=$p_lsf1;var $incdec_ptr=$13+2|0;$p_lsf1=$incdec_ptr;var $14=HEAP16[$13>>1];var $conv17=$14<<16>>16;var $15=$p_lsf_p;var $16=HEAP16[$15>>1];var $conv18=$16<<16>>16;var $sub=$conv17-$conv18|0;var $conv19=$sub&65535;var $17=$p_lsf_r1;var $incdec_ptr20=$17+2|0;$p_lsf_r1=$incdec_ptr20;HEAP16[$17>>1]=$conv19;var $18=$p_lsf2;var $incdec_ptr21=$18+2|0;$p_lsf2=$incdec_ptr21;var $19=HEAP16[$18>>1];var $conv22=$19<<16>>16;var $20=$p_lsf_p;var $incdec_ptr23=$20+2|0;$p_lsf_p=$incdec_ptr23;var $21=HEAP16[$20>>1];var $conv24=$21<<16>>16;var $sub25=$conv22-$conv24|0;var $conv26=$sub25&65535;var $22=$p_lsf_r2;var $incdec_ptr27=$22+2|0;$p_lsf_r2=$incdec_ptr27;HEAP16[$22>>1]=$conv26;__label__=3;break;case 3:var $23=$i;var $inc=$23+1&65535;$i=$inc;__label__=1;break;case 4:var $arrayidx28=$lsf_r1|0;var $arrayidx29=$lsf_r2|0;var $arrayidx30=$wf1|0;var $arrayidx31=$wf2|0;var $24=$pOverflow_addr;var $call=_Vq_subvec($arrayidx28,$arrayidx29,_dico1_lsf_5|0,$arrayidx30,$arrayidx31,128,$24);var $25=$indice_addr;var $arrayidx32=$25|0;HEAP16[$arrayidx32>>1]=$call;var $arrayidx33=$lsf_r1+4|0;var $arrayidx34=$lsf_r2+4|0;var $arrayidx35=$wf1+4|0;var $arrayidx36=$wf2+4|0;var $26=$pOverflow_addr;var $call37=_Vq_subvec($arrayidx33,$arrayidx34,_dico2_lsf_5|0,$arrayidx35,$arrayidx36,256,$26);var $27=$indice_addr;var $arrayidx38=$27+2|0;HEAP16[$arrayidx38>>1]=$call37;var $arrayidx39=$lsf_r1+8|0;var $arrayidx40=$lsf_r2+8|0;var $arrayidx41=$wf1+8|0;var $arrayidx42=$wf2+8|0;var $28=$pOverflow_addr;var $call43=_Vq_subvec_s($arrayidx39,$arrayidx40,_dico3_lsf_5|0,$arrayidx41,$arrayidx42,256,$28);var $29=$indice_addr;var $arrayidx44=$29+4|0;HEAP16[$arrayidx44>>1]=$call43;var $arrayidx45=$lsf_r1+12|0;var $arrayidx46=$lsf_r2+12|0;var $arrayidx47=$wf1+12|0;var $arrayidx48=$wf2+12|0;var $30=$pOverflow_addr;var $call49=_Vq_subvec($arrayidx45,$arrayidx46,_dico4_lsf_5|0,$arrayidx47,$arrayidx48,256,$30);var $31=$indice_addr;var $arrayidx50=$31+6|0;HEAP16[$arrayidx50>>1]=$call49;var $arrayidx51=$lsf_r1+16|0;var $arrayidx52=$lsf_r2+16|0;var $arrayidx53=$wf1+16|0;var $arrayidx54=$wf2+16|0;var $32=$pOverflow_addr;var $call55=_Vq_subvec($arrayidx51,$arrayidx52,_dico5_lsf_5|0,$arrayidx53,$arrayidx54,64,$32);var $33=$indice_addr;var $arrayidx56=$33+8|0;HEAP16[$arrayidx56>>1]=$call55;var $arrayidx57=$lsf_r1|0;$p_lsf_r1=$arrayidx57;var $arrayidx58=$lsf_r2|0;$p_lsf_r2=$arrayidx58;var $arrayidx59=$lsf_p|0;$p_lsf_p=$arrayidx59;var $arrayidx60=$lsf1_q|0;$p_lsf1=$arrayidx60;var $arrayidx61=$lsf2_q|0;$p_lsf2=$arrayidx61;$i=0;__label__=5;break;case 5:var $34=$i;var $conv63=$34<<16>>16;var $cmp64=($conv63|0)<10;if($cmp64){__label__=6;break}else{__label__=8;break}case 6:var $35=$p_lsf_r1;var $incdec_ptr67=$35+2|0;$p_lsf_r1=$incdec_ptr67;var $36=HEAP16[$35>>1];var $conv68=$36<<16>>16;var $37=$p_lsf_p;var $38=HEAP16[$37>>1];var $conv69=$38<<16>>16;var $add70=$conv68+$conv69|0;var $conv71=$add70&65535;var $39=$p_lsf1;var $incdec_ptr72=$39+2|0;$p_lsf1=$incdec_ptr72;HEAP16[$39>>1]=$conv71;var $40=$p_lsf_r2;var $41=HEAP16[$40>>1];var $conv73=$41<<16>>16;var $42=$p_lsf_p;var $incdec_ptr74=$42+2|0;$p_lsf_p=$incdec_ptr74;var $43=HEAP16[$42>>1];var $conv75=$43<<16>>16;var $add76=$conv73+$conv75|0;var $conv77=$add76&65535;var $44=$p_lsf2;var $incdec_ptr78=$44+2|0;$p_lsf2=$incdec_ptr78;HEAP16[$44>>1]=$conv77;var $45=$p_lsf_r2;var $incdec_ptr79=$45+2|0;$p_lsf_r2=$incdec_ptr79;var $46=HEAP16[$45>>1];var $47=$i;var $idxprom80=$47<<16>>16;var $48=$st_addr;var $past_rq81=$48|0;var $arrayidx82=$past_rq81+($idxprom80<<1)|0;HEAP16[$arrayidx82>>1]=$46;__label__=7;break;case 7:var $49=$i;var $inc84=$49+1&65535;$i=$inc84;__label__=5;break;case 8:var $arraydecay86=$lsf1_q|0;var $50=$pOverflow_addr;_Reorder_lsf($arraydecay86,205,10,$50);var $arraydecay87=$lsf2_q|0;var $51=$pOverflow_addr;_Reorder_lsf($arraydecay87,205,10,$51);var $arraydecay88=$lsf1_q|0;var $52=$lsp1_q_addr;var $53=$pOverflow_addr;_Lsf_lsp($arraydecay88,$52,10,$53);var $arraydecay89=$lsf2_q|0;var $54=$lsp2_q_addr;var $55=$pOverflow_addr;_Lsf_lsp($arraydecay89,$54,10,$55);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Q_plsf_5["X"]=1;function _Vq_subvec($lsf_r1,$lsf_r2,$dico,$wf1,$wf2,$dico_size,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_r1_addr;var $lsf_r2_addr;var $dico_addr;var $wf1_addr;var $wf2_addr;var $dico_size_addr;var $pOverflow_addr;var $index;var $i;var $temp;var $p_dico;var $dist_min;var $dist;var $wf1_0;var $wf1_1;var $wf2_0;var $wf2_1;var $aux1;var $aux2;var $aux3;var $aux4;$lsf_r1_addr=$lsf_r1;$lsf_r2_addr=$lsf_r2;$dico_addr=$dico;$wf1_addr=$wf1;$wf2_addr=$wf2;$dico_size_addr=$dico_size;$pOverflow_addr=$pOverflow;$index=0;var $0=$pOverflow_addr;$dist_min=2147483647;var $1=$dico_addr;$p_dico=$1;var $2=$wf1_addr;var $arrayidx=$2|0;var $3=HEAP16[$arrayidx>>1];$wf1_0=$3;var $4=$wf1_addr;var $arrayidx1=$4+2|0;var $5=HEAP16[$arrayidx1>>1];$wf1_1=$5;var $6=$wf2_addr;var $arrayidx2=$6|0;var $7=HEAP16[$arrayidx2>>1];$wf2_0=$7;var $8=$wf2_addr;var $arrayidx3=$8+2|0;var $9=HEAP16[$arrayidx3>>1];$wf2_1=$9;var $10=$lsf_r1_addr;var $arrayidx4=$10|0;var $11=HEAP16[$arrayidx4>>1];var $conv=$11<<16>>16;var $12=$wf1_0;var $conv5=$12<<16>>16;var $mul=$conv*$conv5|0;$aux1=$mul;var $13=$lsf_r1_addr;var $arrayidx6=$13+2|0;var $14=HEAP16[$arrayidx6>>1];var $conv7=$14<<16>>16;var $15=$wf1_1;var $conv8=$15<<16>>16;var $mul9=$conv7*$conv8|0;$aux2=$mul9;var $16=$lsf_r2_addr;var $arrayidx10=$16|0;var $17=HEAP16[$arrayidx10>>1];var $conv11=$17<<16>>16;var $18=$wf2_0;var $conv12=$18<<16>>16;var $mul13=$conv11*$conv12|0;$aux3=$mul13;var $19=$lsf_r2_addr;var $arrayidx14=$19+2|0;var $20=HEAP16[$arrayidx14>>1];var $conv15=$20<<16>>16;var $21=$wf2_1;var $conv16=$21<<16>>16;var $mul17=$conv15*$conv16|0;$aux4=$mul17;$i=0;__label__=1;break;case 1:var $22=$i;var $conv18=$22<<16>>16;var $23=$dico_size_addr;var $conv19=$23<<16>>16;var $cmp=($conv18|0)<($conv19|0);if($cmp){__label__=2;break}else{__label__=12;break}case 2:var $24=$aux1;var $25=$wf1_0;var $conv21=$25<<16>>16;var $26=$p_dico;var $incdec_ptr=$26+2|0;$p_dico=$incdec_ptr;var $27=HEAP16[$26>>1];var $conv22=$27<<16>>16;var $mul23=$conv21*$conv22|0;var $sub=$24-$mul23|0;var $shr=$sub>>15;var $conv24=$shr&65535;$temp=$conv24;var $28=$temp;var $conv25=$28<<16>>16;var $29=$temp;var $conv26=$29<<16>>16;var $mul27=$conv25*$conv26|0;$dist=$mul27;var $30=$dist;var $31=$dist_min;var $cmp28=($30|0)>=($31|0);if($cmp28){__label__=3;break}else{__label__=4;break}case 3:var $32=$p_dico;var $add_ptr=$32+6|0;$p_dico=$add_ptr;__label__=11;break;case 4:var $33=$aux2;var $34=$wf1_1;var $conv30=$34<<16>>16;var $35=$p_dico;var $incdec_ptr31=$35+2|0;$p_dico=$incdec_ptr31;var $36=HEAP16[$35>>1];var $conv32=$36<<16>>16;var $mul33=$conv30*$conv32|0;var $sub34=$33-$mul33|0;var $shr35=$sub34>>15;var $conv36=$shr35&65535;$temp=$conv36;var $37=$temp;var $conv37=$37<<16>>16;var $38=$temp;var $conv38=$38<<16>>16;var $mul39=$conv37*$conv38|0;var $39=$dist;var $add=$39+$mul39|0;$dist=$add;var $40=$dist;var $41=$dist_min;var $cmp40=($40|0)>=($41|0);if($cmp40){__label__=5;break}else{__label__=6;break}case 5:var $42=$p_dico;var $add_ptr43=$42+4|0;$p_dico=$add_ptr43;__label__=11;break;case 6:var $43=$aux3;var $44=$wf2_0;var $conv45=$44<<16>>16;var $45=$p_dico;var $incdec_ptr46=$45+2|0;$p_dico=$incdec_ptr46;var $46=HEAP16[$45>>1];var $conv47=$46<<16>>16;var $mul48=$conv45*$conv47|0;var $sub49=$43-$mul48|0;var $shr50=$sub49>>15;var $conv51=$shr50&65535;$temp=$conv51;var $47=$temp;var $conv52=$47<<16>>16;var $48=$temp;var $conv53=$48<<16>>16;var $mul54=$conv52*$conv53|0;var $49=$dist;var $add55=$49+$mul54|0;$dist=$add55;var $50=$dist;var $51=$dist_min;var $cmp56=($50|0)>=($51|0);if($cmp56){__label__=7;break}else{__label__=8;break}case 7:var $52=$p_dico;var $add_ptr59=$52+2|0;$p_dico=$add_ptr59;__label__=11;break;case 8:var $53=$aux4;var $54=$wf2_1;var $conv61=$54<<16>>16;var $55=$p_dico;var $incdec_ptr62=$55+2|0;$p_dico=$incdec_ptr62;var $56=HEAP16[$55>>1];var $conv63=$56<<16>>16;var $mul64=$conv61*$conv63|0;var $sub65=$53-$mul64|0;var $shr66=$sub65>>15;var $conv67=$shr66&65535;$temp=$conv67;var $57=$temp;var $conv68=$57<<16>>16;var $58=$temp;var $conv69=$58<<16>>16;var $mul70=$conv68*$conv69|0;var $59=$dist;var $add71=$59+$mul70|0;$dist=$add71;var $60=$dist;var $61=$dist_min;var $cmp72=($60|0)<($61|0);if($cmp72){__label__=9;break}else{__label__=10;break}case 9:var $62=$dist;$dist_min=$62;var $63=$i;$index=$63;__label__=10;break;case 10:__label__=11;break;case 11:var $64=$i;var $inc=$64+1&65535;$i=$inc;__label__=1;break;case 12:var $65=$index;var $conv76=$65<<16>>16;var $shl=$conv76<<2;var $66=$dico_addr;var $arrayidx77=$66+($shl<<1)|0;$p_dico=$arrayidx77;var $67=$p_dico;var $incdec_ptr78=$67+2|0;$p_dico=$incdec_ptr78;var $68=HEAP16[$67>>1];var $69=$lsf_r1_addr;var $arrayidx79=$69|0;HEAP16[$arrayidx79>>1]=$68;var $70=$p_dico;var $incdec_ptr80=$70+2|0;$p_dico=$incdec_ptr80;var $71=HEAP16[$70>>1];var $72=$lsf_r1_addr;var $arrayidx81=$72+2|0;HEAP16[$arrayidx81>>1]=$71;var $73=$p_dico;var $incdec_ptr82=$73+2|0;$p_dico=$incdec_ptr82;var $74=HEAP16[$73>>1];var $75=$lsf_r2_addr;var $arrayidx83=$75|0;HEAP16[$arrayidx83>>1]=$74;var $76=$p_dico;var $77=HEAP16[$76>>1];var $78=$lsf_r2_addr;var $arrayidx84=$78+2|0;HEAP16[$arrayidx84>>1]=$77;var $79=$index;return $79;default:assert(0,"bad label: "+__label__)}}_Vq_subvec["X"]=1;function _Vq_subvec_s($lsf_r1,$lsf_r2,$dico,$wf1,$wf2,$dico_size,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_r1_addr;var $lsf_r2_addr;var $dico_addr;var $wf1_addr;var $wf2_addr;var $dico_size_addr;var $pOverflow_addr;var $index;var $sign;var $i;var $temp;var $temp1;var $temp2;var $p_dico;var $dist_min;var $dist1;var $dist2;var $lsf_r1_0;var $lsf_r1_1;var $lsf_r2_0;var $lsf_r2_1;var $wf1_0;var $wf1_1;var $wf2_0;var $wf2_1;$lsf_r1_addr=$lsf_r1;$lsf_r2_addr=$lsf_r2;$dico_addr=$dico;$wf1_addr=$wf1;$wf2_addr=$wf2;$dico_size_addr=$dico_size;$pOverflow_addr=$pOverflow;$index=0;$sign=0;var $0=$pOverflow_addr;$dist_min=2147483647;var $1=$dico_addr;$p_dico=$1;var $2=$lsf_r1_addr;var $arrayidx=$2|0;var $3=HEAP16[$arrayidx>>1];$lsf_r1_0=$3;var $4=$lsf_r1_addr;var $arrayidx1=$4+2|0;var $5=HEAP16[$arrayidx1>>1];$lsf_r1_1=$5;var $6=$lsf_r2_addr;var $arrayidx2=$6|0;var $7=HEAP16[$arrayidx2>>1];$lsf_r2_0=$7;var $8=$lsf_r2_addr;var $arrayidx3=$8+2|0;var $9=HEAP16[$arrayidx3>>1];$lsf_r2_1=$9;var $10=$wf1_addr;var $arrayidx4=$10|0;var $11=HEAP16[$arrayidx4>>1];$wf1_0=$11;var $12=$wf1_addr;var $arrayidx5=$12+2|0;var $13=HEAP16[$arrayidx5>>1];$wf1_1=$13;var $14=$wf2_addr;var $arrayidx6=$14|0;var $15=HEAP16[$arrayidx6>>1];$wf2_0=$15;var $16=$wf2_addr;var $arrayidx7=$16+2|0;var $17=HEAP16[$arrayidx7>>1];$wf2_1=$17;$i=0;__label__=1;break;case 1:var $18=$i;var $conv=$18<<16>>16;var $19=$dico_size_addr;var $conv8=$19<<16>>16;var $cmp=($conv|0)<($conv8|0);if($cmp){__label__=2;break}else{__label__=11;break}case 2:var $20=$p_dico;var $incdec_ptr=$20+2|0;$p_dico=$incdec_ptr;var $21=HEAP16[$20>>1];$temp=$21;var $22=$lsf_r1_0;var $conv10=$22<<16>>16;var $23=$temp;var $conv11=$23<<16>>16;var $sub=$conv10-$conv11|0;var $conv12=$sub&65535;$temp1=$conv12;var $24=$lsf_r1_0;var $conv13=$24<<16>>16;var $25=$temp;var $conv14=$25<<16>>16;var $add=$conv13+$conv14|0;var $conv15=$add&65535;$temp2=$conv15;var $26=$wf1_0;var $conv16=$26<<16>>16;var $27=$temp1;var $conv17=$27<<16>>16;var $mul=$conv16*$conv17|0;var $shr=$mul>>15;var $conv18=$shr&65535;$temp1=$conv18;var $28=$wf1_0;var $conv19=$28<<16>>16;var $29=$temp2;var $conv20=$29<<16>>16;var $mul21=$conv19*$conv20|0;var $shr22=$mul21>>15;var $conv23=$shr22&65535;$temp2=$conv23;var $30=$temp1;var $conv24=$30<<16>>16;var $31=$temp1;var $conv25=$31<<16>>16;var $mul26=$conv24*$conv25|0;$dist1=$mul26;var $32=$temp2;var $conv27=$32<<16>>16;var $33=$temp2;var $conv28=$33<<16>>16;var $mul29=$conv27*$conv28|0;$dist2=$mul29;var $34=$p_dico;var $incdec_ptr30=$34+2|0;$p_dico=$incdec_ptr30;var $35=HEAP16[$34>>1];$temp=$35;var $36=$lsf_r1_1;var $conv31=$36<<16>>16;var $37=$temp;var $conv32=$37<<16>>16;var $sub33=$conv31-$conv32|0;var $conv34=$sub33&65535;$temp1=$conv34;var $38=$lsf_r1_1;var $conv35=$38<<16>>16;var $39=$temp;var $conv36=$39<<16>>16;var $add37=$conv35+$conv36|0;var $conv38=$add37&65535;$temp2=$conv38;var $40=$wf1_1;var $conv39=$40<<16>>16;var $41=$temp1;var $conv40=$41<<16>>16;var $mul41=$conv39*$conv40|0;var $shr42=$mul41>>15;var $conv43=$shr42&65535;$temp1=$conv43;var $42=$wf1_1;var $conv44=$42<<16>>16;var $43=$temp2;var $conv45=$43<<16>>16;var $mul46=$conv44*$conv45|0;var $shr47=$mul46>>15;var $conv48=$shr47&65535;$temp2=$conv48;var $44=$temp1;var $conv49=$44<<16>>16;var $45=$temp1;var $conv50=$45<<16>>16;var $mul51=$conv49*$conv50|0;var $46=$dist1;var $add52=$46+$mul51|0;$dist1=$add52;var $47=$temp2;var $conv53=$47<<16>>16;var $48=$temp2;var $conv54=$48<<16>>16;var $mul55=$conv53*$conv54|0;var $49=$dist2;var $add56=$49+$mul55|0;$dist2=$add56;var $50=$dist1;var $51=$dist_min;var $cmp57=($50|0)>=($51|0);if($cmp57){__label__=3;break}else{__label__=5;break}case 3:var $52=$dist2;var $53=$dist_min;var $cmp59=($52|0)>=($53|0);if($cmp59){__label__=4;break}else{__label__=5;break}case 4:var $54=$p_dico;var $add_ptr=$54+4|0;$p_dico=$add_ptr;__label__=10;break;case 5:var $55=$p_dico;var $incdec_ptr61=$55+2|0;$p_dico=$incdec_ptr61;var $56=HEAP16[$55>>1];$temp=$56;var $57=$lsf_r2_0;var $conv62=$57<<16>>16;var $58=$temp;var $conv63=$58<<16>>16;var $sub64=$conv62-$conv63|0;var $conv65=$sub64&65535;$temp1=$conv65;var $59=$lsf_r2_0;var $conv66=$59<<16>>16;var $60=$temp;var $conv67=$60<<16>>16;var $add68=$conv66+$conv67|0;var $conv69=$add68&65535;$temp2=$conv69;var $61=$wf2_0;var $conv70=$61<<16>>16;var $62=$temp1;var $conv71=$62<<16>>16;var $mul72=$conv70*$conv71|0;var $shr73=$mul72>>15;var $conv74=$shr73&65535;$temp1=$conv74;var $63=$wf2_0;var $conv75=$63<<16>>16;var $64=$temp2;var $conv76=$64<<16>>16;var $mul77=$conv75*$conv76|0;var $shr78=$mul77>>15;var $conv79=$shr78&65535;$temp2=$conv79;var $65=$temp1;var $conv80=$65<<16>>16;var $66=$temp1;var $conv81=$66<<16>>16;var $mul82=$conv80*$conv81|0;var $67=$dist1;var $add83=$67+$mul82|0;$dist1=$add83;var $68=$temp2;var $conv84=$68<<16>>16;var $69=$temp2;var $conv85=$69<<16>>16;var $mul86=$conv84*$conv85|0;var $70=$dist2;var $add87=$70+$mul86|0;$dist2=$add87;var $71=$p_dico;var $incdec_ptr88=$71+2|0;$p_dico=$incdec_ptr88;var $72=HEAP16[$71>>1];$temp=$72;var $73=$lsf_r2_1;var $conv89=$73<<16>>16;var $74=$temp;var $conv90=$74<<16>>16;var $sub91=$conv89-$conv90|0;var $conv92=$sub91&65535;$temp1=$conv92;var $75=$lsf_r2_1;var $conv93=$75<<16>>16;var $76=$temp;var $conv94=$76<<16>>16;var $add95=$conv93+$conv94|0;var $conv96=$add95&65535;$temp2=$conv96;var $77=$wf2_1;var $conv97=$77<<16>>16;var $78=$temp1;var $conv98=$78<<16>>16;var $mul99=$conv97*$conv98|0;var $shr100=$mul99>>15;var $conv101=$shr100&65535;$temp1=$conv101;var $79=$wf2_1;var $conv102=$79<<16>>16;var $80=$temp2;var $conv103=$80<<16>>16;var $mul104=$conv102*$conv103|0;var $shr105=$mul104>>15;var $conv106=$shr105&65535;$temp2=$conv106;var $81=$temp1;var $conv107=$81<<16>>16;var $82=$temp1;var $conv108=$82<<16>>16;var $mul109=$conv107*$conv108|0;var $83=$dist1;var $add110=$83+$mul109|0;$dist1=$add110;var $84=$temp2;var $conv111=$84<<16>>16;var $85=$temp2;var $conv112=$85<<16>>16;var $mul113=$conv111*$conv112|0;var $86=$dist2;var $add114=$86+$mul113|0;$dist2=$add114;var $87=$dist1;var $88=$dist_min;var $cmp115=($87|0)<($88|0);if($cmp115){__label__=6;break}else{__label__=7;break}case 6:var $89=$dist1;$dist_min=$89;var $90=$i;$index=$90;$sign=0;__label__=7;break;case 7:var $91=$dist2;var $92=$dist_min;var $cmp119=($91|0)<($92|0);if($cmp119){__label__=8;break}else{__label__=9;break}case 8:var $93=$dist2;$dist_min=$93;var $94=$i;$index=$94;$sign=1;__label__=9;break;case 9:__label__=10;break;case 10:var $95=$i;var $inc=$95+1&65535;$i=$inc;__label__=1;break;case 11:var $96=$index;var $conv123=$96<<16>>16;var $shl=$conv123<<2;var $97=$dico_addr;var $arrayidx124=$97+($shl<<1)|0;$p_dico=$arrayidx124;var $98=$index;var $conv125=$98<<16>>16;var $shl126=$conv125<<1;var $conv127=$shl126&65535;$index=$conv127;var $99=$sign;var $tobool=$99<<16>>16!=0;if($tobool){__label__=12;break}else{__label__=13;break}case 12:var $100=$p_dico;var $incdec_ptr129=$100+2|0;$p_dico=$incdec_ptr129;var $101=HEAP16[$100>>1];var $conv130=$101<<16>>16;var $sub131=-$conv130|0;var $conv132=$sub131&65535;var $102=$lsf_r1_addr;var $arrayidx133=$102|0;HEAP16[$arrayidx133>>1]=$conv132;var $103=$p_dico;var $incdec_ptr134=$103+2|0;$p_dico=$incdec_ptr134;var $104=HEAP16[$103>>1];var $conv135=$104<<16>>16;var $sub136=-$conv135|0;var $conv137=$sub136&65535;var $105=$lsf_r1_addr;var $arrayidx138=$105+2|0;HEAP16[$arrayidx138>>1]=$conv137;var $106=$p_dico;var $incdec_ptr139=$106+2|0;$p_dico=$incdec_ptr139;var $107=HEAP16[$106>>1];var $conv140=$107<<16>>16;var $sub141=-$conv140|0;var $conv142=$sub141&65535;var $108=$lsf_r2_addr;var $arrayidx143=$108|0;HEAP16[$arrayidx143>>1]=$conv142;var $109=$p_dico;var $110=HEAP16[$109>>1];var $conv144=$110<<16>>16;var $sub145=-$conv144|0;var $conv146=$sub145&65535;var $111=$lsf_r2_addr;var $arrayidx147=$111+2|0;HEAP16[$arrayidx147>>1]=$conv146;var $112=$index;var $conv148=$112<<16>>16;var $add149=$conv148+1|0;var $conv150=$add149&65535;$index=$conv150;__label__=14;break;case 13:var $113=$p_dico;var $incdec_ptr151=$113+2|0;$p_dico=$incdec_ptr151;var $114=HEAP16[$113>>1];var $115=$lsf_r1_addr;var $arrayidx152=$115|0;HEAP16[$arrayidx152>>1]=$114;var $116=$p_dico;var $incdec_ptr153=$116+2|0;$p_dico=$incdec_ptr153;var $117=HEAP16[$116>>1];var $118=$lsf_r1_addr;var $arrayidx154=$118+2|0;HEAP16[$arrayidx154>>1]=$117;var $119=$p_dico;var $incdec_ptr155=$119+2|0;$p_dico=$incdec_ptr155;var $120=HEAP16[$119>>1];var $121=$lsf_r2_addr;var $arrayidx156=$121|0;HEAP16[$arrayidx156>>1]=$120;var $122=$p_dico;var $123=HEAP16[$122>>1];var $124=$lsf_r2_addr;var $arrayidx157=$124+2|0;HEAP16[$arrayidx157>>1]=$123;__label__=14;break;case 14:var $125=$index;return $125;default:assert(0,"bad label: "+__label__)}}_Vq_subvec_s["X"]=1;function _Q_plsf_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=7;break;case 2:$i=0;__label__=3;break;case 3:var $1=$i;var $conv=$1<<16>>16;var $cmp1=($conv|0)<10;if($cmp1){__label__=4;break}else{__label__=6;break}case 4:var $2=$i;var $idxprom=$2<<16>>16;var $3=$state_addr;var $past_rq=$3|0;var $arrayidx=$past_rq+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=5;break;case 5:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=3;break;case 6:$retval=0;__label__=7;break;case 7:var $5=$retval;return $5;default:assert(0,"bad label: "+__label__)}}function _Q_plsf_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(20);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_Q_plsf_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _Q_plsf_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _shl417($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl417["X"]=1;function _L_shr418($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $cmp3=($conv2|0)<31;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $3=$L_var1_addr;var $4=$var2_addr;var $conv6=$4<<16>>16;var $shr=$3>>($conv6|0);$L_var_out=$shr;__label__=3;break;case 3:__label__=7;break;case 4:var $5=$var2_addr;var $conv7=$5<<16>>16;var $sub=-$conv7|0;var $conv8=$sub&65535;$var2_addr=$conv8;var $6=$L_var1_addr;var $7=$var2_addr;var $conv9=$7<<16>>16;var $shl=$6<<$conv9;$L_var_out=$shl;var $8=$L_var_out;var $9=$var2_addr;var $conv10=$9<<16>>16;var $shr11=$8>>($conv10|0);var $10=$L_var1_addr;var $cmp12=($shr11|0)!=($10|0);if($cmp12){__label__=5;break}else{__label__=6;break}case 5:var $11=$L_var1_addr;var $shr15=$11>>31;var $xor=$shr15^2147483647;$L_var_out=$xor;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _mult419($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _Mpy_32_16420($L_var1_hi,$L_var1_lo,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_hi_addr;var $L_var1_lo_addr;var $var2_addr;var $pOverflow_addr;var $L_product;var $L_sum;var $result;$L_var1_hi_addr=$L_var1_hi;$L_var1_lo_addr=$L_var1_lo;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_hi_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_var1_lo_addr;var $conv3=$5<<16>>16;var $6=$var2_addr;var $conv4=$6<<16>>16;var $mul5=$conv3*$conv4|0;var $shr=$mul5>>15;$result=$shr;var $7=$L_product;var $8=$result;var $shl6=$8<<1;var $add=$7+$shl6|0;$L_sum=$add;var $9=$L_product;var $10=$result;var $xor=$9^$10;var $cmp7=($xor|0)>0;if($cmp7){__label__=4;break}else{__label__=7;break}case 4:var $11=$L_sum;var $12=$L_product;var $xor10=$11^$12;var $shr11=$xor10>>31;var $tobool=($shr11|0)!=0;if($tobool){__label__=5;break}else{__label__=6;break}case 5:var $13=$L_product;var $shr13=$13>>31;var $tobool14=($shr13|0)!=0;var $cond=$tobool14?-2147483648:2147483647;$L_sum=$cond;var $14=$pOverflow_addr;HEAP32[$14>>2]=1;__label__=6;break;case 6:__label__=7;break;case 7:var $15=$L_sum;return $15;default:assert(0,"bad label: "+__label__)}}_Mpy_32_16420["X"]=1;function _L_add421($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _L_mult422($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _Reorder_lsf($lsf,$min_dist,$n,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $lsf_addr;var $min_dist_addr;var $n_addr;var $pOverflow_addr;var $i;var $lsf_min;var $p_lsf;$lsf_addr=$lsf;$min_dist_addr=$min_dist;$n_addr=$n;$pOverflow_addr=$pOverflow;var $0=$lsf_addr;var $arrayidx=$0|0;$p_lsf=$arrayidx;var $1=$pOverflow_addr;var $2=$min_dist_addr;$lsf_min=$2;$i=0;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $4=$n_addr;var $conv1=$4<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=7;break}case 2:var $5=$p_lsf;var $6=HEAP16[$5>>1];var $conv3=$6<<16>>16;var $7=$lsf_min;var $conv4=$7<<16>>16;var $cmp5=($conv3|0)<($conv4|0);if($cmp5){__label__=3;break}else{__label__=4;break}case 3:var $8=$lsf_min;var $9=$p_lsf;var $incdec_ptr=$9+2|0;$p_lsf=$incdec_ptr;HEAP16[$9>>1]=$8;var $10=$min_dist_addr;var $conv7=$10<<16>>16;var $11=$lsf_min;var $conv8=$11<<16>>16;var $add=$conv8+$conv7|0;var $conv9=$add&65535;$lsf_min=$conv9;__label__=5;break;case 4:var $12=$p_lsf;var $incdec_ptr10=$12+2|0;$p_lsf=$incdec_ptr10;var $13=HEAP16[$12>>1];var $conv11=$13<<16>>16;var $14=$min_dist_addr;var $conv12=$14<<16>>16;var $add13=$conv11+$conv12|0;var $conv14=$add13&65535;$lsf_min=$conv14;__label__=5;break;case 5:__label__=6;break;case 6:var $15=$i;var $inc=$15+1&65535;$i=$inc;__label__=1;break;case 7:;return;default:assert(0,"bad label: "+__label__)}}_Reorder_lsf["X"]=1;function _Qua_gain($mode,$exp_gcode0,$frac_gcode0,$frac_coeff,$exp_coeff,$gp_limit,$gain_pit,$gain_cod,$qua_ener_MR122,$qua_ener,$common_amr_tbls,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=36;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $exp_gcode0_addr;var $frac_gcode0_addr;var $frac_coeff_addr;var $exp_coeff_addr;var $gp_limit_addr;var $gain_pit_addr;var $gain_cod_addr;var $qua_ener_MR122_addr;var $qua_ener_addr;var $common_amr_tbls_addr;var $pOverflow_addr;var $p;var $i;var $j;var $index;var $gcode0;var $e_max;var $temp;var $exp_code;var $g_pitch;var $g2_pitch;var $g_code;var $g2_code;var $g_pit_cod;var $coeff=__stackBase__;var $coeff_lo=__stackBase__+12;var $exp_max=__stackBase__+24;var $L_tmp;var $L_tmp2;var $dist_min;var $table_gain;var $table_len;$mode_addr=$mode;$exp_gcode0_addr=$exp_gcode0;$frac_gcode0_addr=$frac_gcode0;$frac_coeff_addr=$frac_coeff;$exp_coeff_addr=$exp_coeff;$gp_limit_addr=$gp_limit;$gain_pit_addr=$gain_pit;$gain_cod_addr=$gain_cod;$qua_ener_MR122_addr=$qua_ener_MR122;$qua_ener_addr=$qua_ener;$common_amr_tbls_addr=$common_amr_tbls;$pOverflow_addr=$pOverflow;$index=0;var $0=$mode_addr;var $cmp=($0|0)==6;if($cmp){__label__=3;break}else{__label__=1;break}case 1:var $1=$mode_addr;var $cmp1=($1|0)==4;if($cmp1){__label__=3;break}else{__label__=2;break}case 2:var $2=$mode_addr;var $cmp3=($2|0)==3;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:$table_len=128;var $3=$common_amr_tbls_addr;var $table_gain_highrates_ptr=$3+84|0;var $4=HEAP32[$table_gain_highrates_ptr>>2];$table_gain=$4;__label__=5;break;case 4:$table_len=64;var $5=$common_amr_tbls_addr;var $table_gain_lowrates_ptr=$5+80|0;var $6=HEAP32[$table_gain_lowrates_ptr>>2];$table_gain=$6;__label__=5;break;case 5:var $7=$frac_gcode0_addr;var $8=$pOverflow_addr;var $call=_Pow2(14,$7,$8);var $conv=$call&65535;$gcode0=$conv;var $9=$exp_gcode0_addr;var $conv4=$9<<16>>16;var $sub=$conv4-11|0;var $conv5=$sub&65535;$exp_code=$conv5;var $10=$exp_coeff_addr;var $arrayidx=$10|0;var $11=HEAP16[$arrayidx>>1];var $conv6=$11<<16>>16;var $sub7=$conv6-13|0;var $conv8=$sub7&65535;var $arrayidx9=$exp_max|0;HEAP16[$arrayidx9>>1]=$conv8;var $12=$exp_coeff_addr;var $arrayidx10=$12+2|0;var $13=HEAP16[$arrayidx10>>1];var $conv11=$13<<16>>16;var $sub12=$conv11-14|0;var $conv13=$sub12&65535;var $arrayidx14=$exp_max+2|0;HEAP16[$arrayidx14>>1]=$conv13;var $14=$exp_code;var $15=$pOverflow_addr;var $call15=_shl417($14,1,$15);$temp=$call15;var $16=$temp;var $conv16=$16<<16>>16;var $add=$conv16+15|0;var $conv17=$add&65535;$temp=$conv17;var $17=$exp_coeff_addr;var $arrayidx18=$17+4|0;var $18=HEAP16[$arrayidx18>>1];var $19=$temp;var $20=$pOverflow_addr;var $call19=_add_16($18,$19,$20);var $arrayidx20=$exp_max+4|0;HEAP16[$arrayidx20>>1]=$call19;var $21=$exp_coeff_addr;var $arrayidx21=$21+6|0;var $22=HEAP16[$arrayidx21>>1];var $23=$exp_code;var $24=$pOverflow_addr;var $call22=_add_16($22,$23,$24);var $arrayidx23=$exp_max+6|0;HEAP16[$arrayidx23>>1]=$call22;var $25=$exp_code;var $conv24=$25<<16>>16;var $add25=$conv24+1|0;var $conv26=$add25&65535;$temp=$conv26;var $26=$exp_coeff_addr;var $arrayidx27=$26+8|0;var $27=HEAP16[$arrayidx27>>1];var $28=$temp;var $29=$pOverflow_addr;var $call28=_add_16($27,$28,$29);var $arrayidx29=$exp_max+8|0;HEAP16[$arrayidx29>>1]=$call28;var $arrayidx30=$exp_max|0;var $30=HEAP16[$arrayidx30>>1];$e_max=$30;$i=1;__label__=6;break;case 6:var $31=$i;var $conv31=$31<<16>>16;var $cmp32=($conv31|0)<5;if($cmp32){__label__=7;break}else{__label__=11;break}case 7:var $32=$i;var $idxprom=$32<<16>>16;var $arrayidx34=$exp_max+($idxprom<<1)|0;var $33=HEAP16[$arrayidx34>>1];var $conv35=$33<<16>>16;var $34=$e_max;var $conv36=$34<<16>>16;var $cmp37=($conv35|0)>($conv36|0);if($cmp37){__label__=8;break}else{__label__=9;break}case 8:var $35=$i;var $idxprom40=$35<<16>>16;var $arrayidx41=$exp_max+($idxprom40<<1)|0;var $36=HEAP16[$arrayidx41>>1];$e_max=$36;__label__=9;break;case 9:__label__=10;break;case 10:var $37=$i;var $inc=$37+1&65535;$i=$inc;__label__=6;break;case 11:var $38=$e_max;var $inc43=$38+1&65535;$e_max=$inc43;$i=0;__label__=12;break;case 12:var $39=$i;var $conv45=$39<<16>>16;var $cmp46=($conv45|0)<5;if($cmp46){__label__=13;break}else{__label__=15;break}case 13:var $40=$e_max;var $conv49=$40<<16>>16;var $41=$i;var $idxprom50=$41<<16>>16;var $arrayidx51=$exp_max+($idxprom50<<1)|0;var $42=HEAP16[$arrayidx51>>1];var $conv52=$42<<16>>16;var $sub53=$conv49-$conv52|0;var $conv54=$sub53&65535;$j=$conv54;var $43=$i;var $idxprom55=$43<<16>>16;var $44=$frac_coeff_addr;var $arrayidx56=$44+($idxprom55<<1)|0;var $45=HEAP16[$arrayidx56>>1];var $conv57=$45<<16>>16;var $shl=$conv57<<16;$L_tmp=$shl;var $46=$L_tmp;var $47=$j;var $48=$pOverflow_addr;var $call58=_L_shr418($46,$47,$48);$L_tmp=$call58;var $49=$L_tmp;var $50=$i;var $idxprom59=$50<<16>>16;var $arrayidx60=$coeff+($idxprom59<<1)|0;var $51=$i;var $idxprom61=$51<<16>>16;var $arrayidx62=$coeff_lo+($idxprom61<<1)|0;var $52=$pOverflow_addr;_L_Extract($49,$arrayidx60,$arrayidx62,$52);__label__=14;break;case 14:var $53=$i;var $inc64=$53+1&65535;$i=$inc64;__label__=12;break;case 15:$dist_min=2147483647;var $54=$table_gain;var $arrayidx66=$54|0;$p=$arrayidx66;$i=0;__label__=16;break;case 16:var $55=$i;var $conv68=$55<<16>>16;var $56=$table_len;var $conv69=$56<<16>>16;var $cmp70=($conv68|0)<($conv69|0);if($cmp70){__label__=17;break}else{__label__=23;break}case 17:var $57=$p;var $incdec_ptr=$57+2|0;$p=$incdec_ptr;var $58=HEAP16[$57>>1];$g_pitch=$58;var $59=$p;var $incdec_ptr73=$59+2|0;$p=$incdec_ptr73;var $60=HEAP16[$59>>1];$g_code=$60;var $61=$p;var $incdec_ptr74=$61+2|0;$p=$incdec_ptr74;var $62=$p;var $incdec_ptr75=$62+2|0;$p=$incdec_ptr75;var $63=$g_pitch;var $conv76=$63<<16>>16;var $64=$gp_limit_addr;var $conv77=$64<<16>>16;var $cmp78=($conv76|0)<=($conv77|0);if($cmp78){__label__=18;break}else{__label__=21;break}case 18:var $65=$g_code;var $66=$gcode0;var $67=$pOverflow_addr;var $call81=_mult419($65,$66,$67);$g_code=$call81;var $68=$g_pitch;var $69=$g_pitch;var $70=$pOverflow_addr;var $call82=_mult419($68,$69,$70);$g2_pitch=$call82;var $71=$g_code;var $72=$g_code;var $73=$pOverflow_addr;var $call83=_mult419($71,$72,$73);$g2_code=$call83;var $74=$g_code;var $75=$g_pitch;var $76=$pOverflow_addr;var $call84=_mult419($74,$75,$76);$g_pit_cod=$call84;var $arrayidx85=$coeff|0;var $77=HEAP16[$arrayidx85>>1];var $arrayidx86=$coeff_lo|0;var $78=HEAP16[$arrayidx86>>1];var $79=$g2_pitch;var $80=$pOverflow_addr;var $call87=_Mpy_32_16420($77,$78,$79,$80);$L_tmp=$call87;var $arrayidx88=$coeff+2|0;var $81=HEAP16[$arrayidx88>>1];var $arrayidx89=$coeff_lo+2|0;var $82=HEAP16[$arrayidx89>>1];var $83=$g_pitch;var $84=$pOverflow_addr;var $call90=_Mpy_32_16420($81,$82,$83,$84);$L_tmp2=$call90;var $85=$L_tmp;var $86=$L_tmp2;var $87=$pOverflow_addr;var $call91=_L_add421($85,$86,$87);$L_tmp=$call91;var $arrayidx92=$coeff+4|0;var $88=HEAP16[$arrayidx92>>1];var $arrayidx93=$coeff_lo+4|0;var $89=HEAP16[$arrayidx93>>1];var $90=$g2_code;var $91=$pOverflow_addr;var $call94=_Mpy_32_16420($88,$89,$90,$91);$L_tmp2=$call94;var $92=$L_tmp;var $93=$L_tmp2;var $94=$pOverflow_addr;var $call95=_L_add421($92,$93,$94);$L_tmp=$call95;var $arrayidx96=$coeff+6|0;var $95=HEAP16[$arrayidx96>>1];var $arrayidx97=$coeff_lo+6|0;var $96=HEAP16[$arrayidx97>>1];var $97=$g_code;var $98=$pOverflow_addr;var $call98=_Mpy_32_16420($95,$96,$97,$98);$L_tmp2=$call98;var $99=$L_tmp;var $100=$L_tmp2;var $101=$pOverflow_addr;var $call99=_L_add421($99,$100,$101);$L_tmp=$call99;var $arrayidx100=$coeff+8|0;var $102=HEAP16[$arrayidx100>>1];var $arrayidx101=$coeff_lo+8|0;var $103=HEAP16[$arrayidx101>>1];var $104=$g_pit_cod;var $105=$pOverflow_addr;var $call102=_Mpy_32_16420($102,$103,$104,$105);$L_tmp2=$call102;var $106=$L_tmp;var $107=$L_tmp2;var $108=$pOverflow_addr;var $call103=_L_add421($106,$107,$108);$L_tmp=$call103;var $109=$L_tmp;var $110=$dist_min;var $cmp104=($109|0)<($110|0);if($cmp104){__label__=19;break}else{__label__=20;break}case 19:var $111=$L_tmp;$dist_min=$111;var $112=$i;$index=$112;__label__=20;break;case 20:__label__=21;break;case 21:__label__=22;break;case 22:var $113=$i;var $inc110=$113+1&65535;$i=$inc110;__label__=16;break;case 23:var $114=$index;var $115=$pOverflow_addr;var $call112=_shl417($114,2,$115);var $idxprom113=$call112<<16>>16;var $116=$table_gain;var $arrayidx114=$116+($idxprom113<<1)|0;$p=$arrayidx114;var $117=$p;var $incdec_ptr115=$117+2|0;$p=$incdec_ptr115;var $118=HEAP16[$117>>1];var $119=$gain_pit_addr;HEAP16[$119>>1]=$118;var $120=$p;var $incdec_ptr116=$120+2|0;$p=$incdec_ptr116;var $121=HEAP16[$120>>1];$g_code=$121;var $122=$p;var $incdec_ptr117=$122+2|0;$p=$incdec_ptr117;var $123=HEAP16[$122>>1];var $124=$qua_ener_MR122_addr;HEAP16[$124>>1]=$123;var $125=$p;var $126=HEAP16[$125>>1];var $127=$qua_ener_addr;HEAP16[$127>>1]=$126;var $128=$g_code;var $129=$gcode0;var $130=$pOverflow_addr;var $call118=_L_mult422($128,$129,$130);$L_tmp=$call118;var $131=$exp_gcode0_addr;var $conv119=$131<<16>>16;var $sub120=10-$conv119|0;var $conv121=$sub120&65535;$temp=$conv121;var $132=$L_tmp;var $133=$temp;var $134=$pOverflow_addr;var $call122=_L_shr418($132,$133,$134);$L_tmp=$call122;var $135=$L_tmp;var $shr=$135>>16;var $conv123=$shr&65535;var $136=$gain_cod_addr;HEAP16[$136>>1]=$conv123;var $137=$index;STACKTOP=__stackBase__;return $137;default:assert(0,"bad label: "+__label__)}}_Qua_gain["X"]=1;function _L_add433($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _Residu($coef_ptr,$input_ptr,$residual_ptr,$input_len){var __label__;__label__=0;while(1)switch(__label__){case 0:var $coef_ptr_addr;var $input_ptr_addr;var $residual_ptr_addr;var $input_len_addr;var $i;var $j;var $s1;var $s2;var $s3;var $s4;var $p_input1;var $p_input2;var $p_input3;var $p_input4;var $p_coef;var $p_residual_ptr;var $p_input_ptr;$coef_ptr_addr=$coef_ptr;$input_ptr_addr=$input_ptr;$residual_ptr_addr=$residual_ptr;$input_len_addr=$input_len;var $0=$input_len_addr;var $conv=$0<<16>>16;var $sub=$conv-1|0;var $1=$residual_ptr_addr;var $arrayidx=$1+($sub<<1)|0;$p_residual_ptr=$arrayidx;var $2=$input_len_addr;var $conv1=$2<<16>>16;var $sub2=$conv1-1|0;var $sub3=$sub2-10|0;var $3=$input_ptr_addr;var $arrayidx4=$3+($sub3<<1)|0;$p_input_ptr=$arrayidx4;var $4=$input_len_addr;var $conv5=$4<<16>>16;var $shr=$conv5>>2;var $conv6=$shr&65535;$i=$conv6;__label__=1;break;case 1:var $5=$i;var $conv7=$5<<16>>16;var $cmp=($conv7|0)!=0;if($cmp){__label__=2;break}else{__label__=8;break}case 2:$s1=2048;$s2=2048;$s3=2048;$s4=2048;var $6=$coef_ptr_addr;var $arrayidx9=$6+20|0;$p_coef=$arrayidx9;var $7=$p_input_ptr;var $incdec_ptr=$7-2|0;$p_input_ptr=$incdec_ptr;$p_input1=$7;var $8=$p_input_ptr;var $incdec_ptr10=$8-2|0;$p_input_ptr=$incdec_ptr10;$p_input2=$8;var $9=$p_input_ptr;var $incdec_ptr11=$9-2|0;$p_input_ptr=$incdec_ptr11;$p_input3=$9;var $10=$p_input_ptr;var $incdec_ptr12=$10-2|0;$p_input_ptr=$incdec_ptr12;$p_input4=$10;$j=5;__label__=3;break;case 3:var $11=$j;var $conv14=$11<<16>>16;var $cmp15=($conv14|0)!=0;if($cmp15){__label__=4;break}else{__label__=6;break}case 4:var $12=$p_coef;var $13=HEAP16[$12>>1];var $conv18=$13<<16>>16;var $14=$p_input1;var $incdec_ptr19=$14+2|0;$p_input1=$incdec_ptr19;var $15=HEAP16[$14>>1];var $conv20=$15<<16>>16;var $mul=$conv18*$conv20|0;var $16=$s1;var $add=$16+$mul|0;$s1=$add;var $17=$p_coef;var $18=HEAP16[$17>>1];var $conv21=$18<<16>>16;var $19=$p_input2;var $incdec_ptr22=$19+2|0;$p_input2=$incdec_ptr22;var $20=HEAP16[$19>>1];var $conv23=$20<<16>>16;var $mul24=$conv21*$conv23|0;var $21=$s2;var $add25=$21+$mul24|0;$s2=$add25;var $22=$p_coef;var $23=HEAP16[$22>>1];var $conv26=$23<<16>>16;var $24=$p_input3;var $incdec_ptr27=$24+2|0;$p_input3=$incdec_ptr27;var $25=HEAP16[$24>>1];var $conv28=$25<<16>>16;var $mul29=$conv26*$conv28|0;var $26=$s3;var $add30=$26+$mul29|0;$s3=$add30;var $27=$p_coef;var $incdec_ptr31=$27-2|0;$p_coef=$incdec_ptr31;var $28=HEAP16[$27>>1];var $conv32=$28<<16>>16;var $29=$p_input4;var $incdec_ptr33=$29+2|0;$p_input4=$incdec_ptr33;var $30=HEAP16[$29>>1];var $conv34=$30<<16>>16;var $mul35=$conv32*$conv34|0;var $31=$s4;var $add36=$31+$mul35|0;$s4=$add36;var $32=$p_coef;var $33=HEAP16[$32>>1];var $conv37=$33<<16>>16;var $34=$p_input1;var $incdec_ptr38=$34+2|0;$p_input1=$incdec_ptr38;var $35=HEAP16[$34>>1];var $conv39=$35<<16>>16;var $mul40=$conv37*$conv39|0;var $36=$s1;var $add41=$36+$mul40|0;$s1=$add41;var $37=$p_coef;var $38=HEAP16[$37>>1];var $conv42=$38<<16>>16;var $39=$p_input2;var $incdec_ptr43=$39+2|0;$p_input2=$incdec_ptr43;var $40=HEAP16[$39>>1];var $conv44=$40<<16>>16;var $mul45=$conv42*$conv44|0;var $41=$s2;var $add46=$41+$mul45|0;$s2=$add46;var $42=$p_coef;var $43=HEAP16[$42>>1];var $conv47=$43<<16>>16;var $44=$p_input3;var $incdec_ptr48=$44+2|0;$p_input3=$incdec_ptr48;var $45=HEAP16[$44>>1];var $conv49=$45<<16>>16;var $mul50=$conv47*$conv49|0;var $46=$s3;var $add51=$46+$mul50|0;$s3=$add51;var $47=$p_coef;var $incdec_ptr52=$47-2|0;$p_coef=$incdec_ptr52;var $48=HEAP16[$47>>1];var $conv53=$48<<16>>16;var $49=$p_input4;var $incdec_ptr54=$49+2|0;$p_input4=$incdec_ptr54;var $50=HEAP16[$49>>1];var $conv55=$50<<16>>16;var $mul56=$conv53*$conv55|0;var $51=$s4;var $add57=$51+$mul56|0;$s4=$add57;__label__=5;break;case 5:var $52=$j;var $dec=$52-1&65535;$j=$dec;__label__=3;break;case 6:var $53=$p_coef;var $54=HEAP16[$53>>1];var $conv58=$54<<16>>16;var $55=$p_input1;var $56=HEAP16[$55>>1];var $conv59=$56<<16>>16;var $mul60=$conv58*$conv59|0;var $57=$s1;var $add61=$57+$mul60|0;$s1=$add61;var $58=$p_coef;var $59=HEAP16[$58>>1];var $conv62=$59<<16>>16;var $60=$p_input2;var $61=HEAP16[$60>>1];var $conv63=$61<<16>>16;var $mul64=$conv62*$conv63|0;var $62=$s2;var $add65=$62+$mul64|0;$s2=$add65;var $63=$p_coef;var $64=HEAP16[$63>>1];var $conv66=$64<<16>>16;var $65=$p_input3;var $66=HEAP16[$65>>1];var $conv67=$66<<16>>16;var $mul68=$conv66*$conv67|0;var $67=$s3;var $add69=$67+$mul68|0;$s3=$add69;var $68=$p_coef;var $69=HEAP16[$68>>1];var $conv70=$69<<16>>16;var $70=$p_input4;var $71=HEAP16[$70>>1];var $conv71=$71<<16>>16;var $mul72=$conv70*$conv71|0;var $72=$s4;var $add73=$72+$mul72|0;$s4=$add73;var $73=$s1;var $shr74=$73>>12;var $conv75=$shr74&65535;var $74=$p_residual_ptr;var $incdec_ptr76=$74-2|0;$p_residual_ptr=$incdec_ptr76;HEAP16[$74>>1]=$conv75;var $75=$s2;var $shr77=$75>>12;var $conv78=$shr77&65535;var $76=$p_residual_ptr;var $incdec_ptr79=$76-2|0;$p_residual_ptr=$incdec_ptr79;HEAP16[$76>>1]=$conv78;var $77=$s3;var $shr80=$77>>12;var $conv81=$shr80&65535;var $78=$p_residual_ptr;var $incdec_ptr82=$78-2|0;$p_residual_ptr=$incdec_ptr82;HEAP16[$78>>1]=$conv81;var $79=$s4;var $shr83=$79>>12;var $conv84=$shr83&65535;var $80=$p_residual_ptr;var $incdec_ptr85=$80-2|0;$p_residual_ptr=$incdec_ptr85;HEAP16[$80>>1]=$conv84;__label__=7;break;case 7:var $81=$i;var $dec87=$81-1&65535;$i=$dec87;__label__=1;break;case 8:;return;default:assert(0,"bad label: "+__label__)}}_Residu["X"]=1;function _pv_round($L_var1,$pOverflow){var __label__;var $L_var1_addr;var $pOverflow_addr;var $result;$L_var1_addr=$L_var1;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$pOverflow_addr;var $call=_L_add433($0,32768,$1);$L_var1_addr=$call;var $2=$L_var1_addr;var $shr=$2>>16;var $conv=$shr&65535;$result=$conv;var $3=$result;return $3}function _search_10and8i40($nbPulse,$step,$nbTracks,$dn,$rr,$ipos,$pos_max,$codvec,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=180;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $nbPulse_addr;var $step_addr;var $nbTracks_addr;var $dn_addr;var $rr_addr;var $ipos_addr;var $pos_max_addr;var $codvec_addr;var $pOverflow_addr;var $i0;var $i1;var $i2;var $i3;var $i4;var $i5;var $i6;var $i7;var $i9;var $i;var $j;var $k;var $pos;var $ia;var $ib;var $psk;var $sq;var $sq2;var $alpk;var $alp;var $alp_16;var $s;var $alp0;var $alp1;var $alp2;var $gsmefrFlag;var $p_codvec;var $p_temp2;var $temp1=__stackBase__;var $p_temp1;var $ps2;var $ps1;var $ps;var $ps0;var $index=__stackBase__+160;$nbPulse_addr=$nbPulse;$step_addr=$step;$nbTracks_addr=$nbTracks;$dn_addr=$dn;$rr_addr=$rr;$ipos_addr=$ipos;$pos_max_addr=$pos_max;$codvec_addr=$codvec;$pOverflow_addr=$pOverflow;var $0=$codvec_addr;$p_codvec=$0;var $1=$pOverflow_addr;var $2=$nbPulse_addr;var $conv=$2<<16>>16;var $cmp=($conv|0)==10;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$gsmefrFlag=1;__label__=3;break;case 2:$gsmefrFlag=0;__label__=3;break;case 3:var $3=$ipos_addr;var $arrayidx=$3|0;var $4=HEAP16[$arrayidx>>1];var $idxprom=$4<<16>>16;var $5=$pos_max_addr;var $arrayidx2=$5+($idxprom<<1)|0;var $6=HEAP16[$arrayidx2>>1];$i0=$6;var $7=$i0;var $arrayidx3=$index|0;HEAP16[$arrayidx3>>1]=$7;$psk=-1;$alpk=1;$i=0;__label__=4;break;case 4:var $8=$i;var $conv4=$8<<16>>16;var $9=$nbPulse_addr;var $conv5=$9<<16>>16;var $cmp6=($conv4|0)<($conv5|0);if($cmp6){__label__=5;break}else{__label__=7;break}case 5:var $10=$i;var $11=$p_codvec;var $incdec_ptr=$11+2|0;$p_codvec=$incdec_ptr;HEAP16[$11>>1]=$10;__label__=6;break;case 6:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=4;break;case 7:$i=1;__label__=8;break;case 8:var $13=$i;var $conv9=$13<<16>>16;var $14=$nbTracks_addr;var $conv10=$14<<16>>16;var $cmp11=($conv9|0)<($conv10|0);if($cmp11){__label__=9;break}else{__label__=78;break}case 9:var $15=$ipos_addr;var $arrayidx14=$15+2|0;var $16=HEAP16[$arrayidx14>>1];var $idxprom15=$16<<16>>16;var $17=$pos_max_addr;var $arrayidx16=$17+($idxprom15<<1)|0;var $18=HEAP16[$arrayidx16>>1];$i1=$18;var $19=$i1;var $arrayidx17=$index+2|0;HEAP16[$arrayidx17>>1]=$19;var $20=$i0;var $idxprom18=$20<<16>>16;var $21=$dn_addr;var $arrayidx19=$21+($idxprom18<<1)|0;var $22=HEAP16[$arrayidx19>>1];var $conv20=$22<<16>>16;var $23=$i1;var $idxprom21=$23<<16>>16;var $24=$dn_addr;var $arrayidx22=$24+($idxprom21<<1)|0;var $25=HEAP16[$arrayidx22>>1];var $conv23=$25<<16>>16;var $add=$conv20+$conv23|0;var $conv24=$add&65535;$ps0=$conv24;var $26=$i0;var $idxprom25=$26<<16>>16;var $27=$i0;var $idxprom26=$27<<16>>16;var $28=$rr_addr;var $arrayidx27=$28+$idxprom26*80|0;var $arrayidx28=$arrayidx27+($idxprom25<<1)|0;var $29=HEAP16[$arrayidx28>>1];var $conv29=$29<<16>>16;var $shl=$conv29<<12;$alp0=$shl;var $30=$i1;var $idxprom30=$30<<16>>16;var $31=$i1;var $idxprom31=$31<<16>>16;var $32=$rr_addr;var $arrayidx32=$32+$idxprom31*80|0;var $arrayidx33=$arrayidx32+($idxprom30<<1)|0;var $33=HEAP16[$arrayidx33>>1];var $conv34=$33<<16>>16;var $shl35=$conv34<<12;var $34=$alp0;var $add36=$34+$shl35|0;$alp0=$add36;var $35=$i1;var $idxprom37=$35<<16>>16;var $36=$i0;var $idxprom38=$36<<16>>16;var $37=$rr_addr;var $arrayidx39=$37+$idxprom38*80|0;var $arrayidx40=$arrayidx39+($idxprom37<<1)|0;var $38=HEAP16[$arrayidx40>>1];var $conv41=$38<<16>>16;var $shl42=$conv41<<13;var $39=$alp0;var $add43=$39+$shl42|0;$alp0=$add43;var $40=$alp0;var $add44=$40+32768|0;$alp0=$add44;var $arraydecay=$temp1|0;$p_temp1=$arraydecay;var $41=$ipos_addr;var $arrayidx45=$41+6|0;var $42=HEAP16[$arrayidx45>>1];$i3=$42;__label__=10;break;case 10:var $43=$i3;var $conv47=$43<<16>>16;var $cmp48=($conv47|0)<40;if($cmp48){__label__=11;break}else{__label__=13;break}case 11:var $44=$i3;var $idxprom51=$44<<16>>16;var $45=$rr_addr;var $arrayidx52=$45+$idxprom51*80|0;var $arrayidx53=$arrayidx52|0;$p_temp2=$arrayidx53;var $46=$p_temp2;var $47=$i3;var $conv54=$47<<16>>16;var $add_ptr=$46+($conv54<<1)|0;var $48=HEAP16[$add_ptr>>1];var $conv55=$48<<16>>16;var $shr=$conv55>>1;$s=$shr;var $49=$p_temp2;var $50=$i0;var $conv56=$50<<16>>16;var $add_ptr57=$49+($conv56<<1)|0;var $51=HEAP16[$add_ptr57>>1];var $conv58=$51<<16>>16;var $52=$s;var $add59=$52+$conv58|0;$s=$add59;var $53=$p_temp2;var $54=$i1;var $conv60=$54<<16>>16;var $add_ptr61=$53+($conv60<<1)|0;var $55=HEAP16[$add_ptr61>>1];var $conv62=$55<<16>>16;var $56=$s;var $add63=$56+$conv62|0;$s=$add63;var $57=$ps0;var $conv64=$57<<16>>16;var $58=$i3;var $idxprom65=$58<<16>>16;var $59=$dn_addr;var $arrayidx66=$59+($idxprom65<<1)|0;var $60=HEAP16[$arrayidx66>>1];var $conv67=$60<<16>>16;var $add68=$conv64+$conv67|0;var $conv69=$add68&65535;var $61=$p_temp1;var $incdec_ptr70=$61+2|0;$p_temp1=$incdec_ptr70;HEAP16[$61>>1]=$conv69;var $62=$s;var $add71=$62+2|0;var $shr72=$add71>>2;var $conv73=$shr72&65535;var $63=$p_temp1;var $incdec_ptr74=$63+2|0;$p_temp1=$incdec_ptr74;HEAP16[$63>>1]=$conv73;__label__=12;break;case 12:var $64=$step_addr;var $conv76=$64<<16>>16;var $65=$i3;var $conv77=$65<<16>>16;var $add78=$conv77+$conv76|0;var $conv79=$add78&65535;$i3=$conv79;__label__=10;break;case 13:$sq=-1;$alp=1;$ps=0;var $66=$ipos_addr;var $arrayidx81=$66+4|0;var $67=HEAP16[$arrayidx81>>1];$ia=$67;var $68=$ipos_addr;var $arrayidx82=$68+6|0;var $69=HEAP16[$arrayidx82>>1];$ib=$69;var $70=$alp0;var $shr83=$70>>12;$s=$shr83;var $71=$ipos_addr;var $arrayidx84=$71+4|0;var $72=HEAP16[$arrayidx84>>1];$j=$72;__label__=14;break;case 14:var $73=$j;var $conv86=$73<<16>>16;var $cmp87=($conv86|0)<40;if($cmp87){__label__=15;break}else{__label__=23;break}case 15:var $74=$j;var $idxprom90=$74<<16>>16;var $75=$rr_addr;var $arrayidx91=$75+$idxprom90*80|0;var $arrayidx92=$arrayidx91|0;$p_temp2=$arrayidx92;var $76=$s;var $77=$p_temp2;var $78=$j;var $conv93=$78<<16>>16;var $add_ptr94=$77+($conv93<<1)|0;var $79=HEAP16[$add_ptr94>>1];var $conv95=$79<<16>>16;var $add96=$76+$conv95|0;var $shr97=$add96>>1;$alp1=$shr97;var $80=$p_temp2;var $81=$i0;var $conv98=$81<<16>>16;var $add_ptr99=$80+($conv98<<1)|0;var $82=HEAP16[$add_ptr99>>1];var $conv100=$82<<16>>16;var $83=$alp1;var $add101=$83+$conv100|0;$alp1=$add101;var $84=$p_temp2;var $85=$i1;var $conv102=$85<<16>>16;var $add_ptr103=$84+($conv102<<1)|0;var $86=HEAP16[$add_ptr103>>1];var $conv104=$86<<16>>16;var $87=$alp1;var $add105=$87+$conv104|0;$alp1=$add105;var $arraydecay106=$temp1|0;$p_temp1=$arraydecay106;var $88=$j;var $idxprom107=$88<<16>>16;var $89=$dn_addr;var $arrayidx108=$89+($idxprom107<<1)|0;var $90=HEAP16[$arrayidx108>>1];$ps1=$90;var $91=$ipos_addr;var $arrayidx109=$91+6|0;var $92=HEAP16[$arrayidx109>>1];$i3=$92;__label__=16;break;case 16:var $93=$i3;var $conv111=$93<<16>>16;var $cmp112=($conv111|0)<40;if($cmp112){__label__=17;break}else{__label__=21;break}case 17:var $94=$ps1;var $conv115=$94<<16>>16;var $95=$p_temp1;var $incdec_ptr116=$95+2|0;$p_temp1=$incdec_ptr116;var $96=HEAP16[$95>>1];var $conv117=$96<<16>>16;var $add118=$conv115+$conv117|0;var $conv119=$add118&65535;$ps2=$conv119;var $97=$ps2;var $conv120=$97<<16>>16;var $98=$ps2;var $conv121=$98<<16>>16;var $mul=$conv120*$conv121|0;var $shr122=$mul>>15;var $conv123=$shr122&65535;$sq2=$conv123;var $99=$alp1;var $100=$i3;var $idxprom124=$100<<16>>16;var $101=$p_temp2;var $arrayidx125=$101+($idxprom124<<1)|0;var $102=HEAP16[$arrayidx125>>1];var $conv126=$102<<16>>16;var $add127=$99+$conv126|0;var $shr128=$add127>>2;$alp2=$shr128;var $103=$alp2;var $104=$p_temp1;var $incdec_ptr129=$104+2|0;$p_temp1=$incdec_ptr129;var $105=HEAP16[$104>>1];var $conv130=$105<<16>>16;var $add131=$103+$conv130|0;var $shr132=$add131>>1;$alp2=$shr132;var $106=$sq2;var $conv133=$106<<16>>16;var $107=$alp;var $conv134=$107<<16>>16;var $mul135=$conv133*$conv134|0;var $108=$sq;var $conv136=$108<<16>>16;var $109=$alp2;var $mul137=$conv136*$109|0;var $cmp138=($mul135|0)>($mul137|0);if($cmp138){__label__=18;break}else{__label__=19;break}case 18:var $110=$sq2;$sq=$110;var $111=$ps2;$ps=$111;var $112=$alp2;var $conv141=$112&65535;$alp=$conv141;var $113=$j;$ia=$113;var $114=$i3;$ib=$114;__label__=19;break;case 19:__label__=20;break;case 20:var $115=$step_addr;var $conv144=$115<<16>>16;var $116=$i3;var $conv145=$116<<16>>16;var $add146=$conv145+$conv144|0;var $conv147=$add146&65535;$i3=$conv147;__label__=16;break;case 21:__label__=22;break;case 22:var $117=$step_addr;var $conv150=$117<<16>>16;var $118=$j;var $conv151=$118<<16>>16;var $add152=$conv151+$conv150|0;var $conv153=$add152&65535;$j=$conv153;__label__=14;break;case 23:var $119=$ia;$i2=$119;var $120=$ib;$i3=$120;var $121=$ia;var $arrayidx155=$index+4|0;HEAP16[$arrayidx155>>1]=$121;var $122=$ib;var $arrayidx156=$index+6|0;HEAP16[$arrayidx156>>1]=$122;var $123=$alp;var $conv157=$123<<16>>16;var $shl158=$conv157<<15;var $add159=$shl158+32768|0;$alp0=$add159;var $arraydecay160=$temp1|0;$p_temp1=$arraydecay160;var $124=$ipos_addr;var $arrayidx161=$124+10|0;var $125=HEAP16[$arrayidx161>>1];$i5=$125;__label__=24;break;case 24:var $126=$i5;var $conv163=$126<<16>>16;var $cmp164=($conv163|0)<40;if($cmp164){__label__=25;break}else{__label__=27;break}case 25:var $127=$i5;var $idxprom167=$127<<16>>16;var $128=$rr_addr;var $arrayidx168=$128+$idxprom167*80|0;var $arrayidx169=$arrayidx168|0;$p_temp2=$arrayidx169;var $129=$p_temp2;var $130=$i5;var $conv170=$130<<16>>16;var $add_ptr171=$129+($conv170<<1)|0;var $131=HEAP16[$add_ptr171>>1];var $conv172=$131<<16>>16;var $shr173=$conv172>>1;$s=$shr173;var $132=$p_temp2;var $133=$i0;var $conv174=$133<<16>>16;var $add_ptr175=$132+($conv174<<1)|0;var $134=HEAP16[$add_ptr175>>1];var $conv176=$134<<16>>16;var $135=$s;var $add177=$135+$conv176|0;$s=$add177;var $136=$p_temp2;var $137=$i1;var $conv178=$137<<16>>16;var $add_ptr179=$136+($conv178<<1)|0;var $138=HEAP16[$add_ptr179>>1];var $conv180=$138<<16>>16;var $139=$s;var $add181=$139+$conv180|0;$s=$add181;var $140=$p_temp2;var $141=$i2;var $conv182=$141<<16>>16;var $add_ptr183=$140+($conv182<<1)|0;var $142=HEAP16[$add_ptr183>>1];var $conv184=$142<<16>>16;var $143=$s;var $add185=$143+$conv184|0;$s=$add185;var $144=$p_temp2;var $145=$i3;var $conv186=$145<<16>>16;var $add_ptr187=$144+($conv186<<1)|0;var $146=HEAP16[$add_ptr187>>1];var $conv188=$146<<16>>16;var $147=$s;var $add189=$147+$conv188|0;$s=$add189;var $148=$ps;var $conv190=$148<<16>>16;var $149=$i5;var $idxprom191=$149<<16>>16;var $150=$dn_addr;var $arrayidx192=$150+($idxprom191<<1)|0;var $151=HEAP16[$arrayidx192>>1];var $conv193=$151<<16>>16;var $add194=$conv190+$conv193|0;var $conv195=$add194&65535;var $152=$p_temp1;var $incdec_ptr196=$152+2|0;$p_temp1=$incdec_ptr196;HEAP16[$152>>1]=$conv195;var $153=$s;var $add197=$153+2|0;var $shr198=$add197>>2;var $conv199=$shr198&65535;var $154=$p_temp1;var $incdec_ptr200=$154+2|0;$p_temp1=$incdec_ptr200;HEAP16[$154>>1]=$conv199;__label__=26;break;case 26:var $155=$step_addr;var $conv202=$155<<16>>16;var $156=$i5;var $conv203=$156<<16>>16;var $add204=$conv203+$conv202|0;var $conv205=$add204&65535;$i5=$conv205;__label__=24;break;case 27:$sq=-1;$alp=1;$ps=0;var $157=$ipos_addr;var $arrayidx207=$157+8|0;var $158=HEAP16[$arrayidx207>>1];$ia=$158;var $159=$ipos_addr;var $arrayidx208=$159+10|0;var $160=HEAP16[$arrayidx208>>1];$ib=$160;var $161=$ipos_addr;var $arrayidx209=$161+8|0;var $162=HEAP16[$arrayidx209>>1];$j=$162;__label__=28;break;case 28:var $163=$j;var $conv211=$163<<16>>16;var $cmp212=($conv211|0)<40;if($cmp212){__label__=29;break}else{__label__=37;break}case 29:var $164=$j;var $idxprom215=$164<<16>>16;var $165=$rr_addr;var $arrayidx216=$165+$idxprom215*80|0;var $arrayidx217=$arrayidx216|0;$p_temp2=$arrayidx217;var $166=$alp0;var $167=$p_temp2;var $168=$j;var $conv218=$168<<16>>16;var $add_ptr219=$167+($conv218<<1)|0;var $169=HEAP16[$add_ptr219>>1];var $conv220=$169<<16>>16;var $shl221=$conv220<<11;var $add222=$166+$shl221|0;$alp1=$add222;var $170=$p_temp2;var $171=$i0;var $conv223=$171<<16>>16;var $add_ptr224=$170+($conv223<<1)|0;var $172=HEAP16[$add_ptr224>>1];var $conv225=$172<<16>>16;var $shl226=$conv225<<12;var $173=$alp1;var $add227=$173+$shl226|0;$alp1=$add227;var $174=$p_temp2;var $175=$i1;var $conv228=$175<<16>>16;var $add_ptr229=$174+($conv228<<1)|0;var $176=HEAP16[$add_ptr229>>1];var $conv230=$176<<16>>16;var $shl231=$conv230<<12;var $177=$alp1;var $add232=$177+$shl231|0;$alp1=$add232;var $178=$p_temp2;var $179=$i2;var $conv233=$179<<16>>16;var $add_ptr234=$178+($conv233<<1)|0;var $180=HEAP16[$add_ptr234>>1];var $conv235=$180<<16>>16;var $shl236=$conv235<<12;var $181=$alp1;var $add237=$181+$shl236|0;$alp1=$add237;var $182=$p_temp2;var $183=$i3;var $conv238=$183<<16>>16;var $add_ptr239=$182+($conv238<<1)|0;var $184=HEAP16[$add_ptr239>>1];var $conv240=$184<<16>>16;var $shl241=$conv240<<12;var $185=$alp1;var $add242=$185+$shl241|0;$alp1=$add242;var $arraydecay243=$temp1|0;$p_temp1=$arraydecay243;var $186=$j;var $idxprom244=$186<<16>>16;var $187=$dn_addr;var $arrayidx245=$187+($idxprom244<<1)|0;var $188=HEAP16[$arrayidx245>>1];$ps1=$188;var $189=$ipos_addr;var $arrayidx246=$189+10|0;var $190=HEAP16[$arrayidx246>>1];$i5=$190;__label__=30;break;case 30:var $191=$i5;var $conv248=$191<<16>>16;var $cmp249=($conv248|0)<40;if($cmp249){__label__=31;break}else{__label__=35;break}case 31:var $192=$ps1;var $conv252=$192<<16>>16;var $193=$p_temp1;var $incdec_ptr253=$193+2|0;$p_temp1=$incdec_ptr253;var $194=HEAP16[$193>>1];var $conv254=$194<<16>>16;var $add255=$conv252+$conv254|0;var $conv256=$add255&65535;$ps2=$conv256;var $195=$alp1;var $196=$p_temp2;var $197=$i5;var $conv257=$197<<16>>16;var $add_ptr258=$196+($conv257<<1)|0;var $198=HEAP16[$add_ptr258>>1];var $conv259=$198<<16>>16;var $shl260=$conv259<<12;var $add261=$195+$shl260|0;$alp2=$add261;var $199=$alp2;var $200=$p_temp1;var $incdec_ptr262=$200+2|0;$p_temp1=$incdec_ptr262;var $201=HEAP16[$200>>1];var $conv263=$201<<16>>16;var $shl264=$conv263<<14;var $add265=$199+$shl264|0;var $shr266=$add265>>16;var $conv267=$shr266&65535;$alp_16=$conv267;var $202=$ps2;var $conv268=$202<<16>>16;var $203=$ps2;var $conv269=$203<<16>>16;var $mul270=$conv268*$conv269|0;var $shr271=$mul270>>15;var $conv272=$shr271&65535;$sq2=$conv272;var $204=$sq2;var $conv273=$204<<16>>16;var $205=$alp;var $conv274=$205<<16>>16;var $mul275=$conv273*$conv274|0;var $206=$sq;var $conv276=$206<<16>>16;var $207=$alp_16;var $conv277=$207<<16>>16;var $mul278=$conv276*$conv277|0;var $cmp279=($mul275|0)>($mul278|0);if($cmp279){__label__=32;break}else{__label__=33;break}case 32:var $208=$sq2;$sq=$208;var $209=$ps2;$ps=$209;var $210=$alp_16;$alp=$210;var $211=$j;$ia=$211;var $212=$i5;$ib=$212;__label__=33;break;case 33:__label__=34;break;case 34:var $213=$step_addr;var $conv284=$213<<16>>16;var $214=$i5;var $conv285=$214<<16>>16;var $add286=$conv285+$conv284|0;var $conv287=$add286&65535;$i5=$conv287;__label__=30;break;case 35:__label__=36;break;case 36:var $215=$step_addr;var $conv290=$215<<16>>16;var $216=$j;var $conv291=$216<<16>>16;var $add292=$conv291+$conv290|0;var $conv293=$add292&65535;$j=$conv293;__label__=28;break;case 37:var $217=$ia;$i4=$217;var $218=$ib;$i5=$218;var $219=$ia;var $arrayidx295=$index+8|0;HEAP16[$arrayidx295>>1]=$219;var $220=$ib;var $arrayidx296=$index+10|0;HEAP16[$arrayidx296>>1]=$220;var $221=$alp;var $conv297=$221<<16>>16;var $shl298=$conv297<<15;var $add299=$shl298+32768|0;$alp0=$add299;var $arraydecay300=$temp1|0;$p_temp1=$arraydecay300;var $222=$ipos_addr;var $arrayidx301=$222+14|0;var $223=HEAP16[$arrayidx301>>1];$i7=$223;__label__=38;break;case 38:var $224=$i7;var $conv303=$224<<16>>16;var $cmp304=($conv303|0)<40;if($cmp304){__label__=39;break}else{__label__=41;break}case 39:var $225=$i7;var $idxprom307=$225<<16>>16;var $226=$i7;var $idxprom308=$226<<16>>16;var $227=$rr_addr;var $arrayidx309=$227+$idxprom308*80|0;var $arrayidx310=$arrayidx309+($idxprom307<<1)|0;var $228=HEAP16[$arrayidx310>>1];var $conv311=$228<<16>>16;var $shr312=$conv311>>1;$s=$shr312;var $229=$i7;var $idxprom313=$229<<16>>16;var $230=$i0;var $idxprom314=$230<<16>>16;var $231=$rr_addr;var $arrayidx315=$231+$idxprom314*80|0;var $arrayidx316=$arrayidx315+($idxprom313<<1)|0;var $232=HEAP16[$arrayidx316>>1];var $conv317=$232<<16>>16;var $233=$s;var $add318=$233+$conv317|0;$s=$add318;var $234=$i7;var $idxprom319=$234<<16>>16;var $235=$i1;var $idxprom320=$235<<16>>16;var $236=$rr_addr;var $arrayidx321=$236+$idxprom320*80|0;var $arrayidx322=$arrayidx321+($idxprom319<<1)|0;var $237=HEAP16[$arrayidx322>>1];var $conv323=$237<<16>>16;var $238=$s;var $add324=$238+$conv323|0;$s=$add324;var $239=$i7;var $idxprom325=$239<<16>>16;var $240=$i2;var $idxprom326=$240<<16>>16;var $241=$rr_addr;var $arrayidx327=$241+$idxprom326*80|0;var $arrayidx328=$arrayidx327+($idxprom325<<1)|0;var $242=HEAP16[$arrayidx328>>1];var $conv329=$242<<16>>16;var $243=$s;var $add330=$243+$conv329|0;$s=$add330;var $244=$i7;var $idxprom331=$244<<16>>16;var $245=$i3;var $idxprom332=$245<<16>>16;var $246=$rr_addr;var $arrayidx333=$246+$idxprom332*80|0;var $arrayidx334=$arrayidx333+($idxprom331<<1)|0;var $247=HEAP16[$arrayidx334>>1];var $conv335=$247<<16>>16;var $248=$s;var $add336=$248+$conv335|0;$s=$add336;var $249=$i7;var $idxprom337=$249<<16>>16;var $250=$i4;var $idxprom338=$250<<16>>16;var $251=$rr_addr;var $arrayidx339=$251+$idxprom338*80|0;var $arrayidx340=$arrayidx339+($idxprom337<<1)|0;var $252=HEAP16[$arrayidx340>>1];var $conv341=$252<<16>>16;var $253=$s;var $add342=$253+$conv341|0;$s=$add342;var $254=$i7;var $idxprom343=$254<<16>>16;var $255=$i5;var $idxprom344=$255<<16>>16;var $256=$rr_addr;var $arrayidx345=$256+$idxprom344*80|0;var $arrayidx346=$arrayidx345+($idxprom343<<1)|0;var $257=HEAP16[$arrayidx346>>1];var $conv347=$257<<16>>16;var $258=$s;var $add348=$258+$conv347|0;$s=$add348;var $259=$ps;var $conv349=$259<<16>>16;var $260=$i7;var $idxprom350=$260<<16>>16;var $261=$dn_addr;var $arrayidx351=$261+($idxprom350<<1)|0;var $262=HEAP16[$arrayidx351>>1];var $conv352=$262<<16>>16;var $add353=$conv349+$conv352|0;var $conv354=$add353&65535;var $263=$p_temp1;var $incdec_ptr355=$263+2|0;$p_temp1=$incdec_ptr355;HEAP16[$263>>1]=$conv354;var $264=$s;var $add356=$264+4|0;var $shr357=$add356>>3;var $conv358=$shr357&65535;var $265=$p_temp1;var $incdec_ptr359=$265+2|0;$p_temp1=$incdec_ptr359;HEAP16[$265>>1]=$conv358;__label__=40;break;case 40:var $266=$step_addr;var $conv361=$266<<16>>16;var $267=$i7;var $conv362=$267<<16>>16;var $add363=$conv362+$conv361|0;var $conv364=$add363&65535;$i7=$conv364;__label__=38;break;case 41:$sq=-1;$alp=1;$ps=0;var $268=$ipos_addr;var $arrayidx366=$268+12|0;var $269=HEAP16[$arrayidx366>>1];$ia=$269;var $270=$ipos_addr;var $arrayidx367=$270+14|0;var $271=HEAP16[$arrayidx367>>1];$ib=$271;var $272=$ipos_addr;var $arrayidx368=$272+12|0;var $273=HEAP16[$arrayidx368>>1];$j=$273;__label__=42;break;case 42:var $274=$j;var $conv370=$274<<16>>16;var $cmp371=($conv370|0)<40;if($cmp371){__label__=43;break}else{__label__=51;break}case 43:var $275=$j;var $idxprom374=$275<<16>>16;var $276=$rr_addr;var $arrayidx375=$276+$idxprom374*80|0;var $277=$arrayidx375;$p_temp2=$277;var $278=$alp0;var $279=$p_temp2;var $280=$j;var $conv376=$280<<16>>16;var $add_ptr377=$279+($conv376<<1)|0;var $281=HEAP16[$add_ptr377>>1];var $conv378=$281<<16>>16;var $shl379=$conv378<<10;var $add380=$278+$shl379|0;$alp1=$add380;var $282=$p_temp2;var $283=$i0;var $conv381=$283<<16>>16;var $add_ptr382=$282+($conv381<<1)|0;var $284=HEAP16[$add_ptr382>>1];var $conv383=$284<<16>>16;var $shl384=$conv383<<11;var $285=$alp1;var $add385=$285+$shl384|0;$alp1=$add385;var $286=$p_temp2;var $287=$i1;var $conv386=$287<<16>>16;var $add_ptr387=$286+($conv386<<1)|0;var $288=HEAP16[$add_ptr387>>1];var $conv388=$288<<16>>16;var $shl389=$conv388<<11;var $289=$alp1;var $add390=$289+$shl389|0;$alp1=$add390;var $290=$p_temp2;var $291=$i2;var $conv391=$291<<16>>16;var $add_ptr392=$290+($conv391<<1)|0;var $292=HEAP16[$add_ptr392>>1];var $conv393=$292<<16>>16;var $shl394=$conv393<<11;var $293=$alp1;var $add395=$293+$shl394|0;$alp1=$add395;var $294=$p_temp2;var $295=$i3;var $conv396=$295<<16>>16;var $add_ptr397=$294+($conv396<<1)|0;var $296=HEAP16[$add_ptr397>>1];var $conv398=$296<<16>>16;var $shl399=$conv398<<11;var $297=$alp1;var $add400=$297+$shl399|0;$alp1=$add400;var $298=$p_temp2;var $299=$i4;var $conv401=$299<<16>>16;var $add_ptr402=$298+($conv401<<1)|0;var $300=HEAP16[$add_ptr402>>1];var $conv403=$300<<16>>16;var $shl404=$conv403<<11;var $301=$alp1;var $add405=$301+$shl404|0;$alp1=$add405;var $302=$p_temp2;var $303=$i5;var $conv406=$303<<16>>16;var $add_ptr407=$302+($conv406<<1)|0;var $304=HEAP16[$add_ptr407>>1];var $conv408=$304<<16>>16;var $shl409=$conv408<<11;var $305=$alp1;var $add410=$305+$shl409|0;$alp1=$add410;var $arraydecay411=$temp1|0;$p_temp1=$arraydecay411;var $306=$j;var $idxprom412=$306<<16>>16;var $307=$dn_addr;var $arrayidx413=$307+($idxprom412<<1)|0;var $308=HEAP16[$arrayidx413>>1];$ps1=$308;var $309=$ipos_addr;var $arrayidx414=$309+14|0;var $310=HEAP16[$arrayidx414>>1];$i7=$310;__label__=44;break;case 44:var $311=$i7;var $conv416=$311<<16>>16;var $cmp417=($conv416|0)<40;if($cmp417){__label__=45;break}else{__label__=49;break}case 45:var $312=$ps1;var $conv420=$312<<16>>16;var $313=$p_temp1;var $incdec_ptr421=$313+2|0;$p_temp1=$incdec_ptr421;var $314=HEAP16[$313>>1];var $conv422=$314<<16>>16;var $add423=$conv420+$conv422|0;var $conv424=$add423&65535;$ps2=$conv424;var $315=$alp1;var $316=$p_temp2;var $317=$i7;var $conv425=$317<<16>>16;var $add_ptr426=$316+($conv425<<1)|0;var $318=HEAP16[$add_ptr426>>1];var $conv427=$318<<16>>16;var $shl428=$conv427<<11;var $add429=$315+$shl428|0;$alp2=$add429;var $319=$alp2;var $320=$p_temp1;var $incdec_ptr430=$320+2|0;$p_temp1=$incdec_ptr430;var $321=HEAP16[$320>>1];var $conv431=$321<<16>>16;var $shl432=$conv431<<14;var $add433=$319+$shl432|0;var $shr434=$add433>>16;var $conv435=$shr434&65535;$alp_16=$conv435;var $322=$ps2;var $conv436=$322<<16>>16;var $323=$ps2;var $conv437=$323<<16>>16;var $mul438=$conv436*$conv437|0;var $shr439=$mul438>>15;var $conv440=$shr439&65535;$sq2=$conv440;var $324=$sq2;var $conv441=$324<<16>>16;var $325=$alp;var $conv442=$325<<16>>16;var $mul443=$conv441*$conv442|0;var $326=$sq;var $conv444=$326<<16>>16;var $327=$alp_16;var $conv445=$327<<16>>16;var $mul446=$conv444*$conv445|0;var $cmp447=($mul443|0)>($mul446|0);if($cmp447){__label__=46;break}else{__label__=47;break}case 46:var $328=$sq2;$sq=$328;var $329=$ps2;$ps=$329;var $330=$alp_16;$alp=$330;var $331=$j;$ia=$331;var $332=$i7;$ib=$332;__label__=47;break;case 47:__label__=48;break;case 48:var $333=$step_addr;var $conv452=$333<<16>>16;var $334=$i7;var $conv453=$334<<16>>16;var $add454=$conv453+$conv452|0;var $conv455=$add454&65535;$i7=$conv455;__label__=44;break;case 49:__label__=50;break;case 50:var $335=$step_addr;var $conv458=$335<<16>>16;var $336=$j;var $conv459=$336<<16>>16;var $add460=$conv459+$conv458|0;var $conv461=$add460&65535;$j=$conv461;__label__=42;break;case 51:var $337=$ia;$i6=$337;var $338=$ib;$i7=$338;var $339=$ia;var $arrayidx463=$index+12|0;HEAP16[$arrayidx463>>1]=$339;var $340=$ib;var $arrayidx464=$index+14|0;HEAP16[$arrayidx464>>1]=$340;var $341=$gsmefrFlag;var $conv465=$341<<16>>16;var $cmp466=($conv465|0)!=0;if($cmp466){__label__=52;break}else{__label__=67;break}case 52:var $342=$alp;var $conv469=$342<<16>>16;var $shl470=$conv469<<15;var $add471=$shl470+32768|0;$alp0=$add471;var $arraydecay472=$temp1|0;$p_temp1=$arraydecay472;var $343=$ipos_addr;var $arrayidx473=$343+18|0;var $344=HEAP16[$arrayidx473>>1];$i9=$344;__label__=53;break;case 53:var $345=$i9;var $conv475=$345<<16>>16;var $cmp476=($conv475|0)<40;if($cmp476){__label__=54;break}else{__label__=56;break}case 54:var $346=$i9;var $idxprom479=$346<<16>>16;var $347=$i9;var $idxprom480=$347<<16>>16;var $348=$rr_addr;var $arrayidx481=$348+$idxprom480*80|0;var $arrayidx482=$arrayidx481+($idxprom479<<1)|0;var $349=HEAP16[$arrayidx482>>1];var $conv483=$349<<16>>16;var $shr484=$conv483>>1;$s=$shr484;var $350=$i9;var $idxprom485=$350<<16>>16;var $351=$i0;var $idxprom486=$351<<16>>16;var $352=$rr_addr;var $arrayidx487=$352+$idxprom486*80|0;var $arrayidx488=$arrayidx487+($idxprom485<<1)|0;var $353=HEAP16[$arrayidx488>>1];var $conv489=$353<<16>>16;var $354=$s;var $add490=$354+$conv489|0;$s=$add490;var $355=$i9;var $idxprom491=$355<<16>>16;var $356=$i1;var $idxprom492=$356<<16>>16;var $357=$rr_addr;var $arrayidx493=$357+$idxprom492*80|0;var $arrayidx494=$arrayidx493+($idxprom491<<1)|0;var $358=HEAP16[$arrayidx494>>1];var $conv495=$358<<16>>16;var $359=$s;var $add496=$359+$conv495|0;$s=$add496;var $360=$i9;var $idxprom497=$360<<16>>16;var $361=$i2;var $idxprom498=$361<<16>>16;var $362=$rr_addr;var $arrayidx499=$362+$idxprom498*80|0;var $arrayidx500=$arrayidx499+($idxprom497<<1)|0;var $363=HEAP16[$arrayidx500>>1];var $conv501=$363<<16>>16;var $364=$s;var $add502=$364+$conv501|0;$s=$add502;var $365=$i9;var $idxprom503=$365<<16>>16;var $366=$i3;var $idxprom504=$366<<16>>16;var $367=$rr_addr;var $arrayidx505=$367+$idxprom504*80|0;var $arrayidx506=$arrayidx505+($idxprom503<<1)|0;var $368=HEAP16[$arrayidx506>>1];var $conv507=$368<<16>>16;var $369=$s;var $add508=$369+$conv507|0;$s=$add508;var $370=$i9;var $idxprom509=$370<<16>>16;var $371=$i4;var $idxprom510=$371<<16>>16;var $372=$rr_addr;var $arrayidx511=$372+$idxprom510*80|0;var $arrayidx512=$arrayidx511+($idxprom509<<1)|0;var $373=HEAP16[$arrayidx512>>1];var $conv513=$373<<16>>16;var $374=$s;var $add514=$374+$conv513|0;$s=$add514;var $375=$i9;var $idxprom515=$375<<16>>16;var $376=$i5;var $idxprom516=$376<<16>>16;var $377=$rr_addr;var $arrayidx517=$377+$idxprom516*80|0;var $arrayidx518=$arrayidx517+($idxprom515<<1)|0;var $378=HEAP16[$arrayidx518>>1];var $conv519=$378<<16>>16;var $379=$s;var $add520=$379+$conv519|0;$s=$add520;var $380=$i9;var $idxprom521=$380<<16>>16;var $381=$i6;var $idxprom522=$381<<16>>16;var $382=$rr_addr;var $arrayidx523=$382+$idxprom522*80|0;var $arrayidx524=$arrayidx523+($idxprom521<<1)|0;var $383=HEAP16[$arrayidx524>>1];var $conv525=$383<<16>>16;var $384=$s;var $add526=$384+$conv525|0;$s=$add526;var $385=$i9;var $idxprom527=$385<<16>>16;var $386=$i7;var $idxprom528=$386<<16>>16;var $387=$rr_addr;var $arrayidx529=$387+$idxprom528*80|0;var $arrayidx530=$arrayidx529+($idxprom527<<1)|0;var $388=HEAP16[$arrayidx530>>1];var $conv531=$388<<16>>16;var $389=$s;var $add532=$389+$conv531|0;$s=$add532;var $390=$ps;var $conv533=$390<<16>>16;var $391=$i9;var $idxprom534=$391<<16>>16;var $392=$dn_addr;var $arrayidx535=$392+($idxprom534<<1)|0;var $393=HEAP16[$arrayidx535>>1];var $conv536=$393<<16>>16;var $add537=$conv533+$conv536|0;var $conv538=$add537&65535;var $394=$p_temp1;var $incdec_ptr539=$394+2|0;$p_temp1=$incdec_ptr539;HEAP16[$394>>1]=$conv538;var $395=$s;var $add540=$395+4|0;var $shr541=$add540>>3;var $conv542=$shr541&65535;var $396=$p_temp1;var $incdec_ptr543=$396+2|0;$p_temp1=$incdec_ptr543;HEAP16[$396>>1]=$conv542;__label__=55;break;case 55:var $397=$step_addr;var $conv545=$397<<16>>16;var $398=$i9;var $conv546=$398<<16>>16;var $add547=$conv546+$conv545|0;var $conv548=$add547&65535;$i9=$conv548;__label__=53;break;case 56:$sq=-1;$alp=1;$ps=0;var $399=$ipos_addr;var $arrayidx550=$399+16|0;var $400=HEAP16[$arrayidx550>>1];$ia=$400;var $401=$ipos_addr;var $arrayidx551=$401+18|0;var $402=HEAP16[$arrayidx551>>1];$ib=$402;var $403=$ipos_addr;var $arrayidx552=$403+16|0;var $404=HEAP16[$arrayidx552>>1];$j=$404;__label__=57;break;case 57:var $405=$j;var $conv554=$405<<16>>16;var $cmp555=($conv554|0)<40;if($cmp555){__label__=58;break}else{__label__=66;break}case 58:var $406=$j;var $idxprom558=$406<<16>>16;var $407=$rr_addr;var $arrayidx559=$407+$idxprom558*80|0;var $arrayidx560=$arrayidx559|0;$p_temp2=$arrayidx560;var $408=$alp0;var $409=$p_temp2;var $410=$j;var $conv561=$410<<16>>16;var $add_ptr562=$409+($conv561<<1)|0;var $411=HEAP16[$add_ptr562>>1];var $conv563=$411<<16>>16;var $shl564=$conv563<<9;var $add565=$408+$shl564|0;$alp1=$add565;var $412=$j;var $idxprom566=$412<<16>>16;var $413=$i0;var $idxprom567=$413<<16>>16;var $414=$rr_addr;var $arrayidx568=$414+$idxprom567*80|0;var $arrayidx569=$arrayidx568+($idxprom566<<1)|0;var $415=HEAP16[$arrayidx569>>1];var $conv570=$415<<16>>16;var $shl571=$conv570<<10;var $416=$alp1;var $add572=$416+$shl571|0;$alp1=$add572;var $417=$j;var $idxprom573=$417<<16>>16;var $418=$i1;var $idxprom574=$418<<16>>16;var $419=$rr_addr;var $arrayidx575=$419+$idxprom574*80|0;var $arrayidx576=$arrayidx575+($idxprom573<<1)|0;var $420=HEAP16[$arrayidx576>>1];var $conv577=$420<<16>>16;var $shl578=$conv577<<10;var $421=$alp1;var $add579=$421+$shl578|0;$alp1=$add579;var $422=$j;var $idxprom580=$422<<16>>16;var $423=$i2;var $idxprom581=$423<<16>>16;var $424=$rr_addr;var $arrayidx582=$424+$idxprom581*80|0;var $arrayidx583=$arrayidx582+($idxprom580<<1)|0;var $425=HEAP16[$arrayidx583>>1];var $conv584=$425<<16>>16;var $shl585=$conv584<<10;var $426=$alp1;var $add586=$426+$shl585|0;$alp1=$add586;var $427=$j;var $idxprom587=$427<<16>>16;var $428=$i3;var $idxprom588=$428<<16>>16;var $429=$rr_addr;var $arrayidx589=$429+$idxprom588*80|0;var $arrayidx590=$arrayidx589+($idxprom587<<1)|0;var $430=HEAP16[$arrayidx590>>1];var $conv591=$430<<16>>16;var $shl592=$conv591<<10;var $431=$alp1;var $add593=$431+$shl592|0;$alp1=$add593;var $432=$j;var $idxprom594=$432<<16>>16;var $433=$i4;var $idxprom595=$433<<16>>16;var $434=$rr_addr;var $arrayidx596=$434+$idxprom595*80|0;var $arrayidx597=$arrayidx596+($idxprom594<<1)|0;var $435=HEAP16[$arrayidx597>>1];var $conv598=$435<<16>>16;var $shl599=$conv598<<10;var $436=$alp1;var $add600=$436+$shl599|0;$alp1=$add600;var $437=$j;var $idxprom601=$437<<16>>16;var $438=$i5;var $idxprom602=$438<<16>>16;var $439=$rr_addr;var $arrayidx603=$439+$idxprom602*80|0;var $arrayidx604=$arrayidx603+($idxprom601<<1)|0;var $440=HEAP16[$arrayidx604>>1];var $conv605=$440<<16>>16;var $shl606=$conv605<<10;var $441=$alp1;var $add607=$441+$shl606|0;$alp1=$add607;var $442=$j;var $idxprom608=$442<<16>>16;var $443=$i6;var $idxprom609=$443<<16>>16;var $444=$rr_addr;var $arrayidx610=$444+$idxprom609*80|0;var $arrayidx611=$arrayidx610+($idxprom608<<1)|0;var $445=HEAP16[$arrayidx611>>1];var $conv612=$445<<16>>16;var $shl613=$conv612<<10;var $446=$alp1;var $add614=$446+$shl613|0;$alp1=$add614;var $447=$j;var $idxprom615=$447<<16>>16;var $448=$i7;var $idxprom616=$448<<16>>16;var $449=$rr_addr;var $arrayidx617=$449+$idxprom616*80|0;var $arrayidx618=$arrayidx617+($idxprom615<<1)|0;var $450=HEAP16[$arrayidx618>>1];var $conv619=$450<<16>>16;var $shl620=$conv619<<10;var $451=$alp1;var $add621=$451+$shl620|0;$alp1=$add621;var $arraydecay622=$temp1|0;$p_temp1=$arraydecay622;var $452=$j;var $idxprom623=$452<<16>>16;var $453=$dn_addr;var $arrayidx624=$453+($idxprom623<<1)|0;var $454=HEAP16[$arrayidx624>>1];$ps1=$454;var $455=$ipos_addr;var $arrayidx625=$455+18|0;var $456=HEAP16[$arrayidx625>>1];$i9=$456;__label__=59;break;case 59:var $457=$i9;var $conv627=$457<<16>>16;var $cmp628=($conv627|0)<40;if($cmp628){__label__=60;break}else{__label__=64;break}case 60:var $458=$ps1;var $conv631=$458<<16>>16;var $459=$p_temp1;var $incdec_ptr632=$459+2|0;$p_temp1=$incdec_ptr632;var $460=HEAP16[$459>>1];var $conv633=$460<<16>>16;var $add634=$conv631+$conv633|0;var $conv635=$add634&65535;$ps2=$conv635;var $461=$ps2;var $conv636=$461<<16>>16;var $462=$ps2;var $conv637=$462<<16>>16;var $mul638=$conv636*$conv637|0;var $shr639=$mul638>>15;var $conv640=$shr639&65535;$sq2=$conv640;var $463=$alp1;var $464=$p_temp2;var $465=$i9;var $conv641=$465<<16>>16;var $add_ptr642=$464+($conv641<<1)|0;var $466=HEAP16[$add_ptr642>>1];var $conv643=$466<<16>>16;var $shl644=$conv643<<10;var $add645=$463+$shl644|0;$alp2=$add645;var $467=$alp2;var $468=$p_temp1;var $incdec_ptr646=$468+2|0;$p_temp1=$incdec_ptr646;var $469=HEAP16[$468>>1];var $conv647=$469<<16>>16;var $shl648=$conv647<<13;var $add649=$467+$shl648|0;var $shr650=$add649>>16;var $conv651=$shr650&65535;$alp_16=$conv651;var $470=$sq2;var $conv652=$470<<16>>16;var $471=$alp;var $conv653=$471<<16>>16;var $mul654=$conv652*$conv653|0;var $472=$sq;var $conv655=$472<<16>>16;var $473=$alp_16;var $conv656=$473<<16>>16;var $mul657=$conv655*$conv656|0;var $cmp658=($mul654|0)>($mul657|0);if($cmp658){__label__=61;break}else{__label__=62;break}case 61:var $474=$sq2;$sq=$474;var $475=$ps2;$ps=$475;var $476=$alp_16;$alp=$476;var $477=$j;$ia=$477;var $478=$i9;$ib=$478;__label__=62;break;case 62:__label__=63;break;case 63:var $479=$step_addr;var $conv663=$479<<16>>16;var $480=$i9;var $conv664=$480<<16>>16;var $add665=$conv664+$conv663|0;var $conv666=$add665&65535;$i9=$conv666;__label__=59;break;case 64:__label__=65;break;case 65:var $481=$step_addr;var $conv669=$481<<16>>16;var $482=$j;var $conv670=$482<<16>>16;var $add671=$conv670+$conv669|0;var $conv672=$add671&65535;$j=$conv672;__label__=57;break;case 66:var $483=$ia;var $arrayidx674=$index+16|0;HEAP16[$arrayidx674>>1]=$483;var $484=$ib;var $arrayidx675=$index+18|0;HEAP16[$arrayidx675>>1]=$484;__label__=67;break;case 67:var $485=$alpk;var $conv677=$485<<16>>16;var $486=$sq;var $conv678=$486<<16>>16;var $mul679=$conv677*$conv678|0;var $487=$psk;var $conv680=$487<<16>>16;var $488=$alp;var $conv681=$488<<16>>16;var $mul682=$conv680*$conv681|0;var $cmp683=($mul679|0)>($mul682|0);if($cmp683){__label__=68;break}else{__label__=72;break}case 68:var $489=$sq;$psk=$489;var $490=$alp;$alpk=$490;var $491=$gsmefrFlag;var $conv686=$491<<16>>16;var $cmp687=($conv686|0)!=0;if($cmp687){__label__=69;break}else{__label__=70;break}case 69:var $492=$codvec_addr;var $493=$492;var $arraydecay690=$index|0;var $494=$arraydecay690;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($493,$494,20,1);__label__=71;break;case 70:var $495=$codvec_addr;var $496=$495;var $arraydecay692=$index|0;var $497=$arraydecay692;assert(16%1===0,"memcpy given "+16+" bytes to copy. Problem with quantum=1 corrections perhaps?");for(var $$src=$497,$$dest=$496,$$stop=$$src+16;$$src<$$stop;$$src++,$$dest++){HEAP8[$$dest]=HEAP8[$$src]};__label__=71;break;case 71:__label__=72;break;case 72:var $498=$ipos_addr;var $arrayidx695=$498+2|0;var $499=HEAP16[$arrayidx695>>1];$pos=$499;$j=1;$k=2;__label__=73;break;case 73:var $500=$k;var $conv697=$500<<16>>16;var $501=$nbPulse_addr;var $conv698=$501<<16>>16;var $cmp699=($conv697|0)<($conv698|0);if($cmp699){__label__=74;break}else{__label__=76;break}case 74:var $502=$k;var $idxprom702=$502<<16>>16;var $503=$ipos_addr;var $arrayidx703=$503+($idxprom702<<1)|0;var $504=HEAP16[$arrayidx703>>1];var $505=$j;var $idxprom704=$505<<16>>16;var $506=$ipos_addr;var $arrayidx705=$506+($idxprom704<<1)|0;HEAP16[$arrayidx705>>1]=$504;__label__=75;break;case 75:var $507=$j;var $inc707=$507+1&65535;$j=$inc707;var $508=$k;var $inc708=$508+1&65535;$k=$inc708;__label__=73;break;case 76:var $509=$pos;var $510=$nbPulse_addr;var $conv710=$510<<16>>16;var $sub=$conv710-1|0;var $511=$ipos_addr;var $arrayidx711=$511+($sub<<1)|0;HEAP16[$arrayidx711>>1]=$509;__label__=77;break;case 77:var $512=$i;var $inc713=$512+1&65535;$i=$inc713;__label__=8;break;case 78:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_search_10and8i40["X"]=1;function _negate438($var1){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)==-32768;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=32767;__label__=3;break;case 2:var $1=$var1_addr;var $conv2=$1<<16>>16;var $sub=-$conv2|0;var $cond=$sub;__label__=3;break;case 3:var $cond;var $conv3=$cond&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_mac441($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac441["X"]=1;function _L_shl442($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _shr($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var2_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=11;break}case 1:var $1=$var2_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $2=$var2_addr;var $conv6=$2<<16>>16;var $cmp7=($conv6|0)>15;if($cmp7){__label__=3;break}else{__label__=4;break}case 3:$var2_addr=15;__label__=4;break;case 4:var $3=$var1_addr;var $conv10=$3<<16>>16;var $4=$var2_addr;var $conv11=$4<<16>>16;var $shr=$conv10>>($conv11|0);var $conv12=$shr&65535;$result=$conv12;__label__=10;break;case 5:var $5=$var2_addr;var $conv13=$5<<16>>16;var $sub=-$conv13|0;var $conv14=$sub&65535;$var2_addr=$conv14;var $6=$var2_addr;var $conv15=$6<<16>>16;var $cmp16=($conv15|0)>15;if($cmp16){__label__=6;break}else{__label__=7;break}case 6:$var2_addr=15;__label__=7;break;case 7:var $7=$var1_addr;var $conv20=$7<<16>>16;var $8=$var2_addr;var $conv21=$8<<16>>16;var $shl=$conv20<<$conv21;var $conv22=$shl&65535;$result=$conv22;var $9=$result;var $conv23=$9<<16>>16;var $10=$var2_addr;var $conv24=$10<<16>>16;var $shr25=$conv23>>($conv24|0);var $11=$var1_addr;var $conv26=$11<<16>>16;var $cmp27=($shr25|0)!=($conv26|0);if($cmp27){__label__=8;break}else{__label__=9;break}case 8:var $12=$pOverflow_addr;HEAP32[$12>>2]=1;var $13=$var1_addr;var $conv30=$13<<16>>16;var $cmp31=($conv30|0)>0;var $cond=$cmp31?32767:-32768;var $conv33=$cond&65535;$result=$conv33;__label__=9;break;case 9:__label__=10;break;case 10:__label__=12;break;case 11:var $14=$var1_addr;$result=$14;__label__=12;break;case 12:var $15=$result;return $15;default:assert(0,"bad label: "+__label__)}}_shr["X"]=1;function _Set_zero($x,$L){var __label__;__label__=0;while(1)switch(__label__){case 0:var $x_addr;var $L_addr;var $i;$x_addr=$x;$L_addr=$L;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$L_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $idxprom=$2<<16>>16;var $3=$x_addr;var $arrayidx=$3+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $4=$i;var $inc=$4+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _set_sign($dn,$sign,$dn2,$n){var __label__;__label__=0;while(1)switch(__label__){case 0:var $dn_addr;var $sign_addr;var $dn2_addr;var $n_addr;var $i;var $j;var $k;var $val;var $min;var $pos;$dn_addr=$dn;$sign_addr=$sign;$dn2_addr=$dn2;$n_addr=$n;$pos=0;$i=39;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)>=0;if($cmp){__label__=2;break}else{__label__=7;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$dn_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];$val=$3;var $4=$val;var $conv2=$4<<16>>16;var $cmp3=($conv2|0)>=0;if($cmp3){__label__=3;break}else{__label__=4;break}case 3:var $5=$i;var $idxprom5=$5<<16>>16;var $6=$sign_addr;var $arrayidx6=$6+($idxprom5<<1)|0;HEAP16[$arrayidx6>>1]=32767;__label__=5;break;case 4:var $7=$i;var $idxprom7=$7<<16>>16;var $8=$sign_addr;var $arrayidx8=$8+($idxprom7<<1)|0;HEAP16[$arrayidx8>>1]=-32767;var $9=$val;var $call=_negate438($9);$val=$call;var $10=$val;var $11=$i;var $idxprom9=$11<<16>>16;var $12=$dn_addr;var $arrayidx10=$12+($idxprom9<<1)|0;HEAP16[$arrayidx10>>1]=$10;__label__=5;break;case 5:var $13=$val;var $14=$i;var $idxprom11=$14<<16>>16;var $15=$dn2_addr;var $arrayidx12=$15+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$13;__label__=6;break;case 6:var $16=$i;var $dec=$16-1&65535;$i=$dec;__label__=1;break;case 7:$i=0;__label__=8;break;case 8:var $17=$i;var $conv14=$17<<16>>16;var $cmp15=($conv14|0)<5;if($cmp15){__label__=9;break}else{__label__=23;break}case 9:$k=0;__label__=10;break;case 10:var $18=$k;var $conv19=$18<<16>>16;var $19=$n_addr;var $conv20=$19<<16>>16;var $sub=8-$conv20|0;var $cmp21=($conv19|0)<($sub|0);if($cmp21){__label__=11;break}else{__label__=21;break}case 11:$min=32767;var $20=$i;$j=$20;__label__=12;break;case 12:var $21=$j;var $conv25=$21<<16>>16;var $cmp26=($conv25|0)<40;if($cmp26){__label__=13;break}else{__label__=19;break}case 13:var $22=$j;var $idxprom29=$22<<16>>16;var $23=$dn2_addr;var $arrayidx30=$23+($idxprom29<<1)|0;var $24=HEAP16[$arrayidx30>>1];var $conv31=$24<<16>>16;var $cmp32=($conv31|0)>=0;if($cmp32){__label__=14;break}else{__label__=17;break}case 14:var $25=$j;var $idxprom35=$25<<16>>16;var $26=$dn2_addr;var $arrayidx36=$26+($idxprom35<<1)|0;var $27=HEAP16[$arrayidx36>>1];var $conv37=$27<<16>>16;var $28=$min;var $conv38=$28<<16>>16;var $cmp39=($conv37|0)<($conv38|0);if($cmp39){__label__=15;break}else{__label__=16;break}case 15:var $29=$j;var $idxprom42=$29<<16>>16;var $30=$dn2_addr;var $arrayidx43=$30+($idxprom42<<1)|0;var $31=HEAP16[$arrayidx43>>1];$min=$31;var $32=$j;$pos=$32;__label__=16;break;case 16:__label__=17;break;case 17:__label__=18;break;case 18:var $33=$j;var $conv47=$33<<16>>16;var $add=$conv47+5|0;var $conv48=$add&65535;$j=$conv48;__label__=12;break;case 19:var $34=$pos;var $idxprom50=$34<<16>>16;var $35=$dn2_addr;var $arrayidx51=$35+($idxprom50<<1)|0;HEAP16[$arrayidx51>>1]=-1;__label__=20;break;case 20:var $36=$k;var $inc=$36+1&65535;$k=$inc;__label__=10;break;case 21:__label__=22;break;case 22:var $37=$i;var $inc55=$37+1&65535;$i=$inc55;__label__=8;break;case 23:;return;default:assert(0,"bad label: "+__label__)}}_set_sign["X"]=1;function _set_sign12k2($dn,$cn,$sign,$pos_max,$nb_track,$ipos,$step,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=80;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $dn_addr;var $cn_addr;var $sign_addr;var $pos_max_addr;var $nb_track_addr;var $ipos_addr;var $step_addr;var $pOverflow_addr;var $i;var $j;var $val;var $cor;var $k_cn;var $k_dn;var $max;var $max_of_all;var $pos;var $en=__stackBase__;var $s;var $t;var $L_temp;var $p_cn;var $p_dn;var $p_sign;var $p_en;$dn_addr=$dn;$cn_addr=$cn;$sign_addr=$sign;$pos_max_addr=$pos_max;$nb_track_addr=$nb_track;$ipos_addr=$ipos;$step_addr=$step;$pOverflow_addr=$pOverflow;$pos=0;$s=256;$t=256;var $0=$cn_addr;$p_cn=$0;var $1=$dn_addr;$p_dn=$1;$i=40;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$p_cn;var $incdec_ptr=$3+2|0;$p_cn=$incdec_ptr;var $4=HEAP16[$3>>1];$val=$4;var $5=$s;var $6=$val;var $7=$val;var $8=$pOverflow_addr;var $call=_L_mac441($5,$6,$7,$8);$s=$call;var $9=$p_dn;var $incdec_ptr2=$9+2|0;$p_dn=$incdec_ptr2;var $10=HEAP16[$9>>1];$val=$10;var $11=$val;var $conv3=$11<<16>>16;var $12=$val;var $conv4=$12<<16>>16;var $mul=$conv3*$conv4|0;var $shl=$mul<<1;var $13=$t;var $add=$13+$shl|0;$t=$add;__label__=3;break;case 3:var $14=$i;var $dec=$14-1&65535;$i=$dec;__label__=1;break;case 4:var $15=$s;var $16=$pOverflow_addr;var $call5=_Inv_sqrt($15,$16);$s=$call5;var $17=$s;var $18=$pOverflow_addr;var $call6=_L_shl442($17,5,$18);var $shr=$call6>>16;var $conv7=$shr&65535;$k_cn=$conv7;var $19=$t;var $20=$pOverflow_addr;var $call8=_Inv_sqrt($19,$20);$t=$call8;var $21=$t;var $shr9=$21>>11;var $conv10=$shr9&65535;$k_dn=$conv10;var $22=$cn_addr;var $arrayidx=$22+78|0;$p_cn=$arrayidx;var $23=$sign_addr;var $arrayidx11=$23+78|0;$p_sign=$arrayidx11;var $arrayidx12=$en+78|0;$p_en=$arrayidx12;$i=39;__label__=5;break;case 5:var $24=$i;var $conv14=$24<<16>>16;var $cmp15=($conv14|0)>=0;if($cmp15){__label__=6;break}else{__label__=11;break}case 6:var $25=$k_cn;var $conv18=$25<<16>>16;var $26=$p_cn;var $incdec_ptr19=$26-2|0;$p_cn=$incdec_ptr19;var $27=HEAP16[$26>>1];var $conv20=$27<<16>>16;var $mul21=$conv18*$conv20|0;var $shl22=$mul21<<1;$L_temp=$shl22;var $28=$i;var $idxprom=$28<<16>>16;var $29=$dn_addr;var $arrayidx23=$29+($idxprom<<1)|0;var $30=HEAP16[$arrayidx23>>1];$val=$30;var $31=$L_temp;var $32=$k_dn;var $33=$val;var $34=$pOverflow_addr;var $call24=_L_mac441($31,$32,$33,$34);$s=$call24;var $35=$s;var $36=$pOverflow_addr;var $call25=_L_shl442($35,10,$36);$L_temp=$call25;var $37=$L_temp;var $38=$pOverflow_addr;var $call26=_pv_round($37,$38);$cor=$call26;var $39=$cor;var $conv27=$39<<16>>16;var $cmp28=($conv27|0)>=0;if($cmp28){__label__=7;break}else{__label__=8;break}case 7:var $40=$p_sign;var $incdec_ptr30=$40-2|0;$p_sign=$incdec_ptr30;HEAP16[$40>>1]=32767;__label__=9;break;case 8:var $41=$p_sign;var $incdec_ptr31=$41-2|0;$p_sign=$incdec_ptr31;HEAP16[$41>>1]=-32767;var $42=$cor;var $call32=_negate438($42);$cor=$call32;var $43=$val;var $call33=_negate438($43);var $44=$i;var $idxprom34=$44<<16>>16;var $45=$dn_addr;var $arrayidx35=$45+($idxprom34<<1)|0;HEAP16[$arrayidx35>>1]=$call33;__label__=9;break;case 9:var $46=$cor;var $47=$p_en;var $incdec_ptr36=$47-2|0;$p_en=$incdec_ptr36;HEAP16[$47>>1]=$46;__label__=10;break;case 10:var $48=$i;var $dec38=$48-1&65535;$i=$dec38;__label__=5;break;case 11:$max_of_all=-1;$i=0;__label__=12;break;case 12:var $49=$i;var $conv41=$49<<16>>16;var $50=$nb_track_addr;var $conv42=$50<<16>>16;var $cmp43=($conv41|0)<($conv42|0);if($cmp43){__label__=13;break}else{__label__=23;break}case 13:$max=-1;var $51=$i;$j=$51;__label__=14;break;case 14:var $52=$j;var $conv47=$52<<16>>16;var $cmp48=($conv47|0)<40;if($cmp48){__label__=15;break}else{__label__=19;break}case 15:var $53=$j;var $idxprom51=$53<<16>>16;var $arrayidx52=$en+($idxprom51<<1)|0;var $54=HEAP16[$arrayidx52>>1];$cor=$54;var $55=$cor;var $conv53=$55<<16>>16;var $56=$max;var $conv54=$56<<16>>16;var $cmp55=($conv53|0)>($conv54|0);if($cmp55){__label__=16;break}else{__label__=17;break}case 16:var $57=$cor;$max=$57;var $58=$j;$pos=$58;__label__=17;break;case 17:__label__=18;break;case 18:var $59=$step_addr;var $conv60=$59<<16>>16;var $60=$j;var $conv61=$60<<16>>16;var $add62=$conv61+$conv60|0;var $conv63=$add62&65535;$j=$conv63;__label__=14;break;case 19:var $61=$pos;var $62=$i;var $idxprom65=$62<<16>>16;var $63=$pos_max_addr;var $arrayidx66=$63+($idxprom65<<1)|0;HEAP16[$arrayidx66>>1]=$61;var $64=$max;var $conv67=$64<<16>>16;var $65=$max_of_all;var $conv68=$65<<16>>16;var $cmp69=($conv67|0)>($conv68|0);if($cmp69){__label__=20;break}else{__label__=21;break}case 20:var $66=$max;$max_of_all=$66;var $67=$i;var $68=$ipos_addr;var $arrayidx72=$68|0;HEAP16[$arrayidx72>>1]=$67;__label__=21;break;case 21:__label__=22;break;case 22:var $69=$i;var $inc=$69+1&65535;$i=$inc;__label__=12;break;case 23:var $70=$ipos_addr;var $arrayidx76=$70|0;var $71=HEAP16[$arrayidx76>>1];$pos=$71;var $72=$pos;var $73=$nb_track_addr;var $idxprom77=$73<<16>>16;var $74=$ipos_addr;var $arrayidx78=$74+($idxprom77<<1)|0;HEAP16[$arrayidx78>>1]=$72;$i=1;__label__=24;break;case 24:var $75=$i;var $conv80=$75<<16>>16;var $76=$nb_track_addr;var $conv81=$76<<16>>16;var $cmp82=($conv80|0)<($conv81|0);if($cmp82){__label__=25;break}else{__label__=29;break}case 25:var $77=$pos;var $inc85=$77+1&65535;$pos=$inc85;var $78=$pos;var $conv86=$78<<16>>16;var $79=$nb_track_addr;var $conv87=$79<<16>>16;var $cmp88=($conv86|0)>=($conv87|0);if($cmp88){__label__=26;break}else{__label__=27;break}case 26:$pos=0;__label__=27;break;case 27:var $80=$pos;var $81=$i;var $idxprom92=$81<<16>>16;var $82=$ipos_addr;var $arrayidx93=$82+($idxprom92<<1)|0;HEAP16[$arrayidx93>>1]=$80;var $83=$pos;var $84=$i;var $conv94=$84<<16>>16;var $85=$nb_track_addr;var $conv95=$85<<16>>16;var $add96=$conv94+$conv95|0;var $86=$ipos_addr;var $arrayidx97=$86+($add96<<1)|0;HEAP16[$arrayidx97>>1]=$83;__label__=28;break;case 28:var $87=$i;var $inc99=$87+1&65535;$i=$inc99;__label__=24;break;case 29:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_set_sign12k2["X"]=1;function _shr_r($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var2_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)>15;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$var_out=0;__label__=7;break;case 2:var $1=$var1_addr;var $2=$var2_addr;var $3=$pOverflow_addr;var $call=_shr($1,$2,$3);$var_out=$call;var $4=$var2_addr;var $conv2=$4<<16>>16;var $cmp3=($conv2|0)>0;if($cmp3){__label__=3;break}else{__label__=6;break}case 3:var $5=$var1_addr;var $conv6=$5<<16>>16;var $6=$var2_addr;var $conv7=$6<<16>>16;var $sub=$conv7-1|0;var $shl=1<<$sub;var $and=$conv6&$shl;var $cmp8=($and|0)!=0;if($cmp8){__label__=4;break}else{__label__=5;break}case 4:var $7=$var_out;var $inc=$7+1&65535;$var_out=$inc;__label__=5;break;case 5:__label__=6;break;case 6:__label__=7;break;case 7:var $8=$var_out;return $8;default:assert(0,"bad label: "+__label__)}}function _sid_sync_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(12);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $sid_update_rate=$3|0;HEAP16[$sid_update_rate>>1]=8;var $4=$s;var $5=$4;var $6=$state_addr;HEAP32[$6>>2]=$5;var $7=$s;var $8=$7;var $call4=_sid_sync_reset($8);$retval=$call4;__label__=5;break;case 5:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _sid_sync_reset($st){var __label__;var $st_addr;var $state;$st_addr=$st;var $0=$st_addr;var $1=$0;$state=$1;var $2=$state;var $sid_update_counter=$2+2|0;HEAP16[$sid_update_counter>>1]=3;var $3=$state;var $sid_handover_debt=$3+4|0;HEAP16[$sid_handover_debt>>1]=0;var $4=$state;var $prev_ft=$4+8|0;HEAP32[$prev_ft>>2]=0;return 0}function _sid_sync_set_handover_debt($st,$debtFrames){var __label__;var $st_addr;var $debtFrames_addr;$st_addr=$st;$debtFrames_addr=$debtFrames;var $0=$debtFrames_addr;var $1=$st_addr;var $sid_handover_debt=$1+4|0;HEAP16[$sid_handover_debt>>1]=$0;return}function _sid_sync($state,$mode,$tx_frame_type){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;var $mode_addr;var $tx_frame_type_addr;var $st;$state_addr=$state;$mode_addr=$mode;$tx_frame_type_addr=$tx_frame_type;var $0=$state_addr;var $1=$0;$st=$1;var $2=$mode_addr;var $cmp=($2|0)==8;if($cmp){__label__=1;break}else{__label__=12;break}case 1:var $3=$st;var $sid_update_counter=$3+2|0;var $4=HEAP16[$sid_update_counter>>1];var $dec=$4-1&65535;HEAP16[$sid_update_counter>>1]=$dec;var $5=$st;var $prev_ft=$5+8|0;var $6=HEAP32[$prev_ft>>2];var $cmp1=($6|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $7=$tx_frame_type_addr;HEAP32[$7>>2]=1;var $8=$st;var $sid_update_counter3=$8+2|0;HEAP16[$sid_update_counter3>>1]=3;__label__=11;break;case 3:var $9=$st;var $sid_handover_debt=$9+4|0;var $10=HEAP16[$sid_handover_debt>>1];var $conv=$10<<16>>16;var $cmp4=($conv|0)>0;if($cmp4){__label__=4;break}else{__label__=6;break}case 4:var $11=$st;var $sid_update_counter6=$11+2|0;var $12=HEAP16[$sid_update_counter6>>1];var $conv7=$12<<16>>16;var $cmp8=($conv7|0)>2;if($cmp8){__label__=5;break}else{__label__=6;break}case 5:var $13=$tx_frame_type_addr;HEAP32[$13>>2]=2;var $14=$st;var $sid_handover_debt11=$14+4|0;var $15=HEAP16[$sid_handover_debt11>>1];var $dec12=$15-1&65535;HEAP16[$sid_handover_debt11>>1]=$dec12;__label__=10;break;case 6:var $16=$st;var $sid_update_counter14=$16+2|0;var $17=HEAP16[$sid_update_counter14>>1];var $conv15=$17<<16>>16;var $cmp16=($conv15|0)==0;if($cmp16){__label__=7;break}else{__label__=8;break}case 7:var $18=$tx_frame_type_addr;HEAP32[$18>>2]=2;var $19=$st;var $sid_update_rate=$19|0;var $20=HEAP16[$sid_update_rate>>1];var $21=$st;var $sid_update_counter19=$21+2|0;HEAP16[$sid_update_counter19>>1]=$20;__label__=9;break;case 8:var $22=$tx_frame_type_addr;HEAP32[$22>>2]=3;__label__=9;break;case 9:__label__=10;break;case 10:__label__=11;break;case 11:__label__=13;break;case 12:var $23=$st;var $sid_update_rate24=$23|0;var $24=HEAP16[$sid_update_rate24>>1];var $25=$st;var $sid_update_counter25=$25+2|0;HEAP16[$sid_update_counter25>>1]=$24;var $26=$tx_frame_type_addr;HEAP32[$26>>2]=0;__label__=13;break;case 13:var $27=$tx_frame_type_addr;var $28=HEAP32[$27>>2];var $29=$st;var $prev_ft27=$29+8|0;HEAP32[$prev_ft27>>2]=$28;return;default:assert(0,"bad label: "+__label__)}}_sid_sync["X"]=1;function _Bin2int($no_of_bits,$bitstream){var __label__;__label__=0;while(1)switch(__label__){case 0:var $no_of_bits_addr;var $bitstream_addr;var $value;var $i;var $single_bit;$no_of_bits_addr=$no_of_bits;$bitstream_addr=$bitstream;$value=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $1=$no_of_bits_addr;var $conv1=$1<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$value;var $conv3=$2<<16>>16;var $shl=$conv3<<1;var $conv4=$shl&65535;$value=$conv4;var $3=$bitstream_addr;var $incdec_ptr=$3+2|0;$bitstream_addr=$incdec_ptr;var $4=HEAP16[$3>>1];$single_bit=$4;var $5=$single_bit;var $conv5=$5<<16>>16;var $6=$value;var $conv6=$6<<16>>16;var $or=$conv6|$conv5;var $conv7=$or&65535;$value=$conv7;__label__=3;break;case 3:var $7=$i;var $inc=$7+1&65535;$i=$inc;__label__=1;break;case 4:var $8=$value;return $8;default:assert(0,"bad label: "+__label__)}}function _sid_sync_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;var $st;$state_addr=$state;var $0=$state_addr;var $1=$0;$st=$1;var $2=$st;var $cmp=($2|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $3=$st;var $4=HEAP32[$3>>2];var $cmp1=($4|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $5=$st;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$st;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Bits2prm($mode,$bits,$prm,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $bits_addr;var $prm_addr;var $common_amr_tbls_addr;var $i;var $prmno_ptr;var $bitno_ptr;$mode_addr=$mode;$bits_addr=$bits;$prm_addr=$prm;$common_amr_tbls_addr=$common_amr_tbls;var $0=$common_amr_tbls_addr;var $prmno_ptr1=$0+88|0;var $1=HEAP32[$prmno_ptr1>>2];$prmno_ptr=$1;var $2=$common_amr_tbls_addr;var $bitno_ptr2=$2+92|0;var $3=HEAP32[$bitno_ptr2>>2];$bitno_ptr=$3;$i=0;__label__=1;break;case 1:var $4=$i;var $conv=$4<<16>>16;var $5=$mode_addr;var $6=$prmno_ptr;var $arrayidx=$6+($5<<1)|0;var $7=HEAP16[$arrayidx>>1];var $conv3=$7<<16>>16;var $cmp=($conv|0)<($conv3|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $8=$i;var $idxprom=$8<<16>>16;var $9=$mode_addr;var $10=$bitno_ptr;var $arrayidx5=$10+($9<<2)|0;var $11=HEAP32[$arrayidx5>>2];var $arrayidx6=$11+($idxprom<<1)|0;var $12=HEAP16[$arrayidx6>>1];var $13=$bits_addr;var $call=_Bin2int($12,$13);var $14=$i;var $idxprom7=$14<<16>>16;var $15=$prm_addr;var $arrayidx8=$15+($idxprom7<<1)|0;HEAP16[$arrayidx8>>1]=$call;var $16=$i;var $idxprom9=$16<<16>>16;var $17=$mode_addr;var $18=$bitno_ptr;var $arrayidx10=$18+($17<<2)|0;var $19=HEAP32[$arrayidx10>>2];var $arrayidx11=$19+($idxprom9<<1)|0;var $20=HEAP16[$arrayidx11>>1];var $conv12=$20<<16>>16;var $21=$bits_addr;var $add_ptr=$21+($conv12<<1)|0;$bits_addr=$add_ptr;__label__=3;break;case 3:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}_Bits2prm["X"]=1;function _GSMInitDecode($state_data,$id){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_data_addr;var $id_addr;var $s;var $tmp;var $tempVoid;$state_data_addr=$state_data;$id_addr=$id;var $0=$id_addr;var $1=$state_data_addr;var $cmp=($1|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=8;break;case 2:var $2=$state_data_addr;HEAP32[$2>>2]=0;var $call=_malloc(1764);var $3=$call;$s=$3;var $cmp1=($3|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=8;break;case 4:var $4=$s;var $decoder_amrState=$4|0;var $call4=_Decoder_amr_init($decoder_amrState);var $conv=$call4<<16>>16;var $tobool=($conv|0)!=0;if($tobool){__label__=6;break}else{__label__=5;break}case 5:var $5=$s;var $postHP_state=$5+1748|0;var $call5=_Post_Process_reset($postHP_state);var $conv6=$call5<<16>>16;var $tobool7=($conv6|0)!=0;if($tobool7){__label__=6;break}else{__label__=7;break}case 6:var $6=$s;$tmp=$6;var $7=$tmp;var $8=$7;$tempVoid=$8;var $9=$tempVoid;_GSMDecodeFrameExit($9);$retval=-1;__label__=8;break;case 7:var $10=$s;var $11=$10;var $call11=_Speech_Decode_Frame_reset($11);var $12=$s;var $13=$12;var $14=$state_data_addr;HEAP32[$14>>2]=$13;$retval=0;__label__=8;break;case 8:var $15=$retval;return $15;default:assert(0,"bad label: "+__label__)}}_GSMInitDecode["X"]=1;function _GSMDecodeFrameExit($state_data){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_data_addr;var $state;$state_data_addr=$state_data;var $0=$state_data_addr;var $1=$0;$state=$1;var $2=$state;var $cmp=($2|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $3=$state;var $4=HEAP32[$3>>2];var $cmp1=($4|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $5=$state;var $6=HEAP32[$5>>2];var $7=$6;_free($7);var $8=$state;HEAP32[$8>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Speech_Decode_Frame_reset($state_data){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_data_addr;var $state;$state_data_addr=$state_data;var $0=$state_data_addr;var $1=$0;$state=$1;var $2=$state_data_addr;var $cmp=($2|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $3=$state;var $decoder_amrState=$3|0;var $call=_Decoder_amr_reset($decoder_amrState,0);var $4=$state;var $post_state=$4+1304|0;var $call1=_Post_Filter_reset($post_state);var $5=$state;var $postHP_state=$5+1748|0;var $call2=_Post_Process_reset($postHP_state);var $6=$state;var $prev_mode=$6+1760|0;HEAP32[$prev_mode>>2]=0;$retval=0;__label__=3;break;case 3:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _GSMFrameDecode($st,$mode,$serial,$frame_type,$synth){var __stackBase__=STACKTOP;STACKTOP+=204;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $mode_addr;var $serial_addr;var $frame_type_addr;var $synth_addr;var $parm=__stackBase__;var $Az_dec=__stackBase__+116;var $pOverflow;var $i;$st_addr=$st;$mode_addr=$mode;$serial_addr=$serial;$frame_type_addr=$frame_type;$synth_addr=$synth;var $0=$st_addr;var $decoder_amrState=$0|0;var $overflow=$decoder_amrState+1164|0;$pOverflow=$overflow;var $1=$frame_type_addr;var $cmp=($1|0)==6;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $2=$frame_type_addr;var $cmp1=($2|0)==5;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $3=$serial_addr;var $arraydecay=$parm|0;var $4=$st_addr;var $decoder_amrState2=$4|0;var $common_amr_tbls=$decoder_amrState2+1168|0;_Bits2prm(8,$3,$arraydecay,$common_amr_tbls);__label__=4;break;case 3:var $5=$mode_addr;var $6=$serial_addr;var $arraydecay3=$parm|0;var $7=$st_addr;var $decoder_amrState4=$7|0;var $common_amr_tbls5=$decoder_amrState4+1168|0;_Bits2prm($5,$6,$arraydecay3,$common_amr_tbls5);__label__=4;break;case 4:var $8=$st_addr;var $decoder_amrState6=$8|0;var $9=$mode_addr;var $arraydecay7=$parm|0;var $10=$frame_type_addr;var $11=$synth_addr;var $arraydecay8=$Az_dec|0;_Decoder_amr($decoder_amrState6,$9,$arraydecay7,$10,$11,$arraydecay8);var $12=$st_addr;var $post_state=$12+1304|0;var $13=$mode_addr;var $14=$synth_addr;var $arraydecay9=$Az_dec|0;var $15=$pOverflow;_Post_Filter($post_state,$13,$14,$arraydecay9,$15);var $16=$st_addr;var $postHP_state=$16+1748|0;var $17=$synth_addr;var $18=$pOverflow;_Post_Process($postHP_state,$17,160,$18);$i=0;__label__=5;break;case 5:var $19=$i;var $conv=$19<<16>>16;var $cmp10=($conv|0)<160;if($cmp10){__label__=6;break}else{__label__=8;break}case 6:var $20=$i;var $idxprom=$20<<16>>16;var $21=$synth_addr;var $arrayidx=$21+($idxprom<<1)|0;var $22=HEAP16[$arrayidx>>1];var $conv12=$22<<16>>16;var $and=$conv12&65528;var $conv13=$and&65535;var $23=$i;var $idxprom14=$23<<16>>16;var $24=$synth_addr;var $arrayidx15=$24+($idxprom14<<1)|0;HEAP16[$arrayidx15>>1]=$conv13;__label__=7;break;case 7:var $25=$i;var $inc=$25+1&65535;$i=$inc;__label__=5;break;case 8:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_GSMFrameDecode["X"]=1;function _GSMInitEncode($state_data,$dtx,$id){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_data_addr;var $dtx_addr;var $id_addr;var $s=__stackBase__;var $temp;$state_data_addr=$state_data;$dtx_addr=$dtx;$id_addr=$id;var $0=$id_addr;var $1=$state_data_addr;var $cmp=($1|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=8;break;case 2:var $2=$state_data_addr;HEAP32[$2>>2]=0;var $call=_malloc(12);var $3=$call;HEAP32[$s>>2]=$3;var $cmp1=($3|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=8;break;case 4:var $4=HEAP32[$s>>2];var $pre_state=$4|0;HEAP32[$pre_state>>2]=0;var $5=HEAP32[$s>>2];var $cod_amr_state=$5+4|0;HEAP32[$cod_amr_state>>2]=0;var $6=$dtx_addr;var $7=HEAP32[$s>>2];var $dtx4=$7+8|0;HEAP32[$dtx4>>2]=$6;var $8=HEAP32[$s>>2];var $pre_state5=$8|0;var $call6=_Pre_Process_init($pre_state5);var $conv=$call6<<16>>16;var $tobool=($conv|0)!=0;if($tobool){__label__=6;break}else{__label__=5;break}case 5:var $9=HEAP32[$s>>2];var $cod_amr_state7=$9+4|0;var $10=HEAP32[$s>>2];var $dtx8=$10+8|0;var $11=HEAP32[$dtx8>>2];var $call9=_cod_amr_init($cod_amr_state7,$11);var $conv10=$call9<<16>>16;var $tobool11=($conv10|0)!=0;if($tobool11){__label__=6;break}else{__label__=7;break}case 6:$temp=$s;var $12=$temp;var $13=$12;_GSMEncodeFrameExit($13);$retval=-1;__label__=8;break;case 7:var $14=HEAP32[$s>>2];var $15=$14;var $call14=_Speech_Encode_Frame_reset($15);var $16=HEAP32[$s>>2];var $17=$16;var $18=$state_data_addr;HEAP32[$18>>2]=$17;$retval=0;__label__=8;break;case 8:var $19=$retval;STACKTOP=__stackBase__;return $19;default:assert(0,"bad label: "+__label__)}}_GSMInitEncode["X"]=1;function _GSMEncodeFrameExit($state_data){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_data_addr;var $state;$state_data_addr=$state_data;var $0=$state_data_addr;var $1=$0;$state=$1;var $2=$state;var $cmp=($2|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $3=$state;var $4=HEAP32[$3>>2];var $cmp1=($4|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $5=$state;var $6=HEAP32[$5>>2];var $pre_state=$6|0;_Pre_Process_exit($pre_state);var $7=$state;var $8=HEAP32[$7>>2];var $cod_amr_state=$8+4|0;_cod_amr_exit($cod_amr_state);var $9=$state;var $10=HEAP32[$9>>2];var $11=$10;_free($11);var $12=$state;HEAP32[$12>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _Speech_Encode_Frame_reset($state_data){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_data_addr;var $state;$state_data_addr=$state_data;var $0=$state_data_addr;var $1=$0;$state=$1;var $2=$state_data_addr;var $cmp=($2|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $3=$state;var $pre_state=$3|0;var $4=HEAP32[$pre_state>>2];var $call=_Pre_Process_reset($4);var $5=$state;var $cod_amr_state=$5+4|0;var $6=HEAP32[$cod_amr_state>>2];var $call1=_cod_amr_reset($6);$retval=0;__label__=3;break;case 3:var $7=$retval;return $7;default:assert(0,"bad label: "+__label__)}}function _Speech_Encode_Frame_First($st,$new_speech){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $new_speech_addr;var $i;$st_addr=$st;$new_speech_addr=$new_speech;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$new_speech_addr;var $arrayidx=$2+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $conv2=$3<<16>>16;var $and=$conv2&65528;var $conv3=$and&65535;var $4=$i;var $idxprom4=$4<<16>>16;var $5=$new_speech_addr;var $arrayidx5=$5+($idxprom4<<1)|0;HEAP16[$arrayidx5>>1]=$conv3;__label__=3;break;case 3:var $6=$i;var $inc=$6+1&65535;$i=$inc;__label__=1;break;case 4:var $7=$st_addr;var $pre_state=$7|0;var $8=HEAP32[$pre_state>>2];var $9=$new_speech_addr;_Pre_Process($8,$9,40);var $10=$st_addr;var $cod_amr_state=$10+4|0;var $11=HEAP32[$cod_amr_state>>2];var $12=$new_speech_addr;var $call=_cod_amr_first($11,$12);return;default:assert(0,"bad label: "+__label__)}}function _GSMEncodeFrame($state_data,$mode,$new_speech,$serial,$usedMode){var __stackBase__=STACKTOP;STACKTOP+=436;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_data_addr;var $mode_addr;var $new_speech_addr;var $serial_addr;var $usedMode_addr;var $st;var $prm=__stackBase__;var $syn=__stackBase__+116;var $i;$state_data_addr=$state_data;$mode_addr=$mode;$new_speech_addr=$new_speech;$serial_addr=$serial;$usedMode_addr=$usedMode;var $0=$state_data_addr;var $1=$0;$st=$1;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<244;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$i;var $idxprom=$3<<16>>16;var $4=$serial_addr;var $arrayidx=$4+($idxprom<<1)|0;HEAP16[$arrayidx>>1]=0;__label__=3;break;case 3:var $5=$i;var $inc=$5+1&65535;$i=$inc;__label__=1;break;case 4:$i=0;__label__=5;break;case 5:var $6=$i;var $conv3=$6<<16>>16;var $cmp4=($conv3|0)<160;if($cmp4){__label__=6;break}else{__label__=8;break}case 6:var $7=$i;var $idxprom7=$7<<16>>16;var $8=$new_speech_addr;var $arrayidx8=$8+($idxprom7<<1)|0;var $9=HEAP16[$arrayidx8>>1];var $conv9=$9<<16>>16;var $and=$conv9&65528;var $conv10=$and&65535;var $10=$i;var $idxprom11=$10<<16>>16;var $11=$new_speech_addr;var $arrayidx12=$11+($idxprom11<<1)|0;HEAP16[$arrayidx12>>1]=$conv10;__label__=7;break;case 7:var $12=$i;var $inc14=$12+1&65535;$i=$inc14;__label__=5;break;case 8:var $13=$st;var $pre_state=$13|0;var $14=HEAP32[$pre_state>>2];var $15=$new_speech_addr;_Pre_Process($14,$15,160);var $16=$st;var $cod_amr_state=$16+4|0;var $17=HEAP32[$cod_amr_state>>2];var $18=$mode_addr;var $19=$new_speech_addr;var $arraydecay=$prm|0;var $20=$usedMode_addr;var $arraydecay16=$syn|0;var $call=_cod_amr($17,$18,$19,$arraydecay,$20,$arraydecay16);var $21=$usedMode_addr;var $22=HEAP32[$21>>2];var $arraydecay17=$prm|0;var $23=$serial_addr;var $arrayidx18=$23|0;var $24=$st;var $cod_amr_state19=$24+4|0;var $25=HEAP32[$cod_amr_state19>>2];var $common_amr_tbls=$25+2392|0;_Prm2bits($22,$arraydecay17,$arrayidx18,$common_amr_tbls);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_GSMEncodeFrame["X"]=1;function _L_shl471($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _L_mult473($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _L_sub474($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _sub($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $diff;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $sub=$conv-$conv1|0;$diff=$sub;var $2=$diff;var $add=$2+32768|0;var $cmp=$add>>>0>65535;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $3=$diff;var $cmp3=($3|0)>32767;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:$diff=32767;__label__=4;break;case 3:$diff=-32768;__label__=4;break;case 4:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;__label__=5;break;case 5:var $5=$diff;var $conv7=$5&65535;return $conv7;default:assert(0,"bad label: "+__label__)}}function _subframePreProc($mode,$gamma1,$gamma1_12k2,$gamma2,$A,$Aq,$speech,$mem_err,$mem_w0,$zero,$ai_zero,$exc,$h1,$xn,$res2,$error){var __stackBase__=STACKTOP;STACKTOP+=48;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $mode_addr;var $gamma1_addr;var $gamma1_12k2_addr;var $gamma2_addr;var $A_addr;var $Aq_addr;var $speech_addr;var $mem_err_addr;var $mem_w0_addr;var $zero_addr;var $ai_zero_addr;var $exc_addr;var $h1_addr;var $xn_addr;var $res2_addr;var $error_addr;var $Ap1=__stackBase__;var $Ap2=__stackBase__+24;var $g1;$mode_addr=$mode;$gamma1_addr=$gamma1;$gamma1_12k2_addr=$gamma1_12k2;$gamma2_addr=$gamma2;$A_addr=$A;$Aq_addr=$Aq;$speech_addr=$speech;$mem_err_addr=$mem_err;$mem_w0_addr=$mem_w0;$zero_addr=$zero;$ai_zero_addr=$ai_zero;$exc_addr=$exc;$h1_addr=$h1;$xn_addr=$xn;$res2_addr=$res2;$error_addr=$error;var $0=$mode_addr;var $cmp=($0|0)==7;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$mode_addr;var $cmp1=($1|0)==6;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $2=$gamma1_12k2_addr;$g1=$2;__label__=4;break;case 3:var $3=$gamma1_addr;$g1=$3;__label__=4;break;case 4:var $4=$A_addr;var $5=$g1;var $arraydecay=$Ap1|0;_Weight_Ai($4,$5,$arraydecay);var $6=$A_addr;var $7=$gamma2_addr;var $arraydecay2=$Ap2|0;_Weight_Ai($6,$7,$arraydecay2);var $8=$ai_zero_addr;var $9=$8;var $arraydecay3=$Ap1|0;var $10=$arraydecay3;assert(22%1===0,"memcpy given "+22+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($9,$10,22,1);var $11=$Aq_addr;var $12=$ai_zero_addr;var $13=$h1_addr;var $14=$zero_addr;_Syn_filt($11,$12,$13,40,$14,0);var $arraydecay4=$Ap2|0;var $15=$h1_addr;var $16=$h1_addr;var $17=$zero_addr;_Syn_filt($arraydecay4,$15,$16,40,$17,0);var $18=$Aq_addr;var $19=$speech_addr;var $20=$res2_addr;_Residu($18,$19,$20,40);var $21=$exc_addr;var $22=$21;var $23=$res2_addr;var $24=$23;assert(80%1===0,"memcpy given "+80+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($22,$24,80,1);var $25=$Aq_addr;var $26=$exc_addr;var $27=$error_addr;var $28=$mem_err_addr;_Syn_filt($25,$26,$27,40,$28,0);var $arraydecay5=$Ap1|0;var $29=$error_addr;var $30=$xn_addr;_Residu($arraydecay5,$29,$30,40);var $arraydecay6=$Ap2|0;var $31=$xn_addr;var $32=$xn_addr;var $33=$mem_w0_addr;_Syn_filt($arraydecay6,$31,$32,40,$33,0);STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_subframePreProc["X"]=1;function _subframePostProc($speech,$mode,$i_subfr,$gain_pit,$gain_code,$Aq,$synth,$xn,$code,$y1,$y2,$mem_syn,$mem_err,$mem_w0,$exc,$sharp,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $speech_addr;var $mode_addr;var $i_subfr_addr;var $gain_pit_addr;var $gain_code_addr;var $Aq_addr;var $synth_addr;var $xn_addr;var $code_addr;var $y1_addr;var $y2_addr;var $mem_syn_addr;var $mem_err_addr;var $mem_w0_addr;var $exc_addr;var $sharp_addr;var $pOverflow_addr;var $i;var $j;var $temp;var $L_temp;var $L_temp2;var $tempShift;var $kShift;var $pitch_fac;var $p_exc;var $p_code;$speech_addr=$speech;$mode_addr=$mode;$i_subfr_addr=$i_subfr;$gain_pit_addr=$gain_pit;$gain_code_addr=$gain_code;$Aq_addr=$Aq;$synth_addr=$synth;$xn_addr=$xn;$code_addr=$code;$y1_addr=$y1;$y2_addr=$y2;$mem_syn_addr=$mem_syn;$mem_err_addr=$mem_err;$mem_w0_addr=$mem_w0;$exc_addr=$exc;$sharp_addr=$sharp;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;var $1=$mode_addr;var $cmp=($1|0)!=7;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$tempShift=1;$kShift=13;var $2=$gain_pit_addr;$pitch_fac=$2;__label__=3;break;case 2:$tempShift=2;$kShift=11;var $3=$gain_pit_addr;var $conv=$3<<16>>16;var $shr=$conv>>1;var $conv1=$shr&65535;$pitch_fac=$conv1;__label__=3;break;case 3:var $4=$gain_pit_addr;var $conv2=$4<<16>>16;var $cmp3=($conv2|0)<13017;if($cmp3){__label__=4;break}else{__label__=5;break}case 4:var $5=$gain_pit_addr;var $6=$sharp_addr;HEAP16[$6>>1]=$5;__label__=6;break;case 5:var $7=$sharp_addr;HEAP16[$7>>1]=13017;__label__=6;break;case 6:var $8=$i_subfr_addr;var $idxprom=$8<<16>>16;var $9=$exc_addr;var $arrayidx=$9+($idxprom<<1)|0;$p_exc=$arrayidx;var $10=$code_addr;var $arrayidx8=$10|0;$p_code=$arrayidx8;$i=20;__label__=7;break;case 7:var $11=$i;var $conv9=$11<<16>>16;var $cmp10=($conv9|0)!=0;if($cmp10){__label__=8;break}else{__label__=10;break}case 8:var $12=$p_exc;var $incdec_ptr=$12+2|0;$p_exc=$incdec_ptr;var $13=HEAP16[$12>>1];var $conv12=$13<<16>>16;var $14=$pitch_fac;var $conv13=$14<<16>>16;var $mul=$conv12*$conv13|0;var $shl=$mul<<1;$L_temp=$shl;var $15=$p_exc;var $incdec_ptr14=$15-2|0;$p_exc=$incdec_ptr14;var $16=HEAP16[$15>>1];var $conv15=$16<<16>>16;var $17=$pitch_fac;var $conv16=$17<<16>>16;var $mul17=$conv15*$conv16|0;var $shl18=$mul17<<1;$L_temp2=$shl18;var $18=$p_code;var $incdec_ptr19=$18+2|0;$p_code=$incdec_ptr19;var $19=HEAP16[$18>>1];var $conv20=$19<<16>>16;var $20=$gain_code_addr;var $conv21=$20<<16>>16;var $mul22=$conv20*$conv21|0;var $shl23=$mul22<<1;var $21=$L_temp;var $add=$21+$shl23|0;$L_temp=$add;var $22=$p_code;var $incdec_ptr24=$22+2|0;$p_code=$incdec_ptr24;var $23=HEAP16[$22>>1];var $conv25=$23<<16>>16;var $24=$gain_code_addr;var $conv26=$24<<16>>16;var $mul27=$conv25*$conv26|0;var $shl28=$mul27<<1;var $25=$L_temp2;var $add29=$25+$shl28|0;$L_temp2=$add29;var $26=$tempShift;var $conv30=$26<<16>>16;var $27=$L_temp;var $shl31=$27<<$conv30;$L_temp=$shl31;var $28=$tempShift;var $conv32=$28<<16>>16;var $29=$L_temp2;var $shl33=$29<<$conv32;$L_temp2=$shl33;var $30=$L_temp;var $add34=$30+32768|0;var $shr35=$add34>>16;var $conv36=$shr35&65535;var $31=$p_exc;var $incdec_ptr37=$31+2|0;$p_exc=$incdec_ptr37;HEAP16[$31>>1]=$conv36;var $32=$L_temp2;var $add38=$32+32768|0;var $shr39=$add38>>16;var $conv40=$shr39&65535;var $33=$p_exc;var $incdec_ptr41=$33+2|0;$p_exc=$incdec_ptr41;HEAP16[$33>>1]=$conv40;__label__=9;break;case 9:var $34=$i;var $dec=$34-1&65535;$i=$dec;__label__=7;break;case 10:var $35=$Aq_addr;var $36=$i_subfr_addr;var $idxprom42=$36<<16>>16;var $37=$exc_addr;var $arrayidx43=$37+($idxprom42<<1)|0;var $38=$i_subfr_addr;var $idxprom44=$38<<16>>16;var $39=$synth_addr;var $arrayidx45=$39+($idxprom44<<1)|0;var $40=$mem_syn_addr;_Syn_filt($35,$arrayidx43,$arrayidx45,40,$40,1);$i=30;$j=0;__label__=11;break;case 11:var $41=$i;var $conv47=$41<<16>>16;var $cmp48=($conv47|0)<40;if($cmp48){__label__=12;break}else{__label__=14;break}case 12:var $42=$i_subfr_addr;var $conv51=$42<<16>>16;var $43=$i;var $conv52=$43<<16>>16;var $add53=$conv51+$conv52|0;var $44=$speech_addr;var $arrayidx54=$44+($add53<<1)|0;var $45=HEAP16[$arrayidx54>>1];var $conv55=$45<<16>>16;var $46=$i_subfr_addr;var $conv56=$46<<16>>16;var $47=$i;var $conv57=$47<<16>>16;var $add58=$conv56+$conv57|0;var $48=$synth_addr;var $arrayidx59=$48+($add58<<1)|0;var $49=HEAP16[$arrayidx59>>1];var $conv60=$49<<16>>16;var $sub=$conv55-$conv60|0;var $conv61=$sub&65535;var $50=$j;var $idxprom62=$50<<16>>16;var $51=$mem_err_addr;var $arrayidx63=$51+($idxprom62<<1)|0;HEAP16[$arrayidx63>>1]=$conv61;var $52=$i;var $idxprom64=$52<<16>>16;var $53=$y1_addr;var $arrayidx65=$53+($idxprom64<<1)|0;var $54=HEAP16[$arrayidx65>>1];var $conv66=$54<<16>>16;var $55=$gain_pit_addr;var $conv67=$55<<16>>16;var $mul68=$conv66*$conv67|0;$L_temp=$mul68;var $56=$L_temp;var $shr69=$56>>14;var $conv70=$shr69&65535;$temp=$conv70;var $57=$i;var $idxprom71=$57<<16>>16;var $58=$y2_addr;var $arrayidx72=$58+($idxprom71<<1)|0;var $59=HEAP16[$arrayidx72>>1];var $conv73=$59<<16>>16;var $60=$gain_code_addr;var $conv74=$60<<16>>16;var $mul75=$conv73*$conv74|0;$L_temp=$mul75;var $61=$L_temp;var $62=$kShift;var $conv76=$62<<16>>16;var $shr77=$61>>($conv76|0);var $conv78=$shr77&65535;var $conv79=$conv78<<16>>16;var $63=$temp;var $conv80=$63<<16>>16;var $add81=$conv80+$conv79|0;var $conv82=$add81&65535;$temp=$conv82;var $64=$i;var $idxprom83=$64<<16>>16;var $65=$xn_addr;var $arrayidx84=$65+($idxprom83<<1)|0;var $66=HEAP16[$arrayidx84>>1];var $conv85=$66<<16>>16;var $67=$temp;var $conv86=$67<<16>>16;var $sub87=$conv85-$conv86|0;var $conv88=$sub87&65535;var $68=$j;var $idxprom89=$68<<16>>16;var $69=$mem_w0_addr;var $arrayidx90=$69+($idxprom89<<1)|0;HEAP16[$arrayidx90>>1]=$conv88;__label__=13;break;case 13:var $70=$i;var $inc=$70+1&65535;$i=$inc;var $71=$j;var $inc92=$71+1&65535;$j=$inc92;__label__=11;break;case 14:;return;default:assert(0,"bad label: "+__label__)}}_subframePostProc["X"]=1;function _sqrt_l_exp($L_x,$pExp,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $L_x_addr;var $pExp_addr;var $pOverflow_addr;var $e;var $i;var $a;var $tmp;var $L_y;$L_x_addr=$L_x;$pExp_addr=$pExp;$pOverflow_addr=$pOverflow;var $0=$L_x_addr;var $cmp=($0|0)<=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$pExp_addr;HEAP16[$1>>1]=0;$retval=0;__label__=5;break;case 2:var $2=$L_x_addr;var $call=_norm_l($2);var $conv=$call<<16>>16;var $and=$conv&65534;var $conv2=$and&65535;$e=$conv2;var $3=$L_x_addr;var $4=$e;var $5=$pOverflow_addr;var $call3=_L_shl471($3,$4,$5);$L_x_addr=$call3;var $6=$e;var $7=$pExp_addr;HEAP16[$7>>1]=$6;var $8=$L_x_addr;var $shr=$8>>10;$L_x_addr=$shr;var $9=$L_x_addr;var $shr4=$9>>15;var $conv5=$shr4&65535;var $conv6=$conv5<<16>>16;var $and7=$conv6&63;var $conv8=$and7&65535;$i=$conv8;var $10=$L_x_addr;var $conv9=$10&65535;$a=$conv9;var $11=$a;var $conv10=$11<<16>>16;var $and11=$conv10&32767;var $conv12=$and11&65535;$a=$conv12;var $12=$i;var $conv13=$12<<16>>16;var $cmp14=($conv13|0)>15;if($cmp14){__label__=3;break}else{__label__=4;break}case 3:var $13=$i;var $conv17=$13<<16>>16;var $sub=$conv17-16|0;var $conv18=$sub&65535;$i=$conv18;__label__=4;break;case 4:var $14=$i;var $idxprom=$14<<16>>16;var $arrayidx=_sqrt_l_tbl+($idxprom<<1)|0;var $15=(tempInt=HEAPU8[$arrayidx]|HEAPU8[$arrayidx+1]<<8,tempInt<<16>>16);var $conv20=$15<<16>>16;var $shl=$conv20<<16;$L_y=$shl;var $16=$i;var $idxprom21=$16<<16>>16;var $arrayidx22=_sqrt_l_tbl+($idxprom21<<1)|0;var $17=(tempInt=HEAPU8[$arrayidx22]|HEAPU8[$arrayidx22+1]<<8,tempInt<<16>>16);var $conv23=$17<<16>>16;var $18=$i;var $conv24=$18<<16>>16;var $add=$conv24+1|0;var $arrayidx25=_sqrt_l_tbl+($add<<1)|0;var $19=(tempInt=HEAPU8[$arrayidx25]|HEAPU8[$arrayidx25+1]<<8,tempInt<<16>>16);var $conv26=$19<<16>>16;var $sub27=$conv23-$conv26|0;var $conv28=$sub27&65535;$tmp=$conv28;var $20=$L_y;var $21=$tmp;var $22=$a;var $23=$pOverflow_addr;var $call29=_L_msu472($20,$21,$22,$23);$L_y=$call29;var $24=$L_y;$retval=$24;__label__=5;break;case 5:var $25=$retval;return $25;default:assert(0,"bad label: "+__label__)}}_sqrt_l_exp["X"]=1;function _L_msu472($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult473($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub474($3,$4,$5);$result=$call1;var $6=$result;return $6}function _amrnb_fxp_mac_16_by_16bb481($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $add=$0+$mul|0;$result=$add;var $3=$result;return $3}function _amrnb_fxp_msu_16_by_16bb($L_var1,$L_var2,$L_var3){var __label__;var $L_var1_addr;var $L_var2_addr;var $L_var3_addr;var $result;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$L_var3_addr=$L_var3;var $0=$L_var3_addr;var $1=$L_var1_addr;var $2=$L_var2_addr;var $mul=$1*$2|0;var $sub=$0-$mul|0;$result=$sub;var $3=$result;return $3}function _check_lsp($st,$lsp,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $lsp_addr;var $pOverflow_addr;var $i;var $dist;var $dist_min1;var $dist_min2;var $dist_th;var $p_lsp;var $p_lsp_1;$st_addr=$st;$lsp_addr=$lsp;$pOverflow_addr=$pOverflow;var $0=$lsp_addr;var $arrayidx=$0+6|0;$p_lsp=$arrayidx;var $1=$lsp_addr;var $arrayidx1=$1+8|0;$p_lsp_1=$arrayidx1;var $2=$pOverflow_addr;$dist_min1=32767;$i=3;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)<8;if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $4=$p_lsp;var $incdec_ptr=$4+2|0;$p_lsp=$incdec_ptr;var $5=HEAP16[$4>>1];var $conv3=$5<<16>>16;var $6=$p_lsp_1;var $incdec_ptr4=$6+2|0;$p_lsp_1=$incdec_ptr4;var $7=HEAP16[$6>>1];var $conv5=$7<<16>>16;var $sub=$conv3-$conv5|0;var $conv6=$sub&65535;$dist=$conv6;var $8=$dist;var $conv7=$8<<16>>16;var $9=$dist_min1;var $conv8=$9<<16>>16;var $cmp9=($conv7|0)<($conv8|0);if($cmp9){__label__=3;break}else{__label__=4;break}case 3:var $10=$dist;$dist_min1=$10;__label__=4;break;case 4:__label__=5;break;case 5:var $11=$i;var $inc=$11+1&65535;$i=$inc;__label__=1;break;case 6:$dist_min2=32767;var $12=$lsp_addr;var $arrayidx11=$12+2|0;$p_lsp=$arrayidx11;var $13=$lsp_addr;var $arrayidx12=$13+4|0;$p_lsp_1=$arrayidx12;$i=1;__label__=7;break;case 7:var $14=$i;var $conv14=$14<<16>>16;var $cmp15=($conv14|0)<3;if($cmp15){__label__=8;break}else{__label__=12;break}case 8:var $15=$p_lsp;var $incdec_ptr18=$15+2|0;$p_lsp=$incdec_ptr18;var $16=HEAP16[$15>>1];var $conv19=$16<<16>>16;var $17=$p_lsp_1;var $incdec_ptr20=$17+2|0;$p_lsp_1=$incdec_ptr20;var $18=HEAP16[$17>>1];var $conv21=$18<<16>>16;var $sub22=$conv19-$conv21|0;var $conv23=$sub22&65535;$dist=$conv23;var $19=$dist;var $conv24=$19<<16>>16;var $20=$dist_min2;var $conv25=$20<<16>>16;var $cmp26=($conv24|0)<($conv25|0);if($cmp26){__label__=9;break}else{__label__=10;break}case 9:var $21=$dist;$dist_min2=$21;__label__=10;break;case 10:__label__=11;break;case 11:var $22=$i;var $inc31=$22+1&65535;$i=$inc31;__label__=7;break;case 12:var $23=$lsp_addr;var $arrayidx33=$23+2|0;var $24=HEAP16[$arrayidx33>>1];var $conv34=$24<<16>>16;var $cmp35=($conv34|0)>32e3;if($cmp35){__label__=13;break}else{__label__=14;break}case 13:$dist_th=600;__label__=18;break;case 14:var $25=$lsp_addr;var $arrayidx38=$25+2|0;var $26=HEAP16[$arrayidx38>>1];var $conv39=$26<<16>>16;var $cmp40=($conv39|0)>30500;if($cmp40){__label__=15;break}else{__label__=16;break}case 15:$dist_th=800;__label__=17;break;case 16:$dist_th=1100;__label__=17;break;case 17:__label__=18;break;case 18:var $27=$dist_min1;var $conv46=$27<<16>>16;var $cmp47=($conv46|0)<1500;if($cmp47){__label__=20;break}else{__label__=19;break}case 19:var $28=$dist_min2;var $conv49=$28<<16>>16;var $29=$dist_th;var $conv50=$29<<16>>16;var $cmp51=($conv49|0)<($conv50|0);if($cmp51){__label__=20;break}else{__label__=21;break}case 20:var $30=$st_addr;var $count=$30|0;var $31=HEAP16[$count>>1];var $inc54=$31+1&65535;HEAP16[$count>>1]=$inc54;__label__=22;break;case 21:var $32=$st_addr;var $count56=$32|0;HEAP16[$count56>>1]=0;__label__=22;break;case 22:var $33=$st_addr;var $count58=$33|0;var $34=HEAP16[$count58>>1];var $conv59=$34<<16>>16;var $cmp60=($conv59|0)>=12;if($cmp60){__label__=23;break}else{__label__=24;break}case 23:var $35=$st_addr;var $count63=$35|0;HEAP16[$count63>>1]=12;$retval=1;__label__=25;break;case 24:$retval=0;__label__=25;break;case 25:var $36=$retval;return $36;default:assert(0,"bad label: "+__label__)}}_check_lsp["X"]=1;function _Syn_filt($a,$x,$y,$lg,$mem,$update){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $a_addr;var $x_addr;var $y_addr;var $lg_addr;var $mem_addr;var $update_addr;var $i;var $j;var $s1;var $s2;var $tmp=__stackBase__;var $yy;var $p_a;var $p_yy1;var $p_y;var $p_x;var $temp;$a_addr=$a;$x_addr=$x;$y_addr=$y;$lg_addr=$lg;$mem_addr=$mem;$update_addr=$update;var $arraydecay=$tmp|0;$yy=$arraydecay;var $0=$yy;var $1=$0;var $2=$mem_addr;var $3=$2;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($1,$3,20,1);var $4=$yy;var $add_ptr=$4+20|0;$yy=$add_ptr;var $5=$y_addr;$p_y=$5;var $6=$x_addr;$p_x=$6;var $7=$yy;var $arrayidx=$7-2|0;$p_yy1=$arrayidx;$i=5;__label__=1;break;case 1:var $8=$i;var $conv=$8<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=2;break}else{__label__=20;break}case 2:var $9=$a_addr;$p_a=$9;var $10=$p_x;var $incdec_ptr=$10+2|0;$p_x=$incdec_ptr;var $11=HEAP16[$10>>1];var $conv8=$11<<16>>16;var $12=$p_a;var $13=HEAP16[$12>>1];var $conv9=$13<<16>>16;var $call=_amrnb_fxp_mac_16_by_16bb481($conv8,$conv9,2048);$s1=$call;var $14=$p_x;var $incdec_ptr10=$14+2|0;$p_x=$incdec_ptr10;var $15=HEAP16[$14>>1];var $conv11=$15<<16>>16;var $16=$p_a;var $incdec_ptr12=$16+2|0;$p_a=$incdec_ptr12;var $17=HEAP16[$16>>1];var $conv13=$17<<16>>16;var $call14=_amrnb_fxp_mac_16_by_16bb481($conv11,$conv13,2048);$s2=$call14;var $18=$p_a;var $incdec_ptr15=$18+2|0;$p_a=$incdec_ptr15;var $19=HEAP16[$18>>1];var $conv16=$19<<16>>16;var $20=$p_yy1;var $21=HEAP16[$20>>1];var $conv17=$21<<16>>16;var $22=$s1;var $call18=_amrnb_fxp_msu_16_by_16bb($conv16,$conv17,$22);$s1=$call18;$j=3;__label__=3;break;case 3:var $23=$j;var $conv20=$23<<16>>16;var $cmp21=($conv20|0)!=0;if($cmp21){__label__=4;break}else{__label__=6;break}case 4:var $24=$p_a;var $25=HEAP16[$24>>1];var $conv24=$25<<16>>16;var $26=$p_yy1;var $incdec_ptr25=$26-2|0;$p_yy1=$incdec_ptr25;var $27=HEAP16[$26>>1];var $conv26=$27<<16>>16;var $28=$s2;var $call27=_amrnb_fxp_msu_16_by_16bb($conv24,$conv26,$28);$s2=$call27;var $29=$p_a;var $incdec_ptr28=$29+2|0;$p_a=$incdec_ptr28;var $30=HEAP16[$29>>1];var $conv29=$30<<16>>16;var $31=$p_yy1;var $32=HEAP16[$31>>1];var $conv30=$32<<16>>16;var $33=$s1;var $call31=_amrnb_fxp_msu_16_by_16bb($conv29,$conv30,$33);$s1=$call31;var $34=$p_a;var $35=HEAP16[$34>>1];var $conv32=$35<<16>>16;var $36=$p_yy1;var $incdec_ptr33=$36-2|0;$p_yy1=$incdec_ptr33;var $37=HEAP16[$36>>1];var $conv34=$37<<16>>16;var $38=$s2;var $call35=_amrnb_fxp_msu_16_by_16bb($conv32,$conv34,$38);$s2=$call35;var $39=$p_a;var $incdec_ptr36=$39+2|0;$p_a=$incdec_ptr36;var $40=HEAP16[$39>>1];var $conv37=$40<<16>>16;var $41=$p_yy1;var $42=HEAP16[$41>>1];var $conv38=$42<<16>>16;var $43=$s1;var $call39=_amrnb_fxp_msu_16_by_16bb($conv37,$conv38,$43);$s1=$call39;var $44=$p_a;var $45=HEAP16[$44>>1];var $conv40=$45<<16>>16;var $46=$p_yy1;var $incdec_ptr41=$46-2|0;$p_yy1=$incdec_ptr41;var $47=HEAP16[$46>>1];var $conv42=$47<<16>>16;var $48=$s2;var $call43=_amrnb_fxp_msu_16_by_16bb($conv40,$conv42,$48);$s2=$call43;var $49=$p_a;var $incdec_ptr44=$49+2|0;$p_a=$incdec_ptr44;var $50=HEAP16[$49>>1];var $conv45=$50<<16>>16;var $51=$p_yy1;var $52=HEAP16[$51>>1];var $conv46=$52<<16>>16;var $53=$s1;var $call47=_amrnb_fxp_msu_16_by_16bb($conv45,$conv46,$53);$s1=$call47;__label__=5;break;case 5:var $54=$j;var $dec=$54-1&65535;$j=$dec;__label__=3;break;case 6:var $55=$s1;var $add=$55+134217728|0;var $cmp48=$add>>>0<268435455;if($cmp48){__label__=7;break}else{__label__=8;break}case 7:var $56=$s1;var $shr=$56>>12;var $conv50=$shr&65535;$temp=$conv50;__label__=12;break;case 8:var $57=$s1;var $cmp51=($57|0)>134217727;if($cmp51){__label__=9;break}else{__label__=10;break}case 9:$temp=32767;__label__=11;break;case 10:$temp=-32768;__label__=11;break;case 11:__label__=12;break;case 12:var $58=$a_addr;var $arrayidx56=$58+2|0;var $59=HEAP16[$arrayidx56>>1];var $conv57=$59<<16>>16;var $60=$temp;var $conv58=$60<<16>>16;var $61=$s2;var $call59=_amrnb_fxp_msu_16_by_16bb($conv57,$conv58,$61);$s2=$call59;var $62=$temp;var $63=$yy;var $incdec_ptr60=$63+2|0;$yy=$incdec_ptr60;HEAP16[$63>>1]=$62;var $64=$temp;var $65=$p_y;var $incdec_ptr61=$65+2|0;$p_y=$incdec_ptr61;HEAP16[$65>>1]=$64;var $66=$yy;$p_yy1=$66;var $67=$s2;var $add62=$67+134217728|0;var $cmp63=$add62>>>0<268435455;if($cmp63){__label__=13;break}else{__label__=14;break}case 13:var $68=$s2;var $shr66=$68>>12;var $conv67=$shr66&65535;$temp=$conv67;__label__=18;break;case 14:var $69=$s2;var $cmp69=($69|0)>134217727;if($cmp69){__label__=15;break}else{__label__=16;break}case 15:$temp=32767;__label__=17;break;case 16:$temp=-32768;__label__=17;break;case 17:__label__=18;break;case 18:var $70=$temp;var $71=$yy;var $incdec_ptr75=$71+2|0;$yy=$incdec_ptr75;HEAP16[$71>>1]=$70;var $72=$temp;var $73=$p_y;var $incdec_ptr76=$73+2|0;$p_y=$incdec_ptr76;HEAP16[$73>>1]=$72;__label__=19;break;case 19:var $74=$i;var $dec78=$74-1&65535;$i=$dec78;__label__=1;break;case 20:var $75=$y_addr;var $arrayidx80=$75+18|0;$p_yy1=$arrayidx80;var $76=$lg_addr;var $conv81=$76<<16>>16;var $sub=$conv81-10|0;var $shr82=$sub>>1;var $conv83=$shr82&65535;$i=$conv83;__label__=21;break;case 21:var $77=$i;var $conv85=$77<<16>>16;var $cmp86=($conv85|0)!=0;if($cmp86){__label__=22;break}else{__label__=40;break}case 22:var $78=$a_addr;$p_a=$78;var $79=$p_x;var $incdec_ptr89=$79+2|0;$p_x=$incdec_ptr89;var $80=HEAP16[$79>>1];var $conv90=$80<<16>>16;var $81=$p_a;var $82=HEAP16[$81>>1];var $conv91=$82<<16>>16;var $call92=_amrnb_fxp_mac_16_by_16bb481($conv90,$conv91,2048);$s1=$call92;var $83=$p_x;var $incdec_ptr93=$83+2|0;$p_x=$incdec_ptr93;var $84=HEAP16[$83>>1];var $conv94=$84<<16>>16;var $85=$p_a;var $incdec_ptr95=$85+2|0;$p_a=$incdec_ptr95;var $86=HEAP16[$85>>1];var $conv96=$86<<16>>16;var $call97=_amrnb_fxp_mac_16_by_16bb481($conv94,$conv96,2048);$s2=$call97;var $87=$p_a;var $incdec_ptr98=$87+2|0;$p_a=$incdec_ptr98;var $88=HEAP16[$87>>1];var $conv99=$88<<16>>16;var $89=$p_yy1;var $90=HEAP16[$89>>1];var $conv100=$90<<16>>16;var $91=$s1;var $call101=_amrnb_fxp_msu_16_by_16bb($conv99,$conv100,$91);$s1=$call101;$j=3;__label__=23;break;case 23:var $92=$j;var $conv103=$92<<16>>16;var $cmp104=($conv103|0)!=0;if($cmp104){__label__=24;break}else{__label__=26;break}case 24:var $93=$p_a;var $94=HEAP16[$93>>1];var $conv107=$94<<16>>16;var $95=$p_yy1;var $incdec_ptr108=$95-2|0;$p_yy1=$incdec_ptr108;var $96=HEAP16[$95>>1];var $conv109=$96<<16>>16;var $97=$s2;var $call110=_amrnb_fxp_msu_16_by_16bb($conv107,$conv109,$97);$s2=$call110;var $98=$p_a;var $incdec_ptr111=$98+2|0;$p_a=$incdec_ptr111;var $99=HEAP16[$98>>1];var $conv112=$99<<16>>16;var $100=$p_yy1;var $101=HEAP16[$100>>1];var $conv113=$101<<16>>16;var $102=$s1;var $call114=_amrnb_fxp_msu_16_by_16bb($conv112,$conv113,$102);$s1=$call114;var $103=$p_a;var $104=HEAP16[$103>>1];var $conv115=$104<<16>>16;var $105=$p_yy1;var $incdec_ptr116=$105-2|0;$p_yy1=$incdec_ptr116;var $106=HEAP16[$105>>1];var $conv117=$106<<16>>16;var $107=$s2;var $call118=_amrnb_fxp_msu_16_by_16bb($conv115,$conv117,$107);$s2=$call118;var $108=$p_a;var $incdec_ptr119=$108+2|0;$p_a=$incdec_ptr119;var $109=HEAP16[$108>>1];var $conv120=$109<<16>>16;var $110=$p_yy1;var $111=HEAP16[$110>>1];var $conv121=$111<<16>>16;var $112=$s1;var $call122=_amrnb_fxp_msu_16_by_16bb($conv120,$conv121,$112);$s1=$call122;var $113=$p_a;var $114=HEAP16[$113>>1];var $conv123=$114<<16>>16;var $115=$p_yy1;var $incdec_ptr124=$115-2|0;$p_yy1=$incdec_ptr124;var $116=HEAP16[$115>>1];var $conv125=$116<<16>>16;var $117=$s2;var $call126=_amrnb_fxp_msu_16_by_16bb($conv123,$conv125,$117);$s2=$call126;var $118=$p_a;var $incdec_ptr127=$118+2|0;$p_a=$incdec_ptr127;var $119=HEAP16[$118>>1];var $conv128=$119<<16>>16;var $120=$p_yy1;var $121=HEAP16[$120>>1];var $conv129=$121<<16>>16;var $122=$s1;var $call130=_amrnb_fxp_msu_16_by_16bb($conv128,$conv129,$122);$s1=$call130;__label__=25;break;case 25:var $123=$j;var $dec132=$123-1&65535;$j=$dec132;__label__=23;break;case 26:var $124=$s1;var $add134=$124+134217728|0;var $cmp135=$add134>>>0<268435455;if($cmp135){__label__=27;break}else{__label__=28;break}case 27:var $125=$s1;var $shr138=$125>>12;var $conv139=$shr138&65535;$temp=$conv139;__label__=32;break;case 28:var $126=$s1;var $cmp141=($126|0)>134217727;if($cmp141){__label__=29;break}else{__label__=30;break}case 29:$temp=32767;__label__=31;break;case 30:$temp=-32768;__label__=31;break;case 31:__label__=32;break;case 32:var $127=$a_addr;var $arrayidx147=$127+2|0;var $128=HEAP16[$arrayidx147>>1];var $conv148=$128<<16>>16;var $129=$temp;var $conv149=$129<<16>>16;var $130=$s2;var $call150=_amrnb_fxp_msu_16_by_16bb($conv148,$conv149,$130);$s2=$call150;var $131=$temp;var $132=$p_y;var $incdec_ptr151=$132+2|0;$p_y=$incdec_ptr151;HEAP16[$132>>1]=$131;var $133=$p_y;$p_yy1=$133;var $134=$s2;var $add152=$134+134217728|0;var $cmp153=$add152>>>0<268435455;if($cmp153){__label__=33;break}else{__label__=34;break}case 33:var $135=$s2;var $shr156=$135>>12;var $conv157=$shr156&65535;var $136=$p_y;var $incdec_ptr158=$136+2|0;$p_y=$incdec_ptr158;HEAP16[$136>>1]=$conv157;__label__=38;break;case 34:var $137=$s2;var $cmp160=($137|0)>134217727;if($cmp160){__label__=35;break}else{__label__=36;break}case 35:var $138=$p_y;var $incdec_ptr163=$138+2|0;$p_y=$incdec_ptr163;HEAP16[$138>>1]=32767;__label__=37;break;case 36:var $139=$p_y;var $incdec_ptr165=$139+2|0;$p_y=$incdec_ptr165;HEAP16[$139>>1]=-32768;__label__=37;break;case 37:__label__=38;break;case 38:__label__=39;break;case 39:var $140=$i;var $dec169=$140-1&65535;$i=$dec169;__label__=21;break;case 40:var $141=$update_addr;var $conv171=$141<<16>>16;var $cmp172=($conv171|0)!=0;if($cmp172){__label__=41;break}else{__label__=42;break}case 41:var $142=$mem_addr;var $143=$142;var $144=$lg_addr;var $conv175=$144<<16>>16;var $sub176=$conv175-10|0;var $145=$y_addr;var $arrayidx177=$145+($sub176<<1)|0;var $146=$arrayidx177;assert(20%1===0,"memcpy given "+20+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($143,$146,20,1);__label__=42;break;case 42:STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_Syn_filt["X"]=1;function _ton_stab_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(16);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_ton_stab_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _ton_stab_reset($st){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;$st_addr=$st;var $0=$st_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=3;break;case 2:var $1=$st_addr;var $count=$1|0;HEAP16[$count>>1]=0;var $2=$st_addr;var $gp=$2+2|0;var $arraydecay=$gp|0;var $3=$arraydecay;for(var $$dest=$3,$$stop=$$dest+14;$$dest<$$stop;$$dest++){HEAP8[$$dest]=0};$retval=0;__label__=3;break;case 3:var $4=$retval;return $4;default:assert(0,"bad label: "+__label__)}}function _ton_stab_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _check_gp_clipping($st,$g_pitch,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $g_pitch_addr;var $pOverflow_addr;var $i;var $sum;$st_addr=$st;$g_pitch_addr=$g_pitch;$pOverflow_addr=$pOverflow;var $0=$g_pitch_addr;var $1=$pOverflow_addr;var $call=_shr($0,3,$1);$sum=$call;$i=0;__label__=1;break;case 1:var $2=$i;var $conv=$2<<16>>16;var $cmp=($conv|0)<7;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$sum;var $4=$i;var $idxprom=$4<<16>>16;var $5=$st_addr;var $gp=$5+2|0;var $arrayidx=$gp+($idxprom<<1)|0;var $6=HEAP16[$arrayidx>>1];var $7=$pOverflow_addr;var $call2=_add_16($3,$6,$7);$sum=$call2;__label__=3;break;case 3:var $8=$i;var $inc=$8+1&65535;$i=$inc;__label__=1;break;case 4:var $9=$sum;var $conv3=$9<<16>>16;var $cmp4=($conv3|0)>15565;if($cmp4){__label__=5;break}else{__label__=6;break}case 5:$retval=1;__label__=7;break;case 6:$retval=0;__label__=7;break;case 7:var $10=$retval;return $10;default:assert(0,"bad label: "+__label__)}}function _abs_s509($var1){var __label__;var $var1_addr;var $y;$var1_addr=$var1;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var1_addr;var $conv1=$1<<16>>16;var $cmp=($conv1|0)<0;var $conv2=$cmp&1;var $sub=$conv-$conv2|0;var $conv3=$sub&65535;$y=$conv3;var $2=$y;var $conv4=$2<<16>>16;var $3=$y;var $conv5=$3<<16>>16;var $shr=$conv5>>15;var $xor=$conv4^$shr;var $conv6=$xor&65535;$y=$conv6;var $4=$y;return $4}function _L_mac512($L_var3,$var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;var $L_sum;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$result=$mul;var $2=$result;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $3=$result;var $shl=$3<<1;var $4=$L_var3_addr;var $add=$shl+$4|0;$L_sum=$add;var $5=$L_var3_addr;var $6=$result;var $xor=$5^$6;var $cmp3=($xor|0)>0;if($cmp3){__label__=2;break}else{__label__=5;break}case 2:var $7=$L_sum;var $8=$L_var3_addr;var $xor6=$7^$8;var $shr=$xor6>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=3;break}else{__label__=4;break}case 3:var $9=$L_var3_addr;var $shr8=$9>>31;var $tobool9=($shr8|0)!=0;var $cond=$tobool9?-2147483648:2147483647;$L_sum=$cond;var $10=$pOverflow_addr;HEAP32[$10>>2]=1;__label__=4;break;case 4:__label__=5;break;case 5:__label__=7;break;case 6:var $11=$pOverflow_addr;HEAP32[$11>>2]=1;$L_sum=2147483647;__label__=7;break;case 7:var $12=$L_sum;return $12;default:assert(0,"bad label: "+__label__)}}_L_mac512["X"]=1;function _L_sub513($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_diff;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $sub=$0-$1|0;$L_diff=$sub;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $shr=$xor>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_diff;var $5=$L_var1_addr;var $xor1=$4^$5;var $and=$xor1&-2147483648;var $tobool2=($and|0)!=0;if($tobool2){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr4=$6>>31;var $tobool5=($shr4|0)!=0;var $cond=$tobool5?-2147483648:2147483647;$L_diff=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_diff;return $8;default:assert(0,"bad label: "+__label__)}}function _update_gp_clipping($st,$g_pitch,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $g_pitch_addr;var $pOverflow_addr;var $i;$st_addr=$st;$g_pitch_addr=$g_pitch;$pOverflow_addr=$pOverflow;var $0=$pOverflow_addr;$i=0;__label__=1;break;case 1:var $1=$i;var $cmp=($1|0)<6;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $2=$i;var $add=$2+1|0;var $3=$st_addr;var $gp=$3+2|0;var $arrayidx=$gp+($add<<1)|0;var $4=HEAP16[$arrayidx>>1];var $5=$i;var $6=$st_addr;var $gp1=$6+2|0;var $arrayidx2=$gp1+($5<<1)|0;HEAP16[$arrayidx2>>1]=$4;__label__=3;break;case 3:var $7=$i;var $inc=$7+1|0;$i=$inc;__label__=1;break;case 4:var $8=$g_pitch_addr;var $conv=$8<<16>>16;var $shr=$conv>>3;var $conv3=$shr&65535;var $9=$st_addr;var $gp4=$9+2|0;var $arrayidx5=$gp4+12|0;HEAP16[$arrayidx5>>1]=$conv3;return;default:assert(0,"bad label: "+__label__)}}function _vad1_reset($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $i;var $j;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=19;break;case 2:var $1=$state_addr;var $oldlag_count=$1+110|0;HEAP16[$oldlag_count>>1]=0;var $2=$state_addr;var $oldlag=$2+112|0;HEAP16[$oldlag>>1]=0;var $3=$state_addr;var $pitch=$3+102|0;HEAP16[$pitch>>1]=0;var $4=$state_addr;var $tone=$4+104|0;HEAP16[$tone>>1]=0;var $5=$state_addr;var $complex_high=$5+106|0;HEAP16[$complex_high>>1]=0;var $6=$state_addr;var $complex_low=$6+108|0;HEAP16[$complex_low>>1]=0;var $7=$state_addr;var $complex_hang_timer=$7+116|0;HEAP16[$complex_hang_timer>>1]=0;var $8=$state_addr;var $vadreg=$8+100|0;HEAP16[$vadreg>>1]=0;var $9=$state_addr;var $stat_count=$9+98|0;HEAP16[$stat_count>>1]=0;var $10=$state_addr;var $burst_count=$10+94|0;HEAP16[$burst_count>>1]=0;var $11=$state_addr;var $hang_count=$11+96|0;HEAP16[$hang_count>>1]=0;var $12=$state_addr;var $complex_hang_count=$12+114|0;HEAP16[$complex_hang_count>>1]=0;$i=0;__label__=3;break;case 3:var $13=$i;var $conv=$13<<16>>16;var $cmp1=($conv|0)<3;if($cmp1){__label__=4;break}else{__label__=10;break}case 4:$j=0;__label__=5;break;case 5:var $14=$j;var $conv4=$14<<16>>16;var $cmp5=($conv4|0)<2;if($cmp5){__label__=6;break}else{__label__=8;break}case 6:var $15=$j;var $idxprom=$15<<16>>16;var $16=$i;var $idxprom8=$16<<16>>16;var $17=$state_addr;var $a_data5=$17+72|0;var $arrayidx=$a_data5+($idxprom8<<2)|0;var $arrayidx9=$arrayidx+($idxprom<<1)|0;HEAP16[$arrayidx9>>1]=0;__label__=7;break;case 7:var $18=$j;var $inc=$18+1&65535;$j=$inc;__label__=5;break;case 8:__label__=9;break;case 9:var $19=$i;var $inc11=$19+1&65535;$i=$inc11;__label__=3;break;case 10:$i=0;__label__=11;break;case 11:var $20=$i;var $conv14=$20<<16>>16;var $cmp15=($conv14|0)<5;if($cmp15){__label__=12;break}else{__label__=14;break}case 12:var $21=$i;var $idxprom18=$21<<16>>16;var $22=$state_addr;var $a_data3=$22+84|0;var $arrayidx19=$a_data3+($idxprom18<<1)|0;HEAP16[$arrayidx19>>1]=0;__label__=13;break;case 13:var $23=$i;var $inc21=$23+1&65535;$i=$inc21;__label__=11;break;case 14:$i=0;__label__=15;break;case 15:var $24=$i;var $conv24=$24<<16>>16;var $cmp25=($conv24|0)<9;if($cmp25){__label__=16;break}else{__label__=18;break}case 16:var $25=$i;var $idxprom28=$25<<16>>16;var $26=$state_addr;var $bckr_est=$26|0;var $arrayidx29=$bckr_est+($idxprom28<<1)|0;HEAP16[$arrayidx29>>1]=150;var $27=$i;var $idxprom30=$27<<16>>16;var $28=$state_addr;var $old_level=$28+36|0;var $arrayidx31=$old_level+($idxprom30<<1)|0;HEAP16[$arrayidx31>>1]=150;var $29=$i;var $idxprom32=$29<<16>>16;var $30=$state_addr;var $ave_level=$30+18|0;var $arrayidx33=$ave_level+($idxprom32<<1)|0;HEAP16[$arrayidx33>>1]=150;var $31=$i;var $idxprom34=$31<<16>>16;var $32=$state_addr;var $sub_level=$32+54|0;var $arrayidx35=$sub_level+($idxprom34<<1)|0;HEAP16[$arrayidx35>>1]=0;__label__=17;break;case 17:var $33=$i;var $inc37=$33+1&65535;$i=$inc37;__label__=15;break;case 18:var $34=$state_addr;var $best_corr_hp=$34+118|0;HEAP16[$best_corr_hp>>1]=13106;var $35=$state_addr;var $speech_vad_decision=$35+120|0;HEAP16[$speech_vad_decision>>1]=0;var $36=$state_addr;var $complex_warning=$36+122|0;HEAP16[$complex_warning>>1]=0;var $37=$state_addr;var $sp_burst_count=$37+124|0;HEAP16[$sp_burst_count>>1]=0;var $38=$state_addr;var $corr_hp_fast=$38+126|0;HEAP16[$corr_hp_fast>>1]=13106;$retval=0;__label__=19;break;case 19:var $39=$retval;return $39;default:assert(0,"bad label: "+__label__)}}_vad1_reset["X"]=1;function _vad_complex_detection_update($st,$best_corr_hp){var __label__;var $st_addr;var $best_corr_hp_addr;$st_addr=$st;$best_corr_hp_addr=$best_corr_hp;var $0=$best_corr_hp_addr;var $1=$st_addr;var $best_corr_hp1=$1+118|0;HEAP16[$best_corr_hp1>>1]=$0;return}function _vad1_init($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $state_addr;var $s;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=-1;__label__=5;break;case 2:var $1=$state_addr;HEAP32[$1>>2]=0;var $call=_malloc(128);var $2=$call;$s=$2;var $cmp1=($2|0)==0;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$retval=-1;__label__=5;break;case 4:var $3=$s;var $call4=_vad1_reset($3);var $4=$s;var $5=$state_addr;HEAP32[$5>>2]=$4;$retval=0;__label__=5;break;case 5:var $6=$retval;return $6;default:assert(0,"bad label: "+__label__)}}function _vad1_exit($state){var __label__;__label__=0;while(1)switch(__label__){case 0:var $state_addr;$state_addr=$state;var $0=$state_addr;var $cmp=($0|0)==0;if($cmp){__label__=2;break}else{__label__=1;break}case 1:var $1=$state_addr;var $2=HEAP32[$1>>2];var $cmp1=($2|0)==0;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:__label__=4;break;case 3:var $3=$state_addr;var $4=HEAP32[$3>>2];var $5=$4;_free($5);var $6=$state_addr;HEAP32[$6>>2]=0;__label__=4;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _vad_tone_detection($st,$t0,$t1,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $t0_addr;var $t1_addr;var $pOverflow_addr;var $temp;$st_addr=$st;$t0_addr=$t0;$t1_addr=$t1;$pOverflow_addr=$pOverflow;var $0=$t1_addr;var $1=$pOverflow_addr;var $call=_pv_round($0,$1);$temp=$call;var $2=$temp;var $conv=$2<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=3;break}case 1:var $3=$t0_addr;var $4=$temp;var $5=$pOverflow_addr;var $call2=_L_msu504($3,$4,21298,$5);var $cmp3=($call2|0)>0;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $6=$st_addr;var $tone=$6+104|0;var $7=HEAP16[$tone>>1];var $conv5=$7<<16>>16;var $or=$conv5|16384;var $conv6=$or&65535;HEAP16[$tone>>1]=$conv6;__label__=3;break;case 3:;return;default:assert(0,"bad label: "+__label__)}}function _L_msu504($L_var3,$var1,$var2,$pOverflow){var __label__;var $L_var3_addr;var $var1_addr;var $var2_addr;var $pOverflow_addr;var $result;$L_var3_addr=$L_var3;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $1=$var2_addr;var $2=$pOverflow_addr;var $call=_L_mult518($0,$1,$2);$result=$call;var $3=$L_var3_addr;var $4=$result;var $5=$pOverflow_addr;var $call1=_L_sub513($3,$4,$5);$result=$call1;var $6=$result;return $6}function _vad_tone_detection_update($st,$one_lag_per_frame,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $one_lag_per_frame_addr;var $pOverflow_addr;$st_addr=$st;$one_lag_per_frame_addr=$one_lag_per_frame;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $tone=$0+104|0;var $1=HEAP16[$tone>>1];var $2=$pOverflow_addr;var $call=_shr($1,1,$2);var $3=$st_addr;var $tone1=$3+104|0;HEAP16[$tone1>>1]=$call;var $4=$one_lag_per_frame_addr;var $conv=$4<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $5=$st_addr;var $tone3=$5+104|0;var $6=HEAP16[$tone3>>1];var $7=$pOverflow_addr;var $call4=_shr($6,1,$7);var $8=$st_addr;var $tone5=$8+104|0;HEAP16[$tone5>>1]=$call4;var $9=$st_addr;var $tone6=$9+104|0;var $10=HEAP16[$tone6>>1];var $conv7=$10<<16>>16;var $or=$conv7|8192;var $conv8=$or&65535;HEAP16[$tone6>>1]=$conv8;__label__=2;break;case 2:;return;default:assert(0,"bad label: "+__label__)}}function _vad_pitch_detection($st,$T_op,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $T_op_addr;var $pOverflow_addr;var $lagcount;var $i;var $temp;$st_addr=$st;$T_op_addr=$T_op;$pOverflow_addr=$pOverflow;$lagcount=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<2;if($cmp){__label__=2;break}else{__label__=6;break}case 2:var $1=$st_addr;var $oldlag=$1+112|0;var $2=HEAP16[$oldlag>>1];var $3=$i;var $idxprom=$3<<16>>16;var $4=$T_op_addr;var $arrayidx=$4+($idxprom<<1)|0;var $5=HEAP16[$arrayidx>>1];var $6=$pOverflow_addr;var $call=_sub($2,$5,$6);$temp=$call;var $7=$temp;var $call2=_abs_s509($7);$temp=$call2;var $8=$temp;var $conv3=$8<<16>>16;var $cmp4=($conv3|0)<4;if($cmp4){__label__=3;break}else{__label__=4;break}case 3:var $9=$lagcount;var $conv6=$9<<16>>16;var $add=$conv6+1|0;var $conv7=$add&65535;$lagcount=$conv7;__label__=4;break;case 4:var $10=$i;var $idxprom8=$10<<16>>16;var $11=$T_op_addr;var $arrayidx9=$11+($idxprom8<<1)|0;var $12=HEAP16[$arrayidx9>>1];var $13=$st_addr;var $oldlag10=$13+112|0;HEAP16[$oldlag10>>1]=$12;__label__=5;break;case 5:var $14=$i;var $inc=$14+1&65535;$i=$inc;__label__=1;break;case 6:var $15=$st_addr;var $pitch=$15+102|0;var $16=HEAP16[$pitch>>1];var $17=$pOverflow_addr;var $call11=_shr($16,1,$17);var $18=$st_addr;var $pitch12=$18+102|0;HEAP16[$pitch12>>1]=$call11;var $19=$st_addr;var $oldlag_count=$19+110|0;var $20=HEAP16[$oldlag_count>>1];var $21=$lagcount;var $22=$pOverflow_addr;var $call13=_add_16($20,$21,$22);$temp=$call13;var $23=$temp;var $conv14=$23<<16>>16;var $cmp15=($conv14|0)>=4;if($cmp15){__label__=7;break}else{__label__=8;break}case 7:var $24=$st_addr;var $pitch18=$24+102|0;var $25=HEAP16[$pitch18>>1];var $conv19=$25<<16>>16;var $or=$conv19|16384;var $conv20=$or&65535;HEAP16[$pitch18>>1]=$conv20;__label__=8;break;case 8:var $26=$lagcount;var $27=$st_addr;var $oldlag_count22=$27+110|0;HEAP16[$oldlag_count22>>1]=$26;return;default:assert(0,"bad label: "+__label__)}}_vad_pitch_detection["X"]=1;function _vad1($st,$in_buf,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=20;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $in_buf_addr;var $pOverflow_addr;var $level=__stackBase__;var $pow_sum;var $i;$st_addr=$st;$in_buf_addr=$in_buf;$pOverflow_addr=$pOverflow;$pow_sum=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<160;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$pow_sum;var $2=$i;var $conv2=$2<<16>>16;var $sub=$conv2-40|0;var $3=$in_buf_addr;var $arrayidx=$3+($sub<<1)|0;var $4=HEAP16[$arrayidx>>1];var $5=$i;var $conv3=$5<<16>>16;var $sub4=$conv3-40|0;var $6=$in_buf_addr;var $arrayidx5=$6+($sub4<<1)|0;var $7=HEAP16[$arrayidx5>>1];var $8=$pOverflow_addr;var $call=_L_mac512($1,$4,$7,$8);$pow_sum=$call;__label__=3;break;case 3:var $9=$i;var $inc=$9+1&65535;$i=$inc;__label__=1;break;case 4:var $10=$pow_sum;var $11=$pOverflow_addr;var $call6=_L_sub513($10,343040,$11);var $cmp7=($call6|0)<0;if($cmp7){__label__=5;break}else{__label__=6;break}case 5:var $12=$st_addr;var $pitch=$12+102|0;var $13=HEAP16[$pitch>>1];var $conv9=$13<<16>>16;var $and=$conv9&16383;var $conv10=$and&65535;var $14=$st_addr;var $pitch11=$14+102|0;HEAP16[$pitch11>>1]=$conv10;__label__=6;break;case 6:var $15=$pow_sum;var $16=$pOverflow_addr;var $call12=_L_sub513($15,15e3,$16);var $cmp13=($call12|0)<0;if($cmp13){__label__=7;break}else{__label__=8;break}case 7:var $17=$st_addr;var $complex_low=$17+108|0;var $18=HEAP16[$complex_low>>1];var $conv16=$18<<16>>16;var $and17=$conv16&16383;var $conv18=$and17&65535;var $19=$st_addr;var $complex_low19=$19+108|0;HEAP16[$complex_low19>>1]=$conv18;__label__=8;break;case 8:var $20=$st_addr;var $21=$in_buf_addr;var $arraydecay=$level|0;var $22=$pOverflow_addr;_filter_bank($20,$21,$arraydecay,$22);var $23=$st_addr;var $arraydecay21=$level|0;var $24=$pow_sum;var $25=$pOverflow_addr;var $call22=_vad_decision($23,$arraydecay21,$24,$25);STACKTOP=__stackBase__;return $call22;default:assert(0,"bad label: "+__label__)}}_vad1["X"]=1;function _shl514($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $var_out;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)<0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$var2_addr;var $conv2=$2<<16>>16;var $sub=-$conv2|0;var $conv3=$sub&65535;$var2_addr=$conv3;var $3=$var2_addr;var $conv4=$3<<16>>16;var $cmp5=($conv4|0)<15;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:var $4=$var1_addr;var $conv8=$4<<16>>16;var $5=$var2_addr;var $conv9=$5<<16>>16;var $shr=$conv8>>($conv9|0);var $conv10=$shr&65535;$var_out=$conv10;__label__=3;break;case 3:__label__=7;break;case 4:var $6=$var1_addr;var $conv11=$6<<16>>16;var $7=$var2_addr;var $conv12=$7<<16>>16;var $shl=$conv11<<$conv12;var $conv13=$shl&65535;$var_out=$conv13;var $8=$var_out;var $conv14=$8<<16>>16;var $9=$var2_addr;var $conv15=$9<<16>>16;var $shr16=$conv14>>($conv15|0);var $10=$var1_addr;var $conv17=$10<<16>>16;var $cmp18=($shr16|0)!=($conv17|0);if($cmp18){__label__=5;break}else{__label__=6;break}case 5:var $11=$var1_addr;var $conv21=$11<<16>>16;var $shr22=$conv21>>15;var $xor=$shr22^32767;var $conv23=$xor&65535;$var_out=$conv23;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$var_out;return $12;default:assert(0,"bad label: "+__label__)}}_shl514["X"]=1;function _L_shl515($L_var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $var2_addr;var $pOverflow_addr;var $L_var_out;$L_var1_addr=$L_var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;$L_var_out=0;var $0=$pOverflow_addr;var $1=$var2_addr;var $conv=$1<<16>>16;var $cmp=($conv|0)>0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$L_var1_addr;var $3=$var2_addr;var $conv2=$3<<16>>16;var $shl=$2<<$conv2;$L_var_out=$shl;var $4=$L_var_out;var $5=$var2_addr;var $conv3=$5<<16>>16;var $shr=$4>>($conv3|0);var $6=$L_var1_addr;var $cmp4=($shr|0)!=($6|0);if($cmp4){__label__=2;break}else{__label__=3;break}case 2:var $7=$L_var1_addr;var $shr7=$7>>31;var $xor=$shr7^2147483647;$L_var_out=$xor;__label__=3;break;case 3:__label__=7;break;case 4:var $8=$var2_addr;var $conv8=$8<<16>>16;var $sub=-$conv8|0;var $conv9=$sub&65535;$var2_addr=$conv9;var $9=$var2_addr;var $conv10=$9<<16>>16;var $cmp11=($conv10|0)<31;if($cmp11){__label__=5;break}else{__label__=6;break}case 5:var $10=$L_var1_addr;var $11=$var2_addr;var $conv14=$11<<16>>16;var $shr15=$10>>($conv14|0);$L_var_out=$shr15;__label__=6;break;case 6:__label__=7;break;case 7:var $12=$L_var_out;return $12;default:assert(0,"bad label: "+__label__)}}function _mult516($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;var $shr=$mul>>15;$product=$shr;var $2=$product;var $cmp=($2|0)>32767;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$pOverflow_addr;HEAP32[$3>>2]=1;$product=32767;__label__=2;break;case 2:var $4=$product;var $conv3=$4&65535;return $conv3;default:assert(0,"bad label: "+__label__)}}function _L_add517($L_var1,$L_var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $L_var1_addr;var $L_var2_addr;var $pOverflow_addr;var $L_sum;$L_var1_addr=$L_var1;$L_var2_addr=$L_var2;$pOverflow_addr=$pOverflow;var $0=$L_var1_addr;var $1=$L_var2_addr;var $add=$0+$1|0;$L_sum=$add;var $2=$L_var1_addr;var $3=$L_var2_addr;var $xor=$2^$3;var $cmp=($xor|0)>=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $4=$L_sum;var $5=$L_var1_addr;var $xor1=$4^$5;var $shr=$xor1>>31;var $tobool=($shr|0)!=0;if($tobool){__label__=2;break}else{__label__=3;break}case 2:var $6=$L_var1_addr;var $shr3=$6>>31;var $tobool4=($shr3|0)!=0;var $cond=$tobool4?-2147483648:2147483647;$L_sum=$cond;var $7=$pOverflow_addr;HEAP32[$7>>2]=1;__label__=3;break;case 3:__label__=4;break;case 4:var $8=$L_sum;return $8;default:assert(0,"bad label: "+__label__)}}function _filter_bank($st,$in,$level,$pOverflow){var __stackBase__=STACKTOP;STACKTOP+=320;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $in_addr;var $level_addr;var $pOverflow_addr;var $i;var $tmp_buf=__stackBase__;$st_addr=$st;$in_addr=$in;$level_addr=$level;$pOverflow_addr=$pOverflow;var $0=$in_addr;var $arraydecay=$tmp_buf|0;var $1=$st_addr;var $a_data5=$1+72|0;var $arrayidx=$a_data5|0;var $arraydecay1=$arrayidx|0;var $2=$pOverflow_addr;_first_filter_stage($0,$arraydecay,$arraydecay1,$2);$i=0;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$i;var $conv3=$4<<16>>16;var $mul=$conv3<<2|0;var $arrayidx4=$tmp_buf+($mul<<1)|0;var $5=$i;var $conv5=$5<<16>>16;var $mul6=$conv5<<2|0;var $add=$mul6+2|0;var $arrayidx7=$tmp_buf+($add<<1)|0;var $6=$st_addr;var $a_data58=$6+72|0;var $arrayidx9=$a_data58+4|0;var $arraydecay10=$arrayidx9|0;var $7=$pOverflow_addr;_filter5($arrayidx4,$arrayidx7,$arraydecay10,$7);var $8=$i;var $conv11=$8<<16>>16;var $mul12=$conv11<<2|0;var $add13=$mul12+1|0;var $arrayidx14=$tmp_buf+($add13<<1)|0;var $9=$i;var $conv15=$9<<16>>16;var $mul16=$conv15<<2|0;var $add17=$mul16+3|0;var $arrayidx18=$tmp_buf+($add17<<1)|0;var $10=$st_addr;var $a_data519=$10+72|0;var $arrayidx20=$a_data519+8|0;var $arraydecay21=$arrayidx20|0;var $11=$pOverflow_addr;_filter5($arrayidx14,$arrayidx18,$arraydecay21,$11);__label__=3;break;case 3:var $12=$i;var $inc=$12+1&65535;$i=$inc;__label__=1;break;case 4:$i=0;__label__=5;break;case 5:var $13=$i;var $conv23=$13<<16>>16;var $cmp24=($conv23|0)<20;if($cmp24){__label__=6;break}else{__label__=8;break}case 6:var $14=$i;var $conv27=$14<<16>>16;var $mul28=$conv27<<3|0;var $add29=$mul28|0;var $arrayidx30=$tmp_buf+($add29<<1)|0;var $15=$i;var $conv31=$15<<16>>16;var $mul32=$conv31<<3|0;var $add33=$mul32+4|0;var $arrayidx34=$tmp_buf+($add33<<1)|0;var $16=$st_addr;var $a_data3=$16+84|0;var $arrayidx35=$a_data3|0;var $17=$pOverflow_addr;_filter3($arrayidx30,$arrayidx34,$arrayidx35,$17);var $18=$i;var $conv36=$18<<16>>16;var $mul37=$conv36<<3|0;var $add38=$mul37+2|0;var $arrayidx39=$tmp_buf+($add38<<1)|0;var $19=$i;var $conv40=$19<<16>>16;var $mul41=$conv40<<3|0;var $add42=$mul41+6|0;var $arrayidx43=$tmp_buf+($add42<<1)|0;var $20=$st_addr;var $a_data344=$20+84|0;var $arrayidx45=$a_data344+2|0;var $21=$pOverflow_addr;_filter3($arrayidx39,$arrayidx43,$arrayidx45,$21);var $22=$i;var $conv46=$22<<16>>16;var $mul47=$conv46<<3|0;var $add48=$mul47+3|0;var $arrayidx49=$tmp_buf+($add48<<1)|0;var $23=$i;var $conv50=$23<<16>>16;var $mul51=$conv50<<3|0;var $add52=$mul51+7|0;var $arrayidx53=$tmp_buf+($add52<<1)|0;var $24=$st_addr;var $a_data354=$24+84|0;var $arrayidx55=$a_data354+8|0;var $25=$pOverflow_addr;_filter3($arrayidx49,$arrayidx53,$arrayidx55,$25);__label__=7;break;case 7:var $26=$i;var $inc57=$26+1&65535;$i=$inc57;__label__=5;break;case 8:$i=0;__label__=9;break;case 9:var $27=$i;var $conv60=$27<<16>>16;var $cmp61=($conv60|0)<10;if($cmp61){__label__=10;break}else{__label__=12;break}case 10:var $28=$i;var $conv64=$28<<16>>16;var $mul65=$conv64<<4|0;var $add66=$mul65|0;var $arrayidx67=$tmp_buf+($add66<<1)|0;var $29=$i;var $conv68=$29<<16>>16;var $mul69=$conv68<<4|0;var $add70=$mul69+8|0;var $arrayidx71=$tmp_buf+($add70<<1)|0;var $30=$st_addr;var $a_data372=$30+84|0;var $arrayidx73=$a_data372+4|0;var $31=$pOverflow_addr;_filter3($arrayidx67,$arrayidx71,$arrayidx73,$31);var $32=$i;var $conv74=$32<<16>>16;var $mul75=$conv74<<4|0;var $add76=$mul75+4|0;var $arrayidx77=$tmp_buf+($add76<<1)|0;var $33=$i;var $conv78=$33<<16>>16;var $mul79=$conv78<<4|0;var $add80=$mul79+12|0;var $arrayidx81=$tmp_buf+($add80<<1)|0;var $34=$st_addr;var $a_data382=$34+84|0;var $arrayidx83=$a_data382+6|0;var $35=$pOverflow_addr;_filter3($arrayidx77,$arrayidx81,$arrayidx83,$35);__label__=11;break;case 11:var $36=$i;var $inc85=$36+1&65535;$i=$inc85;__label__=9;break;case 12:var $arraydecay87=$tmp_buf|0;var $37=$st_addr;var $sub_level=$37+54|0;var $arrayidx88=$sub_level+16|0;var $38=$pOverflow_addr;var $call=_level_calculation($arraydecay87,$arrayidx88,32,40,4,1,15,$38);var $39=$level_addr;var $arrayidx89=$39+16|0;HEAP16[$arrayidx89>>1]=$call;var $arraydecay90=$tmp_buf|0;var $40=$st_addr;var $sub_level91=$40+54|0;var $arrayidx92=$sub_level91+14|0;var $41=$pOverflow_addr;var $call93=_level_calculation($arraydecay90,$arrayidx92,16,20,8,7,16,$41);var $42=$level_addr;var $arrayidx94=$42+14|0;HEAP16[$arrayidx94>>1]=$call93;var $arraydecay95=$tmp_buf|0;var $43=$st_addr;var $sub_level96=$43+54|0;var $arrayidx97=$sub_level96+12|0;var $44=$pOverflow_addr;var $call98=_level_calculation($arraydecay95,$arrayidx97,16,20,8,3,16,$44);var $45=$level_addr;var $arrayidx99=$45+12|0;HEAP16[$arrayidx99>>1]=$call98;var $arraydecay100=$tmp_buf|0;var $46=$st_addr;var $sub_level101=$46+54|0;var $arrayidx102=$sub_level101+10|0;var $47=$pOverflow_addr;var $call103=_level_calculation($arraydecay100,$arrayidx102,16,20,8,2,16,$47);var $48=$level_addr;var $arrayidx104=$48+10|0;HEAP16[$arrayidx104>>1]=$call103;var $arraydecay105=$tmp_buf|0;var $49=$st_addr;var $sub_level106=$49+54|0;var $arrayidx107=$sub_level106+8|0;var $50=$pOverflow_addr;var $call108=_level_calculation($arraydecay105,$arrayidx107,16,20,8,6,16,$50);var $51=$level_addr;var $arrayidx109=$51+8|0;HEAP16[$arrayidx109>>1]=$call108;var $arraydecay110=$tmp_buf|0;var $52=$st_addr;var $sub_level111=$52+54|0;var $arrayidx112=$sub_level111+6|0;var $53=$pOverflow_addr;var $call113=_level_calculation($arraydecay110,$arrayidx112,8,10,16,4,16,$53);var $54=$level_addr;var $arrayidx114=$54+6|0;HEAP16[$arrayidx114>>1]=$call113;var $arraydecay115=$tmp_buf|0;var $55=$st_addr;var $sub_level116=$55+54|0;var $arrayidx117=$sub_level116+4|0;var $56=$pOverflow_addr;var $call118=_level_calculation($arraydecay115,$arrayidx117,8,10,16,12,16,$56);var $57=$level_addr;var $arrayidx119=$57+4|0;HEAP16[$arrayidx119>>1]=$call118;var $arraydecay120=$tmp_buf|0;var $58=$st_addr;var $sub_level121=$58+54|0;var $arrayidx122=$sub_level121+2|0;var $59=$pOverflow_addr;var $call123=_level_calculation($arraydecay120,$arrayidx122,8,10,16,8,16,$59);var $60=$level_addr;var $arrayidx124=$60+2|0;HEAP16[$arrayidx124>>1]=$call123;var $arraydecay125=$tmp_buf|0;var $61=$st_addr;var $sub_level126=$61+54|0;var $arrayidx127=$sub_level126|0;var $62=$pOverflow_addr;var $call128=_level_calculation($arraydecay125,$arrayidx127,8,10,16,0,16,$62);var $63=$level_addr;var $arrayidx129=$63|0;HEAP16[$arrayidx129>>1]=$call128;STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_filter_bank["X"]=1;function _vad_decision($st,$level,$pow_sum,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $level_addr;var $pow_sum_addr;var $pOverflow_addr;var $i;var $snr_sum;var $L_temp;var $vad_thr;var $temp;var $noise_level;var $low_power_flag;var $temp1;var $exp;$st_addr=$st;$level_addr=$level;$pow_sum_addr=$pow_sum;$pOverflow_addr=$pOverflow;$L_temp=0;$i=0;__label__=1;break;case 1:var $0=$i;var $conv=$0<<16>>16;var $cmp=($conv|0)<9;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $idxprom=$1<<16>>16;var $2=$st_addr;var $bckr_est=$2|0;var $arrayidx=$bckr_est+($idxprom<<1)|0;var $3=HEAP16[$arrayidx>>1];var $call=_norm_s($3);$exp=$call;var $4=$i;var $idxprom2=$4<<16>>16;var $5=$st_addr;var $bckr_est3=$5|0;var $arrayidx4=$bckr_est3+($idxprom2<<1)|0;var $6=HEAP16[$arrayidx4>>1];var $7=$exp;var $8=$pOverflow_addr;var $call5=_shl514($6,$7,$8);$temp=$call5;var $9=$i;var $idxprom6=$9<<16>>16;var $10=$level_addr;var $arrayidx7=$10+($idxprom6<<1)|0;var $11=HEAP16[$arrayidx7>>1];var $12=$pOverflow_addr;var $call8=_shr($11,1,$12);var $13=$temp;var $call9=_div_s($call8,$13);$temp=$call9;var $14=$temp;var $15=$exp;var $16=$pOverflow_addr;var $call10=_sub($15,5,$16);var $17=$pOverflow_addr;var $call11=_shl514($14,$call10,$17);$temp=$call11;var $18=$L_temp;var $19=$temp;var $20=$temp;var $21=$pOverflow_addr;var $call12=_L_mac512($18,$19,$20,$21);$L_temp=$call12;__label__=3;break;case 3:var $22=$i;var $inc=$22+1&65535;$i=$inc;__label__=1;break;case 4:var $23=$L_temp;var $24=$pOverflow_addr;var $call13=_L_shl515($23,6,$24);var $shr=$call13>>16;var $conv14=$shr&65535;$snr_sum=$conv14;var $25=$snr_sum;var $26=$pOverflow_addr;var $call15=_mult516($25,3641,$26);$snr_sum=$call15;$L_temp=0;$i=0;__label__=5;break;case 5:var $27=$i;var $conv17=$27<<16>>16;var $cmp18=($conv17|0)<9;if($cmp18){__label__=6;break}else{__label__=8;break}case 6:var $28=$L_temp;var $29=$i;var $idxprom21=$29<<16>>16;var $30=$st_addr;var $bckr_est22=$30|0;var $arrayidx23=$bckr_est22+($idxprom21<<1)|0;var $31=HEAP16[$arrayidx23>>1];var $conv24=$31<<16>>16;var $32=$pOverflow_addr;var $call25=_L_add517($28,$conv24,$32);$L_temp=$call25;__label__=7;break;case 7:var $33=$i;var $inc27=$33+1&65535;$i=$inc27;__label__=5;break;case 8:var $34=$L_temp;var $35=$pOverflow_addr;var $call29=_L_shl515($34,13,$35);var $shr30=$call29>>16;var $conv31=$shr30&65535;$noise_level=$conv31;var $36=$noise_level;var $37=$pOverflow_addr;var $call32=_sub($36,0,$37);$temp1=$call32;var $38=$temp1;var $39=$pOverflow_addr;var $call33=_mult516(-2808,$38,$39);$temp1=$call33;var $40=$temp1;var $41=$pOverflow_addr;var $call34=_add_16($40,1260,$41);$vad_thr=$call34;var $42=$vad_thr;var $conv35=$42<<16>>16;var $cmp36=($conv35|0)<720;if($cmp36){__label__=9;break}else{__label__=10;break}case 9:$vad_thr=720;__label__=10;break;case 10:var $43=$st_addr;var $vadreg=$43+100|0;var $44=HEAP16[$vadreg>>1];var $45=$pOverflow_addr;var $call38=_shr($44,1,$45);var $46=$st_addr;var $vadreg39=$46+100|0;HEAP16[$vadreg39>>1]=$call38;var $47=$snr_sum;var $conv40=$47<<16>>16;var $48=$vad_thr;var $conv41=$48<<16>>16;var $cmp42=($conv40|0)>($conv41|0);if($cmp42){__label__=11;break}else{__label__=12;break}case 11:var $49=$st_addr;var $vadreg45=$49+100|0;var $50=HEAP16[$vadreg45>>1];var $conv46=$50<<16>>16;var $or=$conv46|16384;var $conv47=$or&65535;HEAP16[$vadreg45>>1]=$conv47;__label__=12;break;case 12:var $51=$pow_sum_addr;var $52=$pOverflow_addr;var $call49=_L_sub513($51,15e3,$52);var $cmp50=($call49|0)<0;if($cmp50){__label__=13;break}else{__label__=14;break}case 13:$low_power_flag=1;__label__=15;break;case 14:$low_power_flag=0;__label__=15;break;case 15:var $53=$st_addr;var $54=$low_power_flag;var $55=$pOverflow_addr;_complex_estimate_adapt($53,$54,$55);var $56=$st_addr;var $57=$low_power_flag;var $58=$pOverflow_addr;var $call54=_complex_vad($56,$57,$58);var $59=$st_addr;var $complex_warning=$59+122|0;HEAP16[$complex_warning>>1]=$call54;var $60=$st_addr;var $61=$level_addr;var $62=$pOverflow_addr;_noise_estimate_update($60,$61,$62);var $63=$st_addr;var $64=$noise_level;var $65=$low_power_flag;var $66=$pOverflow_addr;var $call55=_hangover_addition($63,$64,$65,$66);var $67=$st_addr;var $speech_vad_decision=$67+120|0;HEAP16[$speech_vad_decision>>1]=$call55;var $68=$st_addr;var $speech_vad_decision56=$68+120|0;var $69=HEAP16[$speech_vad_decision56>>1];return $69;default:assert(0,"bad label: "+__label__)}}_vad_decision["X"]=1;function _complex_estimate_adapt($st,$low_power,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $low_power_addr;var $pOverflow_addr;var $alpha;var $L_tmp;$st_addr=$st;$low_power_addr=$low_power;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $best_corr_hp=$0+118|0;var $1=HEAP16[$best_corr_hp>>1];var $conv=$1<<16>>16;var $2=$st_addr;var $corr_hp_fast=$2+126|0;var $3=HEAP16[$corr_hp_fast>>1];var $conv1=$3<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $4=$st_addr;var $corr_hp_fast3=$4+126|0;var $5=HEAP16[$corr_hp_fast3>>1];var $conv4=$5<<16>>16;var $cmp5=($conv4|0)<19660;if($cmp5){__label__=2;break}else{__label__=3;break}case 2:$alpha=2621;__label__=4;break;case 3:$alpha=6553;__label__=4;break;case 4:__label__=9;break;case 5:var $6=$st_addr;var $corr_hp_fast9=$6+126|0;var $7=HEAP16[$corr_hp_fast9>>1];var $conv10=$7<<16>>16;var $cmp11=($conv10|0)<19660;if($cmp11){__label__=6;break}else{__label__=7;break}case 6:$alpha=2621;__label__=8;break;case 7:$alpha=655;__label__=8;break;case 8:__label__=9;break;case 9:var $8=$st_addr;var $corr_hp_fast17=$8+126|0;var $9=HEAP16[$corr_hp_fast17>>1];var $conv18=$9<<16>>16;var $shl=$conv18<<16;$L_tmp=$shl;var $10=$L_tmp;var $11=$alpha;var $12=$st_addr;var $corr_hp_fast19=$12+126|0;var $13=HEAP16[$corr_hp_fast19>>1];var $14=$pOverflow_addr;var $call=_L_msu504($10,$11,$13,$14);$L_tmp=$call;var $15=$L_tmp;var $16=$alpha;var $17=$st_addr;var $best_corr_hp20=$17+118|0;var $18=HEAP16[$best_corr_hp20>>1];var $19=$pOverflow_addr;var $call21=_L_mac512($15,$16,$18,$19);$L_tmp=$call21;var $20=$L_tmp;var $21=$pOverflow_addr;var $call22=_pv_round($20,$21);var $22=$st_addr;var $corr_hp_fast23=$22+126|0;HEAP16[$corr_hp_fast23>>1]=$call22;var $23=$st_addr;var $corr_hp_fast24=$23+126|0;var $24=HEAP16[$corr_hp_fast24>>1];var $conv25=$24<<16>>16;var $cmp26=($conv25|0)<13106;if($cmp26){__label__=10;break}else{__label__=11;break}case 10:var $25=$st_addr;var $corr_hp_fast29=$25+126|0;HEAP16[$corr_hp_fast29>>1]=13106;__label__=11;break;case 11:var $26=$low_power_addr;var $conv31=$26<<16>>16;var $cmp32=($conv31|0)!=0;if($cmp32){__label__=12;break}else{__label__=13;break}case 12:var $27=$st_addr;var $corr_hp_fast35=$27+126|0;HEAP16[$corr_hp_fast35>>1]=13106;__label__=13;break;case 13:;return;default:assert(0,"bad label: "+__label__)}}_complex_estimate_adapt["X"]=1;function _complex_vad($st,$low_power,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $low_power_addr;var $pOverflow_addr;$st_addr=$st;$low_power_addr=$low_power;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $complex_high=$0+106|0;var $1=HEAP16[$complex_high>>1];var $2=$pOverflow_addr;var $call=_shr($1,1,$2);var $3=$st_addr;var $complex_high1=$3+106|0;HEAP16[$complex_high1>>1]=$call;var $4=$st_addr;var $complex_low=$4+108|0;var $5=HEAP16[$complex_low>>1];var $6=$pOverflow_addr;var $call2=_shr($5,1,$6);var $7=$st_addr;var $complex_low3=$7+108|0;HEAP16[$complex_low3>>1]=$call2;var $8=$low_power_addr;var $conv=$8<<16>>16;var $cmp=($conv|0)==0;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $9=$st_addr;var $corr_hp_fast=$9+126|0;var $10=HEAP16[$corr_hp_fast>>1];var $conv5=$10<<16>>16;var $cmp6=($conv5|0)>19660;if($cmp6){__label__=2;break}else{__label__=3;break}case 2:var $11=$st_addr;var $complex_high9=$11+106|0;var $12=HEAP16[$complex_high9>>1];var $conv10=$12<<16>>16;var $or=$conv10|16384;var $conv11=$or&65535;HEAP16[$complex_high9>>1]=$conv11;__label__=3;break;case 3:var $13=$st_addr;var $corr_hp_fast12=$13+126|0;var $14=HEAP16[$corr_hp_fast12>>1];var $conv13=$14<<16>>16;var $cmp14=($conv13|0)>16383;if($cmp14){__label__=4;break}else{__label__=5;break}case 4:var $15=$st_addr;var $complex_low17=$15+108|0;var $16=HEAP16[$complex_low17>>1];var $conv18=$16<<16>>16;var $or19=$conv18|16384;var $conv20=$or19&65535;HEAP16[$complex_low17>>1]=$conv20;__label__=5;break;case 5:__label__=6;break;case 6:var $17=$st_addr;var $corr_hp_fast23=$17+126|0;var $18=HEAP16[$corr_hp_fast23>>1];var $conv24=$18<<16>>16;var $cmp25=($conv24|0)>22936;if($cmp25){__label__=7;break}else{__label__=8;break}case 7:var $19=$st_addr;var $complex_hang_timer=$19+116|0;var $20=HEAP16[$complex_hang_timer>>1];var $21=$pOverflow_addr;var $call28=_add_16($20,1,$21);var $22=$st_addr;var $complex_hang_timer29=$22+116|0;HEAP16[$complex_hang_timer29>>1]=$call28;__label__=9;break;case 8:var $23=$st_addr;var $complex_hang_timer30=$23+116|0;HEAP16[$complex_hang_timer30>>1]=0;__label__=9;break;case 9:var $24=$st_addr;var $complex_high32=$24+106|0;var $25=HEAP16[$complex_high32>>1];var $conv33=$25<<16>>16;var $and=$conv33&32640;var $conv34=$and&65535;var $conv35=$conv34<<16>>16;var $cmp36=($conv35|0)==32640;if($cmp36){var $28=1;__label__=11;break}else{__label__=10;break}case 10:var $26=$st_addr;var $complex_low38=$26+108|0;var $27=HEAP16[$complex_low38>>1];var $conv39=$27<<16>>16;var $and40=$conv39&32767;var $conv41=$and40&65535;var $conv42=$conv41<<16>>16;var $cmp43=($conv42|0)==32767;var $28=$cmp43;__label__=11;break;case 11:var $28;var $lor_ext=$28&1;var $conv45=$lor_ext&65535;return $conv45;default:assert(0,"bad label: "+__label__)}}_complex_vad["X"]=1;function _noise_estimate_update($st,$level,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $level_addr;var $pOverflow_addr;var $i;var $alpha_up;var $alpha_down;var $bckr_add;var $temp;$st_addr=$st;$level_addr=$level;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $1=$level_addr;var $2=$pOverflow_addr;_update_cntrl($0,$1,$2);$bckr_add=2;var $3=$st_addr;var $vadreg=$3+100|0;var $4=HEAP16[$vadreg>>1];var $conv=$4<<16>>16;var $and=30720&$conv;var $cmp=($and|0)==0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $5=$st_addr;var $pitch=$5+102|0;var $6=HEAP16[$pitch>>1];var $conv2=$6<<16>>16;var $and3=$conv2&30720;var $cmp4=($and3|0)==0;if($cmp4){__label__=2;break}else{__label__=4;break}case 2:var $7=$st_addr;var $complex_hang_count=$7+114|0;var $8=HEAP16[$complex_hang_count>>1];var $conv7=$8<<16>>16;var $cmp8=($conv7|0)==0;if($cmp8){__label__=3;break}else{__label__=4;break}case 3:$alpha_up=1638;$alpha_down=2097;__label__=9;break;case 4:var $9=$st_addr;var $stat_count=$9+98|0;var $10=HEAP16[$stat_count>>1];var $conv10=$10<<16>>16;var $cmp11=($conv10|0)==0;if($cmp11){__label__=5;break}else{__label__=7;break}case 5:var $11=$st_addr;var $complex_hang_count14=$11+114|0;var $12=HEAP16[$complex_hang_count14>>1];var $conv15=$12<<16>>16;var $cmp16=($conv15|0)==0;if($cmp16){__label__=6;break}else{__label__=7;break}case 6:$alpha_up=491;$alpha_down=1867;__label__=8;break;case 7:$alpha_up=0;$alpha_down=1638;$bckr_add=0;__label__=8;break;case 8:__label__=9;break;case 9:$i=0;__label__=10;break;case 10:var $13=$i;var $conv21=$13<<16>>16;var $cmp22=($conv21|0)<9;if($cmp22){__label__=11;break}else{__label__=20;break}case 11:var $14=$i;var $idxprom=$14<<16>>16;var $15=$st_addr;var $old_level=$15+36|0;var $arrayidx=$old_level+($idxprom<<1)|0;var $16=HEAP16[$arrayidx>>1];var $17=$i;var $idxprom24=$17<<16>>16;var $18=$st_addr;var $bckr_est=$18|0;var $arrayidx25=$bckr_est+($idxprom24<<1)|0;var $19=HEAP16[$arrayidx25>>1];var $20=$pOverflow_addr;var $call=_sub($16,$19,$20);$temp=$call;var $21=$temp;var $conv26=$21<<16>>16;var $cmp27=($conv26|0)<0;if($cmp27){__label__=12;break}else{__label__=15;break}case 12:var $22=$alpha_down;var $23=$temp;var $24=$pOverflow_addr;var $call30=_mult_r($22,$23,$24);$temp=$call30;var $25=$i;var $idxprom31=$25<<16>>16;var $26=$st_addr;var $bckr_est32=$26|0;var $arrayidx33=$bckr_est32+($idxprom31<<1)|0;var $27=HEAP16[$arrayidx33>>1];var $28=$temp;var $29=$pOverflow_addr;var $call34=_add_16($27,$28,$29);$temp=$call34;var $30=$temp;var $31=$pOverflow_addr;var $call35=_add_16(-2,$30,$31);var $32=$i;var $idxprom36=$32<<16>>16;var $33=$st_addr;var $bckr_est37=$33|0;var $arrayidx38=$bckr_est37+($idxprom36<<1)|0;HEAP16[$arrayidx38>>1]=$call35;var $34=$i;var $idxprom39=$34<<16>>16;var $35=$st_addr;var $bckr_est40=$35|0;var $arrayidx41=$bckr_est40+($idxprom39<<1)|0;var $36=HEAP16[$arrayidx41>>1];var $conv42=$36<<16>>16;var $cmp43=($conv42|0)<40;if($cmp43){__label__=13;break}else{__label__=14;break}case 13:var $37=$i;var $idxprom46=$37<<16>>16;var $38=$st_addr;var $bckr_est47=$38|0;var $arrayidx48=$bckr_est47+($idxprom46<<1)|0;HEAP16[$arrayidx48>>1]=40;__label__=14;break;case 14:__label__=18;break;case 15:var $39=$alpha_up;var $40=$temp;var $41=$pOverflow_addr;var $call51=_mult_r($39,$40,$41);$temp=$call51;var $42=$i;var $idxprom52=$42<<16>>16;var $43=$st_addr;var $bckr_est53=$43|0;var $arrayidx54=$bckr_est53+($idxprom52<<1)|0;var $44=HEAP16[$arrayidx54>>1];var $45=$temp;var $46=$pOverflow_addr;var $call55=_add_16($44,$45,$46);$temp=$call55;var $47=$bckr_add;var $48=$temp;var $49=$pOverflow_addr;var $call56=_add_16($47,$48,$49);var $50=$i;var $idxprom57=$50<<16>>16;var $51=$st_addr;var $bckr_est58=$51|0;var $arrayidx59=$bckr_est58+($idxprom57<<1)|0;HEAP16[$arrayidx59>>1]=$call56;var $52=$i;var $idxprom60=$52<<16>>16;var $53=$st_addr;var $bckr_est61=$53|0;var $arrayidx62=$bckr_est61+($idxprom60<<1)|0;var $54=HEAP16[$arrayidx62>>1];var $conv63=$54<<16>>16;var $cmp64=($conv63|0)>16e3;if($cmp64){__label__=16;break}else{__label__=17;break}case 16:var $55=$i;var $idxprom67=$55<<16>>16;var $56=$st_addr;var $bckr_est68=$56|0;var $arrayidx69=$bckr_est68+($idxprom67<<1)|0;HEAP16[$arrayidx69>>1]=16e3;__label__=17;break;case 17:__label__=18;break;case 18:__label__=19;break;case 19:var $57=$i;var $inc=$57+1&65535;$i=$inc;__label__=10;break;case 20:$i=0;__label__=21;break;case 21:var $58=$i;var $conv73=$58<<16>>16;var $cmp74=($conv73|0)<9;if($cmp74){__label__=22;break}else{__label__=24;break}case 22:var $59=$i;var $idxprom77=$59<<16>>16;var $60=$level_addr;var $arrayidx78=$60+($idxprom77<<1)|0;var $61=HEAP16[$arrayidx78>>1];var $62=$i;var $idxprom79=$62<<16>>16;var $63=$st_addr;var $old_level80=$63+36|0;var $arrayidx81=$old_level80+($idxprom79<<1)|0;HEAP16[$arrayidx81>>1]=$61;__label__=23;break;case 23:var $64=$i;var $inc83=$64+1&65535;$i=$inc83;__label__=21;break;case 24:;return;default:assert(0,"bad label: "+__label__)}}_noise_estimate_update["X"]=1;function _hangover_addition($st,$noise_level,$low_power,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $st_addr;var $noise_level_addr;var $low_power_addr;var $pOverflow_addr;var $hang_len;var $burst_len;$st_addr=$st;$noise_level_addr=$noise_level;$low_power_addr=$low_power;$pOverflow_addr=$pOverflow;var $0=$noise_level_addr;var $conv=$0<<16>>16;var $cmp=($conv|0)>100;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$burst_len=4;$hang_len=7;__label__=3;break;case 2:$burst_len=5;$hang_len=4;__label__=3;break;case 3:var $1=$low_power_addr;var $conv2=$1<<16>>16;var $cmp3=($conv2|0)!=0;if($cmp3){__label__=4;break}else{__label__=5;break}case 4:var $2=$st_addr;var $burst_count=$2+94|0;HEAP16[$burst_count>>1]=0;var $3=$st_addr;var $hang_count=$3+96|0;HEAP16[$hang_count>>1]=0;var $4=$st_addr;var $complex_hang_count=$4+114|0;HEAP16[$complex_hang_count>>1]=0;var $5=$st_addr;var $complex_hang_timer=$5+116|0;HEAP16[$complex_hang_timer>>1]=0;$retval=0;__label__=23;break;case 5:var $6=$st_addr;var $complex_hang_timer7=$6+116|0;var $7=HEAP16[$complex_hang_timer7>>1];var $conv8=$7<<16>>16;var $cmp9=($conv8|0)>100;if($cmp9){__label__=6;break}else{__label__=9;break}case 6:var $8=$st_addr;var $complex_hang_count12=$8+114|0;var $9=HEAP16[$complex_hang_count12>>1];var $conv13=$9<<16>>16;var $cmp14=($conv13|0)<250;if($cmp14){__label__=7;break}else{__label__=8;break}case 7:var $10=$st_addr;var $complex_hang_count17=$10+114|0;HEAP16[$complex_hang_count17>>1]=250;__label__=8;break;case 8:__label__=9;break;case 9:var $11=$st_addr;var $complex_hang_count20=$11+114|0;var $12=HEAP16[$complex_hang_count20>>1];var $conv21=$12<<16>>16;var $cmp22=($conv21|0)!=0;if($cmp22){__label__=10;break}else{__label__=11;break}case 10:var $13=$st_addr;var $burst_count25=$13+94|0;HEAP16[$burst_count25>>1]=4;var $14=$st_addr;var $complex_hang_count26=$14+114|0;var $15=HEAP16[$complex_hang_count26>>1];var $16=$pOverflow_addr;var $call=_sub($15,1,$16);var $17=$st_addr;var $complex_hang_count27=$17+114|0;HEAP16[$complex_hang_count27>>1]=$call;$retval=1;__label__=23;break;case 11:var $18=$st_addr;var $vadreg=$18+100|0;var $19=HEAP16[$vadreg>>1];var $conv29=$19<<16>>16;var $and=$conv29&16368;var $cmp30=($and|0)==0;if($cmp30){__label__=12;break}else{__label__=14;break}case 12:var $20=$st_addr;var $corr_hp_fast=$20+126|0;var $21=HEAP16[$corr_hp_fast>>1];var $conv32=$21<<16>>16;var $cmp33=($conv32|0)>21298;if($cmp33){__label__=13;break}else{__label__=14;break}case 13:$retval=1;__label__=23;break;case 14:__label__=15;break;case 15:var $22=$st_addr;var $vadreg38=$22+100|0;var $23=HEAP16[$vadreg38>>1];var $conv39=$23<<16>>16;var $and40=$conv39&16384;var $cmp41=($and40|0)!=0;if($cmp41){__label__=16;break}else{__label__=19;break}case 16:var $24=$st_addr;var $burst_count44=$24+94|0;var $25=HEAP16[$burst_count44>>1];var $26=$pOverflow_addr;var $call45=_add_16($25,1,$26);var $27=$st_addr;var $burst_count46=$27+94|0;HEAP16[$burst_count46>>1]=$call45;var $28=$st_addr;var $burst_count47=$28+94|0;var $29=HEAP16[$burst_count47>>1];var $conv48=$29<<16>>16;var $30=$burst_len;var $conv49=$30<<16>>16;var $cmp50=($conv48|0)>=($conv49|0);if($cmp50){__label__=17;break}else{__label__=18;break}case 17:var $31=$hang_len;var $32=$st_addr;var $hang_count53=$32+96|0;HEAP16[$hang_count53>>1]=$31;__label__=18;break;case 18:$retval=1;__label__=23;break;case 19:var $33=$st_addr;var $burst_count56=$33+94|0;HEAP16[$burst_count56>>1]=0;var $34=$st_addr;var $hang_count57=$34+96|0;var $35=HEAP16[$hang_count57>>1];var $conv58=$35<<16>>16;var $cmp59=($conv58|0)>0;if($cmp59){__label__=20;break}else{__label__=21;break}case 20:var $36=$st_addr;var $hang_count62=$36+96|0;var $37=HEAP16[$hang_count62>>1];var $38=$pOverflow_addr;var $call63=_sub($37,1,$38);var $39=$st_addr;var $hang_count64=$39+96|0;HEAP16[$hang_count64>>1]=$call63;$retval=1;__label__=23;break;case 21:__label__=22;break;case 22:$retval=0;__label__=23;break;case 23:var $40=$retval;return $40;default:assert(0,"bad label: "+__label__)}}_hangover_addition["X"]=1;function _update_cntrl($st,$level,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $st_addr;var $level_addr;var $pOverflow_addr;var $i;var $temp;var $stat_rat;var $exp;var $num;var $denom;var $alpha;$st_addr=$st;$level_addr=$level;$pOverflow_addr=$pOverflow;var $0=$st_addr;var $complex_warning=$0+122|0;var $1=HEAP16[$complex_warning>>1];var $conv=$1<<16>>16;var $cmp=($conv|0)!=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $2=$st_addr;var $stat_count=$2+98|0;var $3=HEAP16[$stat_count>>1];var $conv2=$3<<16>>16;var $cmp3=($conv2|0)<5;if($cmp3){__label__=2;break}else{__label__=3;break}case 2:var $4=$st_addr;var $stat_count6=$4+98|0;HEAP16[$stat_count6>>1]=5;__label__=3;break;case 3:__label__=4;break;case 4:var $5=$st_addr;var $pitch=$5+102|0;var $6=HEAP16[$pitch>>1];var $conv8=$6<<16>>16;var $and=$conv8&24576;var $conv9=$and&65535;var $conv10=$conv9<<16>>16;var $cmp11=($conv10|0)==24576;if($cmp11){__label__=6;break}else{__label__=5;break}case 5:var $7=$st_addr;var $tone=$7+104|0;var $8=HEAP16[$tone>>1];var $conv13=$8<<16>>16;var $and14=$conv13&31744;var $conv15=$and14&65535;var $conv16=$conv15<<16>>16;var $cmp17=($conv16|0)==31744;if($cmp17){__label__=6;break}else{__label__=7;break}case 6:var $9=$st_addr;var $stat_count20=$9+98|0;HEAP16[$stat_count20>>1]=20;__label__=29;break;case 7:var $10=$st_addr;var $vadreg=$10+100|0;var $11=HEAP16[$vadreg>>1];var $conv21=$11<<16>>16;var $and22=$conv21&32640;var $cmp23=($and22|0)==0;if($cmp23){__label__=8;break}else{__label__=9;break}case 8:var $12=$st_addr;var $stat_count26=$12+98|0;HEAP16[$stat_count26>>1]=20;__label__=28;break;case 9:$stat_rat=0;$i=0;__label__=10;break;case 10:var $13=$i;var $conv28=$13<<16>>16;var $cmp29=($conv28|0)<9;if($cmp29){__label__=11;break}else{__label__=20;break}case 11:var $14=$i;var $idxprom=$14<<16>>16;var $15=$level_addr;var $arrayidx=$15+($idxprom<<1)|0;var $16=HEAP16[$arrayidx>>1];var $conv31=$16<<16>>16;var $17=$i;var $idxprom32=$17<<16>>16;var $18=$st_addr;var $ave_level=$18+18|0;var $arrayidx33=$ave_level+($idxprom32<<1)|0;var $19=HEAP16[$arrayidx33>>1];var $conv34=$19<<16>>16;var $cmp35=($conv31|0)>($conv34|0);if($cmp35){__label__=12;break}else{__label__=13;break}case 12:var $20=$i;var $idxprom38=$20<<16>>16;var $21=$level_addr;var $arrayidx39=$21+($idxprom38<<1)|0;var $22=HEAP16[$arrayidx39>>1];$num=$22;var $23=$i;var $idxprom40=$23<<16>>16;var $24=$st_addr;var $ave_level41=$24+18|0;var $arrayidx42=$ave_level41+($idxprom40<<1)|0;var $25=HEAP16[$arrayidx42>>1];$denom=$25;__label__=14;break;case 13:var $26=$i;var $idxprom44=$26<<16>>16;var $27=$st_addr;var $ave_level45=$27+18|0;var $arrayidx46=$ave_level45+($idxprom44<<1)|0;var $28=HEAP16[$arrayidx46>>1];$num=$28;var $29=$i;var $idxprom47=$29<<16>>16;var $30=$level_addr;var $arrayidx48=$30+($idxprom47<<1)|0;var $31=HEAP16[$arrayidx48>>1];$denom=$31;__label__=14;break;case 14:var $32=$num;var $conv50=$32<<16>>16;var $cmp51=($conv50|0)<184;if($cmp51){__label__=15;break}else{__label__=16;break}case 15:$num=184;__label__=16;break;case 16:var $33=$denom;var $conv55=$33<<16>>16;var $cmp56=($conv55|0)<184;if($cmp56){__label__=17;break}else{__label__=18;break}case 17:$denom=184;__label__=18;break;case 18:var $34=$denom;var $call=_norm_s($34);$exp=$call;var $35=$denom;var $36=$exp;var $37=$pOverflow_addr;var $call60=_shl514($35,$36,$37);$denom=$call60;var $38=$num;var $39=$pOverflow_addr;var $call61=_shr($38,1,$39);$temp=$call61;var $40=$temp;var $41=$denom;var $call62=_div_s($40,$41);$temp=$call62;var $42=$stat_rat;var $43=$temp;var $44=$exp;var $45=$pOverflow_addr;var $call63=_sub(8,$44,$45);var $46=$pOverflow_addr;var $call64=_shr($43,$call63,$46);var $47=$pOverflow_addr;var $call65=_add_16($42,$call64,$47);$stat_rat=$call65;__label__=19;break;case 19:var $48=$i;var $inc=$48+1&65535;$i=$inc;__label__=10;break;case 20:var $49=$stat_rat;var $conv66=$49<<16>>16;var $cmp67=($conv66|0)>1e3;if($cmp67){__label__=21;break}else{__label__=22;break}case 21:var $50=$st_addr;var $stat_count70=$50+98|0;HEAP16[$stat_count70>>1]=20;__label__=27;break;case 22:var $51=$st_addr;var $vadreg72=$51+100|0;var $52=HEAP16[$vadreg72>>1];var $conv73=$52<<16>>16;var $and74=$conv73&16384;var $cmp75=($and74|0)!=0;if($cmp75){__label__=23;break}else{__label__=26;break}case 23:var $53=$st_addr;var $stat_count78=$53+98|0;var $54=HEAP16[$stat_count78>>1];var $conv79=$54<<16>>16;var $cmp80=($conv79|0)!=0;if($cmp80){__label__=24;break}else{__label__=25;break}case 24:var $55=$st_addr;var $stat_count83=$55+98|0;var $56=HEAP16[$stat_count83>>1];var $57=$pOverflow_addr;var $call84=_sub($56,1,$57);var $58=$st_addr;var $stat_count85=$58+98|0;HEAP16[$stat_count85>>1]=$call84;__label__=25;break;case 25:__label__=26;break;case 26:__label__=27;break;case 27:__label__=28;break;case 28:__label__=29;break;case 29:$alpha=3276;var $59=$st_addr;var $stat_count91=$59+98|0;var $60=HEAP16[$stat_count91>>1];var $conv92=$60<<16>>16;var $cmp93=($conv92|0)==20;if($cmp93){__label__=30;break}else{__label__=31;break}case 30:$alpha=32767;__label__=34;break;case 31:var $61=$st_addr;var $vadreg97=$61+100|0;var $62=HEAP16[$vadreg97>>1];var $conv98=$62<<16>>16;var $and99=$conv98&16384;var $cmp100=($and99|0)==0;if($cmp100){__label__=32;break}else{__label__=33;break}case 32:$alpha=16383;__label__=33;break;case 33:__label__=34;break;case 34:$i=0;__label__=35;break;case 35:var $63=$i;var $conv106=$63<<16>>16;var $cmp107=($conv106|0)<9;if($cmp107){__label__=36;break}else{__label__=38;break}case 36:var $64=$i;var $idxprom110=$64<<16>>16;var $65=$level_addr;var $arrayidx111=$65+($idxprom110<<1)|0;var $66=HEAP16[$arrayidx111>>1];var $67=$i;var $idxprom112=$67<<16>>16;var $68=$st_addr;var $ave_level113=$68+18|0;var $arrayidx114=$ave_level113+($idxprom112<<1)|0;var $69=HEAP16[$arrayidx114>>1];var $70=$pOverflow_addr;var $call115=_sub($66,$69,$70);$temp=$call115;var $71=$alpha;var $72=$temp;var $73=$pOverflow_addr;var $call116=_mult_r($71,$72,$73);$temp=$call116;var $74=$i;var $idxprom117=$74<<16>>16;var $75=$st_addr;var $ave_level118=$75+18|0;var $arrayidx119=$ave_level118+($idxprom117<<1)|0;var $76=HEAP16[$arrayidx119>>1];var $77=$temp;var $78=$pOverflow_addr;var $call120=_add_16($76,$77,$78);var $79=$i;var $idxprom121=$79<<16>>16;var $80=$st_addr;var $ave_level122=$80+18|0;var $arrayidx123=$ave_level122+($idxprom121<<1)|0;HEAP16[$arrayidx123>>1]=$call120;__label__=37;break;case 37:var $81=$i;var $inc125=$81+1&65535;$i=$inc125;__label__=35;break;case 38:;return;default:assert(0,"bad label: "+__label__)}}_update_cntrl["X"]=1;function _L_mult518($var1,$var2,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $var1_addr;var $var2_addr;var $pOverflow_addr;var $L_product;$var1_addr=$var1;$var2_addr=$var2;$pOverflow_addr=$pOverflow;var $0=$var1_addr;var $conv=$0<<16>>16;var $1=$var2_addr;var $conv1=$1<<16>>16;var $mul=$conv*$conv1|0;$L_product=$mul;var $2=$L_product;var $cmp=($2|0)!=1073741824;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $3=$L_product;var $shl=$3<<1;$L_product=$shl;__label__=3;break;case 2:var $4=$pOverflow_addr;HEAP32[$4>>2]=1;$L_product=2147483647;__label__=3;break;case 3:var $5=$L_product;return $5;default:assert(0,"bad label: "+__label__)}}function _Weight_Ai($a,$fac,$a_exp){var __label__;__label__=0;while(1)switch(__label__){case 0:var $a_addr;var $fac_addr;var $a_exp_addr;var $i;$a_addr=$a;$fac_addr=$fac;$a_exp_addr=$a_exp;var $0=$a_addr;var $1=HEAP16[$0>>1];var $2=$a_exp_addr;HEAP16[$2>>1]=$1;$i=10;__label__=1;break;case 1:var $3=$i;var $conv=$3<<16>>16;var $cmp=($conv|0)>=1;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$a_exp_addr;var $add_ptr=$4+2|0;$a_exp_addr=$add_ptr;var $5=$a_addr;var $add_ptr2=$5+2|0;$a_addr=$add_ptr2;var $6=$fac_addr;var $add_ptr3=$6+2|0;$fac_addr=$add_ptr3;var $7=$a_addr;var $8=HEAP16[$7>>1];var $conv4=$8<<16>>16;var $9=$fac_addr;var $add_ptr5=$9-2|0;var $10=HEAP16[$add_ptr5>>1];var $conv6=$10<<16>>16;var $mul=$conv4*$conv6|0;var $add=$mul+16384|0;var $shr=$add>>15;var $conv7=$shr&65535;var $11=$a_exp_addr;HEAP16[$11>>1]=$conv7;__label__=3;break;case 3:var $12=$i;var $dec=$12-1&65535;$i=$dec;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _wmf_to_ets($frame_type_3gpp,$wmf_input_ptr,$ets_output_ptr,$common_amr_tbls){var __label__;__label__=0;while(1)switch(__label__){case 0:var $frame_type_3gpp_addr;var $wmf_input_ptr_addr;var $ets_output_ptr_addr;var $common_amr_tbls_addr;var $i;var $reorderBits_ptr;var $numOfBits_ptr;$frame_type_3gpp_addr=$frame_type_3gpp;$wmf_input_ptr_addr=$wmf_input_ptr;$ets_output_ptr_addr=$ets_output_ptr;$common_amr_tbls_addr=$common_amr_tbls;var $0=$common_amr_tbls_addr;var $reorderBits_ptr1=$0+100|0;var $1=HEAP32[$reorderBits_ptr1>>2];$reorderBits_ptr=$1;var $2=$common_amr_tbls_addr;var $numOfBits_ptr2=$2+96|0;var $3=HEAP32[$numOfBits_ptr2>>2];$numOfBits_ptr=$3;var $4=$frame_type_3gpp_addr;var $cmp=$4>>>0<8;if($cmp){__label__=1;break}else{__label__=6;break}case 1:var $5=$frame_type_3gpp_addr;var $6=$numOfBits_ptr;var $arrayidx=$6+($5<<1)|0;var $7=HEAP16[$arrayidx>>1];var $conv=$7<<16>>16;var $sub=$conv-1|0;var $conv3=$sub&65535;$i=$conv3;__label__=2;break;case 2:var $8=$i;var $conv4=$8<<16>>16;var $cmp5=($conv4|0)>=0;if($cmp5){__label__=3;break}else{__label__=5;break}case 3:var $9=$i;var $conv7=$9<<16>>16;var $shr=$conv7>>3;var $10=$wmf_input_ptr_addr;var $arrayidx8=$10+$shr|0;var $11=HEAPU8[$arrayidx8];var $conv9=$11&255;var $12=$i;var $conv10=$12<<16>>16;var $neg=$conv10^-1;var $and=$neg&7;var $shr11=$conv9>>($and|0);var $and12=$shr11&1;var $conv13=$and12&65535;var $13=$i;var $idxprom=$13<<16>>16;var $14=$frame_type_3gpp_addr;var $15=$reorderBits_ptr;var $arrayidx14=$15+($14<<2)|0;var $16=HEAP32[$arrayidx14>>2];var $arrayidx15=$16+($idxprom<<1)|0;var $17=HEAP16[$arrayidx15>>1];var $idxprom16=$17<<16>>16;var $18=$ets_output_ptr_addr;var $arrayidx17=$18+($idxprom16<<1)|0;HEAP16[$arrayidx17>>1]=$conv13;__label__=4;break;case 4:var $19=$i;var $dec=$19-1&65535;$i=$dec;__label__=2;break;case 5:__label__=11;break;case 6:var $20=$frame_type_3gpp_addr;var $21=$numOfBits_ptr;var $arrayidx18=$21+($20<<1)|0;var $22=HEAP16[$arrayidx18>>1];var $conv19=$22<<16>>16;var $sub20=$conv19-1|0;var $conv21=$sub20&65535;$i=$conv21;__label__=7;break;case 7:var $23=$i;var $conv23=$23<<16>>16;var $cmp24=($conv23|0)>=0;if($cmp24){__label__=8;break}else{__label__=10;break}case 8:var $24=$i;var $conv27=$24<<16>>16;var $shr28=$conv27>>3;var $25=$wmf_input_ptr_addr;var $arrayidx29=$25+$shr28|0;var $26=HEAPU8[$arrayidx29];var $conv30=$26&255;var $27=$i;var $conv31=$27<<16>>16;var $neg32=$conv31^-1;var $and33=$neg32&7;var $shr34=$conv30>>($and33|0);var $and35=$shr34&1;var $conv36=$and35&65535;var $28=$i;var $idxprom37=$28<<16>>16;var $29=$ets_output_ptr_addr;var $arrayidx38=$29+($idxprom37<<1)|0;HEAP16[$arrayidx38>>1]=$conv36;__label__=9;break;case 9:var $30=$i;var $dec40=$30-1&65535;$i=$dec40;__label__=7;break;case 10:__label__=11;break;case 11:;return;default:assert(0,"bad label: "+__label__)}}_wmf_to_ets["X"]=1;function _first_filter_stage($in,$out,$data,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $in_addr;var $out_addr;var $data_addr;var $pOverflow_addr;var $temp0;var $temp1;var $temp2;var $temp3;var $i;var $data0;var $data1;$in_addr=$in;$out_addr=$out;$data_addr=$data;$pOverflow_addr=$pOverflow;var $0=$data_addr;var $arrayidx=$0|0;var $1=HEAP16[$arrayidx>>1];$data0=$1;var $2=$data_addr;var $arrayidx1=$2+2|0;var $3=HEAP16[$arrayidx1>>1];$data1=$3;$i=0;__label__=1;break;case 1:var $4=$i;var $conv=$4<<16>>16;var $cmp=($conv|0)<40;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $5=$data0;var $conv3=$5<<16>>16;var $mul=$conv3*21955|0;var $shr=$mul>>15;var $conv4=$shr&65535;$temp0=$conv4;var $6=$i;var $conv5=$6<<16>>16;var $mul6=$conv5<<2|0;var $add=$mul6|0;var $7=$in_addr;var $arrayidx7=$7+($add<<1)|0;var $8=HEAP16[$arrayidx7>>1];var $conv8=$8<<16>>16;var $shr9=$conv8>>2;var $conv10=$shr9&65535;$temp1=$conv10;var $9=$temp1;var $10=$temp0;var $11=$pOverflow_addr;var $call=_sub($9,$10,$11);$temp0=$call;var $12=$temp0;var $conv11=$12<<16>>16;var $mul12=$conv11*21955|0;var $shr13=$mul12>>15;var $conv14=$shr13&65535;$temp1=$conv14;var $13=$data0;var $14=$temp1;var $15=$pOverflow_addr;var $call15=_add_16($13,$14,$15);$temp1=$call15;var $16=$data1;var $conv16=$16<<16>>16;var $mul17=$conv16*6390|0;var $shr18=$mul17>>15;var $conv19=$shr18&65535;$temp3=$conv19;var $17=$i;var $conv20=$17<<16>>16;var $mul21=$conv20<<2|0;var $add22=$mul21+1|0;var $18=$in_addr;var $arrayidx23=$18+($add22<<1)|0;var $19=HEAP16[$arrayidx23>>1];var $conv24=$19<<16>>16;var $shr25=$conv24>>2;var $conv26=$shr25&65535;$temp2=$conv26;var $20=$temp2;var $21=$temp3;var $22=$pOverflow_addr;var $call27=_sub($20,$21,$22);$temp3=$call27;var $23=$temp3;var $conv28=$23<<16>>16;var $mul29=$conv28*6390|0;var $shr30=$mul29>>15;var $conv31=$shr30&65535;$temp2=$conv31;var $24=$data1;var $25=$temp2;var $26=$pOverflow_addr;var $call32=_add_16($24,$25,$26);$temp2=$call32;var $27=$temp1;var $28=$temp2;var $29=$pOverflow_addr;var $call33=_add_16($27,$28,$29);var $30=$i;var $conv34=$30<<16>>16;var $mul35=$conv34<<2|0;var $add36=$mul35|0;var $31=$out_addr;var $arrayidx37=$31+($add36<<1)|0;HEAP16[$arrayidx37>>1]=$call33;var $32=$temp1;var $33=$temp2;var $34=$pOverflow_addr;var $call38=_sub($32,$33,$34);var $35=$i;var $conv39=$35<<16>>16;var $mul40=$conv39<<2|0;var $add41=$mul40+1|0;var $36=$out_addr;var $arrayidx42=$36+($add41<<1)|0;HEAP16[$arrayidx42>>1]=$call38;var $37=$temp0;var $conv43=$37<<16>>16;var $mul44=$conv43*21955|0;var $shr45=$mul44>>15;var $conv46=$shr45&65535;$temp1=$conv46;var $38=$i;var $conv47=$38<<16>>16;var $mul48=$conv47<<2|0;var $add49=$mul48+2|0;var $39=$in_addr;var $arrayidx50=$39+($add49<<1)|0;var $40=HEAP16[$arrayidx50>>1];var $conv51=$40<<16>>16;var $shr52=$conv51>>2;var $conv53=$shr52&65535;$temp2=$conv53;var $41=$temp2;var $42=$temp1;var $43=$pOverflow_addr;var $call54=_sub($41,$42,$43);$data0=$call54;var $44=$data0;var $conv55=$44<<16>>16;var $mul56=$conv55*21955|0;var $shr57=$mul56>>15;var $conv58=$shr57&65535;$temp1=$conv58;var $45=$temp0;var $46=$temp1;var $47=$pOverflow_addr;var $call59=_add_16($45,$46,$47);$temp1=$call59;var $48=$temp3;var $conv60=$48<<16>>16;var $mul61=$conv60*6390|0;var $shr62=$mul61>>15;var $conv63=$shr62&65535;$data1=$conv63;var $49=$i;var $conv64=$49<<16>>16;var $mul65=$conv64<<2|0;var $add66=$mul65+3|0;var $50=$in_addr;var $arrayidx67=$50+($add66<<1)|0;var $51=HEAP16[$arrayidx67>>1];var $conv68=$51<<16>>16;var $shr69=$conv68>>2;var $conv70=$shr69&65535;$temp2=$conv70;var $52=$temp2;var $53=$data1;var $54=$pOverflow_addr;var $call71=_sub($52,$53,$54);$data1=$call71;var $55=$data1;var $conv72=$55<<16>>16;var $mul73=$conv72*6390|0;var $shr74=$mul73>>15;var $conv75=$shr74&65535;$temp2=$conv75;var $56=$temp3;var $57=$temp2;var $58=$pOverflow_addr;var $call76=_add_16($56,$57,$58);$temp2=$call76;var $59=$temp1;var $60=$temp2;var $61=$pOverflow_addr;var $call77=_add_16($59,$60,$61);var $62=$i;var $conv78=$62<<16>>16;var $mul79=$conv78<<2|0;var $add80=$mul79+2|0;var $63=$out_addr;var $arrayidx81=$63+($add80<<1)|0;HEAP16[$arrayidx81>>1]=$call77;var $64=$temp1;var $65=$temp2;var $66=$pOverflow_addr;var $call82=_sub($64,$65,$66);var $67=$i;var $conv83=$67<<16>>16;var $mul84=$conv83<<2|0;var $add85=$mul84+3|0;var $68=$out_addr;var $arrayidx86=$68+($add85<<1)|0;HEAP16[$arrayidx86>>1]=$call82;__label__=3;break;case 3:var $69=$i;var $inc=$69+1&65535;$i=$inc;__label__=1;break;case 4:var $70=$data0;var $71=$data_addr;var $arrayidx87=$71|0;HEAP16[$arrayidx87>>1]=$70;var $72=$data1;var $73=$data_addr;var $arrayidx88=$73+2|0;HEAP16[$arrayidx88>>1]=$72;return;default:assert(0,"bad label: "+__label__)}}_first_filter_stage["X"]=1;function _filter5($in0,$in1,$data,$pOverflow){var __label__;var $in0_addr;var $in1_addr;var $data_addr;var $pOverflow_addr;var $temp0;var $temp1;var $temp2;$in0_addr=$in0;$in1_addr=$in1;$data_addr=$data;$pOverflow_addr=$pOverflow;var $0=$data_addr;var $arrayidx=$0|0;var $1=HEAP16[$arrayidx>>1];var $2=$pOverflow_addr;var $call=_mult516(21955,$1,$2);$temp0=$call;var $3=$in0_addr;var $4=HEAP16[$3>>1];var $5=$temp0;var $6=$pOverflow_addr;var $call1=_sub($4,$5,$6);$temp0=$call1;var $7=$temp0;var $8=$pOverflow_addr;var $call2=_mult516(21955,$7,$8);$temp1=$call2;var $9=$data_addr;var $arrayidx3=$9|0;var $10=HEAP16[$arrayidx3>>1];var $11=$temp1;var $12=$pOverflow_addr;var $call4=_add_16($10,$11,$12);$temp1=$call4;var $13=$temp0;var $14=$data_addr;var $arrayidx5=$14|0;HEAP16[$arrayidx5>>1]=$13;var $15=$data_addr;var $arrayidx6=$15+2|0;var $16=HEAP16[$arrayidx6>>1];var $17=$pOverflow_addr;var $call7=_mult516(6390,$16,$17);$temp0=$call7;var $18=$in1_addr;var $19=HEAP16[$18>>1];var $20=$temp0;var $21=$pOverflow_addr;var $call8=_sub($19,$20,$21);$temp0=$call8;var $22=$temp0;var $23=$pOverflow_addr;var $call9=_mult516(6390,$22,$23);$temp2=$call9;var $24=$data_addr;var $arrayidx10=$24+2|0;var $25=HEAP16[$arrayidx10>>1];var $26=$temp2;var $27=$pOverflow_addr;var $call11=_add_16($25,$26,$27);$temp2=$call11;var $28=$temp0;var $29=$data_addr;var $arrayidx12=$29+2|0;HEAP16[$arrayidx12>>1]=$28;var $30=$temp1;var $31=$temp2;var $32=$pOverflow_addr;var $call13=_add_16($30,$31,$32);$temp0=$call13;var $33=$temp0;var $34=$pOverflow_addr;var $call14=_shr($33,1,$34);var $35=$in0_addr;HEAP16[$35>>1]=$call14;var $36=$temp1;var $37=$temp2;var $38=$pOverflow_addr;var $call15=_sub($36,$37,$38);$temp0=$call15;var $39=$temp0;var $40=$pOverflow_addr;var $call16=_shr($39,1,$40);var $41=$in1_addr;HEAP16[$41>>1]=$call16;return}_filter5["X"]=1;function _filter3($in0,$in1,$data,$pOverflow){var __label__;var $in0_addr;var $in1_addr;var $data_addr;var $pOverflow_addr;var $temp1;var $temp2;$in0_addr=$in0;$in1_addr=$in1;$data_addr=$data;$pOverflow_addr=$pOverflow;var $0=$data_addr;var $1=HEAP16[$0>>1];var $2=$pOverflow_addr;var $call=_mult516(13363,$1,$2);$temp1=$call;var $3=$in1_addr;var $4=HEAP16[$3>>1];var $5=$temp1;var $6=$pOverflow_addr;var $call1=_sub($4,$5,$6);$temp1=$call1;var $7=$temp1;var $8=$pOverflow_addr;var $call2=_mult516(13363,$7,$8);$temp2=$call2;var $9=$data_addr;var $10=HEAP16[$9>>1];var $11=$temp2;var $12=$pOverflow_addr;var $call3=_add_16($10,$11,$12);$temp2=$call3;var $13=$temp1;var $14=$data_addr;HEAP16[$14>>1]=$13;var $15=$in0_addr;var $16=HEAP16[$15>>1];var $17=$temp2;var $18=$pOverflow_addr;var $call4=_sub($16,$17,$18);$temp1=$call4;var $19=$temp1;var $20=$pOverflow_addr;var $call5=_shr($19,1,$20);var $21=$in1_addr;HEAP16[$21>>1]=$call5;var $22=$in0_addr;var $23=HEAP16[$22>>1];var $24=$temp2;var $25=$pOverflow_addr;var $call6=_add_16($23,$24,$25);$temp1=$call6;var $26=$temp1;var $27=$pOverflow_addr;var $call7=_shr($26,1,$27);var $28=$in0_addr;HEAP16[$28>>1]=$call7;return}_filter3["X"]=1;function _level_calculation($data,$sub_level,$count1,$count2,$ind_m,$ind_a,$scale,$pOverflow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $data_addr;var $sub_level_addr;var $count1_addr;var $count2_addr;var $ind_m_addr;var $ind_a_addr;var $scale_addr;var $pOverflow_addr;var $l_temp1;var $l_temp2;var $level;var $i;$data_addr=$data;$sub_level_addr=$sub_level;$count1_addr=$count1;$count2_addr=$count2;$ind_m_addr=$ind_m;$ind_a_addr=$ind_a;$scale_addr=$scale;$pOverflow_addr=$pOverflow;$l_temp1=0;var $0=$count1_addr;$i=$0;__label__=1;break;case 1:var $1=$i;var $conv=$1<<16>>16;var $2=$count2_addr;var $conv1=$2<<16>>16;var $cmp=($conv|0)<($conv1|0);if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $3=$l_temp1;var $4=$ind_m_addr;var $conv3=$4<<16>>16;var $5=$i;var $conv4=$5<<16>>16;var $mul=$conv3*$conv4|0;var $6=$ind_a_addr;var $conv5=$6<<16>>16;var $add=$mul+$conv5|0;var $7=$data_addr;var $arrayidx=$7+($add<<1)|0;var $8=HEAP16[$arrayidx>>1];var $call=_abs_s509($8);var $9=$pOverflow_addr;var $call6=_L_mac512($3,1,$call,$9);$l_temp1=$call6;__label__=3;break;case 3:var $10=$i;var $inc=$10+1&65535;$i=$inc;__label__=1;break;case 4:var $11=$l_temp1;var $12=$sub_level_addr;var $13=HEAP16[$12>>1];var $conv7=$13<<16>>16;var $14=$scale_addr;var $15=$pOverflow_addr;var $call8=_sub(16,$14,$15);var $16=$pOverflow_addr;var $call9=_L_shl515($conv7,$call8,$16);var $17=$pOverflow_addr;var $call10=_L_add517($11,$call9,$17);$l_temp2=$call10;var $18=$l_temp1;var $19=$scale_addr;var $20=$pOverflow_addr;var $call11=_L_shl515($18,$19,$20);var $shr=$call11>>16;var $conv12=$shr&65535;var $21=$sub_level_addr;HEAP16[$21>>1]=$conv12;$i=0;__label__=5;break;case 5:var $22=$i;var $conv14=$22<<16>>16;var $23=$count1_addr;var $conv15=$23<<16>>16;var $cmp16=($conv14|0)<($conv15|0);if($cmp16){__label__=6;break}else{__label__=8;break}case 6:var $24=$l_temp2;var $25=$ind_m_addr;var $conv19=$25<<16>>16;var $26=$i;var $conv20=$26<<16>>16;var $mul21=$conv19*$conv20|0;var $27=$ind_a_addr;var $conv22=$27<<16>>16;var $add23=$mul21+$conv22|0;var $28=$data_addr;var $arrayidx24=$28+($add23<<1)|0;var $29=HEAP16[$arrayidx24>>1];var $call25=_abs_s509($29);var $30=$pOverflow_addr;var $call26=_L_mac512($24,1,$call25,$30);$l_temp2=$call26;__label__=7;break;case 7:var $31=$i;var $inc28=$31+1&65535;$i=$inc28;__label__=5;break;case 8:var $32=$l_temp2;var $33=$scale_addr;var $34=$pOverflow_addr;var $call30=_L_shl515($32,$33,$34);var $shr31=$call30>>16;var $conv32=$shr31&65535;$level=$conv32;var $35=$level;return $35;default:assert(0,"bad label: "+__label__)}}_level_calculation["X"]=1;function _Decoder_Interface_init(){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $ptr=__stackBase__;HEAP32[$ptr>>2]=0;var $call=_GSMInitDecode($ptr,STRING_TABLE.__str529|0);var $0=HEAP32[$ptr>>2];STACKTOP=__stackBase__;return $0}function _Decoder_Interface_exit($state){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $state_addr=__stackBase__;HEAP32[$state_addr>>2]=$state;_GSMDecodeFrameExit($state_addr);STACKTOP=__stackBase__;return}function _Decoder_Interface_Decode($state,$in,$out,$bfi){var __label__;var $state_addr;var $in_addr;var $out_addr;var $bfi_addr;var $type;$state_addr=$state;$in_addr=$in;$out_addr=$out;$bfi_addr=$bfi;var $0=$in_addr;var $arrayidx=$0|0;var $1=HEAPU8[$arrayidx];var $conv=$1&255;var $shr=$conv>>3;var $and=$shr&15;var $conv1=$and&255;$type=$conv1;var $2=$in_addr;var $incdec_ptr=$2+1|0;$in_addr=$incdec_ptr;var $3=$state_addr;var $4=$type;var $conv2=$4&255;var $5=$in_addr;var $6=$out_addr;var $call=_AMRDecode($3,$conv2,$5,$6,2);return}function _Encoder_Interface_init($dtx){var __label__;var $dtx_addr;var $state;$dtx_addr=$dtx;var $call=_malloc(8);var $0=$call;$state=$0;var $1=$state;var $encCtx=$1|0;var $2=$state;var $pidSyncCtx=$2+4|0;var $3=$dtx_addr;var $call1=_AMREncodeInit($encCtx,$pidSyncCtx,$3);var $4=$state;var $5=$4;return $5}function _Encoder_Interface_exit($s){var __label__;var $s_addr;var $state;$s_addr=$s;var $0=$s_addr;var $1=$0;$state=$1;var $2=$state;var $encCtx=$2|0;var $3=$state;var $pidSyncCtx=$3+4|0;_AMREncodeExit($encCtx,$pidSyncCtx);var $4=$state;var $5=$4;_free($5);return}function _Encoder_Interface_Encode($s,$mode,$speech,$out,$forceSpeech){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $s_addr;var $mode_addr;var $speech_addr;var $out_addr;var $forceSpeech_addr;var $state;var $frame_type=__stackBase__;var $ret;$s_addr=$s;$mode_addr=$mode;$speech_addr=$speech;$out_addr=$out;$forceSpeech_addr=$forceSpeech;var $0=$s_addr;var $1=$0;$state=$1;var $2=$mode_addr;HEAP32[$frame_type>>2]=$2;var $3=$state;var $encCtx=$3|0;var $4=HEAP32[$encCtx>>2];var $5=$state;var $pidSyncCtx=$5+4|0;var $6=HEAP32[$pidSyncCtx>>2];var $7=$mode_addr;var $8=$speech_addr;var $9=$out_addr;var $call=_AMREncode($4,$6,$7,$8,$9,$frame_type,3);var $conv=$call<<16>>16;$ret=$conv;var $10=$out_addr;var $arrayidx=$10|0;var $11=HEAPU8[$arrayidx];var $conv1=$11&255;var $or=$conv1|4;var $conv2=$or&255;HEAP8[$arrayidx]=$conv2;var $12=$ret;STACKTOP=__stackBase__;return $12}function _malloc($bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $bytes_addr;var $mem;var $nb;var $idx;var $smallbits;var $b;var $p;var $F;var $b33;var $p34;var $r;var $rsize;var $i;var $leftbits;var $leastbit;var $Y;var $K;var $N;var $F68;var $DVS;var $DV;var $I;var $B;var $F102;var $rsize157;var $p159;var $r163;var $dvs;var $rsize185;var $p187;var $r188;$bytes_addr=$bytes;var $0=$bytes_addr;var $cmp=$0>>>0<=244;if($cmp){__label__=1;break}else{__label__=36;break}case 1:var $1=$bytes_addr;var $cmp1=$1>>>0<11;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $cond=16;__label__=4;break;case 3:var $2=$bytes_addr;var $add=$2+4|0;var $add2=$add+7|0;var $and=$add2&-8;var $cond=$and;__label__=4;break;case 4:var $cond;$nb=$cond;var $3=$nb;var $shr=$3>>>3;$idx=$shr;var $4=HEAPU32[(__gm_|0)>>2];var $5=$idx;var $shr3=$4>>>($5>>>0);$smallbits=$shr3;var $6=$smallbits;var $and4=$6&3;var $cmp5=($and4|0)!=0;if($cmp5){__label__=5;break}else{__label__=12;break}case 5:var $7=$smallbits;var $neg=$7^-1;var $and7=$neg&1;var $8=$idx;var $add8=$8+$and7|0;$idx=$add8;var $9=$idx;var $shl=$9<<1;var $arrayidx=(__gm_+40|0)+($shl<<2)|0;var $10=$arrayidx;var $11=$10;$b=$11;var $12=$b;var $fd=$12+8|0;var $13=HEAP32[$fd>>2];$p=$13;var $14=$p;var $fd9=$14+8|0;var $15=HEAP32[$fd9>>2];$F=$15;var $16=$b;var $17=$F;var $cmp10=($16|0)==($17|0);if($cmp10){__label__=6;break}else{__label__=7;break}case 6:var $18=$idx;var $shl12=1<<$18;var $neg13=$shl12^-1;var $19=HEAP32[(__gm_|0)>>2];var $and14=$19&$neg13;HEAP32[(__gm_|0)>>2]=$and14;__label__=11;break;case 7:var $20=$F;var $21=$20;var $22=HEAPU32[(__gm_+16|0)>>2];var $cmp15=$21>>>0>=$22>>>0;var $conv=$cmp15&1;var $expval=$conv==1;var $tobool=($expval|0)!=0;if($tobool){__label__=8;break}else{__label__=9;break}case 8:var $23=$F;var $24=$b;var $fd17=$24+8|0;HEAP32[$fd17>>2]=$23;var $25=$b;var $26=$F;var $bk=$26+12|0;HEAP32[$bk>>2]=$25;__label__=10;break;case 9:_abort();throw"Reached an unreachable!";case 10:__label__=11;break;case 11:var $27=$idx;var $shl20=$27<<3;var $or=$shl20|1;var $or21=$or|2;var $28=$p;var $head=$28+4|0;HEAP32[$head>>2]=$or21;var $29=$p;var $30=$29;var $31=$idx;var $shl22=$31<<3;var $add_ptr=$30+$shl22|0;var $32=$add_ptr;var $head23=$32+4|0;var $33=HEAP32[$head23>>2];var $or24=$33|1;HEAP32[$head23>>2]=$or24;var $34=$p;var $35=$34;var $add_ptr25=$35+8|0;$mem=$add_ptr25;__label__=52;break;case 12:var $36=$nb;var $37=HEAPU32[(__gm_+8|0)>>2];var $cmp27=$36>>>0>$37>>>0;if($cmp27){__label__=13;break}else{__label__=34;break}case 13:var $38=$smallbits;var $cmp30=($38|0)!=0;if($cmp30){__label__=14;break}else{__label__=29;break}case 14:var $39=$smallbits;var $40=$idx;var $shl35=$39<<$40;var $41=$idx;var $shl36=1<<$41;var $shl37=$shl36<<1;var $42=$idx;var $shl38=1<<$42;var $shl39=$shl38<<1;var $sub=-$shl39|0;var $or40=$shl37|$sub;var $and41=$shl35&$or40;$leftbits=$and41;var $43=$leftbits;var $44=$leftbits;var $sub42=-$44|0;var $and43=$43&$sub42;$leastbit=$and43;var $45=$leastbit;var $sub44=$45-1|0;$Y=$sub44;var $46=$Y;var $shr45=$46>>>12;var $and46=$shr45&16;$K=$and46;var $47=$K;$N=$47;var $48=$K;var $49=$Y;var $shr47=$49>>>($48>>>0);$Y=$shr47;var $50=$Y;var $shr48=$50>>>5;var $and49=$shr48&8;$K=$and49;var $51=$N;var $add50=$51+$and49|0;$N=$add50;var $52=$K;var $53=$Y;var $shr51=$53>>>($52>>>0);$Y=$shr51;var $54=$Y;var $shr52=$54>>>2;var $and53=$shr52&4;$K=$and53;var $55=$N;var $add54=$55+$and53|0;$N=$add54;var $56=$K;var $57=$Y;var $shr55=$57>>>($56>>>0);$Y=$shr55;var $58=$Y;var $shr56=$58>>>1;var $and57=$shr56&2;$K=$and57;var $59=$N;var $add58=$59+$and57|0;$N=$add58;var $60=$K;var $61=$Y;var $shr59=$61>>>($60>>>0);$Y=$shr59;var $62=$Y;var $shr60=$62>>>1;var $and61=$shr60&1;$K=$and61;var $63=$N;var $add62=$63+$and61|0;$N=$add62;var $64=$K;var $65=$Y;var $shr63=$65>>>($64>>>0);$Y=$shr63;var $66=$N;var $67=$Y;var $add64=$66+$67|0;$i=$add64;var $68=$i;var $shl65=$68<<1;var $arrayidx66=(__gm_+40|0)+($shl65<<2)|0;var $69=$arrayidx66;var $70=$69;$b33=$70;var $71=$b33;var $fd67=$71+8|0;var $72=HEAP32[$fd67>>2];$p34=$72;var $73=$p34;var $fd69=$73+8|0;var $74=HEAP32[$fd69>>2];$F68=$74;var $75=$b33;var $76=$F68;var $cmp70=($75|0)==($76|0);if($cmp70){__label__=15;break}else{__label__=16;break}case 15:var $77=$i;var $shl73=1<<$77;var $neg74=$shl73^-1;var $78=HEAP32[(__gm_|0)>>2];var $and75=$78&$neg74;HEAP32[(__gm_|0)>>2]=$and75;__label__=20;break;case 16:var $79=$F68;var $80=$79;var $81=HEAPU32[(__gm_+16|0)>>2];var $cmp77=$80>>>0>=$81>>>0;var $conv78=$cmp77&1;var $expval79=$conv78==1;var $tobool80=($expval79|0)!=0;if($tobool80){__label__=17;break}else{__label__=18;break}case 17:var $82=$F68;var $83=$b33;var $fd82=$83+8|0;HEAP32[$fd82>>2]=$82;var $84=$b33;var $85=$F68;var $bk83=$85+12|0;HEAP32[$bk83>>2]=$84;__label__=19;break;case 18:_abort();throw"Reached an unreachable!";case 19:__label__=20;break;case 20:var $86=$i;var $shl87=$86<<3;var $87=$nb;var $sub88=$shl87-$87|0;$rsize=$sub88;var $88=$nb;var $or89=$88|1;var $or90=$or89|2;var $89=$p34;var $head91=$89+4|0;HEAP32[$head91>>2]=$or90;var $90=$p34;var $91=$90;var $92=$nb;var $add_ptr92=$91+$92|0;var $93=$add_ptr92;$r=$93;var $94=$rsize;var $or93=$94|1;var $95=$r;var $head94=$95+4|0;HEAP32[$head94>>2]=$or93;var $96=$rsize;var $97=$r;var $98=$97;var $99=$rsize;var $add_ptr95=$98+$99|0;var $100=$add_ptr95;var $prev_foot=$100|0;HEAP32[$prev_foot>>2]=$96;var $101=HEAP32[(__gm_+8|0)>>2];$DVS=$101;var $102=$DVS;var $cmp96=($102|0)!=0;if($cmp96){__label__=21;break}else{__label__=28;break}case 21:var $103=HEAP32[(__gm_+20|0)>>2];$DV=$103;var $104=$DVS;var $shr99=$104>>>3;$I=$shr99;var $105=$I;var $shl100=$105<<1;var $arrayidx101=(__gm_+40|0)+($shl100<<2)|0;var $106=$arrayidx101;var $107=$106;$B=$107;var $108=$B;$F102=$108;var $109=HEAP32[(__gm_|0)>>2];var $110=$I;var $shl103=1<<$110;var $and104=$109&$shl103;var $tobool105=($and104|0)!=0;if($tobool105){__label__=23;break}else{__label__=22;break}case 22:var $111=$I;var $shl107=1<<$111;var $112=HEAP32[(__gm_|0)>>2];var $or108=$112|$shl107;HEAP32[(__gm_|0)>>2]=$or108;__label__=27;break;case 23:var $113=$B;var $fd110=$113+8|0;var $114=HEAP32[$fd110>>2];var $115=$114;var $116=HEAPU32[(__gm_+16|0)>>2];var $cmp111=$115>>>0>=$116>>>0;var $conv112=$cmp111&1;var $expval113=$conv112==1;var $tobool114=($expval113|0)!=0;if($tobool114){__label__=24;break}else{__label__=25;break}case 24:var $117=$B;var $fd116=$117+8|0;var $118=HEAP32[$fd116>>2];$F102=$118;__label__=26;break;case 25:_abort();throw"Reached an unreachable!";case 26:__label__=27;break;case 27:var $119=$DV;var $120=$B;var $fd120=$120+8|0;HEAP32[$fd120>>2]=$119;var $121=$DV;var $122=$F102;var $bk121=$122+12|0;HEAP32[$bk121>>2]=$121;var $123=$F102;var $124=$DV;var $fd122=$124+8|0;HEAP32[$fd122>>2]=$123;var $125=$B;var $126=$DV;var $bk123=$126+12|0;HEAP32[$bk123>>2]=$125;__label__=28;break;case 28:var $127=$rsize;HEAP32[(__gm_+8|0)>>2]=$127;var $128=$r;HEAP32[(__gm_+20|0)>>2]=$128;var $129=$p34;var $130=$129;var $add_ptr125=$130+8|0;$mem=$add_ptr125;__label__=52;break;case 29:var $131=HEAP32[(__gm_+4|0)>>2];var $cmp127=($131|0)!=0;if($cmp127){__label__=30;break}else{__label__=32;break}case 30:var $132=$nb;var $call=_tmalloc_small(__gm_,$132);$mem=$call;var $cmp129=($call|0)!=0;if($cmp129){__label__=31;break}else{__label__=32;break}case 31:__label__=52;break;case 32:__label__=33;break;case 33:__label__=34;break;case 34:__label__=35;break;case 35:__label__=43;break;case 36:var $133=$bytes_addr;var $cmp137=$133>>>0>=4294967232;if($cmp137){__label__=37;break}else{__label__=38;break}case 37:$nb=-1;__label__=42;break;case 38:var $134=$bytes_addr;var $add141=$134+4|0;var $add142=$add141+7|0;var $and143=$add142&-8;$nb=$and143;var $135=HEAP32[(__gm_+4|0)>>2];var $cmp144=($135|0)!=0;if($cmp144){__label__=39;break}else{__label__=41;break}case 39:var $136=$nb;var $call147=_tmalloc_large(__gm_,$136);$mem=$call147;var $cmp148=($call147|0)!=0;if($cmp148){__label__=40;break}else{__label__=41;break}case 40:__label__=52;break;case 41:__label__=42;break;case 42:__label__=43;break;case 43:var $137=$nb;var $138=HEAPU32[(__gm_+8|0)>>2];var $cmp154=$137>>>0<=$138>>>0;if($cmp154){__label__=44;break}else{__label__=48;break}case 44:var $139=HEAP32[(__gm_+8|0)>>2];var $140=$nb;var $sub158=$139-$140|0;$rsize157=$sub158;var $141=HEAP32[(__gm_+20|0)>>2];$p159=$141;var $142=$rsize157;var $cmp160=$142>>>0>=16;if($cmp160){__label__=45;break}else{__label__=46;break}case 45:var $143=$p159;var $144=$143;var $145=$nb;var $add_ptr164=$144+$145|0;var $146=$add_ptr164;HEAP32[(__gm_+20|0)>>2]=$146;$r163=$146;var $147=$rsize157;HEAP32[(__gm_+8|0)>>2]=$147;var $148=$rsize157;var $or165=$148|1;var $149=$r163;var $head166=$149+4|0;HEAP32[$head166>>2]=$or165;var $150=$rsize157;var $151=$r163;var $152=$151;var $153=$rsize157;var $add_ptr167=$152+$153|0;var $154=$add_ptr167;var $prev_foot168=$154|0;HEAP32[$prev_foot168>>2]=$150;var $155=$nb;var $or169=$155|1;var $or170=$or169|2;var $156=$p159;var $head171=$156+4|0;HEAP32[$head171>>2]=$or170;__label__=47;break;case 46:var $157=HEAP32[(__gm_+8|0)>>2];$dvs=$157;HEAP32[(__gm_+8|0)>>2]=0;HEAP32[(__gm_+20|0)>>2]=0;var $158=$dvs;var $or173=$158|1;var $or174=$or173|2;var $159=$p159;var $head175=$159+4|0;HEAP32[$head175>>2]=$or174;var $160=$p159;var $161=$160;var $162=$dvs;var $add_ptr176=$161+$162|0;var $163=$add_ptr176;var $head177=$163+4|0;var $164=HEAP32[$head177>>2];var $or178=$164|1;HEAP32[$head177>>2]=$or178;__label__=47;break;case 47:var $165=$p159;var $166=$165;var $add_ptr180=$166+8|0;$mem=$add_ptr180;__label__=52;break;case 48:var $167=$nb;var $168=HEAPU32[(__gm_+12|0)>>2];var $cmp182=$167>>>0<$168>>>0;if($cmp182){__label__=49;break}else{__label__=50;break}case 49:var $169=$nb;var $170=HEAP32[(__gm_+12|0)>>2];var $sub186=$170-$169|0;HEAP32[(__gm_+12|0)>>2]=$sub186;$rsize185=$sub186;var $171=HEAP32[(__gm_+24|0)>>2];$p187=$171;var $172=$p187;var $173=$172;var $174=$nb;var $add_ptr189=$173+$174|0;var $175=$add_ptr189;HEAP32[(__gm_+24|0)>>2]=$175;$r188=$175;var $176=$rsize185;var $or190=$176|1;var $177=$r188;var $head191=$177+4|0;HEAP32[$head191>>2]=$or190;var $178=$nb;var $or192=$178|1;var $or193=$or192|2;var $179=$p187;var $head194=$179+4|0;HEAP32[$head194>>2]=$or193;var $180=$p187;var $181=$180;var $add_ptr195=$181+8|0;$mem=$add_ptr195;__label__=52;break;case 50:__label__=51;break;case 51:var $182=$nb;var $call198=_sys_alloc(__gm_,$182);$mem=$call198;__label__=52;break;case 52:var $183=$mem;return $183;default:assert(0,"bad label: "+__label__)}}_malloc["X"]=1;function _tmalloc_small($m,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $nb_addr;var $t;var $v;var $rsize;var $i;var $leastbit;var $Y;var $K;var $N;var $trem;var $r;var $XP;var $R;var $F;var $RP;var $CP;var $H;var $C0;var $C1;var $DVS;var $DV;var $I;var $B;var $F191;$m_addr=$m;$nb_addr=$nb;var $0=$m_addr;var $treemap=$0+4|0;var $1=HEAP32[$treemap>>2];var $2=$m_addr;var $treemap1=$2+4|0;var $3=HEAP32[$treemap1>>2];var $sub=-$3|0;var $and=$1&$sub;$leastbit=$and;var $4=$leastbit;var $sub2=$4-1|0;$Y=$sub2;var $5=$Y;var $shr=$5>>>12;var $and3=$shr&16;$K=$and3;var $6=$K;$N=$6;var $7=$K;var $8=$Y;var $shr4=$8>>>($7>>>0);$Y=$shr4;var $9=$Y;var $shr5=$9>>>5;var $and6=$shr5&8;$K=$and6;var $10=$N;var $add=$10+$and6|0;$N=$add;var $11=$K;var $12=$Y;var $shr7=$12>>>($11>>>0);$Y=$shr7;var $13=$Y;var $shr8=$13>>>2;var $and9=$shr8&4;$K=$and9;var $14=$N;var $add10=$14+$and9|0;$N=$add10;var $15=$K;var $16=$Y;var $shr11=$16>>>($15>>>0);$Y=$shr11;var $17=$Y;var $shr12=$17>>>1;var $and13=$shr12&2;$K=$and13;var $18=$N;var $add14=$18+$and13|0;$N=$add14;var $19=$K;var $20=$Y;var $shr15=$20>>>($19>>>0);$Y=$shr15;var $21=$Y;var $shr16=$21>>>1;var $and17=$shr16&1;$K=$and17;var $22=$N;var $add18=$22+$and17|0;$N=$add18;var $23=$K;var $24=$Y;var $shr19=$24>>>($23>>>0);$Y=$shr19;var $25=$N;var $26=$Y;var $add20=$25+$26|0;$i=$add20;var $27=$i;var $28=$m_addr;var $treebins=$28+304|0;var $arrayidx=$treebins+($27<<2)|0;var $29=HEAP32[$arrayidx>>2];$t=$29;$v=$29;var $30=$t;var $head=$30+4|0;var $31=HEAP32[$head>>2];var $and21=$31&-8;var $32=$nb_addr;var $sub22=$and21-$32|0;$rsize=$sub22;__label__=1;break;case 1:var $33=$t;var $child=$33+16|0;var $arrayidx23=$child|0;var $34=HEAP32[$arrayidx23>>2];var $cmp=($34|0)!=0;if($cmp){__label__=2;break}else{__label__=3;break}case 2:var $35=$t;var $child24=$35+16|0;var $arrayidx25=$child24|0;var $36=HEAP32[$arrayidx25>>2];var $cond=$36;__label__=4;break;case 3:var $37=$t;var $child26=$37+16|0;var $arrayidx27=$child26+4|0;var $38=HEAP32[$arrayidx27>>2];var $cond=$38;__label__=4;break;case 4:var $cond;$t=$cond;var $cmp28=($cond|0)!=0;if($cmp28){__label__=5;break}else{__label__=8;break}case 5:var $39=$t;var $head29=$39+4|0;var $40=HEAP32[$head29>>2];var $and30=$40&-8;var $41=$nb_addr;var $sub31=$and30-$41|0;$trem=$sub31;var $42=$trem;var $43=$rsize;var $cmp32=$42>>>0<$43>>>0;if($cmp32){__label__=6;break}else{__label__=7;break}case 6:var $44=$trem;$rsize=$44;var $45=$t;$v=$45;__label__=7;break;case 7:__label__=1;break;case 8:var $46=$v;var $47=$46;var $48=$m_addr;var $least_addr=$48+16|0;var $49=HEAPU32[$least_addr>>2];var $cmp33=$47>>>0>=$49>>>0;var $conv=$cmp33&1;var $expval=$conv==1;var $tobool=($expval|0)!=0;if($tobool){__label__=9;break}else{__label__=68;break}case 9:var $50=$v;var $51=$50;var $52=$nb_addr;var $add_ptr=$51+$52|0;var $53=$add_ptr;$r=$53;var $54=$v;var $55=$54;var $56=$r;var $57=$56;var $cmp35=$55>>>0<$57>>>0;var $conv36=$cmp35&1;var $expval37=$conv36==1;var $tobool38=($expval37|0)!=0;if($tobool38){__label__=10;break}else{__label__=67;break}case 10:var $58=$v;var $parent=$58+24|0;var $59=HEAP32[$parent>>2];$XP=$59;var $60=$v;var $bk=$60+12|0;var $61=HEAP32[$bk>>2];var $62=$v;var $cmp40=($61|0)!=($62|0);if($cmp40){__label__=11;break}else{__label__=15;break}case 11:var $63=$v;var $fd=$63+8|0;var $64=HEAP32[$fd>>2];$F=$64;var $65=$v;var $bk43=$65+12|0;var $66=HEAP32[$bk43>>2];$R=$66;var $67=$F;var $68=$67;var $69=$m_addr;var $least_addr44=$69+16|0;var $70=HEAPU32[$least_addr44>>2];var $cmp45=$68>>>0>=$70>>>0;var $conv46=$cmp45&1;var $expval47=$conv46==1;var $tobool48=($expval47|0)!=0;if($tobool48){__label__=12;break}else{__label__=13;break}case 12:var $71=$R;var $72=$F;var $bk50=$72+12|0;HEAP32[$bk50>>2]=$71;var $73=$F;var $74=$R;var $fd51=$74+8|0;HEAP32[$fd51>>2]=$73;__label__=14;break;case 13:_abort();throw"Reached an unreachable!";case 14:__label__=27;break;case 15:var $75=$v;var $child54=$75+16|0;var $arrayidx55=$child54+4|0;$RP=$arrayidx55;var $76=HEAP32[$arrayidx55>>2];$R=$76;var $cmp56=($76|0)!=0;if($cmp56){__label__=17;break}else{__label__=16;break}case 16:var $77=$v;var $child58=$77+16|0;var $arrayidx59=$child58|0;$RP=$arrayidx59;var $78=HEAP32[$arrayidx59>>2];$R=$78;var $cmp60=($78|0)!=0;if($cmp60){__label__=17;break}else{__label__=26;break}case 17:__label__=18;break;case 18:var $79=$R;var $child64=$79+16|0;var $arrayidx65=$child64+4|0;$CP=$arrayidx65;var $80=HEAP32[$arrayidx65>>2];var $cmp66=($80|0)!=0;if($cmp66){var $83=1;__label__=20;break}else{__label__=19;break}case 19:var $81=$R;var $child68=$81+16|0;var $arrayidx69=$child68|0;$CP=$arrayidx69;var $82=HEAP32[$arrayidx69>>2];var $cmp70=($82|0)!=0;var $83=$cmp70;__label__=20;break;case 20:var $83;if($83){__label__=21;break}else{__label__=22;break}case 21:var $84=$CP;$RP=$84;var $85=HEAP32[$84>>2];$R=$85;__label__=18;break;case 22:var $86=$RP;var $87=$86;var $88=$m_addr;var $least_addr74=$88+16|0;var $89=HEAPU32[$least_addr74>>2];var $cmp75=$87>>>0>=$89>>>0;var $conv76=$cmp75&1;var $expval77=$conv76==1;var $tobool78=($expval77|0)!=0;if($tobool78){__label__=23;break}else{__label__=24;break}case 23:var $90=$RP;HEAP32[$90>>2]=0;__label__=25;break;case 24:_abort();throw"Reached an unreachable!";case 25:__label__=26;break;case 26:__label__=27;break;case 27:var $91=$XP;var $cmp84=($91|0)!=0;if($cmp84){__label__=28;break}else{__label__=55;break}case 28:var $92=$v;var $index=$92+28|0;var $93=HEAP32[$index>>2];var $94=$m_addr;var $treebins87=$94+304|0;var $arrayidx88=$treebins87+($93<<2)|0;$H=$arrayidx88;var $95=$v;var $96=$H;var $97=HEAP32[$96>>2];var $cmp89=($95|0)==($97|0);if($cmp89){__label__=29;break}else{__label__=32;break}case 29:var $98=$R;var $99=$H;HEAP32[$99>>2]=$98;var $cmp92=($98|0)==0;if($cmp92){__label__=30;break}else{__label__=31;break}case 30:var $100=$v;var $index95=$100+28|0;var $101=HEAP32[$index95>>2];var $shl=1<<$101;var $neg=$shl^-1;var $102=$m_addr;var $treemap96=$102+4|0;var $103=HEAP32[$treemap96>>2];var $and97=$103&$neg;HEAP32[$treemap96>>2]=$and97;__label__=31;break;case 31:__label__=39;break;case 32:var $104=$XP;var $105=$104;var $106=$m_addr;var $least_addr100=$106+16|0;var $107=HEAPU32[$least_addr100>>2];var $cmp101=$105>>>0>=$107>>>0;var $conv102=$cmp101&1;var $expval103=$conv102==1;var $tobool104=($expval103|0)!=0;if($tobool104){__label__=33;break}else{__label__=37;break}case 33:var $108=$XP;var $child106=$108+16|0;var $arrayidx107=$child106|0;var $109=HEAP32[$arrayidx107>>2];var $110=$v;var $cmp108=($109|0)==($110|0);if($cmp108){__label__=34;break}else{__label__=35;break}case 34:var $111=$R;var $112=$XP;var $child111=$112+16|0;var $arrayidx112=$child111|0;HEAP32[$arrayidx112>>2]=$111;__label__=36;break;case 35:var $113=$R;var $114=$XP;var $child114=$114+16|0;var $arrayidx115=$child114+4|0;HEAP32[$arrayidx115>>2]=$113;__label__=36;break;case 36:__label__=38;break;case 37:_abort();throw"Reached an unreachable!";case 38:__label__=39;break;case 39:var $115=$R;var $cmp120=($115|0)!=0;if($cmp120){__label__=40;break}else{__label__=54;break}case 40:var $116=$R;var $117=$116;var $118=$m_addr;var $least_addr123=$118+16|0;var $119=HEAPU32[$least_addr123>>2];var $cmp124=$117>>>0>=$119>>>0;var $conv125=$cmp124&1;var $expval126=$conv125==1;var $tobool127=($expval126|0)!=0;if($tobool127){__label__=41;break}else{__label__=52;break}case 41:var $120=$XP;var $121=$R;var $parent129=$121+24|0;HEAP32[$parent129>>2]=$120;var $122=$v;var $child130=$122+16|0;var $arrayidx131=$child130|0;var $123=HEAP32[$arrayidx131>>2];$C0=$123;var $cmp132=($123|0)!=0;if($cmp132){__label__=42;break}else{__label__=46;break}case 42:var $124=$C0;var $125=$124;var $126=$m_addr;var $least_addr135=$126+16|0;var $127=HEAPU32[$least_addr135>>2];var $cmp136=$125>>>0>=$127>>>0;var $conv137=$cmp136&1;var $expval138=$conv137==1;var $tobool139=($expval138|0)!=0;if($tobool139){__label__=43;break}else{__label__=44;break}case 43:var $128=$C0;var $129=$R;var $child141=$129+16|0;var $arrayidx142=$child141|0;HEAP32[$arrayidx142>>2]=$128;var $130=$R;var $131=$C0;var $parent143=$131+24|0;HEAP32[$parent143>>2]=$130;__label__=45;break;case 44:_abort();throw"Reached an unreachable!";case 45:__label__=46;break;case 46:var $132=$v;var $child147=$132+16|0;var $arrayidx148=$child147+4|0;var $133=HEAP32[$arrayidx148>>2];$C1=$133;var $cmp149=($133|0)!=0;if($cmp149){__label__=47;break}else{__label__=51;break}case 47:var $134=$C1;var $135=$134;var $136=$m_addr;var $least_addr152=$136+16|0;var $137=HEAPU32[$least_addr152>>2];var $cmp153=$135>>>0>=$137>>>0;var $conv154=$cmp153&1;var $expval155=$conv154==1;var $tobool156=($expval155|0)!=0;if($tobool156){__label__=48;break}else{__label__=49;break}case 48:var $138=$C1;var $139=$R;var $child158=$139+16|0;var $arrayidx159=$child158+4|0;HEAP32[$arrayidx159>>2]=$138;var $140=$R;var $141=$C1;var $parent160=$141+24|0;HEAP32[$parent160>>2]=$140;__label__=50;break;case 49:_abort();throw"Reached an unreachable!";case 50:__label__=51;break;case 51:__label__=53;break;case 52:_abort();throw"Reached an unreachable!";case 53:__label__=54;break;case 54:__label__=55;break;case 55:var $142=$rsize;var $cmp168=$142>>>0<16;if($cmp168){__label__=56;break}else{__label__=57;break}case 56:var $143=$rsize;var $144=$nb_addr;var $add171=$143+$144|0;var $or=$add171|1;var $or172=$or|2;var $145=$v;var $head173=$145+4|0;HEAP32[$head173>>2]=$or172;var $146=$v;var $147=$146;var $148=$rsize;var $149=$nb_addr;var $add174=$148+$149|0;var $add_ptr175=$147+$add174|0;var $150=$add_ptr175;var $head176=$150+4|0;var $151=HEAP32[$head176>>2];var $or177=$151|1;HEAP32[$head176>>2]=$or177;__label__=66;break;case 57:var $152=$nb_addr;var $or179=$152|1;var $or180=$or179|2;var $153=$v;var $head181=$153+4|0;HEAP32[$head181>>2]=$or180;var $154=$rsize;var $or182=$154|1;var $155=$r;var $head183=$155+4|0;HEAP32[$head183>>2]=$or182;var $156=$rsize;var $157=$r;var $158=$157;var $159=$rsize;var $add_ptr184=$158+$159|0;var $160=$add_ptr184;var $prev_foot=$160|0;HEAP32[$prev_foot>>2]=$156;var $161=$m_addr;var $dvsize=$161+8|0;var $162=HEAP32[$dvsize>>2];$DVS=$162;var $163=$DVS;var $cmp185=($163|0)!=0;if($cmp185){__label__=58;break}else{__label__=65;break}case 58:var $164=$m_addr;var $dv=$164+20|0;var $165=HEAP32[$dv>>2];$DV=$165;var $166=$DVS;var $shr188=$166>>>3;$I=$shr188;var $167=$I;var $shl189=$167<<1;var $168=$m_addr;var $smallbins=$168+40|0;var $arrayidx190=$smallbins+($shl189<<2)|0;var $169=$arrayidx190;var $170=$169;$B=$170;var $171=$B;$F191=$171;var $172=$m_addr;var $smallmap=$172|0;var $173=HEAP32[$smallmap>>2];var $174=$I;var $shl192=1<<$174;var $and193=$173&$shl192;var $tobool194=($and193|0)!=0;if($tobool194){__label__=60;break}else{__label__=59;break}case 59:var $175=$I;var $shl196=1<<$175;var $176=$m_addr;var $smallmap197=$176|0;var $177=HEAP32[$smallmap197>>2];var $or198=$177|$shl196;HEAP32[$smallmap197>>2]=$or198;__label__=64;break;case 60:var $178=$B;var $fd200=$178+8|0;var $179=HEAP32[$fd200>>2];var $180=$179;var $181=$m_addr;var $least_addr201=$181+16|0;var $182=HEAPU32[$least_addr201>>2];var $cmp202=$180>>>0>=$182>>>0;var $conv203=$cmp202&1;var $expval204=$conv203==1;var $tobool205=($expval204|0)!=0;if($tobool205){__label__=61;break}else{__label__=62;break}case 61:var $183=$B;var $fd207=$183+8|0;var $184=HEAP32[$fd207>>2];$F191=$184;__label__=63;break;case 62:_abort();throw"Reached an unreachable!";case 63:__label__=64;break;case 64:var $185=$DV;var $186=$B;var $fd211=$186+8|0;HEAP32[$fd211>>2]=$185;var $187=$DV;var $188=$F191;var $bk212=$188+12|0;HEAP32[$bk212>>2]=$187;var $189=$F191;var $190=$DV;var $fd213=$190+8|0;HEAP32[$fd213>>2]=$189;var $191=$B;var $192=$DV;var $bk214=$192+12|0;HEAP32[$bk214>>2]=$191;__label__=65;break;case 65:var $193=$rsize;var $194=$m_addr;var $dvsize216=$194+8|0;HEAP32[$dvsize216>>2]=$193;var $195=$r;var $196=$m_addr;var $dv217=$196+20|0;HEAP32[$dv217>>2]=$195;__label__=66;break;case 66:var $197=$v;var $198=$197;var $add_ptr219=$198+8|0;return $add_ptr219;case 67:__label__=68;break;case 68:_abort();throw"Reached an unreachable!";default:assert(0,"bad label: "+__label__)}}_tmalloc_small["X"]=1;function _tmalloc_large($m,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $nb_addr;var $v;var $rsize;var $t;var $idx;var $X;var $Y;var $N;var $K;var $sizebits;var $rst;var $rt;var $trem;var $leftbits;var $i;var $leastbit;var $Y68;var $K70;var $N73;var $trem97;var $r;var $XP;var $R;var $F;var $RP;var $CP;var $H;var $C0;var $C1;var $I;var $B;var $F282;var $TP;var $H307;var $I308;var $X309;var $Y319;var $N320;var $K324;var $T;var $K365;var $C;var $F404;$m_addr=$m;$nb_addr=$nb;$v=0;var $0=$nb_addr;var $sub=-$0|0;$rsize=$sub;var $1=$nb_addr;var $shr=$1>>>8;$X=$shr;var $2=$X;var $cmp=($2|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$idx=0;__label__=6;break;case 2:var $3=$X;var $cmp1=$3>>>0>65535;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$idx=31;__label__=5;break;case 4:var $4=$X;$Y=$4;var $5=$Y;var $sub4=$5-256|0;var $shr5=$sub4>>>16;var $and=$shr5&8;$N=$and;var $6=$N;var $7=$Y;var $shl=$7<<$6;$Y=$shl;var $sub6=$shl-4096|0;var $shr7=$sub6>>>16;var $and8=$shr7&4;$K=$and8;var $8=$K;var $9=$N;var $add=$9+$8|0;$N=$add;var $10=$K;var $11=$Y;var $shl9=$11<<$10;$Y=$shl9;var $sub10=$shl9-16384|0;var $shr11=$sub10>>>16;var $and12=$shr11&2;$K=$and12;var $12=$N;var $add13=$12+$and12|0;$N=$add13;var $13=$N;var $sub14=14-$13|0;var $14=$K;var $15=$Y;var $shl15=$15<<$14;$Y=$shl15;var $shr16=$shl15>>>15;var $add17=$sub14+$shr16|0;$K=$add17;var $16=$K;var $shl18=$16<<1;var $17=$nb_addr;var $18=$K;var $add19=$18+7|0;var $shr20=$17>>>($add19>>>0);var $and21=$shr20&1;var $add22=$shl18+$and21|0;$idx=$add22;__label__=5;break;case 5:__label__=6;break;case 6:var $19=$idx;var $20=$m_addr;var $treebins=$20+304|0;var $arrayidx=$treebins+($19<<2)|0;var $21=HEAP32[$arrayidx>>2];$t=$21;var $cmp24=($21|0)!=0;if($cmp24){__label__=7;break}else{__label__=22;break}case 7:var $22=$nb_addr;var $23=$idx;var $cmp26=($23|0)==31;if($cmp26){__label__=8;break}else{__label__=9;break}case 8:var $cond=0;__label__=10;break;case 9:var $24=$idx;var $shr27=$24>>>1;var $add28=$shr27+8|0;var $sub29=$add28-2|0;var $sub30=31-$sub29|0;var $cond=$sub30;__label__=10;break;case 10:var $cond;var $shl31=$22<<$cond;$sizebits=$shl31;$rst=0;__label__=11;break;case 11:var $25=$t;var $head=$25+4|0;var $26=HEAP32[$head>>2];var $and32=$26&-8;var $27=$nb_addr;var $sub33=$and32-$27|0;$trem=$sub33;var $28=$trem;var $29=$rsize;var $cmp34=$28>>>0<$29>>>0;if($cmp34){__label__=12;break}else{__label__=15;break}case 12:var $30=$t;$v=$30;var $31=$trem;$rsize=$31;var $cmp36=($31|0)==0;if($cmp36){__label__=13;break}else{__label__=14;break}case 13:__label__=21;break;case 14:__label__=15;break;case 15:var $32=$t;var $child=$32+16|0;var $arrayidx40=$child+4|0;var $33=HEAP32[$arrayidx40>>2];$rt=$33;var $34=$sizebits;var $shr41=$34>>>31;var $and42=$shr41&1;var $35=$t;var $child43=$35+16|0;var $arrayidx44=$child43+($and42<<2)|0;var $36=HEAP32[$arrayidx44>>2];$t=$36;var $37=$rt;var $cmp45=($37|0)!=0;if($cmp45){__label__=16;break}else{__label__=18;break}case 16:var $38=$rt;var $39=$t;var $cmp46=($38|0)!=($39|0);if($cmp46){__label__=17;break}else{__label__=18;break}case 17:var $40=$rt;$rst=$40;__label__=18;break;case 18:var $41=$t;var $cmp49=($41|0)==0;if($cmp49){__label__=19;break}else{__label__=20;break}case 19:var $42=$rst;$t=$42;__label__=21;break;case 20:var $43=$sizebits;var $shl52=$43<<1;$sizebits=$shl52;__label__=11;break;case 21:__label__=22;break;case 22:var $44=$t;var $cmp54=($44|0)==0;if($cmp54){__label__=23;break}else{__label__=27;break}case 23:var $45=$v;var $cmp56=($45|0)==0;if($cmp56){__label__=24;break}else{__label__=27;break}case 24:var $46=$idx;var $shl58=1<<$46;var $shl59=$shl58<<1;var $47=$idx;var $shl60=1<<$47;var $shl61=$shl60<<1;var $sub62=-$shl61|0;var $or=$shl59|$sub62;var $48=$m_addr;var $treemap=$48+4|0;var $49=HEAP32[$treemap>>2];var $and63=$or&$49;$leftbits=$and63;var $50=$leftbits;var $cmp64=($50|0)!=0;if($cmp64){__label__=25;break}else{__label__=26;break}case 25:var $51=$leftbits;var $52=$leftbits;var $sub66=-$52|0;var $and67=$51&$sub66;$leastbit=$and67;var $53=$leastbit;var $sub69=$53-1|0;$Y68=$sub69;var $54=$Y68;var $shr71=$54>>>12;var $and72=$shr71&16;$K70=$and72;var $55=$K70;$N73=$55;var $56=$K70;var $57=$Y68;var $shr74=$57>>>($56>>>0);$Y68=$shr74;var $58=$Y68;var $shr75=$58>>>5;var $and76=$shr75&8;$K70=$and76;var $59=$N73;var $add77=$59+$and76|0;$N73=$add77;var $60=$K70;var $61=$Y68;var $shr78=$61>>>($60>>>0);$Y68=$shr78;var $62=$Y68;var $shr79=$62>>>2;var $and80=$shr79&4;$K70=$and80;var $63=$N73;var $add81=$63+$and80|0;$N73=$add81;var $64=$K70;var $65=$Y68;var $shr82=$65>>>($64>>>0);$Y68=$shr82;var $66=$Y68;var $shr83=$66>>>1;var $and84=$shr83&2;$K70=$and84;var $67=$N73;var $add85=$67+$and84|0;$N73=$add85;var $68=$K70;var $69=$Y68;var $shr86=$69>>>($68>>>0);$Y68=$shr86;var $70=$Y68;var $shr87=$70>>>1;var $and88=$shr87&1;$K70=$and88;var $71=$N73;var $add89=$71+$and88|0;$N73=$add89;var $72=$K70;var $73=$Y68;var $shr90=$73>>>($72>>>0);$Y68=$shr90;var $74=$N73;var $75=$Y68;var $add91=$74+$75|0;$i=$add91;var $76=$i;var $77=$m_addr;var $treebins92=$77+304|0;var $arrayidx93=$treebins92+($76<<2)|0;var $78=HEAP32[$arrayidx93>>2];$t=$78;__label__=26;break;case 26:__label__=27;break;case 27:__label__=28;break;case 28:var $79=$t;var $cmp96=($79|0)!=0;if($cmp96){__label__=29;break}else{__label__=35;break}case 29:var $80=$t;var $head98=$80+4|0;var $81=HEAP32[$head98>>2];var $and99=$81&-8;var $82=$nb_addr;var $sub100=$and99-$82|0;$trem97=$sub100;var $83=$trem97;var $84=$rsize;var $cmp101=$83>>>0<$84>>>0;if($cmp101){__label__=30;break}else{__label__=31;break}case 30:var $85=$trem97;$rsize=$85;var $86=$t;$v=$86;__label__=31;break;case 31:var $87=$t;var $child104=$87+16|0;var $arrayidx105=$child104|0;var $88=HEAP32[$arrayidx105>>2];var $cmp106=($88|0)!=0;if($cmp106){__label__=32;break}else{__label__=33;break}case 32:var $89=$t;var $child108=$89+16|0;var $arrayidx109=$child108|0;var $90=HEAP32[$arrayidx109>>2];var $cond114=$90;__label__=34;break;case 33:var $91=$t;var $child111=$91+16|0;var $arrayidx112=$child111+4|0;var $92=HEAP32[$arrayidx112>>2];var $cond114=$92;__label__=34;break;case 34:var $cond114;$t=$cond114;__label__=28;break;case 35:var $93=$v;var $cmp115=($93|0)!=0;if($cmp115){__label__=36;break}else{__label__=125;break}case 36:var $94=$rsize;var $95=$m_addr;var $dvsize=$95+8|0;var $96=HEAP32[$dvsize>>2];var $97=$nb_addr;var $sub117=$96-$97|0;var $cmp118=$94>>>0<$sub117>>>0;if($cmp118){__label__=37;break}else{__label__=125;break}case 37:var $98=$v;var $99=$98;var $100=$m_addr;var $least_addr=$100+16|0;var $101=HEAPU32[$least_addr>>2];var $cmp120=$99>>>0>=$101>>>0;var $conv=$cmp120&1;var $expval=$conv==1;var $tobool=($expval|0)!=0;if($tobool){__label__=38;break}else{__label__=124;break}case 38:var $102=$v;var $103=$102;var $104=$nb_addr;var $add_ptr=$103+$104|0;var $105=$add_ptr;$r=$105;var $106=$v;var $107=$106;var $108=$r;var $109=$108;var $cmp122=$107>>>0<$109>>>0;var $conv123=$cmp122&1;var $expval124=$conv123==1;var $tobool125=($expval124|0)!=0;if($tobool125){__label__=39;break}else{__label__=123;break}case 39:var $110=$v;var $parent=$110+24|0;var $111=HEAP32[$parent>>2];$XP=$111;var $112=$v;var $bk=$112+12|0;var $113=HEAP32[$bk>>2];var $114=$v;var $cmp127=($113|0)!=($114|0);if($cmp127){__label__=40;break}else{__label__=44;break}case 40:var $115=$v;var $fd=$115+8|0;var $116=HEAP32[$fd>>2];$F=$116;var $117=$v;var $bk130=$117+12|0;var $118=HEAP32[$bk130>>2];$R=$118;var $119=$F;var $120=$119;var $121=$m_addr;var $least_addr131=$121+16|0;var $122=HEAPU32[$least_addr131>>2];var $cmp132=$120>>>0>=$122>>>0;var $conv133=$cmp132&1;var $expval134=$conv133==1;var $tobool135=($expval134|0)!=0;if($tobool135){__label__=41;break}else{__label__=42;break}case 41:var $123=$R;var $124=$F;var $bk137=$124+12|0;HEAP32[$bk137>>2]=$123;var $125=$F;var $126=$R;var $fd138=$126+8|0;HEAP32[$fd138>>2]=$125;__label__=43;break;case 42:_abort();throw"Reached an unreachable!";case 43:__label__=56;break;case 44:var $127=$v;var $child142=$127+16|0;var $arrayidx143=$child142+4|0;$RP=$arrayidx143;var $128=HEAP32[$arrayidx143>>2];$R=$128;var $cmp144=($128|0)!=0;if($cmp144){__label__=46;break}else{__label__=45;break}case 45:var $129=$v;var $child146=$129+16|0;var $arrayidx147=$child146|0;$RP=$arrayidx147;var $130=HEAP32[$arrayidx147>>2];$R=$130;var $cmp148=($130|0)!=0;if($cmp148){__label__=46;break}else{__label__=55;break}case 46:__label__=47;break;case 47:var $131=$R;var $child152=$131+16|0;var $arrayidx153=$child152+4|0;$CP=$arrayidx153;var $132=HEAP32[$arrayidx153>>2];var $cmp154=($132|0)!=0;if($cmp154){var $135=1;__label__=49;break}else{__label__=48;break}case 48:var $133=$R;var $child156=$133+16|0;var $arrayidx157=$child156|0;$CP=$arrayidx157;var $134=HEAP32[$arrayidx157>>2];var $cmp158=($134|0)!=0;var $135=$cmp158;__label__=49;break;case 49:var $135;if($135){__label__=50;break}else{__label__=51;break}case 50:var $136=$CP;$RP=$136;var $137=HEAP32[$136>>2];$R=$137;__label__=47;break;case 51:var $138=$RP;var $139=$138;var $140=$m_addr;var $least_addr162=$140+16|0;var $141=HEAPU32[$least_addr162>>2];var $cmp163=$139>>>0>=$141>>>0;var $conv164=$cmp163&1;var $expval165=$conv164==1;var $tobool166=($expval165|0)!=0;if($tobool166){__label__=52;break}else{__label__=53;break}case 52:var $142=$RP;HEAP32[$142>>2]=0;__label__=54;break;case 53:_abort();throw"Reached an unreachable!";case 54:__label__=55;break;case 55:__label__=56;break;case 56:var $143=$XP;var $cmp172=($143|0)!=0;if($cmp172){__label__=57;break}else{__label__=84;break}case 57:var $144=$v;var $index=$144+28|0;var $145=HEAP32[$index>>2];var $146=$m_addr;var $treebins175=$146+304|0;var $arrayidx176=$treebins175+($145<<2)|0;$H=$arrayidx176;var $147=$v;var $148=$H;var $149=HEAP32[$148>>2];var $cmp177=($147|0)==($149|0);if($cmp177){__label__=58;break}else{__label__=61;break}case 58:var $150=$R;var $151=$H;HEAP32[$151>>2]=$150;var $cmp180=($150|0)==0;if($cmp180){__label__=59;break}else{__label__=60;break}case 59:var $152=$v;var $index183=$152+28|0;var $153=HEAP32[$index183>>2];var $shl184=1<<$153;var $neg=$shl184^-1;var $154=$m_addr;var $treemap185=$154+4|0;var $155=HEAP32[$treemap185>>2];var $and186=$155&$neg;HEAP32[$treemap185>>2]=$and186;__label__=60;break;case 60:__label__=68;break;case 61:var $156=$XP;var $157=$156;var $158=$m_addr;var $least_addr189=$158+16|0;var $159=HEAPU32[$least_addr189>>2];var $cmp190=$157>>>0>=$159>>>0;var $conv191=$cmp190&1;var $expval192=$conv191==1;var $tobool193=($expval192|0)!=0;if($tobool193){__label__=62;break}else{__label__=66;break}case 62:var $160=$XP;var $child195=$160+16|0;var $arrayidx196=$child195|0;var $161=HEAP32[$arrayidx196>>2];var $162=$v;var $cmp197=($161|0)==($162|0);if($cmp197){__label__=63;break}else{__label__=64;break}case 63:var $163=$R;var $164=$XP;var $child200=$164+16|0;var $arrayidx201=$child200|0;HEAP32[$arrayidx201>>2]=$163;__label__=65;break;case 64:var $165=$R;var $166=$XP;var $child203=$166+16|0;var $arrayidx204=$child203+4|0;HEAP32[$arrayidx204>>2]=$165;__label__=65;break;case 65:__label__=67;break;case 66:_abort();throw"Reached an unreachable!";case 67:__label__=68;break;case 68:var $167=$R;var $cmp209=($167|0)!=0;if($cmp209){__label__=69;break}else{__label__=83;break}case 69:var $168=$R;var $169=$168;var $170=$m_addr;var $least_addr212=$170+16|0;var $171=HEAPU32[$least_addr212>>2];var $cmp213=$169>>>0>=$171>>>0;var $conv214=$cmp213&1;var $expval215=$conv214==1;var $tobool216=($expval215|0)!=0;if($tobool216){__label__=70;break}else{__label__=81;break}case 70:var $172=$XP;var $173=$R;var $parent218=$173+24|0;HEAP32[$parent218>>2]=$172;var $174=$v;var $child219=$174+16|0;var $arrayidx220=$child219|0;var $175=HEAP32[$arrayidx220>>2];$C0=$175;var $cmp221=($175|0)!=0;if($cmp221){__label__=71;break}else{__label__=75;break}case 71:var $176=$C0;var $177=$176;var $178=$m_addr;var $least_addr224=$178+16|0;var $179=HEAPU32[$least_addr224>>2];var $cmp225=$177>>>0>=$179>>>0;var $conv226=$cmp225&1;var $expval227=$conv226==1;var $tobool228=($expval227|0)!=0;if($tobool228){__label__=72;break}else{__label__=73;break}case 72:var $180=$C0;var $181=$R;var $child230=$181+16|0;var $arrayidx231=$child230|0;HEAP32[$arrayidx231>>2]=$180;var $182=$R;var $183=$C0;var $parent232=$183+24|0;HEAP32[$parent232>>2]=$182;__label__=74;break;case 73:_abort();throw"Reached an unreachable!";case 74:__label__=75;break;case 75:var $184=$v;var $child236=$184+16|0;var $arrayidx237=$child236+4|0;var $185=HEAP32[$arrayidx237>>2];$C1=$185;var $cmp238=($185|0)!=0;if($cmp238){__label__=76;break}else{__label__=80;break}case 76:var $186=$C1;var $187=$186;var $188=$m_addr;var $least_addr241=$188+16|0;var $189=HEAPU32[$least_addr241>>2];var $cmp242=$187>>>0>=$189>>>0;var $conv243=$cmp242&1;var $expval244=$conv243==1;var $tobool245=($expval244|0)!=0;if($tobool245){__label__=77;break}else{__label__=78;break}case 77:var $190=$C1;var $191=$R;var $child247=$191+16|0;var $arrayidx248=$child247+4|0;HEAP32[$arrayidx248>>2]=$190;var $192=$R;var $193=$C1;var $parent249=$193+24|0;HEAP32[$parent249>>2]=$192;__label__=79;break;case 78:_abort();throw"Reached an unreachable!";case 79:__label__=80;break;case 80:__label__=82;break;case 81:_abort();throw"Reached an unreachable!";case 82:__label__=83;break;case 83:__label__=84;break;case 84:var $194=$rsize;var $cmp257=$194>>>0<16;if($cmp257){__label__=85;break}else{__label__=86;break}case 85:var $195=$rsize;var $196=$nb_addr;var $add260=$195+$196|0;var $or261=$add260|1;var $or262=$or261|2;var $197=$v;var $head263=$197+4|0;HEAP32[$head263>>2]=$or262;var $198=$v;var $199=$198;var $200=$rsize;var $201=$nb_addr;var $add264=$200+$201|0;var $add_ptr265=$199+$add264|0;var $202=$add_ptr265;var $head266=$202+4|0;var $203=HEAP32[$head266>>2];var $or267=$203|1;HEAP32[$head266>>2]=$or267;__label__=122;break;case 86:var $204=$nb_addr;var $or269=$204|1;var $or270=$or269|2;var $205=$v;var $head271=$205+4|0;HEAP32[$head271>>2]=$or270;var $206=$rsize;var $or272=$206|1;var $207=$r;var $head273=$207+4|0;HEAP32[$head273>>2]=$or272;var $208=$rsize;var $209=$r;var $210=$209;var $211=$rsize;var $add_ptr274=$210+$211|0;var $212=$add_ptr274;var $prev_foot=$212|0;HEAP32[$prev_foot>>2]=$208;var $213=$rsize;var $shr275=$213>>>3;var $cmp276=$shr275>>>0<32;if($cmp276){__label__=87;break}else{__label__=94;break}case 87:var $214=$rsize;var $shr279=$214>>>3;$I=$shr279;var $215=$I;var $shl280=$215<<1;var $216=$m_addr;var $smallbins=$216+40|0;var $arrayidx281=$smallbins+($shl280<<2)|0;var $217=$arrayidx281;var $218=$217;$B=$218;var $219=$B;$F282=$219;var $220=$m_addr;var $smallmap=$220|0;var $221=HEAP32[$smallmap>>2];var $222=$I;var $shl283=1<<$222;var $and284=$221&$shl283;var $tobool285=($and284|0)!=0;if($tobool285){__label__=89;break}else{__label__=88;break}case 88:var $223=$I;var $shl287=1<<$223;var $224=$m_addr;var $smallmap288=$224|0;var $225=HEAP32[$smallmap288>>2];var $or289=$225|$shl287;HEAP32[$smallmap288>>2]=$or289;__label__=93;break;case 89:var $226=$B;var $fd291=$226+8|0;var $227=HEAP32[$fd291>>2];var $228=$227;var $229=$m_addr;var $least_addr292=$229+16|0;var $230=HEAPU32[$least_addr292>>2];var $cmp293=$228>>>0>=$230>>>0;var $conv294=$cmp293&1;var $expval295=$conv294==1;var $tobool296=($expval295|0)!=0;if($tobool296){__label__=90;break}else{__label__=91;break}case 90:var $231=$B;var $fd298=$231+8|0;var $232=HEAP32[$fd298>>2];$F282=$232;__label__=92;break;case 91:_abort();throw"Reached an unreachable!";case 92:__label__=93;break;case 93:var $233=$r;var $234=$B;var $fd302=$234+8|0;HEAP32[$fd302>>2]=$233;var $235=$r;var $236=$F282;var $bk303=$236+12|0;HEAP32[$bk303>>2]=$235;var $237=$F282;var $238=$r;var $fd304=$238+8|0;HEAP32[$fd304>>2]=$237;var $239=$B;var $240=$r;var $bk305=$240+12|0;HEAP32[$bk305>>2]=$239;__label__=121;break;case 94:var $241=$r;var $242=$241;$TP=$242;var $243=$rsize;var $shr310=$243>>>8;$X309=$shr310;var $244=$X309;var $cmp311=($244|0)==0;if($cmp311){__label__=95;break}else{__label__=96;break}case 95:$I308=0;__label__=100;break;case 96:var $245=$X309;var $cmp315=$245>>>0>65535;if($cmp315){__label__=97;break}else{__label__=98;break}case 97:$I308=31;__label__=99;break;case 98:var $246=$X309;$Y319=$246;var $247=$Y319;var $sub321=$247-256|0;var $shr322=$sub321>>>16;var $and323=$shr322&8;$N320=$and323;var $248=$N320;var $249=$Y319;var $shl325=$249<<$248;$Y319=$shl325;var $sub326=$shl325-4096|0;var $shr327=$sub326>>>16;var $and328=$shr327&4;$K324=$and328;var $250=$K324;var $251=$N320;var $add329=$251+$250|0;$N320=$add329;var $252=$K324;var $253=$Y319;var $shl330=$253<<$252;$Y319=$shl330;var $sub331=$shl330-16384|0;var $shr332=$sub331>>>16;var $and333=$shr332&2;$K324=$and333;var $254=$N320;var $add334=$254+$and333|0;$N320=$add334;var $255=$N320;var $sub335=14-$255|0;var $256=$K324;var $257=$Y319;var $shl336=$257<<$256;$Y319=$shl336;var $shr337=$shl336>>>15;var $add338=$sub335+$shr337|0;$K324=$add338;var $258=$K324;var $shl339=$258<<1;var $259=$rsize;var $260=$K324;var $add340=$260+7|0;var $shr341=$259>>>($add340>>>0);var $and342=$shr341&1;var $add343=$shl339+$and342|0;$I308=$add343;__label__=99;break;case 99:__label__=100;break;case 100:var $261=$I308;var $262=$m_addr;var $treebins346=$262+304|0;var $arrayidx347=$treebins346+($261<<2)|0;$H307=$arrayidx347;var $263=$I308;var $264=$TP;var $index348=$264+28|0;HEAP32[$index348>>2]=$263;var $265=$TP;var $child349=$265+16|0;var $arrayidx350=$child349+4|0;HEAP32[$arrayidx350>>2]=0;var $266=$TP;var $child351=$266+16|0;var $arrayidx352=$child351|0;HEAP32[$arrayidx352>>2]=0;var $267=$m_addr;var $treemap353=$267+4|0;var $268=HEAP32[$treemap353>>2];var $269=$I308;var $shl354=1<<$269;var $and355=$268&$shl354;var $tobool356=($and355|0)!=0;if($tobool356){__label__=102;break}else{__label__=101;break}case 101:var $270=$I308;var $shl358=1<<$270;var $271=$m_addr;var $treemap359=$271+4|0;var $272=HEAP32[$treemap359>>2];var $or360=$272|$shl358;HEAP32[$treemap359>>2]=$or360;var $273=$TP;var $274=$H307;HEAP32[$274>>2]=$273;var $275=$H307;var $276=$275;var $277=$TP;var $parent361=$277+24|0;HEAP32[$parent361>>2]=$276;var $278=$TP;var $279=$TP;var $bk362=$279+12|0;HEAP32[$bk362>>2]=$278;var $280=$TP;var $fd363=$280+8|0;HEAP32[$fd363>>2]=$278;__label__=120;break;case 102:var $281=$H307;var $282=HEAP32[$281>>2];$T=$282;var $283=$rsize;var $284=$I308;var $cmp366=($284|0)==31;if($cmp366){__label__=103;break}else{__label__=104;break}case 103:var $cond375=0;__label__=105;break;case 104:var $285=$I308;var $shr370=$285>>>1;var $add371=$shr370+8|0;var $sub372=$add371-2|0;var $sub373=31-$sub372|0;var $cond375=$sub373;__label__=105;break;case 105:var $cond375;var $shl376=$283<<$cond375;$K365=$shl376;__label__=106;break;case 106:var $286=$T;var $head378=$286+4|0;var $287=HEAP32[$head378>>2];var $and379=$287&-8;var $288=$rsize;var $cmp380=($and379|0)!=($288|0);if($cmp380){__label__=107;break}else{__label__=113;break}case 107:var $289=$K365;var $shr383=$289>>>31;var $and384=$shr383&1;var $290=$T;var $child385=$290+16|0;var $arrayidx386=$child385+($and384<<2)|0;$C=$arrayidx386;var $291=$K365;var $shl387=$291<<1;$K365=$shl387;var $292=$C;var $293=HEAP32[$292>>2];var $cmp388=($293|0)!=0;if($cmp388){__label__=108;break}else{__label__=109;break}case 108:var $294=$C;var $295=HEAP32[$294>>2];$T=$295;__label__=112;break;case 109:var $296=$C;var $297=$296;var $298=$m_addr;var $least_addr392=$298+16|0;var $299=HEAPU32[$least_addr392>>2];var $cmp393=$297>>>0>=$299>>>0;var $conv394=$cmp393&1;var $expval395=$conv394==1;var $tobool396=($expval395|0)!=0;if($tobool396){__label__=110;break}else{__label__=111;break}case 110:var $300=$TP;var $301=$C;HEAP32[$301>>2]=$300;var $302=$T;var $303=$TP;var $parent398=$303+24|0;HEAP32[$parent398>>2]=$302;var $304=$TP;var $305=$TP;var $bk399=$305+12|0;HEAP32[$bk399>>2]=$304;var $306=$TP;var $fd400=$306+8|0;HEAP32[$fd400>>2]=$304;__label__=119;break;case 111:_abort();throw"Reached an unreachable!";case 112:__label__=118;break;case 113:var $307=$T;var $fd405=$307+8|0;var $308=HEAP32[$fd405>>2];$F404=$308;var $309=$T;var $310=$309;var $311=$m_addr;var $least_addr406=$311+16|0;var $312=HEAPU32[$least_addr406>>2];var $cmp407=$310>>>0>=$312>>>0;if($cmp407){__label__=114;break}else{var $317=0;__label__=115;break}case 114:var $313=$F404;var $314=$313;var $315=$m_addr;var $least_addr409=$315+16|0;var $316=HEAPU32[$least_addr409>>2];var $cmp410=$314>>>0>=$316>>>0;var $317=$cmp410;__label__=115;break;case 115:var $317;var $land_ext=$317&1;var $expval412=$land_ext==1;var $tobool413=($expval412|0)!=0;if($tobool413){__label__=116;break}else{__label__=117;break}case 116:var $318=$TP;var $319=$F404;var $bk415=$319+12|0;HEAP32[$bk415>>2]=$318;var $320=$T;var $fd416=$320+8|0;HEAP32[$fd416>>2]=$318;var $321=$F404;var $322=$TP;var $fd417=$322+8|0;HEAP32[$fd417>>2]=$321;var $323=$T;var $324=$TP;var $bk418=$324+12|0;HEAP32[$bk418>>2]=$323;var $325=$TP;var $parent419=$325+24|0;HEAP32[$parent419>>2]=0;__label__=119;break;case 117:_abort();throw"Reached an unreachable!";case 118:__label__=106;break;case 119:__label__=120;break;case 120:__label__=121;break;case 121:__label__=122;break;case 122:var $326=$v;var $327=$326;var $add_ptr426=$327+8|0;$retval=$add_ptr426;__label__=126;break;case 123:__label__=124;break;case 124:_abort();throw"Reached an unreachable!";case 125:$retval=0;__label__=126;break;case 126:var $328=$retval;return $328;default:assert(0,"bad label: "+__label__)}}_tmalloc_large["X"]=1;function _sys_alloc($m,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $nb_addr;var $tbase;var $tsize;var $mmap_flag;var $mem;var $br;var $ss;var $asize;var $base;var $esize;var $end;var $asize97;var $br106;var $end107;var $ssize;var $mn;var $sp;var $oldbase;var $rsize;var $p;var $r;$m_addr=$m;$nb_addr=$nb;$tbase=-1;$tsize=0;$mmap_flag=0;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=$m_addr;var $mflags=$2+440|0;var $3=HEAP32[$mflags>>2];var $and=$3&0;var $tobool1=($and|0)!=0;if($tobool1){__label__=3;break}else{__label__=8;break}case 3:var $4=$nb_addr;var $5=HEAPU32[(_mparams+12|0)>>2];var $cmp2=$4>>>0>=$5>>>0;if($cmp2){__label__=4;break}else{__label__=8;break}case 4:var $6=$m_addr;var $topsize=$6+12|0;var $7=HEAP32[$topsize>>2];var $cmp4=($7|0)!=0;if($cmp4){__label__=5;break}else{__label__=8;break}case 5:var $8=$m_addr;var $9=$nb_addr;var $call5=_mmap_alloc($8,$9);$mem=$call5;var $10=$mem;var $cmp6=($10|0)!=0;if($cmp6){__label__=6;break}else{__label__=7;break}case 6:var $11=$mem;$retval=$11;__label__=91;break;case 7:__label__=8;break;case 8:var $12=$m_addr;var $mflags9=$12+440|0;var $13=HEAP32[$mflags9>>2];var $and10=$13&4;var $tobool11=($and10|0)!=0;if($tobool11){__label__=41;break}else{__label__=9;break}case 9:$br=-1;var $14=$m_addr;var $top=$14+24|0;var $15=HEAP32[$top>>2];var $cmp13=($15|0)==0;if($cmp13){__label__=10;break}else{__label__=11;break}case 10:var $cond=0;__label__=12;break;case 11:var $16=$m_addr;var $17=$m_addr;var $top14=$17+24|0;var $18=HEAP32[$top14>>2];var $19=$18;var $call15=_segment_holding($16,$19);var $cond=$call15;__label__=12;break;case 12:var $cond;$ss=$cond;$asize=0;var $20=$ss;var $cmp16=($20|0)==0;if($cmp16){__label__=13;break}else{__label__=21;break}case 13:var $call18=_sbrk(0);$base=$call18;var $21=$base;var $cmp19=($21|0)!=-1;if($cmp19){__label__=14;break}else{__label__=20;break}case 14:var $22=$nb_addr;var $add=$22+48|0;var $23=HEAP32[(_mparams+8|0)>>2];var $sub=$23-1|0;var $add21=$add+$sub|0;var $24=HEAP32[(_mparams+8|0)>>2];var $sub22=$24-1|0;var $neg=$sub22^-1;var $and23=$add21&$neg;$asize=$and23;var $25=$base;var $26=$25;var $27=HEAP32[(_mparams+4|0)>>2];var $sub24=$27-1|0;var $and25=$26&$sub24;var $cmp26=($and25|0)==0;if($cmp26){__label__=16;break}else{__label__=15;break}case 15:var $28=$base;var $29=$28;var $30=HEAP32[(_mparams+4|0)>>2];var $sub28=$30-1|0;var $add29=$29+$sub28|0;var $31=HEAP32[(_mparams+4|0)>>2];var $sub30=$31-1|0;var $neg31=$sub30^-1;var $and32=$add29&$neg31;var $32=$base;var $33=$32;var $sub33=$and32-$33|0;var $34=$asize;var $add34=$34+$sub33|0;$asize=$add34;__label__=16;break;case 16:var $35=$asize;var $cmp36=$35>>>0<2147483647;if($cmp36){__label__=17;break}else{__label__=19;break}case 17:var $36=$asize;var $call38=_sbrk($36);$br=$call38;var $37=$base;var $cmp39=($call38|0)==($37|0);if($cmp39){__label__=18;break}else{__label__=19;break}case 18:var $38=$base;$tbase=$38;var $39=$asize;$tsize=$39;__label__=19;break;case 19:__label__=20;break;case 20:__label__=25;break;case 21:var $40=$nb_addr;var $41=$m_addr;var $topsize43=$41+12|0;var $42=HEAP32[$topsize43>>2];var $sub44=$40-$42|0;var $add45=$sub44+48|0;var $43=HEAP32[(_mparams+8|0)>>2];var $sub46=$43-1|0;var $add47=$add45+$sub46|0;var $44=HEAP32[(_mparams+8|0)>>2];var $sub48=$44-1|0;var $neg49=$sub48^-1;var $and50=$add47&$neg49;$asize=$and50;var $45=$asize;var $cmp51=$45>>>0<2147483647;if($cmp51){__label__=22;break}else{__label__=24;break}case 22:var $46=$asize;var $call53=_sbrk($46);$br=$call53;var $47=$ss;var $base54=$47|0;var $48=HEAP32[$base54>>2];var $49=$ss;var $size=$49+4|0;var $50=HEAP32[$size>>2];var $add_ptr=$48+$50|0;var $cmp55=($call53|0)==($add_ptr|0);if($cmp55){__label__=23;break}else{__label__=24;break}case 23:var $51=$br;$tbase=$51;var $52=$asize;$tsize=$52;__label__=24;break;case 24:__label__=25;break;case 25:var $53=$tbase;var $cmp59=($53|0)==-1;if($cmp59){__label__=26;break}else{__label__=40;break}case 26:var $54=$br;var $cmp61=($54|0)!=-1;if($cmp61){__label__=27;break}else{__label__=36;break}case 27:var $55=$asize;var $cmp63=$55>>>0<2147483647;if($cmp63){__label__=28;break}else{__label__=35;break}case 28:var $56=$asize;var $57=$nb_addr;var $add65=$57+48|0;var $cmp66=$56>>>0<$add65>>>0;if($cmp66){__label__=29;break}else{__label__=35;break}case 29:var $58=$nb_addr;var $add68=$58+48|0;var $59=$asize;var $sub69=$add68-$59|0;var $60=HEAP32[(_mparams+8|0)>>2];var $sub70=$60-1|0;var $add71=$sub69+$sub70|0;var $61=HEAP32[(_mparams+8|0)>>2];var $sub72=$61-1|0;var $neg73=$sub72^-1;var $and74=$add71&$neg73;$esize=$and74;var $62=$esize;var $cmp75=$62>>>0<2147483647;if($cmp75){__label__=30;break}else{__label__=34;break}case 30:var $63=$esize;var $call77=_sbrk($63);$end=$call77;var $64=$end;var $cmp78=($64|0)!=-1;if($cmp78){__label__=31;break}else{__label__=32;break}case 31:var $65=$esize;var $66=$asize;var $add80=$66+$65|0;$asize=$add80;__label__=33;break;case 32:var $67=$asize;var $sub82=-$67|0;var $call83=_sbrk($sub82);$br=-1;__label__=33;break;case 33:__label__=34;break;case 34:__label__=35;break;case 35:__label__=36;break;case 36:var $68=$br;var $cmp88=($68|0)!=-1;if($cmp88){__label__=37;break}else{__label__=38;break}case 37:var $69=$br;$tbase=$69;var $70=$asize;$tsize=$70;__label__=39;break;case 38:var $71=$m_addr;var $mflags91=$71+440|0;var $72=HEAP32[$mflags91>>2];var $or=$72|4;HEAP32[$mflags91>>2]=$or;__label__=39;break;case 39:__label__=40;break;case 40:__label__=41;break;case 41:var $73=$tbase;var $cmp95=($73|0)==-1;if($cmp95){__label__=42;break}else{__label__=51;break}case 42:var $74=$nb_addr;var $add98=$74+48|0;var $75=HEAP32[(_mparams+8|0)>>2];var $sub99=$75-1|0;var $add100=$add98+$sub99|0;var $76=HEAP32[(_mparams+8|0)>>2];var $sub101=$76-1|0;var $neg102=$sub101^-1;var $and103=$add100&$neg102;$asize97=$and103;var $77=$asize97;var $cmp104=$77>>>0<2147483647;if($cmp104){__label__=43;break}else{__label__=50;break}case 43:$br106=-1;$end107=-1;var $78=$asize97;var $call108=_sbrk($78);$br106=$call108;var $call109=_sbrk(0);$end107=$call109;var $79=$br106;var $cmp110=($79|0)!=-1;if($cmp110){__label__=44;break}else{__label__=49;break}case 44:var $80=$end107;var $cmp112=($80|0)!=-1;if($cmp112){__label__=45;break}else{__label__=49;break}case 45:var $81=$br106;var $82=$end107;var $cmp114=$81>>>0<$82>>>0;if($cmp114){__label__=46;break}else{__label__=49;break}case 46:var $83=$end107;var $84=$br106;var $sub_ptr_lhs_cast=$83;var $sub_ptr_rhs_cast=$84;var $sub_ptr_sub=$sub_ptr_lhs_cast-$sub_ptr_rhs_cast|0;$ssize=$sub_ptr_sub;var $85=$ssize;var $86=$nb_addr;var $add116=$86+40|0;var $cmp117=$85>>>0>$add116>>>0;if($cmp117){__label__=47;break}else{__label__=48;break}case 47:var $87=$br106;$tbase=$87;var $88=$ssize;$tsize=$88;__label__=48;break;case 48:__label__=49;break;case 49:__label__=50;break;case 50:__label__=51;break;case 51:var $89=$tbase;var $cmp123=($89|0)!=-1;if($cmp123){__label__=52;break}else{__label__=90;break}case 52:var $90=$tsize;var $91=$m_addr;var $footprint=$91+432|0;var $92=HEAP32[$footprint>>2];var $add125=$92+$90|0;HEAP32[$footprint>>2]=$add125;var $93=$m_addr;var $max_footprint=$93+436|0;var $94=HEAPU32[$max_footprint>>2];var $cmp126=$add125>>>0>$94>>>0;if($cmp126){__label__=53;break}else{__label__=54;break}case 53:var $95=$m_addr;var $footprint128=$95+432|0;var $96=HEAP32[$footprint128>>2];var $97=$m_addr;var $max_footprint129=$97+436|0;HEAP32[$max_footprint129>>2]=$96;__label__=54;break;case 54:var $98=$m_addr;var $top131=$98+24|0;var $99=HEAP32[$top131>>2];var $cmp132=($99|0)!=0;if($cmp132){__label__=62;break}else{__label__=55;break}case 55:var $100=$m_addr;var $least_addr=$100+16|0;var $101=HEAP32[$least_addr>>2];var $cmp134=($101|0)==0;if($cmp134){__label__=57;break}else{__label__=56;break}case 56:var $102=$tbase;var $103=$m_addr;var $least_addr135=$103+16|0;var $104=HEAPU32[$least_addr135>>2];var $cmp136=$102>>>0<$104>>>0;if($cmp136){__label__=57;break}else{__label__=58;break}case 57:var $105=$tbase;var $106=$m_addr;var $least_addr138=$106+16|0;HEAP32[$least_addr138>>2]=$105;__label__=58;break;case 58:var $107=$tbase;var $108=$m_addr;var $seg=$108+444|0;var $base140=$seg|0;HEAP32[$base140>>2]=$107;var $109=$tsize;var $110=$m_addr;var $seg141=$110+444|0;var $size142=$seg141+4|0;HEAP32[$size142>>2]=$109;var $111=$mmap_flag;var $112=$m_addr;var $seg143=$112+444|0;var $sflags=$seg143+12|0;HEAP32[$sflags>>2]=$111;var $113=HEAP32[(_mparams|0)>>2];var $114=$m_addr;var $magic=$114+36|0;HEAP32[$magic>>2]=$113;var $115=$m_addr;var $release_checks=$115+32|0;HEAP32[$release_checks>>2]=-1;var $116=$m_addr;_init_bins($116);var $117=$m_addr;var $cmp144=($117|0)==(__gm_|0);if($cmp144){__label__=59;break}else{__label__=60;break}case 59:var $118=$m_addr;var $119=$tbase;var $120=$119;var $121=$tsize;var $sub146=$121-40|0;_init_top($118,$120,$sub146);__label__=61;break;case 60:var $122=$m_addr;var $123=$122;var $add_ptr148=$123-8|0;var $124=$add_ptr148;var $125=$124;var $126=$m_addr;var $127=$126;var $add_ptr149=$127-8|0;var $128=$add_ptr149;var $head=$128+4|0;var $129=HEAP32[$head>>2];var $and150=$129&-8;var $add_ptr151=$125+$and150|0;var $130=$add_ptr151;$mn=$130;var $131=$m_addr;var $132=$mn;var $133=$tbase;var $134=$tsize;var $add_ptr152=$133+$134|0;var $135=$mn;var $136=$135;var $sub_ptr_lhs_cast153=$add_ptr152;var $sub_ptr_rhs_cast154=$136;var $sub_ptr_sub155=$sub_ptr_lhs_cast153-$sub_ptr_rhs_cast154|0;var $sub156=$sub_ptr_sub155-40|0;_init_top($131,$132,$sub156);__label__=61;break;case 61:__label__=87;break;case 62:var $137=$m_addr;var $seg159=$137+444|0;$sp=$seg159;__label__=63;break;case 63:var $138=$sp;var $cmp160=($138|0)!=0;if($cmp160){__label__=64;break}else{var $144=0;__label__=65;break}case 64:var $139=$tbase;var $140=$sp;var $base161=$140|0;var $141=HEAP32[$base161>>2];var $142=$sp;var $size162=$142+4|0;var $143=HEAP32[$size162>>2];var $add_ptr163=$141+$143|0;var $cmp164=($139|0)!=($add_ptr163|0);var $144=$cmp164;__label__=65;break;case 65:var $144;if($144){__label__=66;break}else{__label__=67;break}case 66:var $145=$sp;var $next=$145+8|0;var $146=HEAP32[$next>>2];$sp=$146;__label__=63;break;case 67:var $147=$sp;var $cmp165=($147|0)!=0;if($cmp165){__label__=68;break}else{__label__=73;break}case 68:var $148=$sp;var $sflags167=$148+12|0;var $149=HEAP32[$sflags167>>2];var $and168=$149&8;var $tobool169=($and168|0)!=0;if($tobool169){__label__=73;break}else{__label__=69;break}case 69:var $150=$sp;var $sflags171=$150+12|0;var $151=HEAP32[$sflags171>>2];var $and172=$151&0;var $152=$mmap_flag;var $cmp173=($and172|0)==($152|0);if($cmp173){__label__=70;break}else{__label__=73;break}case 70:var $153=$m_addr;var $top175=$153+24|0;var $154=HEAP32[$top175>>2];var $155=$154;var $156=$sp;var $base176=$156|0;var $157=HEAPU32[$base176>>2];var $cmp177=$155>>>0>=$157>>>0;if($cmp177){__label__=71;break}else{__label__=73;break}case 71:var $158=$m_addr;var $top179=$158+24|0;var $159=HEAP32[$top179>>2];var $160=$159;var $161=$sp;var $base180=$161|0;var $162=HEAP32[$base180>>2];var $163=$sp;var $size181=$163+4|0;var $164=HEAP32[$size181>>2];var $add_ptr182=$162+$164|0;var $cmp183=$160>>>0<$add_ptr182>>>0;if($cmp183){__label__=72;break}else{__label__=73;break}case 72:var $165=$tsize;var $166=$sp;var $size185=$166+4|0;var $167=HEAP32[$size185>>2];var $add186=$167+$165|0;HEAP32[$size185>>2]=$add186;var $168=$m_addr;var $169=$m_addr;var $top187=$169+24|0;var $170=HEAP32[$top187>>2];var $171=$m_addr;var $topsize188=$171+12|0;var $172=HEAP32[$topsize188>>2];var $173=$tsize;var $add189=$172+$173|0;_init_top($168,$170,$add189);__label__=86;break;case 73:var $174=$tbase;var $175=$m_addr;var $least_addr191=$175+16|0;var $176=HEAPU32[$least_addr191>>2];var $cmp192=$174>>>0<$176>>>0;if($cmp192){__label__=74;break}else{__label__=75;break}case 74:var $177=$tbase;var $178=$m_addr;var $least_addr194=$178+16|0;HEAP32[$least_addr194>>2]=$177;__label__=75;break;case 75:var $179=$m_addr;var $seg196=$179+444|0;$sp=$seg196;__label__=76;break;case 76:var $180=$sp;var $cmp198=($180|0)!=0;if($cmp198){__label__=77;break}else{var $185=0;__label__=78;break}case 77:var $181=$sp;var $base200=$181|0;var $182=HEAP32[$base200>>2];var $183=$tbase;var $184=$tsize;var $add_ptr201=$183+$184|0;var $cmp202=($182|0)!=($add_ptr201|0);var $185=$cmp202;__label__=78;break;case 78:var $185;if($185){__label__=79;break}else{__label__=80;break}case 79:var $186=$sp;var $next205=$186+8|0;var $187=HEAP32[$next205>>2];$sp=$187;__label__=76;break;case 80:var $188=$sp;var $cmp207=($188|0)!=0;if($cmp207){__label__=81;break}else{__label__=84;break}case 81:var $189=$sp;var $sflags209=$189+12|0;var $190=HEAP32[$sflags209>>2];var $and210=$190&8;var $tobool211=($and210|0)!=0;if($tobool211){__label__=84;break}else{__label__=82;break}case 82:var $191=$sp;var $sflags213=$191+12|0;var $192=HEAP32[$sflags213>>2];var $and214=$192&0;var $193=$mmap_flag;var $cmp215=($and214|0)==($193|0);if($cmp215){__label__=83;break}else{__label__=84;break}case 83:var $194=$sp;var $base217=$194|0;var $195=HEAP32[$base217>>2];$oldbase=$195;var $196=$tbase;var $197=$sp;var $base218=$197|0;HEAP32[$base218>>2]=$196;var $198=$tsize;var $199=$sp;var $size219=$199+4|0;var $200=HEAP32[$size219>>2];var $add220=$200+$198|0;HEAP32[$size219>>2]=$add220;var $201=$m_addr;var $202=$tbase;var $203=$oldbase;var $204=$nb_addr;var $call221=_prepend_alloc($201,$202,$203,$204);$retval=$call221;__label__=91;break;case 84:var $205=$m_addr;var $206=$tbase;var $207=$tsize;var $208=$mmap_flag;_add_segment($205,$206,$207,$208);__label__=85;break;case 85:__label__=86;break;case 86:__label__=87;break;case 87:var $209=$nb_addr;var $210=$m_addr;var $topsize226=$210+12|0;var $211=HEAPU32[$topsize226>>2];var $cmp227=$209>>>0<$211>>>0;if($cmp227){__label__=88;break}else{__label__=89;break}case 88:var $212=$nb_addr;var $213=$m_addr;var $topsize229=$213+12|0;var $214=HEAP32[$topsize229>>2];var $sub230=$214-$212|0;HEAP32[$topsize229>>2]=$sub230;$rsize=$sub230;var $215=$m_addr;var $top231=$215+24|0;var $216=HEAP32[$top231>>2];$p=$216;var $217=$p;var $218=$217;var $219=$nb_addr;var $add_ptr232=$218+$219|0;var $220=$add_ptr232;var $221=$m_addr;var $top233=$221+24|0;HEAP32[$top233>>2]=$220;$r=$220;var $222=$rsize;var $or234=$222|1;var $223=$r;var $head235=$223+4|0;HEAP32[$head235>>2]=$or234;var $224=$nb_addr;var $or236=$224|1;var $or237=$or236|2;var $225=$p;var $head238=$225+4|0;HEAP32[$head238>>2]=$or237;var $226=$p;var $227=$226;var $add_ptr239=$227+8|0;$retval=$add_ptr239;__label__=91;break;case 89:__label__=90;break;case 90:var $call242=___errno();HEAP32[$call242>>2]=12;$retval=0;__label__=91;break;case 91:var $228=$retval;return $228;default:assert(0,"bad label: "+__label__)}}_sys_alloc["X"]=1;function _free($mem){var __label__;__label__=0;while(1)switch(__label__){case 0:var $mem_addr;var $p;var $psize;var $next;var $prevsize;var $prev;var $F;var $B;var $I;var $TP;var $XP;var $R;var $F60;var $RP;var $CP;var $H;var $C0;var $C1;var $tsize;var $dsize;var $nsize;var $F245;var $B247;var $I249;var $TP285;var $XP286;var $R288;var $F293;var $RP306;var $CP317;var $H343;var $C0385;var $C1386;var $I447;var $B449;var $F452;var $tp;var $H475;var $I476;var $X;var $Y;var $N;var $K;var $T;var $K525;var $C;var $F558;$mem_addr=$mem;var $0=$mem_addr;var $cmp=($0|0)!=0;if($cmp){__label__=1;break}else{__label__=195;break}case 1:var $1=$mem_addr;var $add_ptr=$1-8|0;var $2=$add_ptr;$p=$2;var $3=$p;var $4=$3;var $5=HEAPU32[(__gm_+16|0)>>2];var $cmp1=$4>>>0>=$5>>>0;if($cmp1){__label__=2;break}else{var $8=0;__label__=3;break}case 2:var $6=$p;var $head=$6+4|0;var $7=HEAP32[$head>>2];var $and=$7&3;var $cmp2=($and|0)!=1;var $8=$cmp2;__label__=3;break;case 3:var $8;var $land_ext=$8&1;var $expval=$land_ext==1;var $tobool=($expval|0)!=0;if($tobool){__label__=4;break}else{__label__=192;break}case 4:var $9=$p;var $head4=$9+4|0;var $10=HEAP32[$head4>>2];var $and5=$10&-8;$psize=$and5;var $11=$p;var $12=$11;var $13=$psize;var $add_ptr6=$12+$13|0;var $14=$add_ptr6;$next=$14;var $15=$p;var $head7=$15+4|0;var $16=HEAP32[$head7>>2];var $and8=$16&1;var $tobool9=($and8|0)!=0;if($tobool9){__label__=76;break}else{__label__=5;break}case 5:var $17=$p;var $prev_foot=$17|0;var $18=HEAP32[$prev_foot>>2];$prevsize=$18;var $19=$p;var $head11=$19+4|0;var $20=HEAP32[$head11>>2];var $and12=$20&3;var $cmp13=($and12|0)==0;if($cmp13){__label__=6;break}else{__label__=7;break}case 6:var $21=$prevsize;var $add=$21+16|0;var $22=$psize;var $add15=$22+$add|0;$psize=$add15;__label__=194;break;case 7:var $23=$p;var $24=$23;var $25=$prevsize;var $idx_neg=-$25|0;var $add_ptr16=$24+$idx_neg|0;var $26=$add_ptr16;$prev=$26;var $27=$prevsize;var $28=$psize;var $add17=$28+$27|0;$psize=$add17;var $29=$prev;$p=$29;var $30=$prev;var $31=$30;var $32=HEAPU32[(__gm_+16|0)>>2];var $cmp18=$31>>>0>=$32>>>0;var $conv=$cmp18&1;var $expval19=$conv==1;var $tobool20=($expval19|0)!=0;if($tobool20){__label__=8;break}else{__label__=73;break}case 8:var $33=$p;var $34=HEAP32[(__gm_+20|0)>>2];var $cmp22=($33|0)!=($34|0);if($cmp22){__label__=9;break}else{__label__=69;break}case 9:var $35=$prevsize;var $shr=$35>>>3;var $cmp25=$shr>>>0<32;if($cmp25){__label__=10;break}else{__label__=22;break}case 10:var $36=$p;var $fd=$36+8|0;var $37=HEAP32[$fd>>2];$F=$37;var $38=$p;var $bk=$38+12|0;var $39=HEAP32[$bk>>2];$B=$39;var $40=$prevsize;var $shr28=$40>>>3;$I=$shr28;var $41=$F;var $42=$B;var $cmp29=($41|0)==($42|0);if($cmp29){__label__=11;break}else{__label__=12;break}case 11:var $43=$I;var $shl=1<<$43;var $neg=$shl^-1;var $44=HEAP32[(__gm_|0)>>2];var $and32=$44&$neg;HEAP32[(__gm_|0)>>2]=$and32;__label__=21;break;case 12:var $45=$F;var $46=$I;var $shl34=$46<<1;var $arrayidx=(__gm_+40|0)+($shl34<<2)|0;var $47=$arrayidx;var $48=$47;var $cmp35=($45|0)==($48|0);if($cmp35){__label__=14;break}else{__label__=13;break}case 13:var $49=$F;var $50=$49;var $51=HEAPU32[(__gm_+16|0)>>2];var $cmp37=$50>>>0>=$51>>>0;if($cmp37){__label__=14;break}else{var $60=0;__label__=17;break}case 14:var $52=$B;var $53=$I;var $shl40=$53<<1;var $arrayidx41=(__gm_+40|0)+($shl40<<2)|0;var $54=$arrayidx41;var $55=$54;var $cmp42=($52|0)==($55|0);if($cmp42){var $59=1;__label__=16;break}else{__label__=15;break}case 15:var $56=$B;var $57=$56;var $58=HEAPU32[(__gm_+16|0)>>2];var $cmp44=$57>>>0>=$58>>>0;var $59=$cmp44;__label__=16;break;case 16:var $59;var $60=$59;__label__=17;break;case 17:var $60;var $land_ext47=$60&1;var $expval48=$land_ext47==1;var $tobool49=($expval48|0)!=0;if($tobool49){__label__=18;break}else{__label__=19;break}case 18:var $61=$B;var $62=$F;var $bk51=$62+12|0;HEAP32[$bk51>>2]=$61;var $63=$F;var $64=$B;var $fd52=$64+8|0;HEAP32[$fd52>>2]=$63;__label__=20;break;case 19:_abort();throw"Reached an unreachable!";case 20:__label__=21;break;case 21:__label__=68;break;case 22:var $65=$p;var $66=$65;$TP=$66;var $67=$TP;var $parent=$67+24|0;var $68=HEAP32[$parent>>2];$XP=$68;var $69=$TP;var $bk56=$69+12|0;var $70=HEAP32[$bk56>>2];var $71=$TP;var $cmp57=($70|0)!=($71|0);if($cmp57){__label__=23;break}else{__label__=27;break}case 23:var $72=$TP;var $fd61=$72+8|0;var $73=HEAP32[$fd61>>2];$F60=$73;var $74=$TP;var $bk62=$74+12|0;var $75=HEAP32[$bk62>>2];$R=$75;var $76=$F60;var $77=$76;var $78=HEAPU32[(__gm_+16|0)>>2];var $cmp63=$77>>>0>=$78>>>0;var $conv64=$cmp63&1;var $expval65=$conv64==1;var $tobool66=($expval65|0)!=0;if($tobool66){__label__=24;break}else{__label__=25;break}case 24:var $79=$R;var $80=$F60;var $bk68=$80+12|0;HEAP32[$bk68>>2]=$79;var $81=$F60;var $82=$R;var $fd69=$82+8|0;HEAP32[$fd69>>2]=$81;__label__=26;break;case 25:_abort();throw"Reached an unreachable!";case 26:__label__=39;break;case 27:var $83=$TP;var $child=$83+16|0;var $arrayidx73=$child+4|0;$RP=$arrayidx73;var $84=HEAP32[$arrayidx73>>2];$R=$84;var $cmp74=($84|0)!=0;if($cmp74){__label__=29;break}else{__label__=28;break}case 28:var $85=$TP;var $child77=$85+16|0;var $arrayidx78=$child77|0;$RP=$arrayidx78;var $86=HEAP32[$arrayidx78>>2];$R=$86;var $cmp79=($86|0)!=0;if($cmp79){__label__=29;break}else{__label__=38;break}case 29:__label__=30;break;case 30:var $87=$R;var $child82=$87+16|0;var $arrayidx83=$child82+4|0;$CP=$arrayidx83;var $88=HEAP32[$arrayidx83>>2];var $cmp84=($88|0)!=0;if($cmp84){var $91=1;__label__=32;break}else{__label__=31;break}case 31:var $89=$R;var $child87=$89+16|0;var $arrayidx88=$child87|0;$CP=$arrayidx88;var $90=HEAP32[$arrayidx88>>2];var $cmp89=($90|0)!=0;var $91=$cmp89;__label__=32;break;case 32:var $91;if($91){__label__=33;break}else{__label__=34;break}case 33:var $92=$CP;$RP=$92;var $93=HEAP32[$92>>2];$R=$93;__label__=30;break;case 34:var $94=$RP;var $95=$94;var $96=HEAPU32[(__gm_+16|0)>>2];var $cmp92=$95>>>0>=$96>>>0;var $conv93=$cmp92&1;var $expval94=$conv93==1;var $tobool95=($expval94|0)!=0;if($tobool95){__label__=35;break}else{__label__=36;break}case 35:var $97=$RP;HEAP32[$97>>2]=0;__label__=37;break;case 36:_abort();throw"Reached an unreachable!";case 37:__label__=38;break;case 38:__label__=39;break;case 39:var $98=$XP;var $cmp101=($98|0)!=0;if($cmp101){__label__=40;break}else{__label__=67;break}case 40:var $99=$TP;var $index=$99+28|0;var $100=HEAP32[$index>>2];var $arrayidx104=(__gm_+304|0)+($100<<2)|0;$H=$arrayidx104;var $101=$TP;var $102=$H;var $103=HEAP32[$102>>2];var $cmp105=($101|0)==($103|0);if($cmp105){__label__=41;break}else{__label__=44;break}case 41:var $104=$R;var $105=$H;HEAP32[$105>>2]=$104;var $cmp108=($104|0)==0;if($cmp108){__label__=42;break}else{__label__=43;break}case 42:var $106=$TP;var $index111=$106+28|0;var $107=HEAP32[$index111>>2];var $shl112=1<<$107;var $neg113=$shl112^-1;var $108=HEAP32[(__gm_+4|0)>>2];var $and114=$108&$neg113;HEAP32[(__gm_+4|0)>>2]=$and114;__label__=43;break;case 43:__label__=51;break;case 44:var $109=$XP;var $110=$109;var $111=HEAPU32[(__gm_+16|0)>>2];var $cmp117=$110>>>0>=$111>>>0;var $conv118=$cmp117&1;var $expval119=$conv118==1;var $tobool120=($expval119|0)!=0;if($tobool120){__label__=45;break}else{__label__=49;break}case 45:var $112=$XP;var $child122=$112+16|0;var $arrayidx123=$child122|0;var $113=HEAP32[$arrayidx123>>2];var $114=$TP;var $cmp124=($113|0)==($114|0);if($cmp124){__label__=46;break}else{__label__=47;break}case 46:var $115=$R;var $116=$XP;var $child127=$116+16|0;var $arrayidx128=$child127|0;HEAP32[$arrayidx128>>2]=$115;__label__=48;break;case 47:var $117=$R;var $118=$XP;var $child130=$118+16|0;var $arrayidx131=$child130+4|0;HEAP32[$arrayidx131>>2]=$117;__label__=48;break;case 48:__label__=50;break;case 49:_abort();throw"Reached an unreachable!";case 50:__label__=51;break;case 51:var $119=$R;var $cmp136=($119|0)!=0;if($cmp136){__label__=52;break}else{__label__=66;break}case 52:var $120=$R;var $121=$120;var $122=HEAPU32[(__gm_+16|0)>>2];var $cmp139=$121>>>0>=$122>>>0;var $conv140=$cmp139&1;var $expval141=$conv140==1;var $tobool142=($expval141|0)!=0;if($tobool142){__label__=53;break}else{__label__=64;break}case 53:var $123=$XP;var $124=$R;var $parent144=$124+24|0;HEAP32[$parent144>>2]=$123;var $125=$TP;var $child145=$125+16|0;var $arrayidx146=$child145|0;var $126=HEAP32[$arrayidx146>>2];$C0=$126;var $cmp147=($126|0)!=0;if($cmp147){__label__=54;break}else{__label__=58;break}case 54:var $127=$C0;var $128=$127;var $129=HEAPU32[(__gm_+16|0)>>2];var $cmp150=$128>>>0>=$129>>>0;var $conv151=$cmp150&1;var $expval152=$conv151==1;var $tobool153=($expval152|0)!=0;if($tobool153){__label__=55;break}else{__label__=56;break}case 55:var $130=$C0;var $131=$R;var $child155=$131+16|0;var $arrayidx156=$child155|0;HEAP32[$arrayidx156>>2]=$130;var $132=$R;var $133=$C0;var $parent157=$133+24|0;HEAP32[$parent157>>2]=$132;__label__=57;break;case 56:_abort();throw"Reached an unreachable!";case 57:__label__=58;break;case 58:var $134=$TP;var $child161=$134+16|0;var $arrayidx162=$child161+4|0;var $135=HEAP32[$arrayidx162>>2];$C1=$135;var $cmp163=($135|0)!=0;if($cmp163){__label__=59;break}else{__label__=63;break}case 59:var $136=$C1;var $137=$136;var $138=HEAPU32[(__gm_+16|0)>>2];var $cmp166=$137>>>0>=$138>>>0;var $conv167=$cmp166&1;var $expval168=$conv167==1;var $tobool169=($expval168|0)!=0;if($tobool169){__label__=60;break}else{__label__=61;break}case 60:var $139=$C1;var $140=$R;var $child171=$140+16|0;var $arrayidx172=$child171+4|0;HEAP32[$arrayidx172>>2]=$139;var $141=$R;var $142=$C1;var $parent173=$142+24|0;HEAP32[$parent173>>2]=$141;__label__=62;break;case 61:_abort();throw"Reached an unreachable!";case 62:__label__=63;break;case 63:__label__=65;break;case 64:_abort();throw"Reached an unreachable!";case 65:__label__=66;break;case 66:__label__=67;break;case 67:__label__=68;break;case 68:__label__=72;break;case 69:var $143=$next;var $head183=$143+4|0;var $144=HEAP32[$head183>>2];var $and184=$144&3;var $cmp185=($and184|0)==3;if($cmp185){__label__=70;break}else{__label__=71;break}case 70:var $145=$psize;HEAP32[(__gm_+8|0)>>2]=$145;var $146=$next;var $head188=$146+4|0;var $147=HEAP32[$head188>>2];var $and189=$147&-2;HEAP32[$head188>>2]=$and189;var $148=$psize;var $or=$148|1;var $149=$p;var $head190=$149+4|0;HEAP32[$head190>>2]=$or;var $150=$psize;var $151=$p;var $152=$151;var $153=$psize;var $add_ptr191=$152+$153|0;var $154=$add_ptr191;var $prev_foot192=$154|0;HEAP32[$prev_foot192>>2]=$150;__label__=194;break;case 71:__label__=72;break;case 72:__label__=74;break;case 73:__label__=193;break;case 74:__label__=75;break;case 75:__label__=76;break;case 76:var $155=$p;var $156=$155;var $157=$next;var $158=$157;var $cmp199=$156>>>0<$158>>>0;if($cmp199){__label__=77;break}else{var $161=0;__label__=78;break}case 77:var $159=$next;var $head202=$159+4|0;var $160=HEAP32[$head202>>2];var $and203=$160&1;var $tobool204=($and203|0)!=0;var $161=$tobool204;__label__=78;break;case 78:var $161;var $land_ext206=$161&1;var $expval207=$land_ext206==1;var $tobool208=($expval207|0)!=0;if($tobool208){__label__=79;break}else{__label__=191;break}case 79:var $162=$next;var $head210=$162+4|0;var $163=HEAP32[$head210>>2];var $and211=$163&2;var $tobool212=($and211|0)!=0;if($tobool212){__label__=152;break}else{__label__=80;break}case 80:var $164=$next;var $165=HEAP32[(__gm_+24|0)>>2];var $cmp214=($164|0)==($165|0);if($cmp214){__label__=81;break}else{__label__=86;break}case 81:var $166=$psize;var $167=HEAP32[(__gm_+12|0)>>2];var $add217=$167+$166|0;HEAP32[(__gm_+12|0)>>2]=$add217;$tsize=$add217;var $168=$p;HEAP32[(__gm_+24|0)>>2]=$168;var $169=$tsize;var $or218=$169|1;var $170=$p;var $head219=$170+4|0;HEAP32[$head219>>2]=$or218;var $171=$p;var $172=HEAP32[(__gm_+20|0)>>2];var $cmp220=($171|0)==($172|0);if($cmp220){__label__=82;break}else{__label__=83;break}case 82:HEAP32[(__gm_+20|0)>>2]=0;HEAP32[(__gm_+8|0)>>2]=0;__label__=83;break;case 83:var $173=$tsize;var $174=HEAPU32[(__gm_+28|0)>>2];var $cmp224=$173>>>0>$174>>>0;if($cmp224){__label__=84;break}else{__label__=85;break}case 84:var $call=_sys_trim(__gm_,0);__label__=85;break;case 85:__label__=194;break;case 86:var $175=$next;var $176=HEAP32[(__gm_+20|0)>>2];var $cmp229=($175|0)==($176|0);if($cmp229){__label__=87;break}else{__label__=88;break}case 87:var $177=$psize;var $178=HEAP32[(__gm_+8|0)>>2];var $add232=$178+$177|0;HEAP32[(__gm_+8|0)>>2]=$add232;$dsize=$add232;var $179=$p;HEAP32[(__gm_+20|0)>>2]=$179;var $180=$dsize;var $or233=$180|1;var $181=$p;var $head234=$181+4|0;HEAP32[$head234>>2]=$or233;var $182=$dsize;var $183=$p;var $184=$183;var $185=$dsize;var $add_ptr235=$184+$185|0;var $186=$add_ptr235;var $prev_foot236=$186|0;HEAP32[$prev_foot236>>2]=$182;__label__=194;break;case 88:var $187=$next;var $head238=$187+4|0;var $188=HEAP32[$head238>>2];var $and239=$188&-8;$nsize=$and239;var $189=$nsize;var $190=$psize;var $add240=$190+$189|0;$psize=$add240;var $191=$nsize;var $shr241=$191>>>3;var $cmp242=$shr241>>>0<32;if($cmp242){__label__=89;break}else{__label__=101;break}case 89:var $192=$next;var $fd246=$192+8|0;var $193=HEAP32[$fd246>>2];$F245=$193;var $194=$next;var $bk248=$194+12|0;var $195=HEAP32[$bk248>>2];$B247=$195;var $196=$nsize;var $shr250=$196>>>3;$I249=$shr250;var $197=$F245;var $198=$B247;var $cmp251=($197|0)==($198|0);if($cmp251){__label__=90;break}else{__label__=91;break}case 90:var $199=$I249;var $shl254=1<<$199;var $neg255=$shl254^-1;var $200=HEAP32[(__gm_|0)>>2];var $and256=$200&$neg255;HEAP32[(__gm_|0)>>2]=$and256;__label__=100;break;case 91:var $201=$F245;var $202=$I249;var $shl258=$202<<1;var $arrayidx259=(__gm_+40|0)+($shl258<<2)|0;var $203=$arrayidx259;var $204=$203;var $cmp260=($201|0)==($204|0);if($cmp260){__label__=93;break}else{__label__=92;break}case 92:var $205=$F245;var $206=$205;var $207=HEAPU32[(__gm_+16|0)>>2];var $cmp263=$206>>>0>=$207>>>0;if($cmp263){__label__=93;break}else{var $216=0;__label__=96;break}case 93:var $208=$B247;var $209=$I249;var $shl266=$209<<1;var $arrayidx267=(__gm_+40|0)+($shl266<<2)|0;var $210=$arrayidx267;var $211=$210;var $cmp268=($208|0)==($211|0);if($cmp268){var $215=1;__label__=95;break}else{__label__=94;break}case 94:var $212=$B247;var $213=$212;var $214=HEAPU32[(__gm_+16|0)>>2];var $cmp271=$213>>>0>=$214>>>0;var $215=$cmp271;__label__=95;break;case 95:var $215;var $216=$215;__label__=96;break;case 96:var $216;var $land_ext275=$216&1;var $expval276=$land_ext275==1;var $tobool277=($expval276|0)!=0;if($tobool277){__label__=97;break}else{__label__=98;break}case 97:var $217=$B247;var $218=$F245;var $bk279=$218+12|0;HEAP32[$bk279>>2]=$217;var $219=$F245;var $220=$B247;var $fd280=$220+8|0;HEAP32[$fd280>>2]=$219;__label__=99;break;case 98:_abort();throw"Reached an unreachable!";case 99:__label__=100;break;case 100:__label__=147;break;case 101:var $221=$next;var $222=$221;$TP285=$222;var $223=$TP285;var $parent287=$223+24|0;var $224=HEAP32[$parent287>>2];$XP286=$224;var $225=$TP285;var $bk289=$225+12|0;var $226=HEAP32[$bk289>>2];var $227=$TP285;var $cmp290=($226|0)!=($227|0);if($cmp290){__label__=102;break}else{__label__=106;break}case 102:var $228=$TP285;var $fd294=$228+8|0;var $229=HEAP32[$fd294>>2];$F293=$229;var $230=$TP285;var $bk295=$230+12|0;var $231=HEAP32[$bk295>>2];$R288=$231;var $232=$F293;var $233=$232;var $234=HEAPU32[(__gm_+16|0)>>2];var $cmp296=$233>>>0>=$234>>>0;var $conv297=$cmp296&1;var $expval298=$conv297==1;var $tobool299=($expval298|0)!=0;if($tobool299){__label__=103;break}else{__label__=104;break}case 103:var $235=$R288;var $236=$F293;var $bk301=$236+12|0;HEAP32[$bk301>>2]=$235;var $237=$F293;var $238=$R288;var $fd302=$238+8|0;HEAP32[$fd302>>2]=$237;__label__=105;break;case 104:_abort();throw"Reached an unreachable!";case 105:__label__=118;break;case 106:var $239=$TP285;var $child307=$239+16|0;var $arrayidx308=$child307+4|0;$RP306=$arrayidx308;var $240=HEAP32[$arrayidx308>>2];$R288=$240;var $cmp309=($240|0)!=0;if($cmp309){__label__=108;break}else{__label__=107;break}case 107:var $241=$TP285;var $child312=$241+16|0;var $arrayidx313=$child312|0;$RP306=$arrayidx313;var $242=HEAP32[$arrayidx313>>2];$R288=$242;var $cmp314=($242|0)!=0;if($cmp314){__label__=108;break}else{__label__=117;break}case 108:__label__=109;break;case 109:var $243=$R288;var $child319=$243+16|0;var $arrayidx320=$child319+4|0;$CP317=$arrayidx320;var $244=HEAP32[$arrayidx320>>2];var $cmp321=($244|0)!=0;if($cmp321){var $247=1;__label__=111;break}else{__label__=110;break}case 110:var $245=$R288;var $child324=$245+16|0;var $arrayidx325=$child324|0;$CP317=$arrayidx325;var $246=HEAP32[$arrayidx325>>2];var $cmp326=($246|0)!=0;var $247=$cmp326;__label__=111;break;case 111:var $247;if($247){__label__=112;break}else{__label__=113;break}case 112:var $248=$CP317;$RP306=$248;var $249=HEAP32[$248>>2];$R288=$249;__label__=109;break;case 113:var $250=$RP306;var $251=$250;var $252=HEAPU32[(__gm_+16|0)>>2];var $cmp331=$251>>>0>=$252>>>0;var $conv332=$cmp331&1;var $expval333=$conv332==1;var $tobool334=($expval333|0)!=0;if($tobool334){__label__=114;break}else{__label__=115;break}case 114:var $253=$RP306;HEAP32[$253>>2]=0;__label__=116;break;case 115:_abort();throw"Reached an unreachable!";case 116:__label__=117;break;case 117:__label__=118;break;case 118:var $254=$XP286;var $cmp340=($254|0)!=0;if($cmp340){__label__=119;break}else{__label__=146;break}case 119:var $255=$TP285;var $index344=$255+28|0;var $256=HEAP32[$index344>>2];var $arrayidx345=(__gm_+304|0)+($256<<2)|0;$H343=$arrayidx345;var $257=$TP285;var $258=$H343;var $259=HEAP32[$258>>2];var $cmp346=($257|0)==($259|0);if($cmp346){__label__=120;break}else{__label__=123;break}case 120:var $260=$R288;var $261=$H343;HEAP32[$261>>2]=$260;var $cmp349=($260|0)==0;if($cmp349){__label__=121;break}else{__label__=122;break}case 121:var $262=$TP285;var $index352=$262+28|0;var $263=HEAP32[$index352>>2];var $shl353=1<<$263;var $neg354=$shl353^-1;var $264=HEAP32[(__gm_+4|0)>>2];var $and355=$264&$neg354;HEAP32[(__gm_+4|0)>>2]=$and355;__label__=122;break;case 122:__label__=130;break;case 123:var $265=$XP286;var $266=$265;var $267=HEAPU32[(__gm_+16|0)>>2];var $cmp358=$266>>>0>=$267>>>0;var $conv359=$cmp358&1;var $expval360=$conv359==1;var $tobool361=($expval360|0)!=0;if($tobool361){__label__=124;break}else{__label__=128;break}case 124:var $268=$XP286;var $child363=$268+16|0;var $arrayidx364=$child363|0;var $269=HEAP32[$arrayidx364>>2];var $270=$TP285;var $cmp365=($269|0)==($270|0);if($cmp365){__label__=125;break}else{__label__=126;break}case 125:var $271=$R288;var $272=$XP286;var $child368=$272+16|0;var $arrayidx369=$child368|0;HEAP32[$arrayidx369>>2]=$271;__label__=127;break;case 126:var $273=$R288;var $274=$XP286;var $child371=$274+16|0;var $arrayidx372=$child371+4|0;HEAP32[$arrayidx372>>2]=$273;__label__=127;break;case 127:__label__=129;break;case 128:_abort();throw"Reached an unreachable!";case 129:__label__=130;break;case 130:var $275=$R288;var $cmp377=($275|0)!=0;if($cmp377){__label__=131;break}else{__label__=145;break}case 131:var $276=$R288;var $277=$276;var $278=HEAPU32[(__gm_+16|0)>>2];var $cmp380=$277>>>0>=$278>>>0;var $conv381=$cmp380&1;var $expval382=$conv381==1;var $tobool383=($expval382|0)!=0;if($tobool383){__label__=132;break}else{__label__=143;break}case 132:var $279=$XP286;var $280=$R288;var $parent387=$280+24|0;HEAP32[$parent387>>2]=$279;var $281=$TP285;var $child388=$281+16|0;var $arrayidx389=$child388|0;var $282=HEAP32[$arrayidx389>>2];$C0385=$282;var $cmp390=($282|0)!=0;if($cmp390){__label__=133;break}else{__label__=137;break}case 133:var $283=$C0385;var $284=$283;var $285=HEAPU32[(__gm_+16|0)>>2];var $cmp393=$284>>>0>=$285>>>0;var $conv394=$cmp393&1;var $expval395=$conv394==1;var $tobool396=($expval395|0)!=0;if($tobool396){__label__=134;break}else{__label__=135;break}case 134:var $286=$C0385;var $287=$R288;var $child398=$287+16|0;var $arrayidx399=$child398|0;HEAP32[$arrayidx399>>2]=$286;var $288=$R288;var $289=$C0385;var $parent400=$289+24|0;HEAP32[$parent400>>2]=$288;__label__=136;break;case 135:_abort();throw"Reached an unreachable!";case 136:__label__=137;break;case 137:var $290=$TP285;var $child404=$290+16|0;var $arrayidx405=$child404+4|0;var $291=HEAP32[$arrayidx405>>2];$C1386=$291;var $cmp406=($291|0)!=0;if($cmp406){__label__=138;break}else{__label__=142;break}case 138:var $292=$C1386;var $293=$292;var $294=HEAPU32[(__gm_+16|0)>>2];var $cmp409=$293>>>0>=$294>>>0;var $conv410=$cmp409&1;var $expval411=$conv410==1;var $tobool412=($expval411|0)!=0;if($tobool412){__label__=139;break}else{__label__=140;break}case 139:var $295=$C1386;var $296=$R288;var $child414=$296+16|0;var $arrayidx415=$child414+4|0;HEAP32[$arrayidx415>>2]=$295;var $297=$R288;var $298=$C1386;var $parent416=$298+24|0;HEAP32[$parent416>>2]=$297;__label__=141;break;case 140:_abort();throw"Reached an unreachable!";case 141:__label__=142;break;case 142:__label__=144;break;case 143:_abort();throw"Reached an unreachable!";case 144:__label__=145;break;case 145:__label__=146;break;case 146:__label__=147;break;case 147:var $299=$psize;var $or425=$299|1;var $300=$p;var $head426=$300+4|0;HEAP32[$head426>>2]=$or425;var $301=$psize;var $302=$p;var $303=$302;var $304=$psize;var $add_ptr427=$303+$304|0;var $305=$add_ptr427;var $prev_foot428=$305|0;HEAP32[$prev_foot428>>2]=$301;var $306=$p;var $307=HEAP32[(__gm_+20|0)>>2];var $cmp429=($306|0)==($307|0);if($cmp429){__label__=148;break}else{__label__=149;break}case 148:var $308=$psize;HEAP32[(__gm_+8|0)>>2]=$308;__label__=194;break;case 149:__label__=150;break;case 150:__label__=151;break;case 151:__label__=153;break;case 152:var $309=$next;var $head436=$309+4|0;var $310=HEAP32[$head436>>2];var $and437=$310&-2;HEAP32[$head436>>2]=$and437;var $311=$psize;var $or438=$311|1;var $312=$p;var $head439=$312+4|0;HEAP32[$head439>>2]=$or438;var $313=$psize;var $314=$p;var $315=$314;var $316=$psize;var $add_ptr440=$315+$316|0;var $317=$add_ptr440;var $prev_foot441=$317|0;HEAP32[$prev_foot441>>2]=$313;__label__=153;break;case 153:var $318=$psize;var $shr443=$318>>>3;var $cmp444=$shr443>>>0<32;if($cmp444){__label__=154;break}else{__label__=161;break}case 154:var $319=$psize;var $shr448=$319>>>3;$I447=$shr448;var $320=$I447;var $shl450=$320<<1;var $arrayidx451=(__gm_+40|0)+($shl450<<2)|0;var $321=$arrayidx451;var $322=$321;$B449=$322;var $323=$B449;$F452=$323;var $324=HEAP32[(__gm_|0)>>2];var $325=$I447;var $shl453=1<<$325;var $and454=$324&$shl453;var $tobool455=($and454|0)!=0;if($tobool455){__label__=156;break}else{__label__=155;break}case 155:var $326=$I447;var $shl457=1<<$326;var $327=HEAP32[(__gm_|0)>>2];var $or458=$327|$shl457;HEAP32[(__gm_|0)>>2]=$or458;__label__=160;break;case 156:var $328=$B449;var $fd460=$328+8|0;var $329=HEAP32[$fd460>>2];var $330=$329;var $331=HEAPU32[(__gm_+16|0)>>2];var $cmp461=$330>>>0>=$331>>>0;var $conv462=$cmp461&1;var $expval463=$conv462==1;var $tobool464=($expval463|0)!=0;if($tobool464){__label__=157;break}else{__label__=158;break}case 157:var $332=$B449;var $fd466=$332+8|0;var $333=HEAP32[$fd466>>2];$F452=$333;__label__=159;break;case 158:_abort();throw"Reached an unreachable!";case 159:__label__=160;break;case 160:var $334=$p;var $335=$B449;var $fd470=$335+8|0;HEAP32[$fd470>>2]=$334;var $336=$p;var $337=$F452;var $bk471=$337+12|0;HEAP32[$bk471>>2]=$336;var $338=$F452;var $339=$p;var $fd472=$339+8|0;HEAP32[$fd472>>2]=$338;var $340=$B449;var $341=$p;var $bk473=$341+12|0;HEAP32[$bk473>>2]=$340;__label__=190;break;case 161:var $342=$p;var $343=$342;$tp=$343;var $344=$psize;var $shr477=$344>>>8;$X=$shr477;var $345=$X;var $cmp478=($345|0)==0;if($cmp478){__label__=162;break}else{__label__=163;break}case 162:$I476=0;__label__=167;break;case 163:var $346=$X;var $cmp482=$346>>>0>65535;if($cmp482){__label__=164;break}else{__label__=165;break}case 164:$I476=31;__label__=166;break;case 165:var $347=$X;$Y=$347;var $348=$Y;var $sub=$348-256|0;var $shr486=$sub>>>16;var $and487=$shr486&8;$N=$and487;var $349=$N;var $350=$Y;var $shl488=$350<<$349;$Y=$shl488;var $sub489=$shl488-4096|0;var $shr490=$sub489>>>16;var $and491=$shr490&4;$K=$and491;var $351=$K;var $352=$N;var $add492=$352+$351|0;$N=$add492;var $353=$K;var $354=$Y;var $shl493=$354<<$353;$Y=$shl493;var $sub494=$shl493-16384|0;var $shr495=$sub494>>>16;var $and496=$shr495&2;$K=$and496;var $355=$N;var $add497=$355+$and496|0;$N=$add497;var $356=$N;var $sub498=14-$356|0;var $357=$K;var $358=$Y;var $shl499=$358<<$357;$Y=$shl499;var $shr500=$shl499>>>15;var $add501=$sub498+$shr500|0;$K=$add501;var $359=$K;var $shl502=$359<<1;var $360=$psize;var $361=$K;var $add503=$361+7|0;var $shr504=$360>>>($add503>>>0);var $and505=$shr504&1;var $add506=$shl502+$and505|0;$I476=$add506;__label__=166;break;case 166:__label__=167;break;case 167:var $362=$I476;var $arrayidx509=(__gm_+304|0)+($362<<2)|0;$H475=$arrayidx509;var $363=$I476;var $364=$tp;var $index510=$364+28|0;HEAP32[$index510>>2]=$363;var $365=$tp;var $child511=$365+16|0;var $arrayidx512=$child511+4|0;HEAP32[$arrayidx512>>2]=0;var $366=$tp;var $child513=$366+16|0;var $arrayidx514=$child513|0;HEAP32[$arrayidx514>>2]=0;var $367=HEAP32[(__gm_+4|0)>>2];var $368=$I476;var $shl515=1<<$368;var $and516=$367&$shl515;var $tobool517=($and516|0)!=0;if($tobool517){__label__=169;break}else{__label__=168;break}case 168:var $369=$I476;var $shl519=1<<$369;var $370=HEAP32[(__gm_+4|0)>>2];var $or520=$370|$shl519;HEAP32[(__gm_+4|0)>>2]=$or520;var $371=$tp;var $372=$H475;HEAP32[$372>>2]=$371;var $373=$H475;var $374=$373;var $375=$tp;var $parent521=$375+24|0;HEAP32[$parent521>>2]=$374;var $376=$tp;var $377=$tp;var $bk522=$377+12|0;HEAP32[$bk522>>2]=$376;var $378=$tp;var $fd523=$378+8|0;HEAP32[$fd523>>2]=$376;__label__=187;break;case 169:var $379=$H475;var $380=HEAP32[$379>>2];$T=$380;var $381=$psize;var $382=$I476;var $cmp526=($382|0)==31;if($cmp526){__label__=170;break}else{__label__=171;break}case 170:var $cond=0;__label__=172;break;case 171:var $383=$I476;var $shr528=$383>>>1;var $add529=$shr528+8|0;var $sub530=$add529-2|0;var $sub531=31-$sub530|0;var $cond=$sub531;__label__=172;break;case 172:var $cond;var $shl532=$381<<$cond;$K525=$shl532;__label__=173;break;case 173:var $384=$T;var $head533=$384+4|0;var $385=HEAP32[$head533>>2];var $and534=$385&-8;var $386=$psize;var $cmp535=($and534|0)!=($386|0);if($cmp535){__label__=174;break}else{__label__=180;break}case 174:var $387=$K525;var $shr538=$387>>>31;var $and539=$shr538&1;var $388=$T;var $child540=$388+16|0;var $arrayidx541=$child540+($and539<<2)|0;$C=$arrayidx541;var $389=$K525;var $shl542=$389<<1;$K525=$shl542;var $390=$C;var $391=HEAP32[$390>>2];var $cmp543=($391|0)!=0;if($cmp543){__label__=175;break}else{__label__=176;break}case 175:var $392=$C;var $393=HEAP32[$392>>2];$T=$393;__label__=179;break;case 176:var $394=$C;var $395=$394;var $396=HEAPU32[(__gm_+16|0)>>2];var $cmp547=$395>>>0>=$396>>>0;var $conv548=$cmp547&1;var $expval549=$conv548==1;var $tobool550=($expval549|0)!=0;if($tobool550){__label__=177;break}else{__label__=178;break}case 177:var $397=$tp;var $398=$C;HEAP32[$398>>2]=$397;var $399=$T;var $400=$tp;var $parent552=$400+24|0;HEAP32[$parent552>>2]=$399;var $401=$tp;var $402=$tp;var $bk553=$402+12|0;HEAP32[$bk553>>2]=$401;var $403=$tp;var $fd554=$403+8|0;HEAP32[$fd554>>2]=$401;__label__=186;break;case 178:_abort();throw"Reached an unreachable!";case 179:__label__=185;break;case 180:var $404=$T;var $fd559=$404+8|0;var $405=HEAP32[$fd559>>2];$F558=$405;var $406=$T;var $407=$406;var $408=HEAPU32[(__gm_+16|0)>>2];var $cmp560=$407>>>0>=$408>>>0;if($cmp560){__label__=181;break}else{var $412=0;__label__=182;break}case 181:var $409=$F558;var $410=$409;var $411=HEAPU32[(__gm_+16|0)>>2];var $cmp563=$410>>>0>=$411>>>0;var $412=$cmp563;__label__=182;break;case 182:var $412;var $land_ext566=$412&1;var $expval567=$land_ext566==1;var $tobool568=($expval567|0)!=0;if($tobool568){__label__=183;break}else{__label__=184;break}case 183:var $413=$tp;var $414=$F558;var $bk570=$414+12|0;HEAP32[$bk570>>2]=$413;var $415=$T;var $fd571=$415+8|0;HEAP32[$fd571>>2]=$413;var $416=$F558;var $417=$tp;var $fd572=$417+8|0;HEAP32[$fd572>>2]=$416;var $418=$T;var $419=$tp;var $bk573=$419+12|0;HEAP32[$bk573>>2]=$418;var $420=$tp;var $parent574=$420+24|0;HEAP32[$parent574>>2]=0;__label__=186;break;case 184:_abort();throw"Reached an unreachable!";case 185:__label__=173;break;case 186:__label__=187;break;case 187:var $421=HEAP32[(__gm_+32|0)>>2];var $dec=$421-1|0;HEAP32[(__gm_+32|0)>>2]=$dec;var $cmp578=($dec|0)==0;if($cmp578){__label__=188;break}else{__label__=189;break}case 188:var $call581=_release_unused_segments(__gm_);__label__=189;break;case 189:__label__=190;break;case 190:__label__=194;break;case 191:__label__=192;break;case 192:__label__=193;break;case 193:_abort();throw"Reached an unreachable!";case 194:__label__=195;break;case 195:;return;default:assert(0,"bad label: "+__label__)}}_free["X"]=1;function _sys_trim($m,$pad){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $pad_addr;var $released;var $unit;var $extra;var $sp;var $old_br;var $rel_br;var $new_br;$m_addr=$m;$pad_addr=$pad;$released=0;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=$pad_addr;var $cmp1=$2>>>0<4294967232;if($cmp1){__label__=3;break}else{__label__=24;break}case 3:var $3=$m_addr;var $top=$3+24|0;var $4=HEAP32[$top>>2];var $cmp2=($4|0)!=0;if($cmp2){__label__=4;break}else{__label__=24;break}case 4:var $5=$pad_addr;var $add=$5+40|0;$pad_addr=$add;var $6=$m_addr;var $topsize=$6+12|0;var $7=HEAPU32[$topsize>>2];var $8=$pad_addr;var $cmp3=$7>>>0>$8>>>0;if($cmp3){__label__=5;break}else{__label__=20;break}case 5:var $9=HEAP32[(_mparams+8|0)>>2];$unit=$9;var $10=$m_addr;var $topsize5=$10+12|0;var $11=HEAP32[$topsize5>>2];var $12=$pad_addr;var $sub=$11-$12|0;var $13=$unit;var $sub6=$13-1|0;var $add7=$sub+$sub6|0;var $14=$unit;var $div=Math.floor(($add7>>>0)/($14>>>0));var $sub8=$div-1|0;var $15=$unit;var $mul=$sub8*$15|0;$extra=$mul;var $16=$m_addr;var $17=$m_addr;var $top9=$17+24|0;var $18=HEAP32[$top9>>2];var $19=$18;var $call10=_segment_holding($16,$19);$sp=$call10;var $20=$sp;var $sflags=$20+12|0;var $21=HEAP32[$sflags>>2];var $and=$21&8;var $tobool11=($and|0)!=0;if($tobool11){__label__=17;break}else{__label__=6;break}case 6:var $22=$sp;var $sflags13=$22+12|0;var $23=HEAP32[$sflags13>>2];var $and14=$23&0;var $tobool15=($and14|0)!=0;if($tobool15){__label__=7;break}else{__label__=8;break}case 7:__label__=16;break;case 8:var $24=$extra;var $cmp17=$24>>>0>=2147483647;if($cmp17){__label__=9;break}else{__label__=10;break}case 9:var $25=$unit;var $sub19=-2147483648-$25|0;$extra=$sub19;__label__=10;break;case 10:var $call20=_sbrk(0);$old_br=$call20;var $26=$old_br;var $27=$sp;var $base=$27|0;var $28=HEAP32[$base>>2];var $29=$sp;var $size=$29+4|0;var $30=HEAP32[$size>>2];var $add_ptr=$28+$30|0;var $cmp21=($26|0)==($add_ptr|0);if($cmp21){__label__=11;break}else{__label__=15;break}case 11:var $31=$extra;var $sub23=-$31|0;var $call24=_sbrk($sub23);$rel_br=$call24;var $call25=_sbrk(0);$new_br=$call25;var $32=$rel_br;var $cmp26=($32|0)!=-1;if($cmp26){__label__=12;break}else{__label__=14;break}case 12:var $33=$new_br;var $34=$old_br;var $cmp28=$33>>>0<$34>>>0;if($cmp28){__label__=13;break}else{__label__=14;break}case 13:var $35=$old_br;var $36=$new_br;var $sub_ptr_lhs_cast=$35;var $sub_ptr_rhs_cast=$36;var $sub_ptr_sub=$sub_ptr_lhs_cast-$sub_ptr_rhs_cast|0;$released=$sub_ptr_sub;__label__=14;break;case 14:__label__=15;break;case 15:__label__=16;break;case 16:__label__=17;break;case 17:var $37=$released;var $cmp34=($37|0)!=0;if($cmp34){__label__=18;break}else{__label__=19;break}case 18:var $38=$released;var $39=$sp;var $size36=$39+4|0;var $40=HEAP32[$size36>>2];var $sub37=$40-$38|0;HEAP32[$size36>>2]=$sub37;var $41=$released;var $42=$m_addr;var $footprint=$42+432|0;var $43=HEAP32[$footprint>>2];var $sub38=$43-$41|0;HEAP32[$footprint>>2]=$sub38;var $44=$m_addr;var $45=$m_addr;var $top39=$45+24|0;var $46=HEAP32[$top39>>2];var $47=$m_addr;var $topsize40=$47+12|0;var $48=HEAP32[$topsize40>>2];var $49=$released;var $sub41=$48-$49|0;_init_top($44,$46,$sub41);__label__=19;break;case 19:__label__=20;break;case 20:var $50=$released;var $cmp44=($50|0)==0;if($cmp44){__label__=21;break}else{__label__=23;break}case 21:var $51=$m_addr;var $topsize46=$51+12|0;var $52=HEAPU32[$topsize46>>2];var $53=$m_addr;var $trim_check=$53+28|0;var $54=HEAPU32[$trim_check>>2];var $cmp47=$52>>>0>$54>>>0;if($cmp47){__label__=22;break}else{__label__=23;break}case 22:var $55=$m_addr;var $trim_check49=$55+28|0;HEAP32[$trim_check49>>2]=-1;__label__=23;break;case 23:__label__=24;break;case 24:var $56=$released;var $cmp52=($56|0)!=0;var $cond=$cmp52?1:0;return $cond;default:assert(0,"bad label: "+__label__)}}_sys_trim["X"]=1;function _calloc($n_elements,$elem_size){var __label__;__label__=0;while(1)switch(__label__){case 0:var $n_elements_addr;var $elem_size_addr;var $mem;var $req;$n_elements_addr=$n_elements;$elem_size_addr=$elem_size;$req=0;var $0=$n_elements_addr;var $cmp=($0|0)!=0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $1=$n_elements_addr;var $2=$elem_size_addr;var $mul=$1*$2|0;$req=$mul;var $3=$n_elements_addr;var $4=$elem_size_addr;var $or=$3|$4;var $and=$or&-65536;var $tobool=($and|0)!=0;if($tobool){__label__=2;break}else{__label__=4;break}case 2:var $5=$req;var $6=$n_elements_addr;var $div=Math.floor(($5>>>0)/($6>>>0));var $7=$elem_size_addr;var $cmp1=($div|0)!=($7|0);if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$req=-1;__label__=4;break;case 4:__label__=5;break;case 5:var $8=$req;var $call=_malloc($8);$mem=$call;var $9=$mem;var $cmp4=($9|0)!=0;if($cmp4){__label__=6;break}else{__label__=8;break}case 6:var $10=$mem;var $add_ptr=$10-8|0;var $11=$add_ptr;var $head=$11+4|0;var $12=HEAP32[$head>>2];var $and6=$12&3;var $cmp7=($and6|0)==0;if($cmp7){__label__=8;break}else{__label__=7;break}case 7:var $13=$mem;var $14=$req;_memset($13,0,$14,1);__label__=8;break;case 8:var $15=$mem;return $15;default:assert(0,"bad label: "+__label__)}}function _realloc($oldmem,$bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $oldmem_addr;var $bytes_addr;var $m;$oldmem_addr=$oldmem;$bytes_addr=$bytes;var $0=$oldmem_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$bytes_addr;var $call=_malloc($1);$retval=$call;__label__=3;break;case 2:$m=__gm_;var $2=$m;var $3=$oldmem_addr;var $4=$bytes_addr;var $call1=_internal_realloc($2,$3,$4);$retval=$call1;__label__=3;break;case 3:var $5=$retval;return $5;default:assert(0,"bad label: "+__label__)}}function _release_unused_segments($m){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $released;var $nsegs;var $pred;var $sp;var $base;var $size;var $next3;var $p;var $psize;var $tp;var $XP;var $R;var $F;var $RP;var $CP;var $H;var $C0;var $C1;var $H147;var $I;var $X;var $Y;var $N;var $K;var $T;var $K197;var $C;var $F235;$m_addr=$m;$released=0;$nsegs=0;var $0=$m_addr;var $seg=$0+444|0;$pred=$seg;var $1=$pred;var $next=$1+8|0;var $2=HEAP32[$next>>2];$sp=$2;__label__=1;break;case 1:var $3=$sp;var $cmp=($3|0)!=0;if($cmp){__label__=2;break}else{__label__=86;break}case 2:var $4=$sp;var $base1=$4|0;var $5=HEAP32[$base1>>2];$base=$5;var $6=$sp;var $size2=$6+4|0;var $7=HEAP32[$size2>>2];$size=$7;var $8=$sp;var $next4=$8+8|0;var $9=HEAP32[$next4>>2];$next3=$9;var $10=$nsegs;var $inc=$10+1|0;$nsegs=$inc;var $11=$sp;var $sflags=$11+12|0;var $12=HEAP32[$sflags>>2];var $and=$12&0;var $tobool=($and|0)!=0;if($tobool){__label__=3;break}else{__label__=85;break}case 3:var $13=$sp;var $sflags5=$13+12|0;var $14=HEAP32[$sflags5>>2];var $and6=$14&8;var $tobool7=($and6|0)!=0;if($tobool7){__label__=85;break}else{__label__=4;break}case 4:var $15=$base;var $16=$base;var $add_ptr=$16+8|0;var $17=$add_ptr;var $and8=$17&7;var $cmp9=($and8|0)==0;if($cmp9){__label__=5;break}else{__label__=6;break}case 5:var $cond=0;__label__=7;break;case 6:var $18=$base;var $add_ptr10=$18+8|0;var $19=$add_ptr10;var $and11=$19&7;var $sub=8-$and11|0;var $and12=$sub&7;var $cond=$and12;__label__=7;break;case 7:var $cond;var $add_ptr13=$15+$cond|0;var $20=$add_ptr13;$p=$20;var $21=$p;var $head=$21+4|0;var $22=HEAP32[$head>>2];var $and14=$22&-8;$psize=$and14;var $23=$p;var $head15=$23+4|0;var $24=HEAP32[$head15>>2];var $and16=$24&3;var $cmp17=($and16|0)!=1;if($cmp17){__label__=84;break}else{__label__=8;break}case 8:var $25=$p;var $26=$25;var $27=$psize;var $add_ptr19=$26+$27|0;var $28=$base;var $29=$size;var $add_ptr20=$28+$29|0;var $add_ptr21=$add_ptr20-40|0;var $cmp22=$add_ptr19>>>0>=$add_ptr21>>>0;if($cmp22){__label__=9;break}else{__label__=84;break}case 9:var $30=$p;var $31=$30;$tp=$31;var $32=$p;var $33=$m_addr;var $dv=$33+20|0;var $34=HEAP32[$dv>>2];var $cmp24=($32|0)==($34|0);if($cmp24){__label__=10;break}else{__label__=11;break}case 10:var $35=$m_addr;var $dv26=$35+20|0;HEAP32[$dv26>>2]=0;var $36=$m_addr;var $dvsize=$36+8|0;HEAP32[$dvsize>>2]=0;__label__=57;break;case 11:var $37=$tp;var $parent=$37+24|0;var $38=HEAP32[$parent>>2];$XP=$38;var $39=$tp;var $bk=$39+12|0;var $40=HEAP32[$bk>>2];var $41=$tp;var $cmp27=($40|0)!=($41|0);if($cmp27){__label__=12;break}else{__label__=16;break}case 12:var $42=$tp;var $fd=$42+8|0;var $43=HEAP32[$fd>>2];$F=$43;var $44=$tp;var $bk29=$44+12|0;var $45=HEAP32[$bk29>>2];$R=$45;var $46=$F;var $47=$46;var $48=$m_addr;var $least_addr=$48+16|0;var $49=HEAPU32[$least_addr>>2];var $cmp30=$47>>>0>=$49>>>0;var $conv=$cmp30&1;var $expval=$conv==1;var $tobool31=($expval|0)!=0;if($tobool31){__label__=13;break}else{__label__=14;break}case 13:var $50=$R;var $51=$F;var $bk33=$51+12|0;HEAP32[$bk33>>2]=$50;var $52=$F;var $53=$R;var $fd34=$53+8|0;HEAP32[$fd34>>2]=$52;__label__=15;break;case 14:_abort();throw"Reached an unreachable!";case 15:__label__=28;break;case 16:var $54=$tp;var $child=$54+16|0;var $arrayidx=$child+4|0;$RP=$arrayidx;var $55=HEAP32[$arrayidx>>2];$R=$55;var $cmp37=($55|0)!=0;if($cmp37){__label__=18;break}else{__label__=17;break}case 17:var $56=$tp;var $child39=$56+16|0;var $arrayidx40=$child39|0;$RP=$arrayidx40;var $57=HEAP32[$arrayidx40>>2];$R=$57;var $cmp41=($57|0)!=0;if($cmp41){__label__=18;break}else{__label__=27;break}case 18:__label__=19;break;case 19:var $58=$R;var $child45=$58+16|0;var $arrayidx46=$child45+4|0;$CP=$arrayidx46;var $59=HEAP32[$arrayidx46>>2];var $cmp47=($59|0)!=0;if($cmp47){var $62=1;__label__=21;break}else{__label__=20;break}case 20:var $60=$R;var $child49=$60+16|0;var $arrayidx50=$child49|0;$CP=$arrayidx50;var $61=HEAP32[$arrayidx50>>2];var $cmp51=($61|0)!=0;var $62=$cmp51;__label__=21;break;case 21:var $62;if($62){__label__=22;break}else{__label__=23;break}case 22:var $63=$CP;$RP=$63;var $64=HEAP32[$63>>2];$R=$64;__label__=19;break;case 23:var $65=$RP;var $66=$65;var $67=$m_addr;var $least_addr54=$67+16|0;var $68=HEAPU32[$least_addr54>>2];var $cmp55=$66>>>0>=$68>>>0;var $conv56=$cmp55&1;var $expval57=$conv56==1;var $tobool58=($expval57|0)!=0;if($tobool58){__label__=24;break}else{__label__=25;break}case 24:var $69=$RP;HEAP32[$69>>2]=0;__label__=26;break;case 25:_abort();throw"Reached an unreachable!";case 26:__label__=27;break;case 27:__label__=28;break;case 28:var $70=$XP;var $cmp64=($70|0)!=0;if($cmp64){__label__=29;break}else{__label__=56;break}case 29:var $71=$tp;var $index=$71+28|0;var $72=HEAP32[$index>>2];var $73=$m_addr;var $treebins=$73+304|0;var $arrayidx67=$treebins+($72<<2)|0;$H=$arrayidx67;var $74=$tp;var $75=$H;var $76=HEAP32[$75>>2];var $cmp68=($74|0)==($76|0);if($cmp68){__label__=30;break}else{__label__=33;break}case 30:var $77=$R;var $78=$H;HEAP32[$78>>2]=$77;var $cmp71=($77|0)==0;if($cmp71){__label__=31;break}else{__label__=32;break}case 31:var $79=$tp;var $index74=$79+28|0;var $80=HEAP32[$index74>>2];var $shl=1<<$80;var $neg=$shl^-1;var $81=$m_addr;var $treemap=$81+4|0;var $82=HEAP32[$treemap>>2];var $and75=$82&$neg;HEAP32[$treemap>>2]=$and75;__label__=32;break;case 32:__label__=40;break;case 33:var $83=$XP;var $84=$83;var $85=$m_addr;var $least_addr78=$85+16|0;var $86=HEAPU32[$least_addr78>>2];var $cmp79=$84>>>0>=$86>>>0;var $conv80=$cmp79&1;var $expval81=$conv80==1;var $tobool82=($expval81|0)!=0;if($tobool82){__label__=34;break}else{__label__=38;break}case 34:var $87=$XP;var $child84=$87+16|0;var $arrayidx85=$child84|0;var $88=HEAP32[$arrayidx85>>2];var $89=$tp;var $cmp86=($88|0)==($89|0);if($cmp86){__label__=35;break}else{__label__=36;break}case 35:var $90=$R;var $91=$XP;var $child89=$91+16|0;var $arrayidx90=$child89|0;HEAP32[$arrayidx90>>2]=$90;__label__=37;break;case 36:var $92=$R;var $93=$XP;var $child92=$93+16|0;var $arrayidx93=$child92+4|0;HEAP32[$arrayidx93>>2]=$92;__label__=37;break;case 37:__label__=39;break;case 38:_abort();throw"Reached an unreachable!";case 39:__label__=40;break;case 40:var $94=$R;var $cmp98=($94|0)!=0;if($cmp98){__label__=41;break}else{__label__=55;break}case 41:var $95=$R;var $96=$95;var $97=$m_addr;var $least_addr101=$97+16|0;var $98=HEAPU32[$least_addr101>>2];var $cmp102=$96>>>0>=$98>>>0;var $conv103=$cmp102&1;var $expval104=$conv103==1;var $tobool105=($expval104|0)!=0;if($tobool105){__label__=42;break}else{__label__=53;break}case 42:var $99=$XP;var $100=$R;var $parent107=$100+24|0;HEAP32[$parent107>>2]=$99;var $101=$tp;var $child108=$101+16|0;var $arrayidx109=$child108|0;var $102=HEAP32[$arrayidx109>>2];$C0=$102;var $cmp110=($102|0)!=0;if($cmp110){__label__=43;break}else{__label__=47;break}case 43:var $103=$C0;var $104=$103;var $105=$m_addr;var $least_addr113=$105+16|0;var $106=HEAPU32[$least_addr113>>2];var $cmp114=$104>>>0>=$106>>>0;var $conv115=$cmp114&1;var $expval116=$conv115==1;var $tobool117=($expval116|0)!=0;if($tobool117){__label__=44;break}else{__label__=45;break}case 44:var $107=$C0;var $108=$R;var $child119=$108+16|0;var $arrayidx120=$child119|0;HEAP32[$arrayidx120>>2]=$107;var $109=$R;var $110=$C0;var $parent121=$110+24|0;HEAP32[$parent121>>2]=$109;__label__=46;break;case 45:_abort();throw"Reached an unreachable!";case 46:__label__=47;break;case 47:var $111=$tp;var $child125=$111+16|0;var $arrayidx126=$child125+4|0;var $112=HEAP32[$arrayidx126>>2];$C1=$112;var $cmp127=($112|0)!=0;if($cmp127){__label__=48;break}else{__label__=52;break}case 48:var $113=$C1;var $114=$113;var $115=$m_addr;var $least_addr130=$115+16|0;var $116=HEAPU32[$least_addr130>>2];var $cmp131=$114>>>0>=$116>>>0;var $conv132=$cmp131&1;var $expval133=$conv132==1;var $tobool134=($expval133|0)!=0;if($tobool134){__label__=49;break}else{__label__=50;break}case 49:var $117=$C1;var $118=$R;var $child136=$118+16|0;var $arrayidx137=$child136+4|0;HEAP32[$arrayidx137>>2]=$117;var $119=$R;var $120=$C1;var $parent138=$120+24|0;HEAP32[$parent138>>2]=$119;__label__=51;break;case 50:_abort();throw"Reached an unreachable!";case 51:__label__=52;break;case 52:__label__=54;break;case 53:_abort();throw"Reached an unreachable!";case 54:__label__=55;break;case 55:__label__=56;break;case 56:__label__=57;break;case 57:var $121=$psize;var $shr=$121>>>8;$X=$shr;var $122=$X;var $cmp148=($122|0)==0;if($cmp148){__label__=58;break}else{__label__=59;break}case 58:$I=0;__label__=63;break;case 59:var $123=$X;var $cmp152=$123>>>0>65535;if($cmp152){__label__=60;break}else{__label__=61;break}case 60:$I=31;__label__=62;break;case 61:var $124=$X;$Y=$124;var $125=$Y;var $sub156=$125-256|0;var $shr157=$sub156>>>16;var $and158=$shr157&8;$N=$and158;var $126=$N;var $127=$Y;var $shl159=$127<<$126;$Y=$shl159;var $sub160=$shl159-4096|0;var $shr161=$sub160>>>16;var $and162=$shr161&4;$K=$and162;var $128=$K;var $129=$N;var $add=$129+$128|0;$N=$add;var $130=$K;var $131=$Y;var $shl163=$131<<$130;$Y=$shl163;var $sub164=$shl163-16384|0;var $shr165=$sub164>>>16;var $and166=$shr165&2;$K=$and166;var $132=$N;var $add167=$132+$and166|0;$N=$add167;var $133=$N;var $sub168=14-$133|0;var $134=$K;var $135=$Y;var $shl169=$135<<$134;$Y=$shl169;var $shr170=$shl169>>>15;var $add171=$sub168+$shr170|0;$K=$add171;var $136=$K;var $shl172=$136<<1;var $137=$psize;var $138=$K;var $add173=$138+7|0;var $shr174=$137>>>($add173>>>0);var $and175=$shr174&1;var $add176=$shl172+$and175|0;$I=$add176;__label__=62;break;case 62:__label__=63;break;case 63:var $139=$I;var $140=$m_addr;var $treebins179=$140+304|0;var $arrayidx180=$treebins179+($139<<2)|0;$H147=$arrayidx180;var $141=$I;var $142=$tp;var $index181=$142+28|0;HEAP32[$index181>>2]=$141;var $143=$tp;var $child182=$143+16|0;var $arrayidx183=$child182+4|0;HEAP32[$arrayidx183>>2]=0;var $144=$tp;var $child184=$144+16|0;var $arrayidx185=$child184|0;HEAP32[$arrayidx185>>2]=0;var $145=$m_addr;var $treemap186=$145+4|0;var $146=HEAP32[$treemap186>>2];var $147=$I;var $shl187=1<<$147;var $and188=$146&$shl187;var $tobool189=($and188|0)!=0;if($tobool189){__label__=65;break}else{__label__=64;break}case 64:var $148=$I;var $shl191=1<<$148;var $149=$m_addr;var $treemap192=$149+4|0;var $150=HEAP32[$treemap192>>2];var $or=$150|$shl191;HEAP32[$treemap192>>2]=$or;var $151=$tp;var $152=$H147;HEAP32[$152>>2]=$151;var $153=$H147;var $154=$153;var $155=$tp;var $parent193=$155+24|0;HEAP32[$parent193>>2]=$154;var $156=$tp;var $157=$tp;var $bk194=$157+12|0;HEAP32[$bk194>>2]=$156;var $158=$tp;var $fd195=$158+8|0;HEAP32[$fd195>>2]=$156;__label__=83;break;case 65:var $159=$H147;var $160=HEAP32[$159>>2];$T=$160;var $161=$psize;var $162=$I;var $cmp198=($162|0)==31;if($cmp198){__label__=66;break}else{__label__=67;break}case 66:var $cond207=0;__label__=68;break;case 67:var $163=$I;var $shr202=$163>>>1;var $add203=$shr202+8|0;var $sub204=$add203-2|0;var $sub205=31-$sub204|0;var $cond207=$sub205;__label__=68;break;case 68:var $cond207;var $shl208=$161<<$cond207;$K197=$shl208;__label__=69;break;case 69:var $164=$T;var $head209=$164+4|0;var $165=HEAP32[$head209>>2];var $and210=$165&-8;var $166=$psize;var $cmp211=($and210|0)!=($166|0);if($cmp211){__label__=70;break}else{__label__=76;break}case 70:var $167=$K197;var $shr214=$167>>>31;var $and215=$shr214&1;var $168=$T;var $child216=$168+16|0;var $arrayidx217=$child216+($and215<<2)|0;$C=$arrayidx217;var $169=$K197;var $shl218=$169<<1;$K197=$shl218;var $170=$C;var $171=HEAP32[$170>>2];var $cmp219=($171|0)!=0;if($cmp219){__label__=71;break}else{__label__=72;break}case 71:var $172=$C;var $173=HEAP32[$172>>2];$T=$173;__label__=75;break;case 72:var $174=$C;var $175=$174;var $176=$m_addr;var $least_addr223=$176+16|0;var $177=HEAPU32[$least_addr223>>2];var $cmp224=$175>>>0>=$177>>>0;var $conv225=$cmp224&1;var $expval226=$conv225==1;var $tobool227=($expval226|0)!=0;if($tobool227){__label__=73;break}else{__label__=74;break}case 73:var $178=$tp;var $179=$C;HEAP32[$179>>2]=$178;var $180=$T;var $181=$tp;var $parent229=$181+24|0;HEAP32[$parent229>>2]=$180;var $182=$tp;var $183=$tp;var $bk230=$183+12|0;HEAP32[$bk230>>2]=$182;var $184=$tp;var $fd231=$184+8|0;HEAP32[$fd231>>2]=$182;__label__=82;break;case 74:_abort();throw"Reached an unreachable!";case 75:__label__=81;break;case 76:var $185=$T;var $fd236=$185+8|0;var $186=HEAP32[$fd236>>2];$F235=$186;var $187=$T;var $188=$187;var $189=$m_addr;var $least_addr237=$189+16|0;var $190=HEAPU32[$least_addr237>>2];var $cmp238=$188>>>0>=$190>>>0;if($cmp238){__label__=77;break}else{var $195=0;__label__=78;break}case 77:var $191=$F235;var $192=$191;var $193=$m_addr;var $least_addr240=$193+16|0;var $194=HEAPU32[$least_addr240>>2];var $cmp241=$192>>>0>=$194>>>0;var $195=$cmp241;__label__=78;break;case 78:var $195;var $land_ext=$195&1;var $expval243=$land_ext==1;var $tobool244=($expval243|0)!=0;if($tobool244){__label__=79;break}else{__label__=80;break}case 79:var $196=$tp;var $197=$F235;var $bk246=$197+12|0;HEAP32[$bk246>>2]=$196;var $198=$T;var $fd247=$198+8|0;HEAP32[$fd247>>2]=$196;var $199=$F235;var $200=$tp;var $fd248=$200+8|0;HEAP32[$fd248>>2]=$199;var $201=$T;var $202=$tp;var $bk249=$202+12|0;HEAP32[$bk249>>2]=$201;var $203=$tp;var $parent250=$203+24|0;HEAP32[$parent250>>2]=0;__label__=82;break;case 80:_abort();throw"Reached an unreachable!";case 81:__label__=69;break;case 82:__label__=83;break;case 83:__label__=84;break;case 84:__label__=85;break;case 85:var $204=$sp;$pred=$204;var $205=$next3;$sp=$205;__label__=1;break;case 86:var $206=$nsegs;var $cmp257=$206>>>0>4294967295;if($cmp257){__label__=87;break}else{__label__=88;break}case 87:var $207=$nsegs;var $cond262=$207;__label__=89;break;case 88:var $cond262=-1;__label__=89;break;case 89:var $cond262;var $208=$m_addr;var $release_checks=$208+32|0;HEAP32[$release_checks>>2]=$cond262;var $209=$released;return $209;default:assert(0,"bad label: "+__label__)}}_release_unused_segments["X"]=1;function _memalign($alignment,$bytes){var __label__;var $alignment_addr;var $bytes_addr;$alignment_addr=$alignment;$bytes_addr=$bytes;var $0=$alignment_addr;var $1=$bytes_addr;var $call=_internal_memalign(__gm_,$0,$1);return $call}function _internal_memalign($m,$alignment,$bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $alignment_addr;var $bytes_addr;var $a;var $nb;var $req;var $mem;var $leader;var $trailer;var $p;var $br;var $pos;var $newp;var $leadsize;var $newsize;var $size;var $remainder_size;var $remainder;$m_addr=$m;$alignment_addr=$alignment;$bytes_addr=$bytes;var $0=$alignment_addr;var $cmp=$0>>>0<=8;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $1=$bytes_addr;var $call=_malloc($1);$retval=$call;__label__=36;break;case 2:var $2=$alignment_addr;var $cmp1=$2>>>0<16;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:$alignment_addr=16;__label__=4;break;case 4:var $3=$alignment_addr;var $4=$alignment_addr;var $sub=$4-1|0;var $and=$3&$sub;var $cmp4=($and|0)!=0;if($cmp4){__label__=5;break}else{__label__=9;break}case 5:$a=16;__label__=6;break;case 6:var $5=$a;var $6=$alignment_addr;var $cmp6=$5>>>0<$6>>>0;if($cmp6){__label__=7;break}else{__label__=8;break}case 7:var $7=$a;var $shl=$7<<1;$a=$shl;__label__=6;break;case 8:var $8=$a;$alignment_addr=$8;__label__=9;break;case 9:var $9=$bytes_addr;var $10=$alignment_addr;var $sub8=-64-$10|0;var $cmp9=$9>>>0>=$sub8>>>0;if($cmp9){__label__=10;break}else{__label__=13;break}case 10:var $11=$m_addr;var $cmp11=($11|0)!=0;if($cmp11){__label__=11;break}else{__label__=12;break}case 11:var $call13=___errno();HEAP32[$call13>>2]=12;__label__=12;break;case 12:__label__=35;break;case 13:var $12=$bytes_addr;var $cmp15=$12>>>0<11;if($cmp15){__label__=14;break}else{__label__=15;break}case 14:var $cond=16;__label__=16;break;case 15:var $13=$bytes_addr;var $add=$13+4|0;var $add16=$add+7|0;var $and17=$add16&-8;var $cond=$and17;__label__=16;break;case 16:var $cond;$nb=$cond;var $14=$nb;var $15=$alignment_addr;var $add18=$14+$15|0;var $add19=$add18+16|0;var $sub20=$add19-4|0;$req=$sub20;var $16=$req;var $call21=_malloc($16);$mem=$call21;var $17=$mem;var $cmp22=($17|0)!=0;if($cmp22){__label__=17;break}else{__label__=34;break}case 17:$leader=0;$trailer=0;var $18=$mem;var $add_ptr=$18-8|0;var $19=$add_ptr;$p=$19;var $20=$mem;var $21=$20;var $22=$alignment_addr;var $rem=($21>>>0)%($22>>>0);var $cmp24=($rem|0)!=0;if($cmp24){__label__=18;break}else{__label__=25;break}case 18:var $23=$mem;var $24=$alignment_addr;var $add_ptr26=$23+$24|0;var $add_ptr27=$add_ptr26-1|0;var $25=$add_ptr27;var $26=$alignment_addr;var $sub28=-$26|0;var $and29=$25&$sub28;var $27=$and29;var $add_ptr30=$27-8|0;var $28=$add_ptr30;var $29=$28;$br=$29;var $30=$br;var $31=$p;var $32=$31;var $sub_ptr_lhs_cast=$30;var $sub_ptr_rhs_cast=$32;var $sub_ptr_sub=$sub_ptr_lhs_cast-$sub_ptr_rhs_cast|0;var $cmp31=$sub_ptr_sub>>>0>=16;if($cmp31){__label__=19;break}else{__label__=20;break}case 19:var $33=$br;var $cond36=$33;__label__=21;break;case 20:var $34=$br;var $35=$alignment_addr;var $add_ptr34=$34+$35|0;var $cond36=$add_ptr34;__label__=21;break;case 21:var $cond36;$pos=$cond36;var $36=$pos;var $37=$36;$newp=$37;var $38=$pos;var $39=$p;var $40=$39;var $sub_ptr_lhs_cast37=$38;var $sub_ptr_rhs_cast38=$40;var $sub_ptr_sub39=$sub_ptr_lhs_cast37-$sub_ptr_rhs_cast38|0;$leadsize=$sub_ptr_sub39;var $41=$p;var $head=$41+4|0;var $42=HEAP32[$head>>2];var $and40=$42&-8;var $43=$leadsize;var $sub41=$and40-$43|0;$newsize=$sub41;var $44=$p;var $head42=$44+4|0;var $45=HEAP32[$head42>>2];var $and43=$45&3;var $cmp44=($and43|0)==0;if($cmp44){__label__=22;break}else{__label__=23;break}case 22:var $46=$p;var $prev_foot=$46|0;var $47=HEAP32[$prev_foot>>2];var $48=$leadsize;var $add46=$47+$48|0;var $49=$newp;var $prev_foot47=$49|0;HEAP32[$prev_foot47>>2]=$add46;var $50=$newsize;var $51=$newp;var $head48=$51+4|0;HEAP32[$head48>>2]=$50;__label__=24;break;case 23:var $52=$newp;var $head50=$52+4|0;var $53=HEAP32[$head50>>2];var $and51=$53&1;var $54=$newsize;var $or=$and51|$54;var $or52=$or|2;var $55=$newp;var $head53=$55+4|0;HEAP32[$head53>>2]=$or52;var $56=$newp;var $57=$56;var $58=$newsize;var $add_ptr54=$57+$58|0;var $59=$add_ptr54;var $head55=$59+4|0;var $60=HEAP32[$head55>>2];var $or56=$60|1;HEAP32[$head55>>2]=$or56;var $61=$p;var $head57=$61+4|0;var $62=HEAP32[$head57>>2];var $and58=$62&1;var $63=$leadsize;var $or59=$and58|$63;var $or60=$or59|2;var $64=$p;var $head61=$64+4|0;HEAP32[$head61>>2]=$or60;var $65=$p;var $66=$65;var $67=$leadsize;var $add_ptr62=$66+$67|0;var $68=$add_ptr62;var $head63=$68+4|0;var $69=HEAP32[$head63>>2];var $or64=$69|1;HEAP32[$head63>>2]=$or64;var $70=$p;var $71=$70;var $add_ptr65=$71+8|0;$leader=$add_ptr65;__label__=24;break;case 24:var $72=$newp;$p=$72;__label__=25;break;case 25:var $73=$p;var $head68=$73+4|0;var $74=HEAP32[$head68>>2];var $and69=$74&3;var $cmp70=($and69|0)==0;if($cmp70){__label__=29;break}else{__label__=26;break}case 26:var $75=$p;var $head72=$75+4|0;var $76=HEAP32[$head72>>2];var $and73=$76&-8;$size=$and73;var $77=$size;var $78=$nb;var $add74=$78+16|0;var $cmp75=$77>>>0>$add74>>>0;if($cmp75){__label__=27;break}else{__label__=28;break}case 27:var $79=$size;var $80=$nb;var $sub77=$79-$80|0;$remainder_size=$sub77;var $81=$p;var $82=$81;var $83=$nb;var $add_ptr78=$82+$83|0;var $84=$add_ptr78;$remainder=$84;var $85=$p;var $head79=$85+4|0;var $86=HEAP32[$head79>>2];var $and80=$86&1;var $87=$nb;var $or81=$and80|$87;var $or82=$or81|2;var $88=$p;var $head83=$88+4|0;HEAP32[$head83>>2]=$or82;var $89=$p;var $90=$89;var $91=$nb;var $add_ptr84=$90+$91|0;var $92=$add_ptr84;var $head85=$92+4|0;var $93=HEAP32[$head85>>2];var $or86=$93|1;HEAP32[$head85>>2]=$or86;var $94=$remainder;var $head87=$94+4|0;var $95=HEAP32[$head87>>2];var $and88=$95&1;var $96=$remainder_size;var $or89=$and88|$96;var $or90=$or89|2;var $97=$remainder;var $head91=$97+4|0;HEAP32[$head91>>2]=$or90;var $98=$remainder;var $99=$98;var $100=$remainder_size;var $add_ptr92=$99+$100|0;var $101=$add_ptr92;var $head93=$101+4|0;var $102=HEAP32[$head93>>2];var $or94=$102|1;HEAP32[$head93>>2]=$or94;var $103=$remainder;var $104=$103;var $add_ptr95=$104+8|0;$trailer=$add_ptr95;__label__=28;break;case 28:__label__=29;break;case 29:var $105=$leader;var $cmp98=($105|0)!=0;if($cmp98){__label__=30;break}else{__label__=31;break}case 30:var $106=$leader;_free($106);__label__=31;break;case 31:var $107=$trailer;var $cmp101=($107|0)!=0;if($cmp101){__label__=32;break}else{__label__=33;break}case 32:var $108=$trailer;_free($108);__label__=33;break;case 33:var $109=$p;var $110=$109;var $add_ptr104=$110+8|0;$retval=$add_ptr104;__label__=36;break;case 34:__label__=35;break;case 35:$retval=0;__label__=36;break;case 36:var $111=$retval;return $111;default:assert(0,"bad label: "+__label__)}}_internal_memalign["X"]=1;function _independent_calloc($n_elements,$elem_size,$chunks){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $n_elements_addr;var $elem_size_addr;var $chunks_addr;var $sz=__stackBase__;$n_elements_addr=$n_elements;$elem_size_addr=$elem_size;$chunks_addr=$chunks;var $0=$elem_size_addr;HEAP32[$sz>>2]=$0;var $1=$n_elements_addr;var $2=$chunks_addr;var $call=_ialloc(__gm_,$1,$sz,3,$2);STACKTOP=__stackBase__;return $call}function _internal_realloc($m,$oldmem,$bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $oldmem_addr;var $bytes_addr;var $oldp;var $oldsize;var $next;var $newp;var $extra;var $nb;var $rsize;var $remainder;var $newsize;var $newtopsize;var $newtop;var $newmem;var $oc;$m_addr=$m;$oldmem_addr=$oldmem;$bytes_addr=$bytes;var $0=$bytes_addr;var $cmp=$0>>>0>=4294967232;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $call=___errno();HEAP32[$call>>2]=12;$retval=0;__label__=33;break;case 2:var $1=$oldmem_addr;var $add_ptr=$1-8|0;var $2=$add_ptr;$oldp=$2;var $3=$oldp;var $head=$3+4|0;var $4=HEAP32[$head>>2];var $and=$4&-8;$oldsize=$and;var $5=$oldp;var $6=$5;var $7=$oldsize;var $add_ptr1=$6+$7|0;var $8=$add_ptr1;$next=$8;$newp=0;$extra=0;var $9=$oldp;var $10=$9;var $11=$m_addr;var $least_addr=$11+16|0;var $12=HEAPU32[$least_addr>>2];var $cmp2=$10>>>0>=$12>>>0;if($cmp2){__label__=3;break}else{var $21=0;__label__=6;break}case 3:var $13=$oldp;var $head3=$13+4|0;var $14=HEAP32[$head3>>2];var $and4=$14&3;var $cmp5=($and4|0)!=1;if($cmp5){__label__=4;break}else{var $21=0;__label__=6;break}case 4:var $15=$oldp;var $16=$15;var $17=$next;var $18=$17;var $cmp7=$16>>>0<$18>>>0;if($cmp7){__label__=5;break}else{var $21=0;__label__=6;break}case 5:var $19=$next;var $head8=$19+4|0;var $20=HEAP32[$head8>>2];var $and9=$20&1;var $tobool=($and9|0)!=0;var $21=$tobool;__label__=6;break;case 6:var $21;var $land_ext=$21&1;var $expval=$land_ext==1;var $tobool10=($expval|0)!=0;if($tobool10){__label__=7;break}else{__label__=22;break}case 7:var $22=$bytes_addr;var $cmp12=$22>>>0<11;if($cmp12){__label__=8;break}else{__label__=9;break}case 8:var $cond=16;__label__=10;break;case 9:var $23=$bytes_addr;var $add=$23+4|0;var $add13=$add+7|0;var $and14=$add13&-8;var $cond=$and14;__label__=10;break;case 10:var $cond;$nb=$cond;var $24=$oldp;var $head15=$24+4|0;var $25=HEAP32[$head15>>2];var $and16=$25&3;var $cmp17=($and16|0)==0;if($cmp17){__label__=11;break}else{__label__=12;break}case 11:var $26=$m_addr;var $27=$oldp;var $28=$nb;var $call19=_mmap_resize($26,$27,$28);$newp=$call19;__label__=21;break;case 12:var $29=$oldsize;var $30=$nb;var $cmp20=$29>>>0>=$30>>>0;if($cmp20){__label__=13;break}else{__label__=16;break}case 13:var $31=$oldsize;var $32=$nb;var $sub=$31-$32|0;$rsize=$sub;var $33=$oldp;$newp=$33;var $34=$rsize;var $cmp22=$34>>>0>=16;if($cmp22){__label__=14;break}else{__label__=15;break}case 14:var $35=$newp;var $36=$35;var $37=$nb;var $add_ptr24=$36+$37|0;var $38=$add_ptr24;$remainder=$38;var $39=$newp;var $head25=$39+4|0;var $40=HEAP32[$head25>>2];var $and26=$40&1;var $41=$nb;var $or=$and26|$41;var $or27=$or|2;var $42=$newp;var $head28=$42+4|0;HEAP32[$head28>>2]=$or27;var $43=$newp;var $44=$43;var $45=$nb;var $add_ptr29=$44+$45|0;var $46=$add_ptr29;var $head30=$46+4|0;var $47=HEAP32[$head30>>2];var $or31=$47|1;HEAP32[$head30>>2]=$or31;var $48=$rsize;var $or32=$48|1;var $or33=$or32|2;var $49=$remainder;var $head34=$49+4|0;HEAP32[$head34>>2]=$or33;var $50=$remainder;var $51=$50;var $52=$rsize;var $add_ptr35=$51+$52|0;var $53=$add_ptr35;var $head36=$53+4|0;var $54=HEAP32[$head36>>2];var $or37=$54|1;HEAP32[$head36>>2]=$or37;var $55=$remainder;var $56=$55;var $add_ptr38=$56+8|0;$extra=$add_ptr38;__label__=15;break;case 15:__label__=20;break;case 16:var $57=$next;var $58=$m_addr;var $top=$58+24|0;var $59=HEAP32[$top>>2];var $cmp41=($57|0)==($59|0);if($cmp41){__label__=17;break}else{__label__=19;break}case 17:var $60=$oldsize;var $61=$m_addr;var $topsize=$61+12|0;var $62=HEAP32[$topsize>>2];var $add43=$60+$62|0;var $63=$nb;var $cmp44=$add43>>>0>$63>>>0;if($cmp44){__label__=18;break}else{__label__=19;break}case 18:var $64=$oldsize;var $65=$m_addr;var $topsize46=$65+12|0;var $66=HEAP32[$topsize46>>2];var $add47=$64+$66|0;$newsize=$add47;var $67=$newsize;var $68=$nb;var $sub48=$67-$68|0;$newtopsize=$sub48;var $69=$oldp;var $70=$69;var $71=$nb;var $add_ptr49=$70+$71|0;var $72=$add_ptr49;$newtop=$72;var $73=$oldp;var $head50=$73+4|0;var $74=HEAP32[$head50>>2];var $and51=$74&1;var $75=$nb;var $or52=$and51|$75;var $or53=$or52|2;var $76=$oldp;var $head54=$76+4|0;HEAP32[$head54>>2]=$or53;var $77=$oldp;var $78=$77;var $79=$nb;var $add_ptr55=$78+$79|0;var $80=$add_ptr55;var $head56=$80+4|0;var $81=HEAP32[$head56>>2];var $or57=$81|1;HEAP32[$head56>>2]=$or57;var $82=$newtopsize;var $or58=$82|1;var $83=$newtop;var $head59=$83+4|0;HEAP32[$head59>>2]=$or58;var $84=$newtop;var $85=$m_addr;var $top60=$85+24|0;HEAP32[$top60>>2]=$84;var $86=$newtopsize;var $87=$m_addr;var $topsize61=$87+12|0;HEAP32[$topsize61>>2]=$86;var $88=$oldp;$newp=$88;__label__=19;break;case 19:__label__=20;break;case 20:__label__=21;break;case 21:__label__=23;break;case 22:_abort();throw"Reached an unreachable!";case 23:var $89=$newp;var $cmp67=($89|0)!=0;if($cmp67){__label__=24;break}else{__label__=27;break}case 24:var $90=$extra;var $cmp69=($90|0)!=0;if($cmp69){__label__=25;break}else{__label__=26;break}case 25:var $91=$extra;_free($91);__label__=26;break;case 26:var $92=$newp;var $93=$92;var $add_ptr72=$93+8|0;$retval=$add_ptr72;__label__=33;break;case 27:var $94=$bytes_addr;var $call74=_malloc($94);$newmem=$call74;var $95=$newmem;var $cmp75=($95|0)!=0;if($cmp75){__label__=28;break}else{__label__=32;break}case 28:var $96=$oldsize;var $97=$oldp;var $head77=$97+4|0;var $98=HEAP32[$head77>>2];var $and78=$98&3;var $cmp79=($and78|0)==0;var $cond80=$cmp79?8:4;var $sub81=$96-$cond80|0;$oc=$sub81;var $99=$newmem;var $100=$oldmem_addr;var $101=$oc;var $102=$bytes_addr;var $cmp82=$101>>>0<$102>>>0;if($cmp82){__label__=29;break}else{__label__=30;break}case 29:var $103=$oc;var $cond86=$103;__label__=31;break;case 30:var $104=$bytes_addr;var $cond86=$104;__label__=31;break;case 31:var $cond86;assert($cond86%1===0,"memcpy given "+$cond86+" bytes to copy. Problem with quantum=1 corrections perhaps?");_memcpy($99,$100,$cond86,1);var $105=$oldmem_addr;_free($105);__label__=32;break;case 32:var $106=$newmem;$retval=$106;__label__=33;break;case 33:var $107=$retval;return $107;default:assert(0,"bad label: "+__label__)}}_internal_realloc["X"]=1;function _malloc_footprint(){var __label__;var $0=HEAP32[(__gm_+432|0)>>2];return $0}function _malloc_max_footprint(){var __label__;var $0=HEAP32[(__gm_+436|0)>>2];return $0}function _ialloc($m,$n_elements,$sizes,$opts,$chunks){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $n_elements_addr;var $sizes_addr;var $opts_addr;var $chunks_addr;var $element_size;var $contents_size;var $array_size;var $mem;var $p;var $remainder_size;var $marray;var $array_chunk;var $was_enabled;var $size;var $i;var $array_chunk_size;$m_addr=$m;$n_elements_addr=$n_elements;$sizes_addr=$sizes;$opts_addr=$opts;$chunks_addr=$chunks;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=$chunks_addr;var $cmp1=($2|0)!=0;if($cmp1){__label__=3;break}else{__label__=6;break}case 3:var $3=$n_elements_addr;var $cmp2=($3|0)==0;if($cmp2){__label__=4;break}else{__label__=5;break}case 4:var $4=$chunks_addr;$retval=$4;__label__=46;break;case 5:var $5=$chunks_addr;$marray=$5;$array_size=0;__label__=12;break;case 6:var $6=$n_elements_addr;var $cmp4=($6|0)==0;if($cmp4){__label__=7;break}else{__label__=8;break}case 7:var $call6=_malloc(0);var $7=$call6;$retval=$7;__label__=46;break;case 8:$marray=0;var $8=$n_elements_addr;var $mul=$8<<2|0;var $cmp8=$mul>>>0<11;if($cmp8){__label__=9;break}else{__label__=10;break}case 9:var $cond=16;__label__=11;break;case 10:var $9=$n_elements_addr;var $mul9=$9<<2|0;var $add=$mul9+4|0;var $add10=$add+7|0;var $and=$add10&-8;var $cond=$and;__label__=11;break;case 11:var $cond;$array_size=$cond;__label__=12;break;case 12:var $10=$opts_addr;var $and12=$10&1;var $tobool13=($and12|0)!=0;if($tobool13){__label__=13;break}else{__label__=17;break}case 13:var $11=$sizes_addr;var $12=HEAPU32[$11>>2];var $cmp15=$12>>>0<11;if($cmp15){__label__=14;break}else{__label__=15;break}case 14:var $cond22=16;__label__=16;break;case 15:var $13=$sizes_addr;var $14=HEAP32[$13>>2];var $add18=$14+4|0;var $add19=$add18+7|0;var $and20=$add19&-8;var $cond22=$and20;__label__=16;break;case 16:var $cond22;$element_size=$cond22;var $15=$n_elements_addr;var $16=$element_size;var $mul23=$15*$16|0;$contents_size=$mul23;__label__=25;break;case 17:$element_size=0;$contents_size=0;$i=0;__label__=18;break;case 18:var $17=$i;var $18=$n_elements_addr;var $cmp25=($17|0)!=($18|0);if($cmp25){__label__=19;break}else{__label__=24;break}case 19:var $19=$i;var $20=$sizes_addr;var $arrayidx=$20+($19<<2)|0;var $21=HEAPU32[$arrayidx>>2];var $cmp26=$21>>>0<11;if($cmp26){__label__=20;break}else{__label__=21;break}case 20:var $cond34=16;__label__=22;break;case 21:var $22=$i;var $23=$sizes_addr;var $arrayidx29=$23+($22<<2)|0;var $24=HEAP32[$arrayidx29>>2];var $add30=$24+4|0;var $add31=$add30+7|0;var $and32=$add31&-8;var $cond34=$and32;__label__=22;break;case 22:var $cond34;var $25=$contents_size;var $add35=$25+$cond34|0;$contents_size=$add35;__label__=23;break;case 23:var $26=$i;var $inc=$26+1|0;$i=$inc;__label__=18;break;case 24:__label__=25;break;case 25:var $27=$contents_size;var $28=$array_size;var $add37=$27+$28|0;$size=$add37;var $29=$m_addr;var $mflags=$29+440|0;var $30=HEAP32[$mflags>>2];var $and38=$30&0;$was_enabled=$and38;var $31=$m_addr;var $mflags39=$31+440|0;var $32=HEAP32[$mflags39>>2];HEAP32[$mflags39>>2]=$32;var $33=$size;var $sub=$33-4|0;var $call40=_malloc($sub);$mem=$call40;var $34=$was_enabled;var $tobool41=($34|0)!=0;if($tobool41){__label__=26;break}else{__label__=27;break}case 26:var $35=$m_addr;var $mflags43=$35+440|0;var $36=HEAP32[$mflags43>>2];HEAP32[$mflags43>>2]=$36;__label__=27;break;case 27:var $37=$mem;var $cmp45=($37|0)==0;if($cmp45){__label__=28;break}else{__label__=29;break}case 28:$retval=0;__label__=46;break;case 29:var $38=$mem;var $add_ptr=$38-8|0;var $39=$add_ptr;$p=$39;var $40=$p;var $head=$40+4|0;var $41=HEAP32[$head>>2];var $and48=$41&-8;$remainder_size=$and48;var $42=$opts_addr;var $and49=$42&2;var $tobool50=($and49|0)!=0;if($tobool50){__label__=30;break}else{__label__=31;break}case 30:var $43=$mem;var $44=$43;var $45=$44;var $46=$remainder_size;var $sub52=$46-4|0;var $47=$array_size;var $sub53=$sub52-$47|0;_memset($45,0,$sub53,1);__label__=31;break;case 31:var $48=$marray;var $cmp55=($48|0)==0;if($cmp55){__label__=32;break}else{__label__=33;break}case 32:var $49=$p;var $50=$49;var $51=$contents_size;var $add_ptr57=$50+$51|0;var $52=$add_ptr57;$array_chunk=$52;var $53=$remainder_size;var $54=$contents_size;var $sub58=$53-$54|0;$array_chunk_size=$sub58;var $55=$array_chunk;var $56=$55;var $add_ptr59=$56+8|0;var $57=$add_ptr59;$marray=$57;var $58=$array_chunk_size;var $or=$58|1;var $or60=$or|2;var $59=$array_chunk;var $head61=$59+4|0;HEAP32[$head61>>2]=$or60;var $60=$contents_size;$remainder_size=$60;__label__=33;break;case 33:$i=0;__label__=34;break;case 34:var $61=$p;var $62=$61;var $add_ptr64=$62+8|0;var $63=$i;var $64=$marray;var $arrayidx65=$64+($63<<2)|0;HEAP32[$arrayidx65>>2]=$add_ptr64;var $65=$i;var $66=$n_elements_addr;var $sub66=$66-1|0;var $cmp67=($65|0)!=($sub66|0);if($cmp67){__label__=35;break}else{__label__=42;break}case 35:var $67=$element_size;var $cmp69=($67|0)!=0;if($cmp69){__label__=36;break}else{__label__=37;break}case 36:var $68=$element_size;$size=$68;__label__=41;break;case 37:var $69=$i;var $70=$sizes_addr;var $arrayidx72=$70+($69<<2)|0;var $71=HEAPU32[$arrayidx72>>2];var $cmp73=$71>>>0<11;if($cmp73){__label__=38;break}else{__label__=39;break}case 38:var $cond81=16;__label__=40;break;case 39:var $72=$i;var $73=$sizes_addr;var $arrayidx76=$73+($72<<2)|0;var $74=HEAP32[$arrayidx76>>2];var $add77=$74+4|0;var $add78=$add77+7|0;var $and79=$add78&-8;var $cond81=$and79;__label__=40;break;case 40:var $cond81;$size=$cond81;__label__=41;break;case 41:var $75=$size;var $76=$remainder_size;var $sub83=$76-$75|0;$remainder_size=$sub83;var $77=$size;var $or84=$77|1;var $or85=$or84|2;var $78=$p;var $head86=$78+4|0;HEAP32[$head86>>2]=$or85;var $79=$p;var $80=$79;var $81=$size;var $add_ptr87=$80+$81|0;var $82=$add_ptr87;$p=$82;__label__=43;break;case 42:var $83=$remainder_size;var $or89=$83|1;var $or90=$or89|2;var $84=$p;var $head91=$84+4|0;HEAP32[$head91>>2]=$or90;__label__=45;break;case 43:__label__=44;break;case 44:var $85=$i;var $inc94=$85+1|0;$i=$inc94;__label__=34;break;case 45:var $86=$marray;$retval=$86;__label__=46;break;case 46:var $87=$retval;return $87;default:assert(0,"bad label: "+__label__)}}_ialloc["X"]=1;function _independent_comalloc($n_elements,$sizes,$chunks){var __label__;var $n_elements_addr;var $sizes_addr;var $chunks_addr;$n_elements_addr=$n_elements;$sizes_addr=$sizes;$chunks_addr=$chunks;var $0=$n_elements_addr;var $1=$sizes_addr;var $2=$chunks_addr;var $call=_ialloc(__gm_,$0,$1,0,$2);return $call}function _valloc($bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $bytes_addr;var $pagesz;$bytes_addr=$bytes;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=HEAP32[(_mparams+4|0)>>2];$pagesz=$2;var $3=$pagesz;var $4=$bytes_addr;var $call1=_memalign($3,$4);return $call1;default:assert(0,"bad label: "+__label__)}}function _pvalloc($bytes){var __label__;__label__=0;while(1)switch(__label__){case 0:var $bytes_addr;var $pagesz;$bytes_addr=$bytes;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=HEAP32[(_mparams+4|0)>>2];$pagesz=$2;var $3=$pagesz;var $4=$bytes_addr;var $5=$pagesz;var $add=$4+$5|0;var $sub=$add-1|0;var $6=$pagesz;var $sub1=$6-1|0;var $neg=$sub1^-1;var $and=$sub&$neg;var $call2=_memalign($3,$and);return $call2;default:assert(0,"bad label: "+__label__)}}function _malloc_trim($pad){var __label__;__label__=0;while(1)switch(__label__){case 0:var $pad_addr;var $result;$pad_addr=$pad;$result=0;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=$pad_addr;var $call1=_sys_trim(__gm_,$2);$result=$call1;var $3=$result;return $3;default:assert(0,"bad label: "+__label__)}}function _mallinfo($agg_result){var __label__;_internal_mallinfo($agg_result,__gm_);return}function _internal_mallinfo($agg_result,$m){var __stackBase__=STACKTOP;STACKTOP+=40;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $nm=__stackBase__;var $nfree;var $mfree;var $sum;var $s;var $q;var $sz;$m_addr=$m;var $0=$nm;for(var $$dest=$0>>2,$$stop=$$dest+10;$$dest<$$stop;$$dest++){HEAP32[$$dest]=0};var $1=HEAP32[(_mparams|0)>>2];var $cmp=($1|0)!=0;if($cmp){var $2=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $2=$tobool;__label__=2;break;case 2:var $2;var $lor_ext=$2&1;var $3=$m_addr;var $top=$3+24|0;var $4=HEAP32[$top>>2];var $cmp1=($4|0)!=0;if($cmp1){__label__=3;break}else{__label__=19;break}case 3:$nfree=1;var $5=$m_addr;var $topsize=$5+12|0;var $6=HEAP32[$topsize>>2];var $add=$6+40|0;$mfree=$add;var $7=$mfree;$sum=$7;var $8=$m_addr;var $seg=$8+444|0;$s=$seg;__label__=4;break;case 4:var $9=$s;var $cmp2=($9|0)!=0;if($cmp2){__label__=5;break}else{__label__=18;break}case 5:var $10=$s;var $base=$10|0;var $11=HEAP32[$base>>2];var $12=$s;var $base3=$12|0;var $13=HEAP32[$base3>>2];var $add_ptr=$13+8|0;var $14=$add_ptr;var $and=$14&7;var $cmp4=($and|0)==0;if($cmp4){__label__=6;break}else{__label__=7;break}case 6:var $cond=0;__label__=8;break;case 7:var $15=$s;var $base5=$15|0;var $16=HEAP32[$base5>>2];var $add_ptr6=$16+8|0;var $17=$add_ptr6;var $and7=$17&7;var $sub=8-$and7|0;var $and8=$sub&7;var $cond=$and8;__label__=8;break;case 8:var $cond;var $add_ptr9=$11+$cond|0;var $18=$add_ptr9;$q=$18;__label__=9;break;case 9:var $19=$q;var $20=$19;var $21=$s;var $base11=$21|0;var $22=HEAPU32[$base11>>2];var $cmp12=$20>>>0>=$22>>>0;if($cmp12){__label__=10;break}else{var $34=0;__label__=13;break}case 10:var $23=$q;var $24=$23;var $25=$s;var $base13=$25|0;var $26=HEAP32[$base13>>2];var $27=$s;var $size=$27+4|0;var $28=HEAP32[$size>>2];var $add_ptr14=$26+$28|0;var $cmp15=$24>>>0<$add_ptr14>>>0;if($cmp15){__label__=11;break}else{var $34=0;__label__=13;break}case 11:var $29=$q;var $30=$m_addr;var $top17=$30+24|0;var $31=HEAP32[$top17>>2];var $cmp18=($29|0)!=($31|0);if($cmp18){__label__=12;break}else{var $34=0;__label__=13;break}case 12:var $32=$q;var $head=$32+4|0;var $33=HEAP32[$head>>2];var $cmp19=($33|0)!=7;var $34=$cmp19;__label__=13;break;case 13:var $34;if($34){__label__=14;break}else{__label__=17;break}case 14:var $35=$q;var $head21=$35+4|0;var $36=HEAP32[$head21>>2];var $and22=$36&-8;$sz=$and22;var $37=$sz;var $38=$sum;var $add23=$38+$37|0;$sum=$add23;var $39=$q;var $head24=$39+4|0;var $40=HEAP32[$head24>>2];var $and25=$40&3;var $cmp26=($and25|0)!=1;if($cmp26){__label__=16;break}else{__label__=15;break}case 15:var $41=$sz;var $42=$mfree;var $add28=$42+$41|0;$mfree=$add28;var $43=$nfree;var $inc=$43+1|0;$nfree=$inc;__label__=16;break;case 16:var $44=$q;var $45=$44;var $46=$q;var $head29=$46+4|0;var $47=HEAP32[$head29>>2];var $and30=$47&-8;var $add_ptr31=$45+$and30|0;var $48=$add_ptr31;$q=$48;__label__=9;break;case 17:var $49=$s;var $next=$49+8|0;var $50=HEAP32[$next>>2];$s=$50;__label__=4;break;case 18:var $51=$sum;var $arena=$nm|0;HEAP32[$arena>>2]=$51;var $52=$nfree;var $ordblks=$nm+4|0;HEAP32[$ordblks>>2]=$52;var $53=$m_addr;var $footprint=$53+432|0;var $54=HEAP32[$footprint>>2];var $55=$sum;var $sub33=$54-$55|0;var $hblkhd=$nm+16|0;HEAP32[$hblkhd>>2]=$sub33;var $56=$m_addr;var $max_footprint=$56+436|0;var $57=HEAP32[$max_footprint>>2];var $usmblks=$nm+20|0;HEAP32[$usmblks>>2]=$57;var $58=$m_addr;var $footprint34=$58+432|0;var $59=HEAP32[$footprint34>>2];var $60=$mfree;var $sub35=$59-$60|0;var $uordblks=$nm+28|0;HEAP32[$uordblks>>2]=$sub35;var $61=$mfree;var $fordblks=$nm+32|0;HEAP32[$fordblks>>2]=$61;var $62=$m_addr;var $topsize36=$62+12|0;var $63=HEAP32[$topsize36>>2];var $keepcost=$nm+36|0;HEAP32[$keepcost>>2]=$63;__label__=19;break;case 19:var $64=$agg_result;var $65=$nm;assert(40%1===0,"memcpy given "+40+" bytes to copy. Problem with quantum=1 corrections perhaps?");for(var $$src=$65>>2,$$dest=$64>>2,$$stop=$$src+10;$$src<$$stop;$$src++,$$dest++){HEAP32[$$dest]=HEAP32[$$src]};STACKTOP=__stackBase__;return;default:assert(0,"bad label: "+__label__)}}_internal_mallinfo["X"]=1;function _malloc_stats(){var __label__;_internal_malloc_stats(__gm_);return}function _internal_malloc_stats($m){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $maxfp;var $fp;var $used;var $s;var $q;$m_addr=$m;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;$maxfp=0;$fp=0;$used=0;var $2=$m_addr;var $top=$2+24|0;var $3=HEAP32[$top>>2];var $cmp1=($3|0)!=0;if($cmp1){__label__=3;break}else{__label__=19;break}case 3:var $4=$m_addr;var $seg=$4+444|0;$s=$seg;var $5=$m_addr;var $max_footprint=$5+436|0;var $6=HEAP32[$max_footprint>>2];$maxfp=$6;var $7=$m_addr;var $footprint=$7+432|0;var $8=HEAP32[$footprint>>2];$fp=$8;var $9=$fp;var $10=$m_addr;var $topsize=$10+12|0;var $11=HEAP32[$topsize>>2];var $add=$11+40|0;var $sub=$9-$add|0;$used=$sub;__label__=4;break;case 4:var $12=$s;var $cmp2=($12|0)!=0;if($cmp2){__label__=5;break}else{__label__=18;break}case 5:var $13=$s;var $base=$13|0;var $14=HEAP32[$base>>2];var $15=$s;var $base3=$15|0;var $16=HEAP32[$base3>>2];var $add_ptr=$16+8|0;var $17=$add_ptr;var $and=$17&7;var $cmp4=($and|0)==0;if($cmp4){__label__=6;break}else{__label__=7;break}case 6:var $cond=0;__label__=8;break;case 7:var $18=$s;var $base5=$18|0;var $19=HEAP32[$base5>>2];var $add_ptr6=$19+8|0;var $20=$add_ptr6;var $and7=$20&7;var $sub8=8-$and7|0;var $and9=$sub8&7;var $cond=$and9;__label__=8;break;case 8:var $cond;var $add_ptr10=$14+$cond|0;var $21=$add_ptr10;$q=$21;__label__=9;break;case 9:var $22=$q;var $23=$22;var $24=$s;var $base12=$24|0;var $25=HEAPU32[$base12>>2];var $cmp13=$23>>>0>=$25>>>0;if($cmp13){__label__=10;break}else{var $37=0;__label__=13;break}case 10:var $26=$q;var $27=$26;var $28=$s;var $base14=$28|0;var $29=HEAP32[$base14>>2];var $30=$s;var $size=$30+4|0;var $31=HEAP32[$size>>2];var $add_ptr15=$29+$31|0;var $cmp16=$27>>>0<$add_ptr15>>>0;if($cmp16){__label__=11;break}else{var $37=0;__label__=13;break}case 11:var $32=$q;var $33=$m_addr;var $top18=$33+24|0;var $34=HEAP32[$top18>>2];var $cmp19=($32|0)!=($34|0);if($cmp19){__label__=12;break}else{var $37=0;__label__=13;break}case 12:var $35=$q;var $head=$35+4|0;var $36=HEAP32[$head>>2];var $cmp20=($36|0)!=7;var $37=$cmp20;__label__=13;break;case 13:var $37;if($37){__label__=14;break}else{__label__=17;break}case 14:var $38=$q;var $head22=$38+4|0;var $39=HEAP32[$head22>>2];var $and23=$39&3;var $cmp24=($and23|0)!=1;if($cmp24){__label__=16;break}else{__label__=15;break}case 15:var $40=$q;var $head26=$40+4|0;var $41=HEAP32[$head26>>2];var $and27=$41&-8;var $42=$used;var $sub28=$42-$and27|0;$used=$sub28;__label__=16;break;case 16:var $43=$q;var $44=$43;var $45=$q;var $head29=$45+4|0;var $46=HEAP32[$head29>>2];var $and30=$46&-8;var $add_ptr31=$44+$and30|0;var $47=$add_ptr31;$q=$47;__label__=9;break;case 17:var $48=$s;var $next=$48+8|0;var $49=HEAP32[$next>>2];$s=$49;__label__=4;break;case 18:__label__=19;break;case 19:var $50=HEAP32[__impure_ptr>>2];var $_stderr=$50+12|0;var $51=HEAP32[$_stderr>>2];var $52=$maxfp;var $call34=_fprintf($51,STRING_TABLE.__str1|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=$52,tempInt));var $53=HEAP32[__impure_ptr>>2];var $_stderr35=$53+12|0;var $54=HEAP32[$_stderr35>>2];var $55=$fp;var $call36=_fprintf($54,STRING_TABLE.__str12|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=$55,tempInt));var $56=HEAP32[__impure_ptr>>2];var $_stderr37=$56+12|0;var $57=HEAP32[$_stderr37>>2];var $58=$used;var $call38=_fprintf($57,STRING_TABLE.__str2|0,(tempInt=STACKTOP,STACKTOP+=4,assert(STACKTOP<STACK_ROOT+STACK_MAX,"Ran out of stack"),HEAP32[tempInt>>2]=$58,tempInt));return;default:assert(0,"bad label: "+__label__)}}_internal_malloc_stats["X"]=1;function _mallopt($param_number,$value){var __label__;var $param_number_addr;var $value_addr;$param_number_addr=$param_number;$value_addr=$value;var $0=$param_number_addr;var $1=$value_addr;var $call=_change_mparam($0,$1);return $call}function _init_mparams(){var __label__;__label__=0;while(1)switch(__label__){case 0:var $magic;var $psize;var $gsize;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=5;break}case 1:var $call=_sysconf(8);$psize=$call;var $1=$psize;$gsize=$1;var $2=$gsize;var $3=$gsize;var $sub=$3-1|0;var $and=$2&$sub;var $cmp1=($and|0)!=0;if($cmp1){__label__=3;break}else{__label__=2;break}case 2:var $4=$psize;var $5=$psize;var $sub2=$5-1|0;var $and3=$4&$sub2;var $cmp4=($and3|0)!=0;if($cmp4){__label__=3;break}else{__label__=4;break}case 3:_abort();throw"Reached an unreachable!";case 4:var $6=$gsize;HEAP32[(_mparams+8|0)>>2]=$6;var $7=$psize;HEAP32[(_mparams+4|0)>>2]=$7;HEAP32[(_mparams+12|0)>>2]=-1;HEAP32[(_mparams+16|0)>>2]=2097152;HEAP32[(_mparams+20|0)>>2]=0;var $8=HEAP32[(_mparams+20|0)>>2];HEAP32[(__gm_+440|0)>>2]=$8;var $call6=_time(0);var $xor=$call6^1431655765;$magic=$xor;var $9=$magic;var $or=$9|8;$magic=$or;var $10=$magic;var $and7=$10&-8;$magic=$and7;var $11=$magic;HEAP32[(_mparams|0)>>2]=$11;__label__=5;break;case 5:;return 1;default:assert(0,"bad label: "+__label__)}}function _malloc_usable_size($mem){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $mem_addr;var $p;$mem_addr=$mem;var $0=$mem_addr;var $cmp=($0|0)!=0;if($cmp){__label__=1;break}else{__label__=4;break}case 1:var $1=$mem_addr;var $add_ptr=$1-8|0;var $2=$add_ptr;$p=$2;var $3=$p;var $head=$3+4|0;var $4=HEAP32[$head>>2];var $and=$4&3;var $cmp1=($and|0)!=1;if($cmp1){__label__=2;break}else{__label__=3;break}case 2:var $5=$p;var $head3=$5+4|0;var $6=HEAP32[$head3>>2];var $and4=$6&-8;var $7=$p;var $head5=$7+4|0;var $8=HEAP32[$head5>>2];var $and6=$8&3;var $cmp7=($and6|0)==0;var $cond=$cmp7?8:4;var $sub=$and4-$cond|0;$retval=$sub;__label__=5;break;case 3:__label__=4;break;case 4:$retval=0;__label__=5;break;case 5:var $9=$retval;return $9;default:assert(0,"bad label: "+__label__)}}function _mmap_resize($m,$oldp,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $oldp_addr;var $nb_addr;var $oldsize;var $offset;var $oldmmsize;var $newmmsize;var $cp;var $newp;var $psize;$m_addr=$m;$oldp_addr=$oldp;$nb_addr=$nb;var $0=$oldp_addr;var $head=$0+4|0;var $1=HEAP32[$head>>2];var $and=$1&-8;$oldsize=$and;var $2=$nb_addr;var $shr=$2>>>3;var $cmp=$shr>>>0<32;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$retval=0;__label__=13;break;case 2:var $3=$oldsize;var $4=$nb_addr;var $add=$4+4|0;var $cmp1=$3>>>0>=$add>>>0;if($cmp1){__label__=3;break}else{__label__=5;break}case 3:var $5=$oldsize;var $6=$nb_addr;var $sub=$5-$6|0;var $7=HEAP32[(_mparams+8|0)>>2];var $shl=$7<<1;var $cmp2=$sub>>>0<=$shl>>>0;if($cmp2){__label__=4;break}else{__label__=5;break}case 4:var $8=$oldp_addr;$retval=$8;__label__=13;break;case 5:var $9=$oldp_addr;var $prev_foot=$9|0;var $10=HEAP32[$prev_foot>>2];$offset=$10;var $11=$oldsize;var $12=$offset;var $add4=$11+$12|0;var $add5=$add4+16|0;$oldmmsize=$add5;var $13=$nb_addr;var $add6=$13+24|0;var $add7=$add6+7|0;var $14=HEAP32[(_mparams+4|0)>>2];var $sub8=$14-1|0;var $add9=$add7+$sub8|0;var $15=HEAP32[(_mparams+4|0)>>2];var $sub10=$15-1|0;var $neg=$sub10^-1;var $and11=$add9&$neg;$newmmsize=$and11;$cp=-1;var $16=$cp;var $cmp12=($16|0)!=-1;if($cmp12){__label__=6;break}else{__label__=11;break}case 6:var $17=$cp;var $18=$offset;var $add_ptr=$17+$18|0;var $19=$add_ptr;$newp=$19;var $20=$newmmsize;var $21=$offset;var $sub14=$20-$21|0;var $sub15=$sub14-16|0;$psize=$sub15;var $22=$psize;var $23=$newp;var $head16=$23+4|0;HEAP32[$head16>>2]=$22;var $24=$newp;var $25=$24;var $26=$psize;var $add_ptr17=$25+$26|0;var $27=$add_ptr17;var $head18=$27+4|0;HEAP32[$head18>>2]=7;var $28=$newp;var $29=$28;var $30=$psize;var $add19=$30+4|0;var $add_ptr20=$29+$add19|0;var $31=$add_ptr20;var $head21=$31+4|0;HEAP32[$head21>>2]=0;var $32=$cp;var $33=$m_addr;var $least_addr=$33+16|0;var $34=HEAPU32[$least_addr>>2];var $cmp22=$32>>>0<$34>>>0;if($cmp22){__label__=7;break}else{__label__=8;break}case 7:var $35=$cp;var $36=$m_addr;var $least_addr24=$36+16|0;HEAP32[$least_addr24>>2]=$35;__label__=8;break;case 8:var $37=$newmmsize;var $38=$oldmmsize;var $sub26=$37-$38|0;var $39=$m_addr;var $footprint=$39+432|0;var $40=HEAP32[$footprint>>2];var $add27=$40+$sub26|0;HEAP32[$footprint>>2]=$add27;var $41=$m_addr;var $max_footprint=$41+436|0;var $42=HEAPU32[$max_footprint>>2];var $cmp28=$add27>>>0>$42>>>0;if($cmp28){__label__=9;break}else{__label__=10;break}case 9:var $43=$m_addr;var $footprint30=$43+432|0;var $44=HEAP32[$footprint30>>2];var $45=$m_addr;var $max_footprint31=$45+436|0;HEAP32[$max_footprint31>>2]=$44;__label__=10;break;case 10:var $46=$newp;$retval=$46;__label__=13;break;case 11:__label__=12;break;case 12:$retval=0;__label__=13;break;case 13:var $47=$retval;return $47;default:assert(0,"bad label: "+__label__)}}_mmap_resize["X"]=1;function _segment_holding($m,$addr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $addr_addr;var $sp;$m_addr=$m;$addr_addr=$addr;var $0=$m_addr;var $seg=$0+444|0;$sp=$seg;__label__=1;break;case 1:var $1=$addr_addr;var $2=$sp;var $base=$2|0;var $3=HEAPU32[$base>>2];var $cmp=$1>>>0>=$3>>>0;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $4=$addr_addr;var $5=$sp;var $base1=$5|0;var $6=HEAP32[$base1>>2];var $7=$sp;var $size=$7+4|0;var $8=HEAP32[$size>>2];var $add_ptr=$6+$8|0;var $cmp2=$4>>>0<$add_ptr>>>0;if($cmp2){__label__=3;break}else{__label__=4;break}case 3:var $9=$sp;$retval=$9;__label__=7;break;case 4:var $10=$sp;var $next=$10+8|0;var $11=HEAP32[$next>>2];$sp=$11;var $cmp3=($11|0)==0;if($cmp3){__label__=5;break}else{__label__=6;break}case 5:$retval=0;__label__=7;break;case 6:__label__=1;break;case 7:var $12=$retval;return $12;default:assert(0,"bad label: "+__label__)}}function _init_top($m,$p,$psize){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $p_addr;var $psize_addr;var $offset;$m_addr=$m;$p_addr=$p;$psize_addr=$psize;var $0=$p_addr;var $1=$0;var $add_ptr=$1+8|0;var $2=$add_ptr;var $and=$2&7;var $cmp=($and|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=0;__label__=3;break;case 2:var $3=$p_addr;var $4=$3;var $add_ptr1=$4+8|0;var $5=$add_ptr1;var $and2=$5&7;var $sub=8-$and2|0;var $and3=$sub&7;var $cond=$and3;__label__=3;break;case 3:var $cond;$offset=$cond;var $6=$p_addr;var $7=$6;var $8=$offset;var $add_ptr4=$7+$8|0;var $9=$add_ptr4;$p_addr=$9;var $10=$offset;var $11=$psize_addr;var $sub5=$11-$10|0;$psize_addr=$sub5;var $12=$p_addr;var $13=$m_addr;var $top=$13+24|0;HEAP32[$top>>2]=$12;var $14=$psize_addr;var $15=$m_addr;var $topsize=$15+12|0;HEAP32[$topsize>>2]=$14;var $16=$psize_addr;var $or=$16|1;var $17=$p_addr;var $head=$17+4|0;HEAP32[$head>>2]=$or;var $18=$p_addr;var $19=$18;var $20=$psize_addr;var $add_ptr6=$19+$20|0;var $21=$add_ptr6;var $head7=$21+4|0;HEAP32[$head7>>2]=40;var $22=HEAP32[(_mparams+16|0)>>2];var $23=$m_addr;var $trim_check=$23+28|0;HEAP32[$trim_check>>2]=$22;return;default:assert(0,"bad label: "+__label__)}}_init_top["X"]=1;function _mmap_alloc($m,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $m_addr;var $nb_addr;var $mmsize;var $mm;var $offset;var $psize;var $p;$m_addr=$m;$nb_addr=$nb;var $0=$nb_addr;var $add=$0+24|0;var $add1=$add+7|0;var $1=HEAP32[(_mparams+4|0)>>2];var $sub=$1-1|0;var $add2=$add1+$sub|0;var $2=HEAP32[(_mparams+4|0)>>2];var $sub3=$2-1|0;var $neg=$sub3^-1;var $and=$add2&$neg;$mmsize=$and;var $3=$mmsize;var $4=$nb_addr;var $cmp=$3>>>0>$4>>>0;if($cmp){__label__=1;break}else{__label__=12;break}case 1:$mm=-1;var $5=$mm;var $cmp4=($5|0)!=-1;if($cmp4){__label__=2;break}else{__label__=11;break}case 2:var $6=$mm;var $add_ptr=$6+8|0;var $7=$add_ptr;var $and6=$7&7;var $cmp7=($and6|0)==0;if($cmp7){__label__=3;break}else{__label__=4;break}case 3:var $cond=0;__label__=5;break;case 4:var $8=$mm;var $add_ptr8=$8+8|0;var $9=$add_ptr8;var $and9=$9&7;var $sub10=8-$and9|0;var $and11=$sub10&7;var $cond=$and11;__label__=5;break;case 5:var $cond;$offset=$cond;var $10=$mmsize;var $11=$offset;var $sub12=$10-$11|0;var $sub13=$sub12-16|0;$psize=$sub13;var $12=$mm;var $13=$offset;var $add_ptr14=$12+$13|0;var $14=$add_ptr14;$p=$14;var $15=$offset;var $16=$p;var $prev_foot=$16|0;HEAP32[$prev_foot>>2]=$15;var $17=$psize;var $18=$p;var $head=$18+4|0;HEAP32[$head>>2]=$17;var $19=$p;var $20=$19;var $21=$psize;var $add_ptr15=$20+$21|0;var $22=$add_ptr15;var $head16=$22+4|0;HEAP32[$head16>>2]=7;var $23=$p;var $24=$23;var $25=$psize;var $add17=$25+4|0;var $add_ptr18=$24+$add17|0;var $26=$add_ptr18;var $head19=$26+4|0;HEAP32[$head19>>2]=0;var $27=$m_addr;var $least_addr=$27+16|0;var $28=HEAP32[$least_addr>>2];var $cmp20=($28|0)==0;if($cmp20){__label__=7;break}else{__label__=6;break}case 6:var $29=$mm;var $30=$m_addr;var $least_addr21=$30+16|0;var $31=HEAPU32[$least_addr21>>2];var $cmp22=$29>>>0<$31>>>0;if($cmp22){__label__=7;break}else{__label__=8;break}case 7:var $32=$mm;var $33=$m_addr;var $least_addr24=$33+16|0;HEAP32[$least_addr24>>2]=$32;__label__=8;break;case 8:var $34=$mmsize;var $35=$m_addr;var $footprint=$35+432|0;var $36=HEAP32[$footprint>>2];var $add25=$36+$34|0;HEAP32[$footprint>>2]=$add25;var $37=$m_addr;var $max_footprint=$37+436|0;var $38=HEAPU32[$max_footprint>>2];var $cmp26=$add25>>>0>$38>>>0;if($cmp26){__label__=9;break}else{__label__=10;break}case 9:var $39=$m_addr;var $footprint28=$39+432|0;var $40=HEAP32[$footprint28>>2];var $41=$m_addr;var $max_footprint29=$41+436|0;HEAP32[$max_footprint29>>2]=$40;__label__=10;break;case 10:var $42=$p;var $43=$42;var $add_ptr31=$43+8|0;$retval=$add_ptr31;__label__=13;break;case 11:__label__=12;break;case 12:$retval=0;__label__=13;break;case 13:var $44=$retval;return $44;default:assert(0,"bad label: "+__label__)}}_mmap_alloc["X"]=1;function _init_bins($m){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $i;var $bin;$m_addr=$m;$i=0;__label__=1;break;case 1:var $0=$i;var $cmp=$0>>>0<32;if($cmp){__label__=2;break}else{__label__=4;break}case 2:var $1=$i;var $shl=$1<<1;var $2=$m_addr;var $smallbins=$2+40|0;var $arrayidx=$smallbins+($shl<<2)|0;var $3=$arrayidx;var $4=$3;$bin=$4;var $5=$bin;var $6=$bin;var $bk=$6+12|0;HEAP32[$bk>>2]=$5;var $7=$bin;var $fd=$7+8|0;HEAP32[$fd>>2]=$5;__label__=3;break;case 3:var $8=$i;var $inc=$8+1|0;$i=$inc;__label__=1;break;case 4:;return;default:assert(0,"bad label: "+__label__)}}function _change_mparam($param_number,$value){var __label__;__label__=0;while(1)switch(__label__){case 0:var $retval;var $param_number_addr;var $value_addr;var $val;$param_number_addr=$param_number;$value_addr=$value;var $0=HEAP32[(_mparams|0)>>2];var $cmp=($0|0)!=0;if($cmp){var $1=1;__label__=2;break}else{__label__=1;break}case 1:var $call=_init_mparams();var $tobool=($call|0)!=0;var $1=$tobool;__label__=2;break;case 2:var $1;var $lor_ext=$1&1;var $2=$value_addr;var $cmp1=($2|0)==-1;if($cmp1){__label__=3;break}else{__label__=4;break}case 3:var $cond=-1;__label__=5;break;case 4:var $3=$value_addr;var $cond=$3;__label__=5;break;case 5:var $cond;$val=$cond;var $4=$param_number_addr;if($4==-1){__label__=6;break}else if($4==-2){__label__=7;break}else if($4==-3){__label__=11;break}else{__label__=12;break}case 6:var $5=$val;HEAP32[(_mparams+16|0)>>2]=$5;$retval=1;__label__=13;break;case 7:var $6=$val;var $7=HEAPU32[(_mparams+4|0)>>2];var $cmp3=$6>>>0>=$7>>>0;if($cmp3){__label__=8;break}else{__label__=10;break}case 8:var $8=$val;var $9=$val;var $sub=$9-1|0;var $and=$8&$sub;var $cmp4=($and|0)==0;if($cmp4){__label__=9;break}else{__label__=10;break}case 9:var $10=$val;HEAP32[(_mparams+8|0)>>2]=$10;$retval=1;__label__=13;break;case 10:$retval=0;__label__=13;break;case 11:var $11=$val;HEAP32[(_mparams+12|0)>>2]=$11;$retval=1;__label__=13;break;case 12:$retval=0;__label__=13;break;case 13:var $12=$retval;return $12;default:assert(0,"bad label: "+__label__)}}_change_mparam["X"]=1;function _prepend_alloc($m,$newbase,$oldbase,$nb){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $newbase_addr;var $oldbase_addr;var $nb_addr;var $p;var $oldfirst;var $psize;var $q;var $qsize;var $tsize;var $dsize;var $nsize;var $F;var $B;var $I;var $TP;var $XP;var $R;var $F63;var $RP;var $CP;var $H;var $C0;var $C1;var $I203;var $B205;var $F209;var $TP235;var $H236;var $I237;var $X;var $Y;var $N;var $K;var $T;var $K290;var $C;var $F328;$m_addr=$m;$newbase_addr=$newbase;$oldbase_addr=$oldbase;$nb_addr=$nb;var $0=$newbase_addr;var $1=$newbase_addr;var $add_ptr=$1+8|0;var $2=$add_ptr;var $and=$2&7;var $cmp=($and|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=0;__label__=3;break;case 2:var $3=$newbase_addr;var $add_ptr1=$3+8|0;var $4=$add_ptr1;var $and2=$4&7;var $sub=8-$and2|0;var $and3=$sub&7;var $cond=$and3;__label__=3;break;case 3:var $cond;var $add_ptr4=$0+$cond|0;var $5=$add_ptr4;$p=$5;var $6=$oldbase_addr;var $7=$oldbase_addr;var $add_ptr5=$7+8|0;var $8=$add_ptr5;var $and6=$8&7;var $cmp7=($and6|0)==0;if($cmp7){__label__=4;break}else{__label__=5;break}case 4:var $cond15=0;__label__=6;break;case 5:var $9=$oldbase_addr;var $add_ptr10=$9+8|0;var $10=$add_ptr10;var $and11=$10&7;var $sub12=8-$and11|0;var $and13=$sub12&7;var $cond15=$and13;__label__=6;break;case 6:var $cond15;var $add_ptr16=$6+$cond15|0;var $11=$add_ptr16;$oldfirst=$11;var $12=$oldfirst;var $13=$12;var $14=$p;var $15=$14;var $sub_ptr_lhs_cast=$13;var $sub_ptr_rhs_cast=$15;var $sub_ptr_sub=$sub_ptr_lhs_cast-$sub_ptr_rhs_cast|0;$psize=$sub_ptr_sub;var $16=$p;var $17=$16;var $18=$nb_addr;var $add_ptr17=$17+$18|0;var $19=$add_ptr17;$q=$19;var $20=$psize;var $21=$nb_addr;var $sub18=$20-$21|0;$qsize=$sub18;var $22=$nb_addr;var $or=$22|1;var $or19=$or|2;var $23=$p;var $head=$23+4|0;HEAP32[$head>>2]=$or19;var $24=$oldfirst;var $25=$m_addr;var $top=$25+24|0;var $26=HEAP32[$top>>2];var $cmp20=($24|0)==($26|0);if($cmp20){__label__=7;break}else{__label__=8;break}case 7:var $27=$qsize;var $28=$m_addr;var $topsize=$28+12|0;var $29=HEAP32[$topsize>>2];var $add=$29+$27|0;HEAP32[$topsize>>2]=$add;$tsize=$add;var $30=$q;var $31=$m_addr;var $top21=$31+24|0;HEAP32[$top21>>2]=$30;var $32=$tsize;var $or22=$32|1;var $33=$q;var $head23=$33+4|0;HEAP32[$head23>>2]=$or22;__label__=108;break;case 8:var $34=$oldfirst;var $35=$m_addr;var $dv=$35+20|0;var $36=HEAP32[$dv>>2];var $cmp24=($34|0)==($36|0);if($cmp24){__label__=9;break}else{__label__=10;break}case 9:var $37=$qsize;var $38=$m_addr;var $dvsize=$38+8|0;var $39=HEAP32[$dvsize>>2];var $add26=$39+$37|0;HEAP32[$dvsize>>2]=$add26;$dsize=$add26;var $40=$q;var $41=$m_addr;var $dv27=$41+20|0;HEAP32[$dv27>>2]=$40;var $42=$dsize;var $or28=$42|1;var $43=$q;var $head29=$43+4|0;HEAP32[$head29>>2]=$or28;var $44=$dsize;var $45=$q;var $46=$45;var $47=$dsize;var $add_ptr30=$46+$47|0;var $48=$add_ptr30;var $prev_foot=$48|0;HEAP32[$prev_foot>>2]=$44;__label__=107;break;case 10:var $49=$oldfirst;var $head32=$49+4|0;var $50=HEAP32[$head32>>2];var $and33=$50&3;var $cmp34=($and33|0)!=1;if($cmp34){__label__=71;break}else{__label__=11;break}case 11:var $51=$oldfirst;var $head36=$51+4|0;var $52=HEAP32[$head36>>2];var $and37=$52&-8;$nsize=$and37;var $53=$nsize;var $shr=$53>>>3;var $cmp38=$shr>>>0<32;if($cmp38){__label__=12;break}else{__label__=24;break}case 12:var $54=$oldfirst;var $fd=$54+8|0;var $55=HEAP32[$fd>>2];$F=$55;var $56=$oldfirst;var $bk=$56+12|0;var $57=HEAP32[$bk>>2];$B=$57;var $58=$nsize;var $shr40=$58>>>3;$I=$shr40;var $59=$F;var $60=$B;var $cmp41=($59|0)==($60|0);if($cmp41){__label__=13;break}else{__label__=14;break}case 13:var $61=$I;var $shl=1<<$61;var $neg=$shl^-1;var $62=$m_addr;var $smallmap=$62|0;var $63=HEAP32[$smallmap>>2];var $and43=$63&$neg;HEAP32[$smallmap>>2]=$and43;__label__=23;break;case 14:var $64=$F;var $65=$I;var $shl45=$65<<1;var $66=$m_addr;var $smallbins=$66+40|0;var $arrayidx=$smallbins+($shl45<<2)|0;var $67=$arrayidx;var $68=$67;var $cmp46=($64|0)==($68|0);if($cmp46){__label__=16;break}else{__label__=15;break}case 15:var $69=$F;var $70=$69;var $71=$m_addr;var $least_addr=$71+16|0;var $72=HEAPU32[$least_addr>>2];var $cmp47=$70>>>0>=$72>>>0;if($cmp47){__label__=16;break}else{var $83=0;__label__=19;break}case 16:var $73=$B;var $74=$I;var $shl48=$74<<1;var $75=$m_addr;var $smallbins49=$75+40|0;var $arrayidx50=$smallbins49+($shl48<<2)|0;var $76=$arrayidx50;var $77=$76;var $cmp51=($73|0)==($77|0);if($cmp51){var $82=1;__label__=18;break}else{__label__=17;break}case 17:var $78=$B;var $79=$78;var $80=$m_addr;var $least_addr52=$80+16|0;var $81=HEAPU32[$least_addr52>>2];var $cmp53=$79>>>0>=$81>>>0;var $82=$cmp53;__label__=18;break;case 18:var $82;var $83=$82;__label__=19;break;case 19:var $83;var $land_ext=$83&1;var $expval=$land_ext==1;var $tobool=($expval|0)!=0;if($tobool){__label__=20;break}else{__label__=21;break}case 20:var $84=$B;var $85=$F;var $bk55=$85+12|0;HEAP32[$bk55>>2]=$84;var $86=$F;var $87=$B;var $fd56=$87+8|0;HEAP32[$fd56>>2]=$86;__label__=22;break;case 21:_abort();throw"Reached an unreachable!";case 22:__label__=23;break;case 23:__label__=70;break;case 24:var $88=$oldfirst;var $89=$88;$TP=$89;var $90=$TP;var $parent=$90+24|0;var $91=HEAP32[$parent>>2];$XP=$91;var $92=$TP;var $bk60=$92+12|0;var $93=HEAP32[$bk60>>2];var $94=$TP;var $cmp61=($93|0)!=($94|0);if($cmp61){__label__=25;break}else{__label__=29;break}case 25:var $95=$TP;var $fd64=$95+8|0;var $96=HEAP32[$fd64>>2];$F63=$96;var $97=$TP;var $bk65=$97+12|0;var $98=HEAP32[$bk65>>2];$R=$98;var $99=$F63;var $100=$99;var $101=$m_addr;var $least_addr66=$101+16|0;var $102=HEAPU32[$least_addr66>>2];var $cmp67=$100>>>0>=$102>>>0;var $conv=$cmp67&1;var $expval68=$conv==1;var $tobool69=($expval68|0)!=0;if($tobool69){__label__=26;break}else{__label__=27;break}case 26:var $103=$R;var $104=$F63;var $bk71=$104+12|0;HEAP32[$bk71>>2]=$103;var $105=$F63;var $106=$R;var $fd72=$106+8|0;HEAP32[$fd72>>2]=$105;__label__=28;break;case 27:_abort();throw"Reached an unreachable!";case 28:__label__=41;break;case 29:var $107=$TP;var $child=$107+16|0;var $arrayidx76=$child+4|0;$RP=$arrayidx76;var $108=HEAP32[$arrayidx76>>2];$R=$108;var $cmp77=($108|0)!=0;if($cmp77){__label__=31;break}else{__label__=30;break}case 30:var $109=$TP;var $child80=$109+16|0;var $arrayidx81=$child80|0;$RP=$arrayidx81;var $110=HEAP32[$arrayidx81>>2];$R=$110;var $cmp82=($110|0)!=0;if($cmp82){__label__=31;break}else{__label__=40;break}case 31:__label__=32;break;case 32:var $111=$R;var $child85=$111+16|0;var $arrayidx86=$child85+4|0;$CP=$arrayidx86;var $112=HEAP32[$arrayidx86>>2];var $cmp87=($112|0)!=0;if($cmp87){var $115=1;__label__=34;break}else{__label__=33;break}case 33:var $113=$R;var $child90=$113+16|0;var $arrayidx91=$child90|0;$CP=$arrayidx91;var $114=HEAP32[$arrayidx91>>2];var $cmp92=($114|0)!=0;var $115=$cmp92;__label__=34;break;case 34:var $115;if($115){__label__=35;break}else{__label__=36;break}case 35:var $116=$CP;$RP=$116;var $117=HEAP32[$116>>2];$R=$117;__label__=32;break;case 36:var $118=$RP;var $119=$118;var $120=$m_addr;var $least_addr95=$120+16|0;var $121=HEAPU32[$least_addr95>>2];var $cmp96=$119>>>0>=$121>>>0;var $conv97=$cmp96&1;var $expval98=$conv97==1;var $tobool99=($expval98|0)!=0;if($tobool99){__label__=37;break}else{__label__=38;break}case 37:var $122=$RP;HEAP32[$122>>2]=0;__label__=39;break;case 38:_abort();throw"Reached an unreachable!";case 39:__label__=40;break;case 40:__label__=41;break;case 41:var $123=$XP;var $cmp105=($123|0)!=0;if($cmp105){__label__=42;break}else{__label__=69;break}case 42:var $124=$TP;var $index=$124+28|0;var $125=HEAP32[$index>>2];var $126=$m_addr;var $treebins=$126+304|0;var $arrayidx108=$treebins+($125<<2)|0;$H=$arrayidx108;var $127=$TP;var $128=$H;var $129=HEAP32[$128>>2];var $cmp109=($127|0)==($129|0);if($cmp109){__label__=43;break}else{__label__=46;break}case 43:var $130=$R;var $131=$H;HEAP32[$131>>2]=$130;var $cmp112=($130|0)==0;if($cmp112){__label__=44;break}else{__label__=45;break}case 44:var $132=$TP;var $index115=$132+28|0;var $133=HEAP32[$index115>>2];var $shl116=1<<$133;var $neg117=$shl116^-1;var $134=$m_addr;var $treemap=$134+4|0;var $135=HEAP32[$treemap>>2];var $and118=$135&$neg117;HEAP32[$treemap>>2]=$and118;__label__=45;break;case 45:__label__=53;break;case 46:var $136=$XP;var $137=$136;var $138=$m_addr;var $least_addr121=$138+16|0;var $139=HEAPU32[$least_addr121>>2];var $cmp122=$137>>>0>=$139>>>0;var $conv123=$cmp122&1;var $expval124=$conv123==1;var $tobool125=($expval124|0)!=0;if($tobool125){__label__=47;break}else{__label__=51;break}case 47:var $140=$XP;var $child127=$140+16|0;var $arrayidx128=$child127|0;var $141=HEAP32[$arrayidx128>>2];var $142=$TP;var $cmp129=($141|0)==($142|0);if($cmp129){__label__=48;break}else{__label__=49;break}case 48:var $143=$R;var $144=$XP;var $child132=$144+16|0;var $arrayidx133=$child132|0;HEAP32[$arrayidx133>>2]=$143;__label__=50;break;case 49:var $145=$R;var $146=$XP;var $child135=$146+16|0;var $arrayidx136=$child135+4|0;HEAP32[$arrayidx136>>2]=$145;__label__=50;break;case 50:__label__=52;break;case 51:_abort();throw"Reached an unreachable!";case 52:__label__=53;break;case 53:var $147=$R;var $cmp141=($147|0)!=0;if($cmp141){__label__=54;break}else{__label__=68;break}case 54:var $148=$R;var $149=$148;var $150=$m_addr;var $least_addr144=$150+16|0;var $151=HEAPU32[$least_addr144>>2];var $cmp145=$149>>>0>=$151>>>0;var $conv146=$cmp145&1;var $expval147=$conv146==1;var $tobool148=($expval147|0)!=0;if($tobool148){__label__=55;break}else{__label__=66;break}case 55:var $152=$XP;var $153=$R;var $parent150=$153+24|0;HEAP32[$parent150>>2]=$152;var $154=$TP;var $child151=$154+16|0;var $arrayidx152=$child151|0;var $155=HEAP32[$arrayidx152>>2];$C0=$155;var $cmp153=($155|0)!=0;if($cmp153){__label__=56;break}else{__label__=60;break}case 56:var $156=$C0;var $157=$156;var $158=$m_addr;var $least_addr156=$158+16|0;var $159=HEAPU32[$least_addr156>>2];var $cmp157=$157>>>0>=$159>>>0;var $conv158=$cmp157&1;var $expval159=$conv158==1;var $tobool160=($expval159|0)!=0;if($tobool160){__label__=57;break}else{__label__=58;break}case 57:var $160=$C0;var $161=$R;var $child162=$161+16|0;var $arrayidx163=$child162|0;HEAP32[$arrayidx163>>2]=$160;var $162=$R;var $163=$C0;var $parent164=$163+24|0;HEAP32[$parent164>>2]=$162;__label__=59;break;case 58:_abort();throw"Reached an unreachable!";case 59:__label__=60;break;case 60:var $164=$TP;var $child168=$164+16|0;var $arrayidx169=$child168+4|0;var $165=HEAP32[$arrayidx169>>2];$C1=$165;var $cmp170=($165|0)!=0;if($cmp170){__label__=61;break}else{__label__=65;break}case 61:var $166=$C1;var $167=$166;var $168=$m_addr;var $least_addr173=$168+16|0;var $169=HEAPU32[$least_addr173>>2];var $cmp174=$167>>>0>=$169>>>0;var $conv175=$cmp174&1;var $expval176=$conv175==1;var $tobool177=($expval176|0)!=0;if($tobool177){__label__=62;break}else{__label__=63;break}case 62:var $170=$C1;var $171=$R;var $child179=$171+16|0;var $arrayidx180=$child179+4|0;HEAP32[$arrayidx180>>2]=$170;var $172=$R;var $173=$C1;var $parent181=$173+24|0;HEAP32[$parent181>>2]=$172;__label__=64;break;case 63:_abort();throw"Reached an unreachable!";case 64:__label__=65;break;case 65:__label__=67;break;case 66:_abort();throw"Reached an unreachable!";case 67:__label__=68;break;case 68:__label__=69;break;case 69:__label__=70;break;case 70:var $174=$oldfirst;var $175=$174;var $176=$nsize;var $add_ptr190=$175+$176|0;var $177=$add_ptr190;$oldfirst=$177;var $178=$nsize;var $179=$qsize;var $add191=$179+$178|0;$qsize=$add191;__label__=71;break;case 71:var $180=$oldfirst;var $head193=$180+4|0;var $181=HEAP32[$head193>>2];var $and194=$181&-2;HEAP32[$head193>>2]=$and194;var $182=$qsize;var $or195=$182|1;var $183=$q;var $head196=$183+4|0;HEAP32[$head196>>2]=$or195;var $184=$qsize;var $185=$q;var $186=$185;var $187=$qsize;var $add_ptr197=$186+$187|0;var $188=$add_ptr197;var $prev_foot198=$188|0;HEAP32[$prev_foot198>>2]=$184;var $189=$qsize;var $shr199=$189>>>3;var $cmp200=$shr199>>>0<32;if($cmp200){__label__=72;break}else{__label__=79;break}case 72:var $190=$qsize;var $shr204=$190>>>3;$I203=$shr204;var $191=$I203;var $shl206=$191<<1;var $192=$m_addr;var $smallbins207=$192+40|0;var $arrayidx208=$smallbins207+($shl206<<2)|0;var $193=$arrayidx208;var $194=$193;$B205=$194;var $195=$B205;$F209=$195;var $196=$m_addr;var $smallmap210=$196|0;var $197=HEAP32[$smallmap210>>2];var $198=$I203;var $shl211=1<<$198;var $and212=$197&$shl211;var $tobool213=($and212|0)!=0;if($tobool213){__label__=74;break}else{__label__=73;break}case 73:var $199=$I203;var $shl215=1<<$199;var $200=$m_addr;var $smallmap216=$200|0;var $201=HEAP32[$smallmap216>>2];var $or217=$201|$shl215;HEAP32[$smallmap216>>2]=$or217;__label__=78;break;case 74:var $202=$B205;var $fd219=$202+8|0;var $203=HEAP32[$fd219>>2];var $204=$203;var $205=$m_addr;var $least_addr220=$205+16|0;var $206=HEAPU32[$least_addr220>>2];var $cmp221=$204>>>0>=$206>>>0;var $conv222=$cmp221&1;var $expval223=$conv222==1;var $tobool224=($expval223|0)!=0;if($tobool224){__label__=75;break}else{__label__=76;break}case 75:var $207=$B205;var $fd226=$207+8|0;var $208=HEAP32[$fd226>>2];$F209=$208;__label__=77;break;case 76:_abort();throw"Reached an unreachable!";case 77:__label__=78;break;case 78:var $209=$q;var $210=$B205;var $fd230=$210+8|0;HEAP32[$fd230>>2]=$209;var $211=$q;var $212=$F209;var $bk231=$212+12|0;HEAP32[$bk231>>2]=$211;var $213=$F209;var $214=$q;var $fd232=$214+8|0;HEAP32[$fd232>>2]=$213;var $215=$B205;var $216=$q;var $bk233=$216+12|0;HEAP32[$bk233>>2]=$215;__label__=106;break;case 79:var $217=$q;var $218=$217;$TP235=$218;var $219=$qsize;var $shr238=$219>>>8;$X=$shr238;var $220=$X;var $cmp239=($220|0)==0;if($cmp239){__label__=80;break}else{__label__=81;break}case 80:$I237=0;__label__=85;break;case 81:var $221=$X;var $cmp243=$221>>>0>65535;if($cmp243){__label__=82;break}else{__label__=83;break}case 82:$I237=31;__label__=84;break;case 83:var $222=$X;$Y=$222;var $223=$Y;var $sub247=$223-256|0;var $shr248=$sub247>>>16;var $and249=$shr248&8;$N=$and249;var $224=$N;var $225=$Y;var $shl250=$225<<$224;$Y=$shl250;var $sub251=$shl250-4096|0;var $shr252=$sub251>>>16;var $and253=$shr252&4;$K=$and253;var $226=$K;var $227=$N;var $add254=$227+$226|0;$N=$add254;var $228=$K;var $229=$Y;var $shl255=$229<<$228;$Y=$shl255;var $sub256=$shl255-16384|0;var $shr257=$sub256>>>16;var $and258=$shr257&2;$K=$and258;var $230=$N;var $add259=$230+$and258|0;$N=$add259;var $231=$N;var $sub260=14-$231|0;var $232=$K;var $233=$Y;var $shl261=$233<<$232;$Y=$shl261;var $shr262=$shl261>>>15;var $add263=$sub260+$shr262|0;$K=$add263;var $234=$K;var $shl264=$234<<1;var $235=$qsize;var $236=$K;var $add265=$236+7|0;var $shr266=$235>>>($add265>>>0);var $and267=$shr266&1;var $add268=$shl264+$and267|0;$I237=$add268;__label__=84;break;case 84:__label__=85;break;case 85:var $237=$I237;var $238=$m_addr;var $treebins271=$238+304|0;var $arrayidx272=$treebins271+($237<<2)|0;$H236=$arrayidx272;var $239=$I237;var $240=$TP235;var $index273=$240+28|0;HEAP32[$index273>>2]=$239;var $241=$TP235;var $child274=$241+16|0;var $arrayidx275=$child274+4|0;HEAP32[$arrayidx275>>2]=0;var $242=$TP235;var $child276=$242+16|0;var $arrayidx277=$child276|0;HEAP32[$arrayidx277>>2]=0;var $243=$m_addr;var $treemap278=$243+4|0;var $244=HEAP32[$treemap278>>2];var $245=$I237;var $shl279=1<<$245;var $and280=$244&$shl279;var $tobool281=($and280|0)!=0;if($tobool281){__label__=87;break}else{__label__=86;break}case 86:var $246=$I237;var $shl283=1<<$246;var $247=$m_addr;var $treemap284=$247+4|0;var $248=HEAP32[$treemap284>>2];var $or285=$248|$shl283;HEAP32[$treemap284>>2]=$or285;var $249=$TP235;var $250=$H236;HEAP32[$250>>2]=$249;var $251=$H236;var $252=$251;var $253=$TP235;var $parent286=$253+24|0;HEAP32[$parent286>>2]=$252;var $254=$TP235;var $255=$TP235;var $bk287=$255+12|0;HEAP32[$bk287>>2]=$254;var $256=$TP235;var $fd288=$256+8|0;HEAP32[$fd288>>2]=$254;__label__=105;break;case 87:var $257=$H236;var $258=HEAP32[$257>>2];$T=$258;var $259=$qsize;var $260=$I237;var $cmp291=($260|0)==31;if($cmp291){__label__=88;break}else{__label__=89;break}case 88:var $cond300=0;__label__=90;break;case 89:var $261=$I237;var $shr295=$261>>>1;var $add296=$shr295+8|0;var $sub297=$add296-2|0;var $sub298=31-$sub297|0;var $cond300=$sub298;__label__=90;break;case 90:var $cond300;var $shl301=$259<<$cond300;$K290=$shl301;__label__=91;break;case 91:var $262=$T;var $head302=$262+4|0;var $263=HEAP32[$head302>>2];var $and303=$263&-8;var $264=$qsize;var $cmp304=($and303|0)!=($264|0);if($cmp304){__label__=92;break}else{__label__=98;break}case 92:var $265=$K290;var $shr307=$265>>>31;var $and308=$shr307&1;var $266=$T;var $child309=$266+16|0;var $arrayidx310=$child309+($and308<<2)|0;$C=$arrayidx310;var $267=$K290;var $shl311=$267<<1;$K290=$shl311;var $268=$C;var $269=HEAP32[$268>>2];var $cmp312=($269|0)!=0;if($cmp312){__label__=93;break}else{__label__=94;break}case 93:var $270=$C;var $271=HEAP32[$270>>2];$T=$271;__label__=97;break;case 94:var $272=$C;var $273=$272;var $274=$m_addr;var $least_addr316=$274+16|0;var $275=HEAPU32[$least_addr316>>2];var $cmp317=$273>>>0>=$275>>>0;var $conv318=$cmp317&1;var $expval319=$conv318==1;var $tobool320=($expval319|0)!=0;if($tobool320){__label__=95;break}else{__label__=96;break}case 95:var $276=$TP235;var $277=$C;HEAP32[$277>>2]=$276;var $278=$T;var $279=$TP235;var $parent322=$279+24|0;HEAP32[$parent322>>2]=$278;var $280=$TP235;var $281=$TP235;var $bk323=$281+12|0;HEAP32[$bk323>>2]=$280;var $282=$TP235;var $fd324=$282+8|0;HEAP32[$fd324>>2]=$280;__label__=104;break;case 96:_abort();throw"Reached an unreachable!";case 97:__label__=103;break;case 98:var $283=$T;var $fd329=$283+8|0;var $284=HEAP32[$fd329>>2];$F328=$284;var $285=$T;var $286=$285;var $287=$m_addr;var $least_addr330=$287+16|0;var $288=HEAPU32[$least_addr330>>2];var $cmp331=$286>>>0>=$288>>>0;if($cmp331){__label__=99;break}else{var $293=0;__label__=100;break}case 99:var $289=$F328;var $290=$289;var $291=$m_addr;var $least_addr334=$291+16|0;var $292=HEAPU32[$least_addr334>>2];var $cmp335=$290>>>0>=$292>>>0;var $293=$cmp335;__label__=100;break;case 100:var $293;var $land_ext338=$293&1;var $expval339=$land_ext338==1;var $tobool340=($expval339|0)!=0;if($tobool340){__label__=101;break}else{__label__=102;break}case 101:var $294=$TP235;var $295=$F328;var $bk342=$295+12|0;HEAP32[$bk342>>2]=$294;var $296=$T;var $fd343=$296+8|0;HEAP32[$fd343>>2]=$294;var $297=$F328;var $298=$TP235;var $fd344=$298+8|0;HEAP32[$fd344>>2]=$297;var $299=$T;var $300=$TP235;var $bk345=$300+12|0;HEAP32[$bk345>>2]=$299;var $301=$TP235;var $parent346=$301+24|0;HEAP32[$parent346>>2]=0;__label__=104;break;case 102:_abort();throw"Reached an unreachable!";case 103:__label__=91;break;case 104:__label__=105;break;case 105:__label__=106;break;case 106:__label__=107;break;case 107:__label__=108;break;case 108:var $302=$p;var $303=$302;var $add_ptr353=$303+8|0;return $add_ptr353;default:assert(0,"bad label: "+__label__)}}_prepend_alloc["X"]=1;function __ZSt15get_new_handlerv(){var __label__;var $0=(tempValue=HEAP32[__ZL13__new_handler>>2],HEAP32[__ZL13__new_handler>>2]=tempValue+0,tempValue);var $1=$0;return $1}function __ZSt15set_new_handlerPFvvE($handler){var __label__;var $handler_addr;$handler_addr=$handler;var $0=$handler_addr;var $1=$0;var $2=(tempValue=HEAP32[__ZL13__new_handler>>2],HEAP32[__ZL13__new_handler>>2]=$1,tempValue);var $3=$2;return $3}function __ZNSt9bad_allocC2Ev($this){var __stackBase__=STACKTOP;STACKTOP+=4;assert(STACKTOP%4==0,"Stack is unaligned");assert(STACKTOP<STACK_MAX,"Ran out of stack");var __label__;var $this_addr_i=__stackBase__;var $this_addr;$this_addr=$this;var $this1=$this_addr;var $0=$this1;var $1=$this_addr_i;HEAP32[$this_addr_i>>2]=$0;var $this1_i=HEAP32[$this_addr_i>>2];var $2=$this1_i;HEAP32[$2>>2]=__ZTVSt9exception+8|0;var $3=$this_addr_i;var $4=$this1;HEAP32[$4>>2]=__ZTVSt9bad_alloc+8|0;STACKTOP=__stackBase__;return}function __ZdlPv($ptr){var __label__;__label__=0;while(1)switch(__label__){case 0:var $ptr_addr;$ptr_addr=$ptr;var $0=$ptr_addr;var $tobool=($0|0)!=0;if($tobool){__label__=1;break}else{__label__=2;break}case 1:var $1=$ptr_addr;_free($1);__label__=2;break;case 2:;return;default:assert(0,"bad label: "+__label__)}}function __ZdlPvRKSt9nothrow_t($ptr,$0){var __label__;var $ptr_addr;var $_addr;$ptr_addr=$ptr;$_addr=$0;var $1=$ptr_addr;__ZdlPv($1);return}function __ZdaPv($ptr){var __label__;var $ptr_addr;$ptr_addr=$ptr;var $0=$ptr_addr;__ZdlPv($0);return}function __ZdaPvRKSt9nothrow_t($ptr,$0){var __label__;var $ptr_addr;var $_addr;$ptr_addr=$ptr;$_addr=$0;var $1=$ptr_addr;__ZdaPv($1);return}function __ZNSt9bad_allocD0Ev($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;FUNCTION_TABLE[__ZNSt9bad_allocD1Ev]($this1);var $0=$this1;__ZdlPv($0);return}function __ZNSt9bad_allocD2Ev($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;var $0=$this1;__ZNSt9exceptionD2Ev($0);return}function _add_segment($m,$tbase,$tsize,$mmapped){var __label__;__label__=0;while(1)switch(__label__){case 0:var $m_addr;var $tbase_addr;var $tsize_addr;var $mmapped_addr;var $old_top;var $oldsp;var $old_end;var $ssize;var $rawsp;var $offset;var $asp;var $csp;var $sp;var $ss;var $tnext;var $p;var $nfences;var $nextp;var $q;var $psize;var $tn;var $I;var $B;var $F;var $TP;var $H;var $I57;var $X;var $Y;var $N;var $K;var $T;var $K105;var $C;var $F144;$m_addr=$m;$tbase_addr=$tbase;$tsize_addr=$tsize;$mmapped_addr=$mmapped;var $0=$m_addr;var $top=$0+24|0;var $1=HEAP32[$top>>2];var $2=$1;$old_top=$2;var $3=$m_addr;var $4=$old_top;var $call=_segment_holding($3,$4);$oldsp=$call;var $5=$oldsp;var $base=$5|0;var $6=HEAP32[$base>>2];var $7=$oldsp;var $size=$7+4|0;var $8=HEAP32[$size>>2];var $add_ptr=$6+$8|0;$old_end=$add_ptr;$ssize=24;var $9=$old_end;var $10=$ssize;var $add=$10+16|0;var $add1=$add+7|0;var $idx_neg=-$add1|0;var $add_ptr2=$9+$idx_neg|0;$rawsp=$add_ptr2;var $11=$rawsp;var $add_ptr3=$11+8|0;var $12=$add_ptr3;var $and=$12&7;var $cmp=($and|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:var $cond=0;__label__=3;break;case 2:var $13=$rawsp;var $add_ptr4=$13+8|0;var $14=$add_ptr4;var $and5=$14&7;var $sub=8-$and5|0;var $and6=$sub&7;var $cond=$and6;__label__=3;break;case 3:var $cond;$offset=$cond;var $15=$rawsp;var $16=$offset;var $add_ptr7=$15+$16|0;$asp=$add_ptr7;var $17=$asp;var $18=$old_top;var $add_ptr8=$18+16|0;var $cmp9=$17>>>0<$add_ptr8>>>0;if($cmp9){__label__=4;break}else{__label__=5;break}case 4:var $19=$old_top;var $cond13=$19;__label__=6;break;case 5:var $20=$asp;var $cond13=$20;__label__=6;break;case 6:var $cond13;$csp=$cond13;var $21=$csp;var $22=$21;$sp=$22;var $23=$sp;var $24=$23;var $add_ptr14=$24+8|0;var $25=$add_ptr14;$ss=$25;var $26=$sp;var $27=$26;var $28=$ssize;var $add_ptr15=$27+$28|0;var $29=$add_ptr15;$tnext=$29;var $30=$tnext;$p=$30;$nfences=0;var $31=$m_addr;var $32=$tbase_addr;var $33=$32;var $34=$tsize_addr;var $sub16=$34-40|0;_init_top($31,$33,$sub16);var $35=$ssize;var $or=$35|1;var $or17=$or|2;var $36=$sp;var $head=$36+4|0;HEAP32[$head>>2]=$or17;var $37=$ss;var $38=$m_addr;var $seg=$38+444|0;var $39=$37;var $40=$seg;assert(16%1===0,"memcpy given "+16+" bytes to copy. Problem with quantum=1 corrections perhaps?");HEAP32[$39>>2]=HEAP32[$40>>2];HEAP32[$39+4>>2]=HEAP32[$40+4>>2];HEAP32[$39+8>>2]=HEAP32[$40+8>>2];HEAP32[$39+12>>2]=HEAP32[$40+12>>2];var $41=$tbase_addr;var $42=$m_addr;var $seg18=$42+444|0;var $base19=$seg18|0;HEAP32[$base19>>2]=$41;var $43=$tsize_addr;var $44=$m_addr;var $seg20=$44+444|0;var $size21=$seg20+4|0;HEAP32[$size21>>2]=$43;var $45=$mmapped_addr;var $46=$m_addr;var $seg22=$46+444|0;var $sflags=$seg22+12|0;HEAP32[$sflags>>2]=$45;var $47=$ss;var $48=$m_addr;var $seg23=$48+444|0;var $next=$seg23+8|0;HEAP32[$next>>2]=$47;__label__=7;break;case 7:var $49=$p;var $50=$49;var $add_ptr24=$50+4|0;var $51=$add_ptr24;$nextp=$51;var $52=$p;var $head25=$52+4|0;HEAP32[$head25>>2]=7;var $53=$nfences;var $inc=$53+1|0;$nfences=$inc;var $54=$nextp;var $head26=$54+4|0;var $55=$head26;var $56=$old_end;var $cmp27=$55>>>0<$56>>>0;if($cmp27){__label__=8;break}else{__label__=9;break}case 8:var $57=$nextp;$p=$57;__label__=10;break;case 9:__label__=11;break;case 10:__label__=7;break;case 11:var $58=$csp;var $59=$old_top;var $cmp28=($58|0)!=($59|0);if($cmp28){__label__=12;break}else{__label__=48;break}case 12:var $60=$old_top;var $61=$60;$q=$61;var $62=$csp;var $63=$old_top;var $sub_ptr_lhs_cast=$62;var $sub_ptr_rhs_cast=$63;var $sub_ptr_sub=$sub_ptr_lhs_cast-$sub_ptr_rhs_cast|0;$psize=$sub_ptr_sub;var $64=$q;var $65=$64;var $66=$psize;var $add_ptr30=$65+$66|0;var $67=$add_ptr30;$tn=$67;var $68=$tn;var $head31=$68+4|0;var $69=HEAP32[$head31>>2];var $and32=$69&-2;HEAP32[$head31>>2]=$and32;var $70=$psize;var $or33=$70|1;var $71=$q;var $head34=$71+4|0;HEAP32[$head34>>2]=$or33;var $72=$psize;var $73=$q;var $74=$73;var $75=$psize;var $add_ptr35=$74+$75|0;var $76=$add_ptr35;var $prev_foot=$76|0;HEAP32[$prev_foot>>2]=$72;var $77=$psize;var $shr=$77>>>3;var $cmp36=$shr>>>0<32;if($cmp36){__label__=13;break}else{__label__=20;break}case 13:var $78=$psize;var $shr38=$78>>>3;$I=$shr38;var $79=$I;var $shl=$79<<1;var $80=$m_addr;var $smallbins=$80+40|0;var $arrayidx=$smallbins+($shl<<2)|0;var $81=$arrayidx;var $82=$81;$B=$82;var $83=$B;$F=$83;var $84=$m_addr;var $smallmap=$84|0;var $85=HEAP32[$smallmap>>2];var $86=$I;var $shl39=1<<$86;var $and40=$85&$shl39;var $tobool=($and40|0)!=0;if($tobool){__label__=15;break}else{__label__=14;break}case 14:var $87=$I;var $shl42=1<<$87;var $88=$m_addr;var $smallmap43=$88|0;var $89=HEAP32[$smallmap43>>2];var $or44=$89|$shl42;HEAP32[$smallmap43>>2]=$or44;__label__=19;break;case 15:var $90=$B;var $fd=$90+8|0;var $91=HEAP32[$fd>>2];var $92=$91;var $93=$m_addr;var $least_addr=$93+16|0;var $94=HEAPU32[$least_addr>>2];var $cmp46=$92>>>0>=$94>>>0;var $conv=$cmp46&1;var $expval=$conv==1;var $tobool47=($expval|0)!=0;if($tobool47){__label__=16;break}else{__label__=17;break}case 16:var $95=$B;var $fd49=$95+8|0;var $96=HEAP32[$fd49>>2];$F=$96;__label__=18;break;case 17:_abort();throw"Reached an unreachable!";case 18:__label__=19;break;case 19:var $97=$q;var $98=$B;var $fd53=$98+8|0;HEAP32[$fd53>>2]=$97;var $99=$q;var $100=$F;var $bk=$100+12|0;HEAP32[$bk>>2]=$99;var $101=$F;var $102=$q;var $fd54=$102+8|0;HEAP32[$fd54>>2]=$101;var $103=$B;var $104=$q;var $bk55=$104+12|0;HEAP32[$bk55>>2]=$103;__label__=47;break;case 20:var $105=$q;var $106=$105;$TP=$106;var $107=$psize;var $shr58=$107>>>8;$X=$shr58;var $108=$X;var $cmp59=($108|0)==0;if($cmp59){__label__=21;break}else{__label__=22;break}case 21:$I57=0;__label__=26;break;case 22:var $109=$X;var $cmp63=$109>>>0>65535;if($cmp63){__label__=23;break}else{__label__=24;break}case 23:$I57=31;__label__=25;break;case 24:var $110=$X;$Y=$110;var $111=$Y;var $sub67=$111-256|0;var $shr68=$sub67>>>16;var $and69=$shr68&8;$N=$and69;var $112=$N;var $113=$Y;var $shl70=$113<<$112;$Y=$shl70;var $sub71=$shl70-4096|0;var $shr72=$sub71>>>16;var $and73=$shr72&4;$K=$and73;var $114=$K;var $115=$N;var $add74=$115+$114|0;$N=$add74;var $116=$K;var $117=$Y;var $shl75=$117<<$116;$Y=$shl75;var $sub76=$shl75-16384|0;var $shr77=$sub76>>>16;var $and78=$shr77&2;$K=$and78;var $118=$N;var $add79=$118+$and78|0;$N=$add79;var $119=$N;var $sub80=14-$119|0;var $120=$K;var $121=$Y;var $shl81=$121<<$120;$Y=$shl81;var $shr82=$shl81>>>15;var $add83=$sub80+$shr82|0;$K=$add83;var $122=$K;var $shl84=$122<<1;var $123=$psize;var $124=$K;var $add85=$124+7|0;var $shr86=$123>>>($add85>>>0);var $and87=$shr86&1;var $add88=$shl84+$and87|0;$I57=$add88;__label__=25;break;case 25:__label__=26;break;case 26:var $125=$I57;var $126=$m_addr;var $treebins=$126+304|0;var $arrayidx91=$treebins+($125<<2)|0;$H=$arrayidx91;var $127=$I57;var $128=$TP;var $index=$128+28|0;HEAP32[$index>>2]=$127;var $129=$TP;var $child=$129+16|0;var $arrayidx92=$child+4|0;HEAP32[$arrayidx92>>2]=0;var $130=$TP;var $child93=$130+16|0;var $arrayidx94=$child93|0;HEAP32[$arrayidx94>>2]=0;var $131=$m_addr;var $treemap=$131+4|0;var $132=HEAP32[$treemap>>2];var $133=$I57;var $shl95=1<<$133;var $and96=$132&$shl95;var $tobool97=($and96|0)!=0;if($tobool97){__label__=28;break}else{__label__=27;break}case 27:var $134=$I57;var $shl99=1<<$134;var $135=$m_addr;var $treemap100=$135+4|0;var $136=HEAP32[$treemap100>>2];var $or101=$136|$shl99;HEAP32[$treemap100>>2]=$or101;var $137=$TP;var $138=$H;HEAP32[$138>>2]=$137;var $139=$H;var $140=$139;var $141=$TP;var $parent=$141+24|0;HEAP32[$parent>>2]=$140;var $142=$TP;var $143=$TP;var $bk102=$143+12|0;HEAP32[$bk102>>2]=$142;var $144=$TP;var $fd103=$144+8|0;HEAP32[$fd103>>2]=$142;__label__=46;break;case 28:var $145=$H;var $146=HEAP32[$145>>2];$T=$146;var $147=$psize;var $148=$I57;var $cmp106=($148|0)==31;if($cmp106){__label__=29;break}else{__label__=30;break}case 29:var $cond115=0;__label__=31;break;case 30:var $149=$I57;var $shr110=$149>>>1;var $add111=$shr110+8|0;var $sub112=$add111-2|0;var $sub113=31-$sub112|0;var $cond115=$sub113;__label__=31;break;case 31:var $cond115;var $shl116=$147<<$cond115;$K105=$shl116;__label__=32;break;case 32:var $150=$T;var $head118=$150+4|0;var $151=HEAP32[$head118>>2];var $and119=$151&-8;var $152=$psize;var $cmp120=($and119|0)!=($152|0);if($cmp120){__label__=33;break}else{__label__=39;break}case 33:var $153=$K105;var $shr123=$153>>>31;var $and124=$shr123&1;var $154=$T;var $child125=$154+16|0;var $arrayidx126=$child125+($and124<<2)|0;$C=$arrayidx126;var $155=$K105;var $shl127=$155<<1;$K105=$shl127;var $156=$C;var $157=HEAP32[$156>>2];var $cmp128=($157|0)!=0;if($cmp128){__label__=34;break}else{__label__=35;break}case 34:var $158=$C;var $159=HEAP32[$158>>2];$T=$159;__label__=38;break;case 35:var $160=$C;var $161=$160;var $162=$m_addr;var $least_addr132=$162+16|0;var $163=HEAPU32[$least_addr132>>2];var $cmp133=$161>>>0>=$163>>>0;var $conv134=$cmp133&1;var $expval135=$conv134==1;var $tobool136=($expval135|0)!=0;if($tobool136){__label__=36;break}else{__label__=37;break}case 36:var $164=$TP;var $165=$C;HEAP32[$165>>2]=$164;var $166=$T;var $167=$TP;var $parent138=$167+24|0;HEAP32[$parent138>>2]=$166;var $168=$TP;var $169=$TP;var $bk139=$169+12|0;HEAP32[$bk139>>2]=$168;var $170=$TP;var $fd140=$170+8|0;HEAP32[$fd140>>2]=$168;__label__=45;break;case 37:_abort();throw"Reached an unreachable!";case 38:__label__=44;break;case 39:var $171=$T;var $fd145=$171+8|0;var $172=HEAP32[$fd145>>2];$F144=$172;var $173=$T;var $174=$173;var $175=$m_addr;var $least_addr146=$175+16|0;var $176=HEAPU32[$least_addr146>>2];var $cmp147=$174>>>0>=$176>>>0;if($cmp147){__label__=40;break}else{var $181=0;__label__=41;break}case 40:var $177=$F144;var $178=$177;var $179=$m_addr;var $least_addr149=$179+16|0;var $180=HEAPU32[$least_addr149>>2];var $cmp150=$178>>>0>=$180>>>0;var $181=$cmp150;__label__=41;break;case 41:var $181;var $land_ext=$181&1;var $expval152=$land_ext==1;var $tobool153=($expval152|0)!=0;if($tobool153){__label__=42;break}else{__label__=43;break}case 42:var $182=$TP;var $183=$F144;var $bk155=$183+12|0;HEAP32[$bk155>>2]=$182;var $184=$T;var $fd156=$184+8|0;HEAP32[$fd156>>2]=$182;var $185=$F144;var $186=$TP;var $fd157=$186+8|0;HEAP32[$fd157>>2]=$185;var $187=$T;var $188=$TP;var $bk158=$188+12|0;HEAP32[$bk158>>2]=$187;var $189=$TP;var $parent159=$189+24|0;HEAP32[$parent159>>2]=0;__label__=45;break;case 43:_abort();throw"Reached an unreachable!";case 44:__label__=32;break;case 45:__label__=46;break;case 46:__label__=47;break;case 47:__label__=48;break;case 48:;return;default:assert(0,"bad label: "+__label__)}}_add_segment["X"]=1;function __Znwj($size){var __label__;__label__=0;while(1)switch(__label__){case 0:var $size_addr;var $p;var $nh;var $exn_slot;var $ehselector_slot;$size_addr=$size;var $0=$size_addr;var $cmp=($0|0)==0;if($cmp){__label__=1;break}else{__label__=2;break}case 1:$size_addr=1;__label__=2;break;case 2:__label__=3;break;case 3:var $1=$size_addr;var $call=_malloc($1);$p=$call;var $cmp1=($call|0)==0;if($cmp1){__label__=4;break}else{__label__=12;break}case 4:var $call2=__ZSt15get_new_handlerv();$nh=$call2;var $2=$nh;var $tobool=($2|0)!=0;if($tobool){__label__=5;break}else{__label__=10;break}case 5:var $3=$nh;(function(){try{__THREW__=false;return FUNCTION_TABLE[$3]()}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}})();if(!__THREW__){__label__=6;break}else{__label__=7;break}case 6:__label__=11;break;case 7:var $4=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);var $5=$4.f0;$exn_slot=$5;var $6=$4.f1;$ehselector_slot=$6;__label__=8;break;case 8:var $sel=$ehselector_slot;var $ehspec_fails=($sel|0)<0;if($ehspec_fails){__label__=9;break}else{__label__=13;break}case 9:var $exn=$exn_slot;___cxa_call_unexpected($exn);throw"Reached an unreachable!";case 10:var $exception=___cxa_allocate_exception(4);var $7=$exception;FUNCTION_TABLE[__ZNSt9bad_allocC1Ev]($7);(function(){try{__THREW__=false;return ___cxa_throw($exception,__ZTISt9bad_alloc,2)}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}})();if(!__THREW__){__label__=14;break}else{__label__=7;break}case 11:__label__=3;break;case 12:var $8=$p;return $8;case 13:var $exn5=$exn_slot;var $exn6=$exn_slot;var $sel7=$ehselector_slot;var $lpad_val=(tempValue=[0,0,0,0,0,0,0,0],tempValue.f0=$exn6,tempValue);var $lpad_val8=($lpad_val.f1=$sel7,$lpad_val);print("Resuming exception");throw HEAP32[_llvm_eh_exception.buf>>2];case 14:throw"Reached an unreachable!";default:assert(0,"bad label: "+__label__)}}__Znwj["X"]=1;function __ZnwjRKSt9nothrow_t($size,$0){var __label__;__label__=0;while(1)switch(__label__){case 0:var $size_addr;var $_addr;var $p;var $exn_slot;var $ehselector_slot;$size_addr=$size;$_addr=$0;$p=0;var $1=$size_addr;var $call=function(){try{__THREW__=false;return __Znwj($1)}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}}();if(!__THREW__){__label__=1;break}else{__label__=2;break};case 1:$p=$call;__label__=5;break;case 2:var $2=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[0]);var $3=$2.f0;$exn_slot=$3;var $4=$2.f1;$ehselector_slot=$4;__label__=3;break;case 3:var $exn=$exn_slot;var $5=___cxa_begin_catch($exn);(function(){try{__THREW__=false;return ___cxa_end_catch()}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}})();if(!__THREW__){__label__=4;break}else{__label__=6;break}case 4:__label__=5;break;case 5:var $6=$p;return $6;case 6:var $7=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);var $8=$7.f0;$exn_slot=$8;var $9=$7.f1;$ehselector_slot=$9;__label__=7;break;case 7:var $exn3=$exn_slot;___cxa_call_unexpected($exn3);throw"Reached an unreachable!";default:assert(0,"bad label: "+__label__)}}function __Znaj($size){var __label__;__label__=0;while(1)switch(__label__){case 0:var $size_addr;var $exn_slot;var $ehselector_slot;$size_addr=$size;var $0=$size_addr;var $call=function(){try{__THREW__=false;return __Znwj($0)}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}}();if(!__THREW__){__label__=1;break}else{__label__=2;break};case 1:;return $call;case 2:var $1=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);var $2=$1.f0;$exn_slot=$2;var $3=$1.f1;$ehselector_slot=$3;__label__=3;break;case 3:var $sel=$ehselector_slot;var $ehspec_fails=($sel|0)<0;if($ehspec_fails){__label__=4;break}else{__label__=5;break}case 4:var $exn=$exn_slot;___cxa_call_unexpected($exn);throw"Reached an unreachable!";case 5:var $exn1=$exn_slot;var $exn2=$exn_slot;var $sel3=$ehselector_slot;var $lpad_val=(tempValue=[0,0,0,0,0,0,0,0],tempValue.f0=$exn2,tempValue);var $lpad_val4=($lpad_val.f1=$sel3,$lpad_val);print("Resuming exception");throw HEAP32[_llvm_eh_exception.buf>>2];default:assert(0,"bad label: "+__label__)}}function __ZnajRKSt9nothrow_t($size,$nothrow){var __label__;__label__=0;while(1)switch(__label__){case 0:var $size_addr;var $nothrow_addr;var $p;var $exn_slot;var $ehselector_slot;$size_addr=$size;$nothrow_addr=$nothrow;$p=0;var $0=$size_addr;var $call=function(){try{__THREW__=false;return __Znaj($0)}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}}();if(!__THREW__){__label__=1;break}else{__label__=2;break};case 1:$p=$call;__label__=5;break;case 2:var $1=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[0]);var $2=$1.f0;$exn_slot=$2;var $3=$1.f1;$ehselector_slot=$3;__label__=3;break;case 3:var $exn=$exn_slot;var $4=___cxa_begin_catch($exn);(function(){try{__THREW__=false;return ___cxa_end_catch()}catch(e){if(typeof e!="number")throw e;if(ABORT)throw e;__THREW__=true;print("Exception: "+e+", currently at: "+(new Error).stack);return null}})();if(!__THREW__){__label__=4;break}else{__label__=6;break}case 4:__label__=5;break;case 5:var $5=$p;return $5;case 6:var $6=___cxa_find_matching_catch(HEAP32[_llvm_eh_exception.buf>>2],HEAP32[_llvm_eh_exception.buf+4>>2],[]);var $7=$6.f0;$exn_slot=$7;var $8=$6.f1;$ehselector_slot=$8;__label__=7;break;case 7:var $exn3=$exn_slot;___cxa_call_unexpected($exn3);throw"Reached an unreachable!";default:assert(0,"bad label: "+__label__)}}function __ZNKSt9bad_alloc4whatEv($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;return STRING_TABLE.__str3|0}function __ZNKSt20bad_array_new_length4whatEv($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;return STRING_TABLE.__str14|0}function __ZNSt20bad_array_new_lengthC2Ev($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;var $0=$this1;__ZNSt9bad_allocC2Ev($0);var $1=$this1;HEAP32[$1>>2]=__ZTVSt20bad_array_new_length+8|0;return}function __ZNSt20bad_array_new_lengthD0Ev($this){var __label__;var $this_addr;$this_addr=$this;var $this1=$this_addr;FUNCTION_TABLE[__ZNSt20bad_array_new_lengthD1Ev]($this1);var $0=$this1;__ZdlPv($0);return}function __ZSt17__throw_bad_allocv(){var __label__;__label__=0;while(1)switch(__label__){case 0:var $exception=___cxa_allocate_exception(4);var $0=$exception;FUNCTION_TABLE[__ZNSt9bad_allocC1Ev]($0);___cxa_throw($exception,__ZTISt9bad_alloc,2);throw"Reached an unreachable!";case 1:;return;default:assert(0,"bad label: "+__label__)}}var _llvm_dbg_declare;function _memset(ptr,value,num,align){if(num>=20){var stop=ptr+num;while(ptr%4){HEAP8[ptr++]=value}if(value<0)value+=256;var ptr4=ptr>>2,stop4=stop>>2,value4=value|value<<8|value<<16|value<<24;while(ptr4<stop4){HEAP32[ptr4++]=value4}ptr=ptr4<<2;while(ptr<stop){HEAP8[ptr++]=value}}else{while(num--){HEAP8[ptr++]=value}}}var _llvm_memset_p0i8_i32=_memset;function _memcpy(dest,src,num,align){assert(num%1===0,"memcpy given "+num+" bytes to copy. Problem with quantum=1 corrections perhaps?");if(num>=20&&src%2==dest%2){if(src%4==dest%4){var stop=src+num;while(src%4){HEAP8[dest++]=HEAP8[src++]}var src4=src>>2,dest4=dest>>2,stop4=stop>>2;while(src4<stop4){HEAP32[dest4++]=HEAP32[src4++]}src=src4<<2;dest=dest4<<2;while(src<stop){HEAP8[dest++]=HEAP8[src++]}}else{var stop=src+num;if(src%2){HEAP8[dest++]=HEAP8[src++]}var src2=src>>1,dest2=dest>>1,stop2=stop>>1;while(src2<stop2){HEAP16[dest2++]=HEAP16[src2++]}src=src2<<1;dest=dest2<<1;if(src<stop){HEAP8[dest++]=HEAP8[src++]}}}else{while(num--){HEAP8[dest++]=HEAP8[src++]}}}var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;function _memmove(dest,src,num,align){if(src<dest&&dest<src+num){src+=num;dest+=num;while(num--){dest--;src--;HEAP8[dest]=HEAP8[src]}}else{_memcpy(dest,src,num,align)}}var _llvm_memmove_p0i8_p0i8_i32=_memmove;var _llvm_expect_i32;function _abort(code){ABORT=true;throw"ABORT: "+code+", at "+(new Error).stack}var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};function ___setErrNo(value){if(!___setErrNo.ret)___setErrNo.ret=allocate([0],"i32",ALLOC_STATIC);HEAP32[___setErrNo.ret>>2]=value;return value}var _stdin=0;var _stdout=0;var _stderr=0;var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,absolutePath:function(relative,base){if(typeof relative!=="string")return null;if(base===undefined)base=FS.currentPath;if(relative&&relative[0]=="/")base="";var full=base+"/"+relative;var parts=full.split("/").reverse();var absolute=[""];while(parts.length){var part=parts.pop();if(part==""||part=="."){}else if(part==".."){if(absolute.length>1)absolute.pop()}else{absolute.push(part)}}return absolute.length==1?"/":absolute.join("/")},analyzePath:function(path,dontResolveLastLink,linksVisited){var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};path=FS.absolutePath(path);if(path=="/"){ret.isRoot=true;ret.exists=ret.parentExists=true;ret.name="/";ret.path=ret.parentPath="/";ret.object=ret.parentObject=FS.root}else if(path!==null){linksVisited=linksVisited||0;path=path.slice(1).split("/");var current=FS.root;var traversed=[""];while(path.length){if(path.length==1&&current.isFolder){ret.parentExists=true;ret.parentPath=traversed.length==1?"/":traversed.join("/");ret.parentObject=current;ret.name=path[0]}var target=path.shift();if(!current.isFolder){ret.error=ERRNO_CODES.ENOTDIR;break}else if(!current.read){ret.error=ERRNO_CODES.EACCES;break}else if(!current.contents.hasOwnProperty(target)){ret.error=ERRNO_CODES.ENOENT;break}current=current.contents[target];if(current.link&&!(dontResolveLastLink&&path.length==0)){if(linksVisited>40){ret.error=ERRNO_CODES.ELOOP;break}var link=FS.absolutePath(current.link,traversed.join("/"));return FS.analyzePath([link].concat(path).join("/"),dontResolveLastLink,linksVisited+1)}traversed.push(target);if(path.length==0){ret.exists=true;ret.path=traversed.join("/");ret.object=current}}return ret}return ret},findObject:function(path,dontResolveLastLink){FS.ensureRoot();var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},createObject:function(parent,name,properties,canRead,canWrite){if(!parent)parent="/";if(typeof parent==="string")parent=FS.findObject(parent);if(!parent){___setErrNo(ERRNO_CODES.EACCES);throw new Error("Parent path must exist.")}if(!parent.isFolder){___setErrNo(ERRNO_CODES.ENOTDIR);throw new Error("Parent must be a folder.")}if(!parent.write&&!FS.ignorePermissions){___setErrNo(ERRNO_CODES.EACCES);throw new Error("Parent folder must be writeable.")}if(!name||name=="."||name==".."){___setErrNo(ERRNO_CODES.ENOENT);throw new Error("Name must not be empty.")}if(parent.contents.hasOwnProperty(name)){___setErrNo(ERRNO_CODES.EEXIST);throw new Error("Can't overwrite object.")}parent.contents[name]={read:canRead===undefined?true:canRead,write:canWrite===undefined?false:canWrite,timestamp:Date.now(),inodeNumber:FS.nextInode++};for(var key in properties){if(properties.hasOwnProperty(key)){parent.contents[name][key]=properties[key]}}return parent.contents[name]},createFolder:function(parent,name,canRead,canWrite){var properties={isFolder:true,isDevice:false,contents:{}};return FS.createObject(parent,name,properties,canRead,canWrite)},createPath:function(parent,path,canRead,canWrite){var current=FS.findObject(parent);if(current===null)throw new Error("Invalid parent.");path=path.split("/").reverse();while(path.length){var part=path.pop();if(!part)continue;if(!current.contents.hasOwnProperty(part)){FS.createFolder(current,part,canRead,canWrite)}current=current.contents[part]}return current},createFile:function(parent,name,properties,canRead,canWrite){properties.isFolder=false;return FS.createObject(parent,name,properties,canRead,canWrite)},createDataFile:function(parent,name,data,canRead,canWrite){if(typeof data==="string"){var dataArray=[];for(var i=0;i<data.length;i++)dataArray.push(data.charCodeAt(i));data=dataArray}var properties={isDevice:false,contents:data};return FS.createFile(parent,name,properties,canRead,canWrite)},createLazyFile:function(parent,name,url,canRead,canWrite){var properties={isDevice:false,url:url};return FS.createFile(parent,name,properties,canRead,canWrite)},createLink:function(parent,name,target,canRead,canWrite){var properties={isDevice:false,link:target};return FS.createFile(parent,name,properties,canRead,canWrite)},createDevice:function(parent,name,input,output){if(!(input||output)){throw new Error("A device must have at least one callback defined.")}var ops={isDevice:true,input:input,output:output};return FS.createFile(parent,name,ops,Boolean(input),Boolean(output))},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){var xhr=new XMLHttpRequest;xhr.open("GET",obj.url,false);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(xhr.status!=200&&xhr.status!=0)success=false;if(xhr.response!==undefined){obj.contents=new Uint8Array(xhr.response||[])}else{obj.contents=intArrayFromString(xhr.responseText||"",true)}}else if(typeof read!=="undefined"){try{obj.contents=intArrayFromString(read(obj.url),true)}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success},ensureRoot:function(){if(FS.root)return;FS.root={read:true,write:true,isFolder:true,isDevice:false,timestamp:Date.now(),inodeNumber:1,contents:{}}},init:function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureRoot();if(!input)input=function(){if(!input.cache||!input.cache.length){var result;if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ")}else if(typeof readline=="function"){result=readline()}if(!result)result="";input.cache=intArrayFromString(result+"\n",true)}return input.cache.shift()};if(!output)output=function(val){if(val===null||val==="\n".charCodeAt(0)){output.printer(output.buffer.join(""));output.buffer=[]}else{output.buffer.push(String.fromCharCode(val))}};if(!output.printer)output.printer=print;if(!output.buffer)output.buffer=[];if(!error)error=output;FS.createFolder("/","tmp",true,true);var devFolder=FS.createFolder("/","dev",true,true);var stdin=FS.createDevice(devFolder,"stdin",input);var stdout=FS.createDevice(devFolder,"stdout",null,output);var stderr=FS.createDevice(devFolder,"stderr",null,error);FS.createDevice(devFolder,"tty",input,output);FS.streams[1]={path:"/dev/stdin",object:stdin,position:0,isRead:true,isWrite:false,isAppend:false,error:false,eof:false,ungotten:[]};FS.streams[2]={path:"/dev/stdout",object:stdout,position:0,isRead:false,isWrite:true,isAppend:false,error:false,eof:false,ungotten:[]};FS.streams[3]={path:"/dev/stderr",object:stderr,position:0,isRead:false,isWrite:true,isAppend:false,error:false,eof:false,ungotten:[]};_stdin=allocate([1],"void*",ALLOC_STATIC);_stdout=allocate([2],"void*",ALLOC_STATIC);_stderr=allocate([3],"void*",ALLOC_STATIC);FS.createPath("/","dev/shm/tmp",true,true);FS.streams[_stdin]=FS.streams[1];FS.streams[_stdout]=FS.streams[2];FS.streams[_stderr]=FS.streams[3];__impure_ptr=allocate([allocate([0,0,0,0,_stdin,0,0,0,_stdout,0,0,0,_stderr,0,0,0],"void*",ALLOC_STATIC)],"void*",ALLOC_STATIC)},quit:function(){if(!FS.init.initialized)return;if(FS.streams[2].object.output.buffer.length>0)FS.streams[2].object.output("\n".charCodeAt(0));if(FS.streams[3].object.output.buffer.length>0)FS.streams[3].object.output("\n".charCodeAt(0))}};function _pwrite(fildes,buf,nbyte,offset){var stream=FS.streams[fildes];if(!stream||stream.object.isDevice){___setErrNo(ERRNO_CODES.EBADF);return-1}else if(!stream.isWrite){___setErrNo(ERRNO_CODES.EACCES);return-1}else if(stream.object.isFolder){___setErrNo(ERRNO_CODES.EISDIR);return-1}else if(nbyte<0||offset<0){___setErrNo(ERRNO_CODES.EINVAL);return-1}else{var contents=stream.object.contents;while(contents.length<offset)contents.push(0);for(var i=0;i<nbyte;i++){contents[offset+i]=HEAPU8[buf+i]}stream.object.timestamp=Date.now();return i}}function _write(fildes,buf,nbyte){var stream=FS.streams[fildes];if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}else if(!stream.isWrite){___setErrNo(ERRNO_CODES.EACCES);return-1}else if(nbyte<0){___setErrNo(ERRNO_CODES.EINVAL);return-1}else{if(stream.object.isDevice){if(stream.object.output){for(var i=0;i<nbyte;i++){try{stream.object.output(HEAP8[buf+i])}catch(e){___setErrNo(ERRNO_CODES.EIO);return-1}}stream.object.timestamp=Date.now();return i}else{___setErrNo(ERRNO_CODES.ENXIO);return-1}}else{var bytesWritten=_pwrite(fildes,buf,nbyte,stream.position);if(bytesWritten!=-1)stream.position+=bytesWritten;return bytesWritten}}}function _fwrite(ptr,size,nitems,stream){var bytesToWrite=nitems*size;if(bytesToWrite==0)return 0;var bytesWritten=_write(stream,ptr,bytesToWrite);if(bytesWritten==-1){if(FS.streams[stream])FS.streams[stream].error=true;return-1}else{return Math.floor(bytesWritten/size)}}function __formatString(format,varargs){var textIndex=format;var argIndex=0;function getNextArg(type){var ret;if(type==="double"){ret=(tempDoubleI32[0]=HEAP32[varargs+argIndex>>2],tempDoubleI32[1]=HEAP32[varargs+argIndex+4>>2],tempDoubleF64[0])}else if(type=="i64"){ret=[HEAP32[varargs+argIndex>>2],HEAP32[varargs+argIndex+4>>2]]}else{type="i32";ret=HEAP32[varargs+argIndex>>2]}argIndex+=Runtime.getNativeFieldSize(type);return ret}var ret=[];var curr,next,currArg;while(1){var startTextIndex=textIndex;curr=HEAP8[textIndex];if(curr===0)break;next=HEAP8[textIndex+1];if(curr=="%".charCodeAt(0)){var flagAlwaysSigned=false;var flagLeftAlign=false;var flagAlternative=false;var flagZeroPad=false;flagsLoop:while(1){switch(next){case"+".charCodeAt(0):flagAlwaysSigned=true;break;case"-".charCodeAt(0):flagLeftAlign=true;break;case"#".charCodeAt(0):flagAlternative=true;break;case"0".charCodeAt(0):if(flagZeroPad){break flagsLoop}else{flagZeroPad=true;break}default:break flagsLoop}textIndex++;next=HEAP8[textIndex+1]}var width=0;if(next=="*".charCodeAt(0)){width=getNextArg("i32");textIndex++;next=HEAP8[textIndex+1]}else{while(next>="0".charCodeAt(0)&&next<="9".charCodeAt(0)){width=width*10+(next-"0".charCodeAt(0));textIndex++;next=HEAP8[textIndex+1]}}var precisionSet=false;if(next==".".charCodeAt(0)){var precision=0;precisionSet=true;textIndex++;next=HEAP8[textIndex+1];if(next=="*".charCodeAt(0)){precision=getNextArg("i32");textIndex++}else{while(1){var precisionChr=HEAP8[textIndex+1];if(precisionChr<"0".charCodeAt(0)||precisionChr>"9".charCodeAt(0))break;precision=precision*10+(precisionChr-"0".charCodeAt(0));textIndex++}}next=HEAP8[textIndex+1]}else{var precision=6}var argSize;switch(String.fromCharCode(next)){case"h":var nextNext=HEAP8[textIndex+2];if(nextNext=="h".charCodeAt(0)){textIndex++;argSize=1}else{argSize=2}break;case"l":var nextNext=HEAP8[textIndex+2];if(nextNext=="l".charCodeAt(0)){textIndex++;argSize=8}else{argSize=4}break;case"L":case"q":case"j":argSize=8;break;case"z":case"t":case"I":argSize=4;break;default:argSize=null}if(argSize)textIndex++;next=HEAP8[textIndex+1];if(["d","i","u","o","x","X","p"].indexOf(String.fromCharCode(next))!=-1){var signed=next=="d".charCodeAt(0)||next=="i".charCodeAt(0);argSize=argSize||4;var currArg=getNextArg("i"+argSize*8);if(argSize==8){currArg=Runtime.makeBigInt(currArg[0],currArg[1],next=="u".charCodeAt(0))}if(argSize<=4){var limit=Math.pow(256,argSize)-1;currArg=(signed?reSign:unSign)(currArg&limit,argSize*8)}var currAbsArg=Math.abs(currArg);var argText;var prefix="";if(next=="d".charCodeAt(0)||next=="i".charCodeAt(0)){argText=reSign(currArg,8*argSize,1).toString(10)}else if(next=="u".charCodeAt(0)){argText=unSign(currArg,8*argSize,1).toString(10);currArg=Math.abs(currArg)}else if(next=="o".charCodeAt(0)){argText=(flagAlternative?"0":"")+currAbsArg.toString(8)}else if(next=="x".charCodeAt(0)||next=="X".charCodeAt(0)){prefix=flagAlternative?"0x":"";if(currArg<0){currArg=-currArg;argText=(currAbsArg-1).toString(16);var buffer=[];for(var i=0;i<argText.length;i++){buffer.push((15-parseInt(argText[i],16)).toString(16))}argText=buffer.join("");while(argText.length<argSize*2)argText="f"+argText}else{argText=currAbsArg.toString(16)}if(next=="X".charCodeAt(0)){prefix=prefix.toUpperCase();argText=argText.toUpperCase()}}else if(next=="p".charCodeAt(0)){if(currAbsArg===0){argText="(nil)"}else{prefix="0x";argText=currAbsArg.toString(16)}}if(precisionSet){while(argText.length<precision){argText="0"+argText}}if(flagAlwaysSigned){if(currArg<0){prefix="-"+prefix}else{prefix="+"+prefix}}while(prefix.length+argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad){argText="0"+argText}else{prefix=" "+prefix}}}argText=prefix+argText;argText.split("").forEach(function(chr){ret.push(chr.charCodeAt(0))})}else if(["f","F","e","E","g","G"].indexOf(String.fromCharCode(next))!=-1){var currArg=getNextArg("double");var argText;if(isNaN(currArg)){argText="nan";flagZeroPad=false}else if(!isFinite(currArg)){argText=(currArg<0?"-":"")+"inf";flagZeroPad=false}else{var isGeneral=false;var effectivePrecision=Math.min(precision,20);if(next=="g".charCodeAt(0)||next=="G".charCodeAt(0)){isGeneral=true;precision=precision||1;var exponent=parseInt(currArg.toExponential(effectivePrecision).split("e")[1],10);if(precision>exponent&&exponent>=-4){next=(next=="g".charCodeAt(0)?"f":"F").charCodeAt(0);precision-=exponent+1}else{next=(next=="g".charCodeAt(0)?"e":"E").charCodeAt(0);precision--}effectivePrecision=Math.min(precision,20)}if(next=="e".charCodeAt(0)||next=="E".charCodeAt(0)){argText=currArg.toExponential(effectivePrecision);if(/[eE][-+]\d$/.test(argText)){argText=argText.slice(0,-1)+"0"+argText.slice(-1)}}else if(next=="f".charCodeAt(0)||next=="F".charCodeAt(0)){argText=currArg.toFixed(effectivePrecision)}var parts=argText.split("e");if(isGeneral&&!flagAlternative){while(parts[0].length>1&&parts[0].indexOf(".")!=-1&&(parts[0].slice(-1)=="0"||parts[0].slice(-1)==".")){parts[0]=parts[0].slice(0,-1)}}else{if(flagAlternative&&argText.indexOf(".")==-1)parts[0]+=".";while(precision>effectivePrecision++)parts[0]+="0"}argText=parts[0]+(parts.length>1?"e"+parts[1]:"");if(next=="E".charCodeAt(0))argText=argText.toUpperCase();if(flagAlwaysSigned&&currArg>=0){argText="+"+argText}}while(argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad&&(argText[0]=="-"||argText[0]=="+")){argText=argText[0]+"0"+argText.slice(1)}else{argText=(flagZeroPad?"0":" ")+argText}}}if(next<"a".charCodeAt(0))argText=argText.toUpperCase();argText.split("").forEach(function(chr){ret.push(chr.charCodeAt(0))})}else if(next=="s".charCodeAt(0)){var arg=getNextArg("i8*");var copiedString;if(arg){copiedString=String_copy(arg);if(precisionSet&&copiedString.length>precision){copiedString=copiedString.slice(0,precision)}}else{copiedString=intArrayFromString("(null)",true)}if(!flagLeftAlign){while(copiedString.length<width--){ret.push(" ".charCodeAt(0))}}ret=ret.concat(copiedString);if(flagLeftAlign){while(copiedString.length<width--){ret.push(" ".charCodeAt(0))}}}else if(next=="c".charCodeAt(0)){if(flagLeftAlign)ret.push(getNextArg("i8"));while(--width>0){ret.push(" ".charCodeAt(0))}if(!flagLeftAlign)ret.push(getNextArg("i8"))}else if(next=="n".charCodeAt(0)){var ptr=getNextArg("i32*");HEAP32[ptr>>2]=ret.length}else if(next=="%".charCodeAt(0)){ret.push(curr)}else{for(var i=startTextIndex;i<textIndex+2;i++){ret.push(HEAP8[i])}}textIndex+=2}else{ret.push(curr);textIndex+=1}}return ret}function _fprintf(stream,format,varargs){var result=__formatString(format,varargs);var stack=Runtime.stackSave();var ret=_fwrite(allocate(result,"i8",ALLOC_STACK),1,result.length,stream);Runtime.stackRestore(stack);return ret}function _sysconf(name){switch(name){case 8:return PAGE_SIZE;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1e3;case 106:return 700;case 52:return 256;case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4}___setErrNo(ERRNO_CODES.EINVAL);return-1}function _time(ptr){var ret=Math.floor(Date.now()/1e3);if(ptr){HEAP32[ptr>>2]=ret}return ret}function ___errno_location(){return ___setErrNo.ret}var ___errno=___errno_location;function _sbrk(bytes){var self=_sbrk;if(!self.called){STATICTOP=alignMemoryPage(STATICTOP);self.called=true}var ret=STATICTOP;if(bytes!=0)Runtime.staticAlloc(bytes);return ret}function ___gxx_personality_v0(){}function ___cxa_allocate_exception(size){return _malloc(size)}function _llvm_eh_exception(){return HEAP32[_llvm_eh_exception.buf>>2]}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___cxa_is_number_type(type){var isNumber=false;try{if(type==__ZTIi)isNumber=true}catch(e){}try{if(type==__ZTIl)isNumber=true}catch(e){}try{if(type==__ZTIx)isNumber=true}catch(e){}try{if(type==__ZTIf)isNumber=true}catch(e){}try{if(type==__ZTId)isNumber=true}catch(e){}return isNumber}function ___cxa_does_inherit(definiteType,possibilityType,possibility){if(possibility==0)return false;if(possibilityType==0||possibilityType==definiteType)return true;var possibility_type_info;if(___cxa_is_number_type(possibilityType)){possibility_type_info=possibilityType}else{var possibility_type_infoAddr=HEAP32[possibilityType>>2]-8;possibility_type_info=HEAP32[possibility_type_infoAddr>>2]}switch(possibility_type_info){case 0:var definite_type_infoAddr=HEAP32[definiteType>>2]-8;var definite_type_info=HEAP32[definite_type_infoAddr>>2];if(definite_type_info==0){var defPointerBaseAddr=definiteType+8;var defPointerBaseType=HEAP32[defPointerBaseAddr>>2];var possPointerBaseAddr=possibilityType+8;var possPointerBaseType=HEAP32[possPointerBaseAddr>>2];return ___cxa_does_inherit(defPointerBaseType,possPointerBaseType,possibility)}else return false;case 1:return false;case 2:var parentTypeAddr=possibilityType+8;var parentType=HEAP32[parentTypeAddr>>2];return ___cxa_does_inherit(definiteType,parentType,possibility);default:return false}}function ___cxa_find_matching_catch(thrown,throwntype,typeArray){if(throwntype!=0&&!___cxa_is_number_type(throwntype)){var throwntypeInfoAddr=HEAP32[throwntype>>2]-8;var throwntypeInfo=HEAP32[throwntypeInfoAddr>>2];if(throwntypeInfo==0)thrown=HEAP32[thrown>>2]}for(var i=0;i<typeArray.length;i++){if(___cxa_does_inherit(typeArray[i],throwntype,thrown))return{f0:thrown,f1:typeArray[i]}}return{f0:thrown,f1:throwntype}}function ___cxa_throw(ptr,type,destructor){if(!___cxa_throw.initialized){try{HEAP32[__ZTVN10__cxxabiv119__pointer_type_infoE>>2]=0}catch(e){}try{HEAP32[__ZTVN10__cxxabiv117__class_type_infoE>>2]=1}catch(e){}try{HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE>>2]=2}catch(e){}___cxa_throw.initialized=true}print("Compiled code throwing an exception, "+[ptr,type,destructor]+", at "+(new Error).stack);HEAP32[_llvm_eh_exception.buf>>2]=ptr;HEAP32[_llvm_eh_exception.buf+4>>2]=type;HEAP32[_llvm_eh_exception.buf+8>>2]=destructor;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr}function ___cxa_call_unexpected(exception){ABORT=true;throw exception}function ___cxa_begin_catch(ptr){__ZSt18uncaught_exceptionv.uncaught_exception--;return ptr}function ___cxa_free_exception(ptr){return _free(ptr)}function ___cxa_end_catch(){if(___cxa_end_catch.rethrown){___cxa_end_catch.rethrown=false;return}__THREW__=false;HEAP32[_llvm_eh_exception.buf+4>>2]=0;var ptr=HEAP32[_llvm_eh_exception.buf>>2];var destructor=HEAP32[_llvm_eh_exception.buf+8>>2];if(destructor){FUNCTION_TABLE[destructor](ptr);HEAP32[_llvm_eh_exception.buf+8>>2]=0}if(ptr){___cxa_free_exception(ptr);HEAP32[_llvm_eh_exception.buf>>2]=0}}var __ZNSt9exceptionD2Ev;function _llvm_lifetime_start(){}function _llvm_lifetime_end(){}__ATINIT__.unshift({func:function(){FS.ignorePermissions=false;if(!FS.init.initialized)FS.init()}});__ATEXIT__.push({func:function(){FS.quit()}});___setErrNo(0);_llvm_eh_exception.buf=allocate(12,"void*",ALLOC_STATIC);Module.callMain=function callMain(args){var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString("/bin/this.program"),"i8",ALLOC_STATIC)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_STATIC));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_STATIC);return _main(argc,argv,0)};var _prmno;var _prmnofsf;var _bitno_MR475;var _bitno_MR515;var _bitno_MR59;var _bitno_MR67;var _bitno_MR74;var _bitno_MR795;var _bitno_MR102;var _bitno_MR122;var _bitno_MRDTX;var _bitno;var _numOfBits;var _reorderBits_MR475;var _reorderBits_MR515;var _reorderBits_MR59;var _reorderBits_MR67;var _reorderBits_MR74;var _reorderBits_MR795;var _reorderBits_MR102;var _reorderBits_MR122;var _reorderBits;var _numCompressedBytes;var _startPos1;var _startPos2;var _trackTable;var _startPos;var _gamma1;var _gamma1_12k2;var _gamma2;var _corrweight;var _WmfDecBytesPerFrame;var _If2DecBytesPerFrame;var _dtx_log_en_adjust;var _lsf_hist_mean_scale;var _ec_gain_code_cdown;var _ec_gain_pitch_pdown;var _WmfEncBytesPerFrame;var _If2EncBytesPerFrame;var _qua_gain_pitch;var _qua_gain_code;var _pred_MR122;var _pred;var _gray;var _dgray;var _grid;var _inter_6;var _inv_sqrt_tbl;var _lag_h;var _lag_l;var _log2_tbl;var _table;var _slope;var _lsp_init_data;var _overflow_tbl;var _ph_imp_low_MR795;var _ph_imp_mid_MR795;var _ph_imp_low;var _ph_imp_mid;var _mode_dep_parm;var _a;var _b;var _pow2_tbl;var _inter_6_pred_lt;var _gamma3_MR122;var _gamma4_MR122;var _gamma3;var _gamma4;var _table_gain_MR475351;var _table_gain_MR475;var _past_rq_init;var _mean_lsf_3;var _pred_fac_3;var _dico1_lsf_3;var _dico2_lsf_3;var _dico3_lsf_3;var _mr515_3_lsf;var _mr795_1_lsf;var _mean_lsf_5;var _dico1_lsf_5;var _dico2_lsf_5;var _dico3_lsf_5;var _dico4_lsf_5;var _dico5_lsf_5;var _table_gain_highrates;var _table_gain_lowrates;var _sqrt_l_tbl;var _window_200_40;var _window_160_80;var _window_232_8;var __gm_;var _mparams;var __impure_ptr;var __ZSt7nothrow;var __ZL13__new_handler;var __ZTVSt9bad_alloc;var __ZTVSt20bad_array_new_length;var __ZTVN10__cxxabiv120__si_class_type_infoE;var __ZTISt9exception;var __ZTISt9bad_alloc;var __ZTISt20bad_array_new_length;var __ZTVSt9exception;var __ZNSt9bad_allocC1Ev;var __ZNSt9bad_allocD1Ev;var __ZNSt20bad_array_new_lengthC1Ev;var __ZNSt20bad_array_new_lengthD1Ev;var __ZNSt20bad_array_new_lengthD2Ev;STRING_TABLE.__str=allocate([101,110,99,111,100,101,114,0],"i8",ALLOC_STATIC);_prmno=allocate([17,0,19,0,19,0,19,0,19,0,23,0,39,0,57,0,5,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_prmnofsf=allocate([7,0,7,0,7,0,7,0,7,0,8,0,12,0,18,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR475=allocate([8,0,8,0,7,0,8,0,7,0,2,0,8,0,4,0,7,0,2,0,4,0,7,0,2,0,8,0,4,0,7,0,2,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR515=allocate([8,0,8,0,7,0,8,0,7,0,2,0,6,0,4,0,7,0,2,0,6,0,4,0,7,0,2,0,6,0,4,0,7,0,2,0,6,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR59=allocate([8,0,9,0,9,0,8,0,9,0,2,0,6,0,4,0,9,0,2,0,6,0,8,0,9,0,2,0,6,0,4,0,9,0,2,0,6,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR67=allocate([8,0,9,0,9,0,8,0,11,0,3,0,7,0,4,0,11,0,3,0,7,0,8,0,11,0,3,0,7,0,4,0,11,0,3,0,7,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR74=allocate([8,0,9,0,9,0,8,0,13,0,4,0,7,0,5,0,13,0,4,0,7,0,8,0,13,0,4,0,7,0,5,0,13,0,4,0,7,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR795=allocate([9,0,9,0,9,0,8,0,13,0,4,0,4,0,5,0,6,0,13,0,4,0,4,0,5,0,8,0,13,0,4,0,4,0,5,0,6,0,13,0,4,0,4,0,5,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR102=allocate([8,0,9,0,9,0,8,0,1,0,1,0,1,0,1,0,10,0,10,0,7,0,7,0,5,0,1,0,1,0,1,0,1,0,10,0,10,0,7,0,7,0,8,0,1,0,1,0,1,0,1,0,10,0,10,0,7,0,7,0,5,0,1,0,1,0,1,0,1,0,10,0,10,0,7,0,7,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MR122=allocate([7,0,8,0,9,0,8,0,6,0,9,0,4,0,4,0,4,0,4,0,4,0,4,0,3,0,3,0,3,0,3,0,3,0,5,0,6,0,4,0,4,0,4,0,4,0,4,0,4,0,3,0,3,0,3,0,3,0,3,0,5,0,9,0,4,0,4,0,4,0,4,0,4,0,4,0,3,0,3,0,3,0,3,0,3,0,5,0,6,0,4,0,4,0,4,0,4,0,4,0,4,0,3,0,3,0,3,0,3,0,3,0,5,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno_MRDTX=allocate([3,0,8,0,9,0,9,0,6,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_bitno=allocate(36,"*",ALLOC_STATIC);_numOfBits=allocate([95,0,103,0,118,0,134,0,148,0,159,0,204,0,244,0,39,0,43,0,38,0,37,0,0,0,0,0,0,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR475=allocate([0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,23,0,24,0,25,0,26,0,27,0,28,0,48,0,49,0,61,0,62,0,82,0,83,0,47,0,46,0,45,0,44,0,81,0,80,0,79,0,78,0,17,0,18,0,20,0,22,0,77,0,76,0,75,0,74,0,29,0,30,0,43,0,42,0,41,0,40,0,38,0,39,0,16,0,19,0,21,0,50,0,51,0,59,0,60,0,63,0,64,0,72,0,73,0,84,0,85,0,93,0,94,0,32,0,33,0,35,0,36,0,53,0,54,0,56,0,57,0,66,0,67,0,69,0,70,0,87,0,88,0,90,0,91,0,34,0,55,0,68,0,89,0,37,0,58,0,71,0,92,0,31,0,52,0,65,0,86,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR515=allocate([7,0,6,0,5,0,4,0,3,0,2,0,1,0,0,0,15,0,14,0,13,0,12,0,11,0,10,0,9,0,8,0,23,0,24,0,25,0,26,0,27,0,46,0,65,0,84,0,45,0,44,0,43,0,64,0,63,0,62,0,83,0,82,0,81,0,102,0,101,0,100,0,42,0,61,0,80,0,99,0,28,0,47,0,66,0,85,0,18,0,41,0,60,0,79,0,98,0,29,0,48,0,67,0,17,0,20,0,22,0,40,0,59,0,78,0,97,0,21,0,30,0,49,0,68,0,86,0,19,0,16,0,87,0,39,0,38,0,58,0,57,0,77,0,35,0,54,0,73,0,92,0,76,0,96,0,95,0,36,0,55,0,74,0,93,0,32,0,51,0,33,0,52,0,70,0,71,0,89,0,90,0,31,0,50,0,69,0,88,0,37,0,56,0,75,0,94,0,34,0,53,0,72,0,91,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR59=allocate([0,0,1,0,4,0,5,0,3,0,6,0,7,0,2,0,13,0,15,0,8,0,9,0,11,0,12,0,14,0,10,0,16,0,28,0,74,0,29,0,75,0,27,0,73,0,26,0,72,0,30,0,76,0,51,0,97,0,50,0,71,0,96,0,117,0,31,0,77,0,52,0,98,0,49,0,70,0,95,0,116,0,53,0,99,0,32,0,78,0,33,0,79,0,48,0,69,0,94,0,115,0,47,0,68,0,93,0,114,0,46,0,67,0,92,0,113,0,19,0,21,0,23,0,22,0,18,0,17,0,20,0,24,0,111,0,43,0,89,0,110,0,64,0,65,0,44,0,90,0,25,0,45,0,66,0,91,0,112,0,54,0,100,0,40,0,61,0,86,0,107,0,39,0,60,0,85,0,106,0,36,0,57,0,82,0,103,0,35,0,56,0,81,0,102,0,34,0,55,0,80,0,101,0,42,0,63,0,88,0,109,0,41,0,62,0,87,0,108,0,38,0,59,0,84,0,105,0,37,0,58,0,83,0,104,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR67=allocate([0,0,1,0,4,0,3,0,5,0,6,0,13,0,7,0,2,0,8,0,9,0,11,0,15,0,12,0,14,0,10,0,28,0,82,0,29,0,83,0,27,0,81,0,26,0,80,0,30,0,84,0,16,0,55,0,109,0,56,0,110,0,31,0,85,0,57,0,111,0,48,0,73,0,102,0,127,0,32,0,86,0,51,0,76,0,105,0,130,0,52,0,77,0,106,0,131,0,58,0,112,0,33,0,87,0,19,0,23,0,53,0,78,0,107,0,132,0,21,0,22,0,18,0,17,0,20,0,24,0,25,0,50,0,75,0,104,0,129,0,47,0,72,0,101,0,126,0,54,0,79,0,108,0,133,0,46,0,71,0,100,0,125,0,128,0,103,0,74,0,49,0,45,0,70,0,99,0,124,0,42,0,67,0,96,0,121,0,39,0,64,0,93,0,118,0,38,0,63,0,92,0,117,0,35,0,60,0,89,0,114,0,34,0,59,0,88,0,113,0,44,0,69,0,98,0,123,0,43,0,68,0,97,0,122,0,41,0,66,0,95,0,120,0,40,0,65,0,94,0,119,0,37,0,62,0,91,0,116,0,36,0,61,0,90,0,115,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR74=allocate([0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,26,0,87,0,27,0,88,0,28,0,89,0,29,0,90,0,30,0,91,0,51,0,80,0,112,0,141,0,52,0,81,0,113,0,142,0,54,0,83,0,115,0,144,0,55,0,84,0,116,0,145,0,58,0,119,0,59,0,120,0,21,0,22,0,23,0,17,0,18,0,19,0,31,0,60,0,92,0,121,0,56,0,85,0,117,0,146,0,20,0,24,0,25,0,50,0,79,0,111,0,140,0,57,0,86,0,118,0,147,0,49,0,78,0,110,0,139,0,48,0,77,0,53,0,82,0,114,0,143,0,109,0,138,0,47,0,76,0,108,0,137,0,32,0,33,0,61,0,62,0,93,0,94,0,122,0,123,0,41,0,42,0,43,0,44,0,45,0,46,0,70,0,71,0,72,0,73,0,74,0,75,0,102,0,103,0,104,0,105,0,106,0,107,0,131,0,132,0,133,0,134,0,135,0,136,0,34,0,63,0,95,0,124,0,35,0,64,0,96,0,125,0,36,0,65,0,97,0,126,0,37,0,66,0,98,0,127,0,38,0,67,0,99,0,128,0,39,0,68,0,100,0,129,0,40,0,69,0,101,0,130,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR795=allocate([8,0,7,0,6,0,5,0,4,0,3,0,2,0,14,0,16,0,9,0,10,0,12,0,13,0,15,0,11,0,17,0,20,0,22,0,24,0,23,0,19,0,18,0,21,0,56,0,88,0,122,0,154,0,57,0,89,0,123,0,155,0,58,0,90,0,124,0,156,0,52,0,84,0,118,0,150,0,53,0,85,0,119,0,151,0,27,0,93,0,28,0,94,0,29,0,95,0,30,0,96,0,31,0,97,0,61,0,127,0,62,0,128,0,63,0,129,0,59,0,91,0,125,0,157,0,32,0,98,0,64,0,130,0,1,0,0,0,25,0,26,0,33,0,99,0,34,0,100,0,65,0,131,0,66,0,132,0,54,0,86,0,120,0,152,0,60,0,92,0,126,0,158,0,55,0,87,0,121,0,153,0,117,0,116,0,115,0,46,0,78,0,112,0,144,0,43,0,75,0,109,0,141,0,40,0,72,0,106,0,138,0,36,0,68,0,102,0,134,0,114,0,149,0,148,0,147,0,146,0,83,0,82,0,81,0,80,0,51,0,50,0,49,0,48,0,47,0,45,0,44,0,42,0,39,0,35,0,79,0,77,0,76,0,74,0,71,0,67,0,113,0,111,0,110,0,108,0,105,0,101,0,145,0,143,0,142,0,140,0,137,0,133,0,41,0,73,0,107,0,139,0,37,0,69,0,103,0,135,0,38,0,70,0,104,0,136,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR102=allocate([7,0,6,0,5,0,4,0,3,0,2,0,1,0,0,0,16,0,15,0,14,0,13,0,12,0,11,0,10,0,9,0,8,0,26,0,27,0,28,0,29,0,30,0,31,0,115,0,116,0,117,0,118,0,119,0,120,0,72,0,73,0,161,0,162,0,65,0,68,0,69,0,108,0,111,0,112,0,154,0,157,0,158,0,197,0,200,0,201,0,32,0,33,0,121,0,122,0,74,0,75,0,163,0,164,0,66,0,109,0,155,0,198,0,19,0,23,0,21,0,22,0,18,0,17,0,20,0,24,0,25,0,37,0,36,0,35,0,34,0,80,0,79,0,78,0,77,0,126,0,125,0,124,0,123,0,169,0,168,0,167,0,166,0,70,0,67,0,71,0,113,0,110,0,114,0,159,0,156,0,160,0,202,0,199,0,203,0,76,0,165,0,81,0,82,0,92,0,91,0,93,0,83,0,95,0,85,0,84,0,94,0,101,0,102,0,96,0,104,0,86,0,103,0,87,0,97,0,127,0,128,0,138,0,137,0,139,0,129,0,141,0,131,0,130,0,140,0,147,0,148,0,142,0,150,0,132,0,149,0,133,0,143,0,170,0,171,0,181,0,180,0,182,0,172,0,184,0,174,0,173,0,183,0,190,0,191,0,185,0,193,0,175,0,192,0,176,0,186,0,38,0,39,0,49,0,48,0,50,0,40,0,52,0,42,0,41,0,51,0,58,0,59,0,53,0,61,0,43,0,60,0,44,0,54,0,194,0,179,0,189,0,196,0,177,0,195,0,178,0,187,0,188,0,151,0,136,0,146,0,153,0,134,0,152,0,135,0,144,0,145,0,105,0,90,0,100,0,107,0,88,0,106,0,89,0,98,0,99,0,62,0,47,0,57,0,64,0,45,0,63,0,46,0,55,0,56,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits_MR122=allocate([0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,13,0,14,0,23,0,15,0,16,0,17,0,18,0,19,0,20,0,21,0,22,0,24,0,25,0,26,0,27,0,28,0,38,0,141,0,39,0,142,0,40,0,143,0,41,0,144,0,42,0,145,0,43,0,146,0,44,0,147,0,45,0,148,0,46,0,149,0,47,0,97,0,150,0,200,0,48,0,98,0,151,0,201,0,49,0,99,0,152,0,202,0,86,0,136,0,189,0,239,0,87,0,137,0,190,0,240,0,88,0,138,0,191,0,241,0,91,0,194,0,92,0,195,0,93,0,196,0,94,0,197,0,95,0,198,0,29,0,30,0,31,0,32,0,33,0,34,0,35,0,50,0,100,0,153,0,203,0,89,0,139,0,192,0,242,0,51,0,101,0,154,0,204,0,55,0,105,0,158,0,208,0,90,0,140,0,193,0,243,0,59,0,109,0,162,0,212,0,63,0,113,0,166,0,216,0,67,0,117,0,170,0,220,0,36,0,37,0,54,0,53,0,52,0,58,0,57,0,56,0,62,0,61,0,60,0,66,0,65,0,64,0,70,0,69,0,68,0,104,0,103,0,102,0,108,0,107,0,106,0,112,0,111,0,110,0,116,0,115,0,114,0,120,0,119,0,118,0,157,0,156,0,155,0,161,0,160,0,159,0,165,0,164,0,163,0,169,0,168,0,167,0,173,0,172,0,171,0,207,0,206,0,205,0,211,0,210,0,209,0,215,0,214,0,213,0,219,0,218,0,217,0,223,0,222,0,221,0,73,0,72,0,71,0,76,0,75,0,74,0,79,0,78,0,77,0,82,0,81,0,80,0,85,0,84,0,83,0,123,0,122,0,121,0,126,0,125,0,124,0,129,0,128,0,127,0,132,0,131,0,130,0,135,0,134,0,133,0,176,0,175,0,174,0,179,0,178,0,177,0,182,0,181,0,180,0,185,0,184,0,183,0,188,0,187,0,186,0,226,0,225,0,224,0,229,0,228,0,227,0,232,0,231,0,230,0,235,0,234,0,233,0,238,0,237,0,236,0,96,0,199,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_reorderBits=allocate(60,"*",ALLOC_STATIC);_numCompressedBytes=allocate([13,0,14,0,16,0,18,0,19,0,21,0,26,0,31,0,6,0,6,0,6,0,6,0,0,0,0,0,0,0,1,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_startPos1=allocate([1,0,3,0],["i16",0,"i16",0],ALLOC_STATIC);_startPos2=allocate([0,0,1,0,2,0,4,0],["i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_trackTable=allocate([0,0,1,0,0,0,1,0,-1,0,0,0,-1,0,1,0,0,0,1,0,0,0,1,0,0,0,-1,0,1,0,0,0,1,0,-1,0,0,0,1,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_startPos=allocate([0,0,2,0,0,0,3,0,0,0,2,0,0,0,3,0,1,0,3,0,2,0,4,0,1,0,4,0,1,0,4,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma1=allocate([30802,0,28954,0,27217,0,25584,0,24049,0,22606,0,21250,0,19975,0,18777,0,17650,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma1_12k2=allocate([29491,0,26542,0,23888,0,21499,0,19349,0,17414,0,15672,0,14105,0,12694,0,11425,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma2=allocate([19661,0,11797,0,7078,0,4247,0,2548,0,1529,0,917,0,550,0,330,0,198,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_corrweight=allocate([20473,0,20506,0,20539,0,20572,0,20605,0,20644,0,20677,0,20716,0,20749,0,20788,0,20821,0,20860,0,20893,0,20932,0,20972,0,21011,0,21050,0,21089,0,21129,0,21168,0,21207,0,21247,0,21286,0,21332,0,21371,0,21417,0,21456,0,21502,0,21542,0,21588,0,21633,0,21679,0,21725,0,21771,0,21817,0,21863,0,21909,0,21961,0,22007,0,22059,0,22105,0,22158,0,22210,0,22263,0,22315,0,22367,0,22420,0,22472,0,22531,0,22584,0,22643,0,22702,0,22761,0,22820,0,22879,0,22938,0,23003,0,23062,0,23128,0,23193,0,23252,0,23324,0,23390,0,23455,0,23527,0,23600,0,23665,0,23744,0,23816,0,23888,0,23967,0,24045,0,24124,0,24202,0,24288,0,24366,0,24451,0,24537,0,24628,0,24714,0,24805,0,24904,0,24995,0,25094,0,25192,0,25297,0,25395,0,25500,0,25611,0,25723,0,25834,0,25952,0,26070,0,26188,0,26313,0,26444,0,26575,0,26706,0,26844,0,26988,0,27132,0,27283,0,27440,0,27597,0,27761,0,27931,0,28108,0,28285,0,28475,0,28665,0,28869,0,29078,0,29295,0,29524,0,29760,0,30002,0,30258,0,30527,0,30808,0,31457,0,32767,0,32767,0,32767,0,32767,0,32767,0,32767,0,32767,0,31457,0,30808,0,30527,0,30258,0,30002,0,29760,0,29524,0,29295,0,29078,0,28869,0,28665,0,28475,0,28285,0,28108,0,27931,0,27761,0,27597,0,27440,0,27283,0,27132,0,26988,0,26844,0,26706,0,26575,0,26444,0,26313,0,26188,0,26070,0,25952,0,25834,0,25723,0,25611,0,25500,0,25395,0,25297,0,25192,0,25094,0,24995,0,24904,0,24805,0,24714,0,24628,0,24537,0,24451,0,24366,0,24288,0,24202,0,24124,0,24045,0,23967,0,23888,0,23816,0,23744,0,23665,0,23600,0,23527,0,23455,0,23390,0,23324,0,23252,0,23193,0,23128,0,23062,0,23003,0,22938,0,22879,0,22820,0,22761,0,22702,0,22643,0,22584,0,22531,0,22472,0,22420,0,22367,0,22315,0,22263,0,22210,0,22158,0,22105,0,22059,0,22007,0,21961,0,21909,0,21863,0,21817,0,21771,0,21725,0,21679,0,21633,0,21588,0,21542,0,21502,0,21456,0,21417,0,21371,0,21332,0,21286,0,21247,0,21207,0,21168,0,21129,0,21089,0,21050,0,21011,0,20972,0,20932,0,20893,0,20860,0,20821,0,20788,0,20749,0,20716,0,20677,0,20644,0,20605,0,20572,0,20539,0,20506,0,20473,0,20434,0,20401,0,20369,0,20336,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_WmfDecBytesPerFrame=allocate([12,0,13,0,15,0,17,0,19,0,20,0,26,0,31,0,5,0,6,0,5,0,5,0,0,0,0,0,0,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_If2DecBytesPerFrame=allocate([13,0,14,0,16,0,18,0,19,0,21,0,26,0,31,0,6,0,6,0,6,0,6,0,0,0,0,0,0,0,1,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dtx_log_en_adjust=allocate([-1023,0,-878,0,-732,0,-586,0,-440,0,-294,0,-148,0,0,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_lsf_hist_mean_scale=allocate([2e4,0,2e4,0,2e4,0,2e4,0,2e4,0,18e3,0,16384,0,8192,0,0,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_ec_gain_code_cdown=allocate([32767,0,32112,0,32112,0,32112,0,32112,0,32112,0,22937,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_ec_gain_pitch_pdown=allocate([32767,0,32112,0,32112,0,26214,0,9830,0,6553,0,6553,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_WmfEncBytesPerFrame=allocate([13,0,14,0,16,0,18,0,20,0,21,0,27,0,32,0,6,0,7,0,6,0,6,0,0,0,0,0,0,0,1,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_If2EncBytesPerFrame=allocate([13,0,14,0,16,0,18,0,19,0,21,0,26,0,31,0,6,0,6,0,6,0,6,0,0,0,0,0,0,0,1,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_qua_gain_pitch=allocate([0,0,3277,0,6556,0,8192,0,9830,0,11469,0,12288,0,13107,0,13926,0,14746,0,15565,0,16384,0,17203,0,18022,0,18842,0,19661,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_qua_gain_code=allocate([159,0,-3776,0,-22731,0,206,0,-3394,0,-20428,0,268,0,-3005,0,-18088,0,349,0,-2615,0,-15739,0,419,0,-2345,0,-14113,0,482,0,-2138,0,-12867,0,554,0,-1932,0,-11629,0,637,0,-1726,0,-10387,0,733,0,-1518,0,-9139,0,842,0,-1314,0,-7906,0,969,0,-1106,0,-6656,0,1114,0,-900,0,-5416,0,1281,0,-694,0,-4173,0,1473,0,-487,0,-2931,0,1694,0,-281,0,-1688,0,1948,0,-75,0,-445,0,2241,0,133,0,801,0,2577,0,339,0,2044,0,2963,0,545,0,3285,0,3408,0,752,0,4530,0,3919,0,958,0,5772,0,4507,0,1165,0,7016,0,5183,0,1371,0,8259,0,5960,0,1577,0,9501,0,6855,0,1784,0,10745,0,7883,0,1991,0,11988,0,9065,0,2197,0,13231,0,10425,0,2404,0,14474,0,12510,0,2673,0,16096,0,16263,0,3060,0,18429,0,21142,0,3448,0,20763,0,27485,0,3836,0,23097,0,27485,0,3836,0,23097,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_pred_MR122=allocate([44,0,37,0,22,0,12,0],["i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_pred=allocate([5571,0,4751,0,2785,0,1556,0],["i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gray=allocate([0,0,1,0,3,0,2,0,6,0,4,0,5,0,7,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dgray=allocate([0,0,1,0,3,0,2,0,5,0,6,0,4,0,7,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_grid=allocate([32760,0,32723,0,32588,0,32364,0,32051,0,31651,0,31164,0,30591,0,29935,0,29196,0,28377,0,27481,0,26509,0,25465,0,24351,0,23170,0,21926,0,20621,0,19260,0,17846,0,16384,0,14876,0,13327,0,11743,0,10125,0,8480,0,6812,0,5126,0,3425,0,1714,0,0,0,-1714,0,-3425,0,-5126,0,-6812,0,-8480,0,-10125,0,-11743,0,-13327,0,-14876,0,-16384,0,-17846,0,-19260,0,-20621,0,-21926,0,-23170,0,-24351,0,-25465,0,-26509,0,-27481,0,-28377,0,-29196,0,-29935,0,-30591,0,-31164,0,-31651,0,-32051,0,-32364,0,-32588,0,-32723,0,-32760,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_inter_6=allocate([29519,0,28316,0,24906,0,19838,0,13896,0,7945,0,2755,0,-1127,0,-3459,0,-4304,0,-3969,0,-2899,0,-1561,0,-336,0,534,0,970,0,1023,0,823,0,516,0,220,0,0,0,-131,0,-194,0,-215,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_inv_sqrt_tbl=allocate([32767,0,31790,0,30894,0,30070,0,29309,0,28602,0,27945,0,27330,0,26755,0,26214,0,25705,0,25225,0,24770,0,24339,0,23930,0,23541,0,23170,0,22817,0,22479,0,22155,0,21845,0,21548,0,21263,0,20988,0,20724,0,20470,0,20225,0,19988,0,19760,0,19539,0,19326,0,19119,0,18919,0,18725,0,18536,0,18354,0,18176,0,18004,0,17837,0,17674,0,17515,0,17361,0,17211,0,17064,0,16921,0,16782,0,16646,0,16514,0,16384,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_lag_h=allocate([32728,0,32619,0,32438,0,32187,0,31867,0,31480,0,31029,0,30517,0,29946,0,29321,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_lag_l=allocate([11904,0,17280,0,30720,0,25856,0,24192,0,28992,0,24384,0,7360,0,19520,0,14784,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_log2_tbl=allocate([0,0,1455,0,2866,0,4236,0,5568,0,6863,0,8124,0,9352,0,10549,0,11716,0,12855,0,13967,0,15054,0,16117,0,17156,0,18172,0,19167,0,20142,0,21097,0,22033,0,22951,0,23852,0,24735,0,25603,0,26455,0,27291,0,28113,0,28922,0,29716,0,30497,0,31266,0,32023,0,32767,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_table=allocate([32767,0,32729,0,32610,0,32413,0,32138,0,31786,0,31357,0,30853,0,30274,0,29622,0,28899,0,28106,0,27246,0,26320,0,25330,0,24279,0,23170,0,22006,0,20788,0,19520,0,18205,0,16846,0,15447,0,14010,0,12540,0,11039,0,9512,0,7962,0,6393,0,4808,0,3212,0,1608,0,0,0,-1608,0,-3212,0,-4808,0,-6393,0,-7962,0,-9512,0,-11039,0,-12540,0,-14010,0,-15447,0,-16846,0,-18205,0,-19520,0,-20788,0,-22006,0,-23170,0,-24279,0,-25330,0,-26320,0,-27246,0,-28106,0,-28899,0,-29622,0,-30274,0,-30853,0,-31357,0,-31786,0,-32138,0,-32413,0,-32610,0,-32729,0,-32768,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_slope=allocate([-26887,0,-8812,0,-5323,0,-3813,0,-2979,0,-2444,0,-2081,0,-1811,0,-1608,0,-1450,0,-1322,0,-1219,0,-1132,0,-1059,0,-998,0,-946,0,-901,0,-861,0,-827,0,-797,0,-772,0,-750,0,-730,0,-713,0,-699,0,-687,0,-677,0,-668,0,-662,0,-657,0,-654,0,-652,0,-652,0,-654,0,-657,0,-662,0,-668,0,-677,0,-687,0,-699,0,-713,0,-730,0,-750,0,-772,0,-797,0,-827,0,-861,0,-901,0,-946,0,-998,0,-1059,0,-1132,0,-1219,0,-1322,0,-1450,0,-1608,0,-1811,0,-2081,0,-2444,0,-2979,0,-3813,0,-5323,0,-8812,0,-26887,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_lsp_init_data=allocate([3e4,0,26e3,0,21e3,0,15e3,0,8e3,0,0,0,-8e3,0,-15e3,0,-21e3,0,-26e3,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_overflow_tbl=allocate([2147483647,0,0,0,1073741823,0,0,0,536870911,0,0,0,268435455,0,0,0,134217727,0,0,0,67108863,0,0,0,33554431,0,0,0,16777215,0,0,0,8388607,0,0,0,4194303,0,0,0,2097151,0,0,0,1048575,0,0,0,524287,0,0,0,262143,0,0,0,131071,0,0,0,65535,0,0,0,32767,0,0,0,16383,0,0,0,8191,0,0,0,4095,0,0,0,2047,0,0,0,1023,0,0,0,511,0,0,0,255,0,0,0,127,0,0,0,63,0,0,0,31,0,0,0,15,0,0,0,7,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0],["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0],ALLOC_STATIC);_ph_imp_low_MR795=allocate([26777,0,801,0,2505,0,-683,0,-1382,0,582,0,604,0,-1274,0,3511,0,-5894,0,4534,0,-499,0,-1940,0,3011,0,-5058,0,5614,0,-1990,0,-1061,0,-1459,0,4442,0,-700,0,-5335,0,4609,0,452,0,-589,0,-3352,0,2953,0,1267,0,-1212,0,-2590,0,1731,0,3670,0,-4475,0,-975,0,4391,0,-2537,0,949,0,-1363,0,-979,0,5734,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_ph_imp_mid_MR795=allocate([30274,0,3831,0,-4036,0,2972,0,-1048,0,-1002,0,2477,0,-3043,0,2815,0,-2231,0,1753,0,-1611,0,1714,0,-1775,0,1543,0,-1008,0,429,0,-169,0,472,0,-1264,0,2176,0,-2706,0,2523,0,-1621,0,344,0,826,0,-1529,0,1724,0,-1657,0,1701,0,-2063,0,2644,0,-3060,0,2897,0,-1978,0,557,0,780,0,-1369,0,842,0,655,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_ph_imp_low=allocate([14690,0,11518,0,1268,0,-2761,0,-5671,0,7514,0,-35,0,-2807,0,-3040,0,4823,0,2952,0,-8424,0,3785,0,1455,0,2179,0,-8637,0,8051,0,-2103,0,-1454,0,777,0,1108,0,-2385,0,2254,0,-363,0,-674,0,-2103,0,6046,0,-5681,0,1072,0,3123,0,-5058,0,5312,0,-2329,0,-3728,0,6924,0,-3889,0,675,0,-1775,0,29,0,10145,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_ph_imp_mid=allocate([30274,0,3831,0,-4036,0,2972,0,-1048,0,-1002,0,2477,0,-3043,0,2815,0,-2231,0,1753,0,-1611,0,1714,0,-1775,0,1543,0,-1008,0,429,0,-169,0,472,0,-1264,0,2176,0,-2706,0,2523,0,-1621,0,344,0,826,0,-1529,0,1724,0,-1657,0,1701,0,-2063,0,2644,0,-3060,0,2897,0,-1978,0,557,0,780,0,-1369,0,842,0,655,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_mode_dep_parm=allocate([84,0,1,0,-2,0,2,0,5,0,10,0,5,0,9,0,20,0,84,0,1,0,-2,0,2,0,5,0,10,0,5,0,9,0,20,0,84,0,1,0,-2,0,2,0,3,0,6,0,5,0,9,0,20,0,84,0,1,0,-2,0,2,0,3,0,6,0,5,0,9,0,20,0,84,0,1,0,-2,0,2,0,3,0,6,0,5,0,9,0,20,0,84,0,1,0,-2,0,2,0,3,0,6,0,10,0,19,0,20,0,84,0,1,0,-2,0,2,0,3,0,6,0,5,0,9,0,20,0,94,0,0,0,-3,0,3,0,3,0,6,0,5,0,9,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_a=allocate([8192,0,15836,0,-7667,0],["i16",0,"i16",0,"i16",0],ALLOC_STATIC);_b=allocate([7699,0,-15398,0,7699,0],["i16",0,"i16",0,"i16",0],ALLOC_STATIC);_pow2_tbl=allocate([16384,0,16743,0,17109,0,17484,0,17867,0,18258,0,18658,0,19066,0,19484,0,19911,0,20347,0,20792,0,21247,0,21713,0,22188,0,22674,0,23170,0,23678,0,24196,0,24726,0,25268,0,25821,0,26386,0,26964,0,27554,0,28158,0,28774,0,29405,0,30048,0,30706,0,31379,0,32066,0,32767,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_inter_6_pred_lt=allocate([29443,0,28346,0,25207,0,20449,0,14701,0,8693,0,3143,0,-1352,0,-4402,0,-5865,0,-5850,0,-4673,0,-2783,0,-672,0,1211,0,2536,0,3130,0,2991,0,2259,0,1170,0,0,0,-1001,0,-1652,0,-1868,0,-1666,0,-1147,0,-464,0,218,0,756,0,1060,0,1099,0,904,0,550,0,135,0,-245,0,-514,0,-634,0,-602,0,-451,0,-231,0,0,0,191,0,308,0,340,0,296,0,198,0,78,0,-36,0,-120,0,-163,0,-165,0,-132,0,-79,0,-19,0,34,0,73,0,91,0,89,0,70,0,38,0,0,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma3_MR122=allocate([22938,0,16057,0,11240,0,7868,0,5508,0,3856,0,2699,0,1889,0,1322,0,925,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma4_MR122=allocate([24576,0,18432,0,13824,0,10368,0,7776,0,5832,0,4374,0,3281,0,2461,0,1846,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma3=allocate([18022,0,9912,0,5451,0,2998,0,1649,0,907,0,499,0,274,0,151,0,83,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_gamma4=allocate([22938,0,16057,0,11240,0,7868,0,5508,0,3856,0,2699,0,1889,0,1322,0,925,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_table_gain_MR475351=allocate([812,0,128,0,542,0,140,0,2873,0,1135,0,2266,0,3402,0,2067,0,563,0,12677,0,647,0,4132,0,1798,0,5601,0,5285,0,7689,0,374,0,3735,0,441,0,10912,0,2638,0,11807,0,2494,0,20490,0,797,0,5218,0,675,0,6724,0,8354,0,5282,0,1696,0,1488,0,428,0,5882,0,452,0,5332,0,4072,0,3583,0,1268,0,2469,0,901,0,15894,0,1005,0,14982,0,3271,0,10331,0,4858,0,3635,0,2021,0,2596,0,835,0,12360,0,4892,0,12206,0,1704,0,13432,0,1604,0,9118,0,2341,0,3968,0,1538,0,5479,0,9936,0,3795,0,417,0,1359,0,414,0,3640,0,1569,0,7995,0,3541,0,11405,0,645,0,8552,0,635,0,4056,0,1377,0,16608,0,6124,0,11420,0,700,0,2007,0,607,0,12415,0,1578,0,11119,0,4654,0,13680,0,1708,0,11990,0,1229,0,7996,0,7297,0,13231,0,5715,0,2428,0,1159,0,2073,0,1941,0,6218,0,6121,0,3546,0,1804,0,8925,0,1802,0,8679,0,1580,0,13935,0,3576,0,13313,0,6237,0,6142,0,1130,0,5994,0,1734,0,14141,0,4662,0,11271,0,3321,0,12226,0,1551,0,13931,0,3015,0,5081,0,10464,0,9444,0,6706,0,1689,0,683,0,1436,0,1306,0,7212,0,3933,0,4082,0,2713,0,7793,0,704,0,15070,0,802,0,6299,0,5212,0,4337,0,5357,0,6676,0,541,0,6062,0,626,0,13651,0,3700,0,11498,0,2408,0,16156,0,716,0,12177,0,751,0,8065,0,11489,0,6314,0,2256,0,4466,0,496,0,7293,0,523,0,10213,0,3833,0,8394,0,3037,0,8403,0,966,0,14228,0,1880,0,8703,0,5409,0,16395,0,4863,0,7420,0,1979,0,6089,0,1230,0,9371,0,4398,0,14558,0,3363,0,13559,0,2873,0,13163,0,1465,0,5534,0,1678,0,13138,0,14771,0,7338,0,600,0,1318,0,548,0,4252,0,3539,0,10044,0,2364,0,10587,0,622,0,13088,0,669,0,14126,0,3526,0,5039,0,9784,0,15338,0,619,0,3115,0,590,0,16442,0,3013,0,15542,0,4168,0,15537,0,1611,0,15405,0,1228,0,16023,0,9299,0,7534,0,4976,0,1990,0,1213,0,11447,0,1157,0,12512,0,5519,0,9475,0,2644,0,7716,0,2034,0,13280,0,2239,0,16011,0,5093,0,8066,0,6761,0,10083,0,1413,0,5002,0,2347,0,12523,0,5975,0,15126,0,2899,0,18264,0,2289,0,15827,0,2527,0,16265,0,10254,0,14651,0,11319,0,1797,0,337,0,3115,0,397,0,3510,0,2928,0,4592,0,2670,0,7519,0,628,0,11415,0,656,0,5946,0,2435,0,6544,0,7367,0,8238,0,829,0,4e3,0,863,0,10032,0,2492,0,16057,0,3551,0,18204,0,1054,0,6103,0,1454,0,5884,0,7900,0,18752,0,3468,0,1864,0,544,0,9198,0,683,0,11623,0,4160,0,4594,0,1644,0,3158,0,1157,0,15953,0,2560,0,12349,0,3733,0,17420,0,5260,0,6106,0,2004,0,2917,0,1742,0,16467,0,5257,0,16787,0,1680,0,17205,0,1759,0,4773,0,3231,0,7386,0,6035,0,14342,0,10012,0,4035,0,442,0,4194,0,458,0,9214,0,2242,0,7427,0,4217,0,12860,0,801,0,11186,0,825,0,12648,0,2084,0,12956,0,6554,0,9505,0,996,0,6629,0,985,0,10537,0,2502,0,15289,0,5006,0,12602,0,2055,0,15484,0,1653,0,16194,0,6921,0,14231,0,5790,0,2626,0,828,0,5615,0,1686,0,13663,0,5778,0,3668,0,1554,0,11313,0,2633,0,9770,0,1459,0,14003,0,4733,0,15897,0,6291,0,6278,0,1870,0,7910,0,2285,0,16978,0,4571,0,16576,0,3849,0,15248,0,2311,0,16023,0,3244,0,14459,0,17808,0,11847,0,2763,0,1981,0,1407,0,1400,0,876,0,4335,0,3547,0,4391,0,4210,0,5405,0,680,0,17461,0,781,0,6501,0,5118,0,8091,0,7677,0,7355,0,794,0,8333,0,1182,0,15041,0,3160,0,14928,0,3039,0,20421,0,880,0,14545,0,852,0,12337,0,14708,0,6904,0,1920,0,4225,0,933,0,8218,0,1087,0,10659,0,4084,0,10082,0,4533,0,2735,0,840,0,20657,0,1081,0,16711,0,5966,0,15873,0,4578,0,10871,0,2574,0,3773,0,1166,0,14519,0,4044,0,20699,0,2627,0,15219,0,2734,0,15274,0,2186,0,6257,0,3226,0,13125,0,19480,0,7196,0,930,0,2462,0,1618,0,4515,0,3092,0,13852,0,4277,0,10460,0,833,0,17339,0,810,0,16891,0,2289,0,15546,0,8217,0,13603,0,1684,0,3197,0,1834,0,15948,0,2820,0,15812,0,5327,0,17006,0,2438,0,16788,0,1326,0,15671,0,8156,0,11726,0,8556,0,3762,0,2053,0,9563,0,1317,0,13561,0,6790,0,12227,0,1936,0,8180,0,3550,0,13287,0,1778,0,16299,0,6599,0,16291,0,7758,0,8521,0,2551,0,7225,0,2645,0,18269,0,7489,0,16885,0,2248,0,17882,0,2884,0,17265,0,3328,0,9417,0,20162,0,11042,0,8320,0,1286,0,620,0,1431,0,583,0,5993,0,2289,0,3978,0,3626,0,5144,0,752,0,13409,0,830,0,5553,0,2860,0,11764,0,5908,0,10737,0,560,0,5446,0,564,0,13321,0,3008,0,11946,0,3683,0,19887,0,798,0,9825,0,728,0,13663,0,8748,0,7391,0,3053,0,2515,0,778,0,6050,0,833,0,6469,0,5074,0,8305,0,2463,0,6141,0,1865,0,15308,0,1262,0,14408,0,4547,0,13663,0,4515,0,3137,0,2983,0,2479,0,1259,0,15088,0,4647,0,15382,0,2607,0,14492,0,2392,0,12462,0,2537,0,7539,0,2949,0,12909,0,12060,0,5468,0,684,0,3141,0,722,0,5081,0,1274,0,12732,0,4200,0,15302,0,681,0,7819,0,592,0,6534,0,2021,0,16478,0,8737,0,13364,0,882,0,5397,0,899,0,14656,0,2178,0,14741,0,4227,0,14270,0,1298,0,13929,0,2029,0,15477,0,7482,0,15815,0,4572,0,2521,0,2013,0,5062,0,1804,0,5159,0,6582,0,7130,0,3597,0,10920,0,1611,0,11729,0,1708,0,16903,0,3455,0,16268,0,6640,0,9306,0,1007,0,9369,0,2106,0,19182,0,5037,0,12441,0,4269,0,15919,0,1332,0,15357,0,3512,0,11898,0,14141,0,16101,0,6854,0,2010,0,737,0,3779,0,861,0,11454,0,2880,0,3564,0,3540,0,9057,0,1241,0,12391,0,896,0,8546,0,4629,0,11561,0,5776,0,8129,0,589,0,8218,0,588,0,18728,0,3755,0,12973,0,3149,0,15729,0,758,0,16634,0,754,0,15222,0,11138,0,15871,0,2208,0,4673,0,610,0,10218,0,678,0,15257,0,4146,0,5729,0,3327,0,8377,0,1670,0,19862,0,2321,0,15450,0,5511,0,14054,0,5481,0,5728,0,2888,0,7580,0,1346,0,14384,0,5325,0,16236,0,3950,0,15118,0,3744,0,15306,0,1435,0,14597,0,4070,0,12301,0,15696,0,7617,0,1699,0,2170,0,884,0,4459,0,4567,0,18094,0,3306,0,12742,0,815,0,14926,0,907,0,15016,0,4281,0,15518,0,8368,0,17994,0,1087,0,2358,0,865,0,16281,0,3787,0,15679,0,4596,0,16356,0,1534,0,16584,0,2210,0,16833,0,9697,0,15929,0,4513,0,3277,0,1085,0,9643,0,2187,0,11973,0,6068,0,9199,0,4462,0,8955,0,1629,0,10289,0,3062,0,16481,0,5155,0,15466,0,7066,0,13678,0,2543,0,5273,0,2277,0,16746,0,6213,0,16655,0,3408,0,20304,0,3363,0,18688,0,1985,0,14172,0,12867,0,15154,0,15703,0,4473,0,1020,0,1681,0,886,0,4311,0,4301,0,8952,0,3657,0,5893,0,1147,0,11647,0,1452,0,15886,0,2227,0,4582,0,6644,0,6929,0,1205,0,6220,0,799,0,12415,0,3409,0,15968,0,3877,0,19859,0,2109,0,9689,0,2141,0,14742,0,8830,0,14480,0,2599,0,1817,0,1238,0,7771,0,813,0,19079,0,4410,0,5554,0,2064,0,3687,0,2844,0,17435,0,2256,0,16697,0,4486,0,16199,0,5388,0,8028,0,2763,0,3405,0,2119,0,17426,0,5477,0,13698,0,2786,0,19879,0,2720,0,9098,0,3880,0,18172,0,4833,0,17336,0,12207,0,5116,0,996,0,4935,0,988,0,9888,0,3081,0,6014,0,5371,0,15881,0,1667,0,8405,0,1183,0,15087,0,2366,0,19777,0,7002,0,11963,0,1562,0,7279,0,1128,0,16859,0,1532,0,15762,0,5381,0,14708,0,2065,0,20105,0,2155,0,17158,0,8245,0,17911,0,6318,0,5467,0,1504,0,4100,0,2574,0,17421,0,6810,0,5673,0,2888,0,16636,0,3382,0,8975,0,1831,0,20159,0,4737,0,19550,0,7294,0,6658,0,2781,0,11472,0,3321,0,19397,0,5054,0,18878,0,4722,0,16439,0,2373,0,20430,0,4386,0,11353,0,26526,0,11593,0,3068,0,2866,0,1566,0,5108,0,1070,0,9614,0,4915,0,4939,0,3536,0,7541,0,878,0,20717,0,851,0,6938,0,4395,0,16799,0,7733,0,10137,0,1019,0,9845,0,964,0,15494,0,3955,0,15459,0,3430,0,18863,0,982,0,20120,0,963,0,16876,0,12887,0,14334,0,4200,0,6599,0,1220,0,9222,0,814,0,16942,0,5134,0,5661,0,4898,0,5488,0,1798,0,20258,0,3962,0,17005,0,6178,0,17929,0,5929,0,9365,0,3420,0,7474,0,1971,0,19537,0,5177,0,19003,0,3006,0,16454,0,3788,0,16070,0,2367,0,8664,0,2743,0,9445,0,26358,0,10856,0,1287,0,3555,0,1009,0,5606,0,3622,0,19453,0,5512,0,12453,0,797,0,20634,0,911,0,15427,0,3066,0,17037,0,10275,0,18883,0,2633,0,3913,0,1268,0,19519,0,3371,0,18052,0,5230,0,19291,0,1678,0,19508,0,3172,0,18072,0,10754,0,16625,0,6845,0,3134,0,2298,0,10869,0,2437,0,15580,0,6913,0,12597,0,3381,0,11116,0,3297,0,16762,0,2424,0,18853,0,6715,0,17171,0,9887,0,12743,0,2605,0,8937,0,3140,0,19033,0,7764,0,18347,0,3880,0,20475,0,3682,0,19602,0,3380,0,13044,0,19373,0,10526,0,23124,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_table_gain_MR475=allocate([812,0,128,0,542,0,140,0,2873,0,1135,0,2266,0,3402,0,2067,0,563,0,12677,0,647,0,4132,0,1798,0,5601,0,5285,0,7689,0,374,0,3735,0,441,0,10912,0,2638,0,11807,0,2494,0,20490,0,797,0,5218,0,675,0,6724,0,8354,0,5282,0,1696,0,1488,0,428,0,5882,0,452,0,5332,0,4072,0,3583,0,1268,0,2469,0,901,0,15894,0,1005,0,14982,0,3271,0,10331,0,4858,0,3635,0,2021,0,2596,0,835,0,12360,0,4892,0,12206,0,1704,0,13432,0,1604,0,9118,0,2341,0,3968,0,1538,0,5479,0,9936,0,3795,0,417,0,1359,0,414,0,3640,0,1569,0,7995,0,3541,0,11405,0,645,0,8552,0,635,0,4056,0,1377,0,16608,0,6124,0,11420,0,700,0,2007,0,607,0,12415,0,1578,0,11119,0,4654,0,13680,0,1708,0,11990,0,1229,0,7996,0,7297,0,13231,0,5715,0,2428,0,1159,0,2073,0,1941,0,6218,0,6121,0,3546,0,1804,0,8925,0,1802,0,8679,0,1580,0,13935,0,3576,0,13313,0,6237,0,6142,0,1130,0,5994,0,1734,0,14141,0,4662,0,11271,0,3321,0,12226,0,1551,0,13931,0,3015,0,5081,0,10464,0,9444,0,6706,0,1689,0,683,0,1436,0,1306,0,7212,0,3933,0,4082,0,2713,0,7793,0,704,0,15070,0,802,0,6299,0,5212,0,4337,0,5357,0,6676,0,541,0,6062,0,626,0,13651,0,3700,0,11498,0,2408,0,16156,0,716,0,12177,0,751,0,8065,0,11489,0,6314,0,2256,0,4466,0,496,0,7293,0,523,0,10213,0,3833,0,8394,0,3037,0,8403,0,966,0,14228,0,1880,0,8703,0,5409,0,16395,0,4863,0,7420,0,1979,0,6089,0,1230,0,9371,0,4398,0,14558,0,3363,0,13559,0,2873,0,13163,0,1465,0,5534,0,1678,0,13138,0,14771,0,7338,0,600,0,1318,0,548,0,4252,0,3539,0,10044,0,2364,0,10587,0,622,0,13088,0,669,0,14126,0,3526,0,5039,0,9784,0,15338,0,619,0,3115,0,590,0,16442,0,3013,0,15542,0,4168,0,15537,0,1611,0,15405,0,1228,0,16023,0,9299,0,7534,0,4976,0,1990,0,1213,0,11447,0,1157,0,12512,0,5519,0,9475,0,2644,0,7716,0,2034,0,13280,0,2239,0,16011,0,5093,0,8066,0,6761,0,10083,0,1413,0,5002,0,2347,0,12523,0,5975,0,15126,0,2899,0,18264,0,2289,0,15827,0,2527,0,16265,0,10254,0,14651,0,11319,0,1797,0,337,0,3115,0,397,0,3510,0,2928,0,4592,0,2670,0,7519,0,628,0,11415,0,656,0,5946,0,2435,0,6544,0,7367,0,8238,0,829,0,4e3,0,863,0,10032,0,2492,0,16057,0,3551,0,18204,0,1054,0,6103,0,1454,0,5884,0,7900,0,18752,0,3468,0,1864,0,544,0,9198,0,683,0,11623,0,4160,0,4594,0,1644,0,3158,0,1157,0,15953,0,2560,0,12349,0,3733,0,17420,0,5260,0,6106,0,2004,0,2917,0,1742,0,16467,0,5257,0,16787,0,1680,0,17205,0,1759,0,4773,0,3231,0,7386,0,6035,0,14342,0,10012,0,4035,0,442,0,4194,0,458,0,9214,0,2242,0,7427,0,4217,0,12860,0,801,0,11186,0,825,0,12648,0,2084,0,12956,0,6554,0,9505,0,996,0,6629,0,985,0,10537,0,2502,0,15289,0,5006,0,12602,0,2055,0,15484,0,1653,0,16194,0,6921,0,14231,0,5790,0,2626,0,828,0,5615,0,1686,0,13663,0,5778,0,3668,0,1554,0,11313,0,2633,0,9770,0,1459,0,14003,0,4733,0,15897,0,6291,0,6278,0,1870,0,7910,0,2285,0,16978,0,4571,0,16576,0,3849,0,15248,0,2311,0,16023,0,3244,0,14459,0,17808,0,11847,0,2763,0,1981,0,1407,0,1400,0,876,0,4335,0,3547,0,4391,0,4210,0,5405,0,680,0,17461,0,781,0,6501,0,5118,0,8091,0,7677,0,7355,0,794,0,8333,0,1182,0,15041,0,3160,0,14928,0,3039,0,20421,0,880,0,14545,0,852,0,12337,0,14708,0,6904,0,1920,0,4225,0,933,0,8218,0,1087,0,10659,0,4084,0,10082,0,4533,0,2735,0,840,0,20657,0,1081,0,16711,0,5966,0,15873,0,4578,0,10871,0,2574,0,3773,0,1166,0,14519,0,4044,0,20699,0,2627,0,15219,0,2734,0,15274,0,2186,0,6257,0,3226,0,13125,0,19480,0,7196,0,930,0,2462,0,1618,0,4515,0,3092,0,13852,0,4277,0,10460,0,833,0,17339,0,810,0,16891,0,2289,0,15546,0,8217,0,13603,0,1684,0,3197,0,1834,0,15948,0,2820,0,15812,0,5327,0,17006,0,2438,0,16788,0,1326,0,15671,0,8156,0,11726,0,8556,0,3762,0,2053,0,9563,0,1317,0,13561,0,6790,0,12227,0,1936,0,8180,0,3550,0,13287,0,1778,0,16299,0,6599,0,16291,0,7758,0,8521,0,2551,0,7225,0,2645,0,18269,0,7489,0,16885,0,2248,0,17882,0,2884,0,17265,0,3328,0,9417,0,20162,0,11042,0,8320,0,1286,0,620,0,1431,0,583,0,5993,0,2289,0,3978,0,3626,0,5144,0,752,0,13409,0,830,0,5553,0,2860,0,11764,0,5908,0,10737,0,560,0,5446,0,564,0,13321,0,3008,0,11946,0,3683,0,19887,0,798,0,9825,0,728,0,13663,0,8748,0,7391,0,3053,0,2515,0,778,0,6050,0,833,0,6469,0,5074,0,8305,0,2463,0,6141,0,1865,0,15308,0,1262,0,14408,0,4547,0,13663,0,4515,0,3137,0,2983,0,2479,0,1259,0,15088,0,4647,0,15382,0,2607,0,14492,0,2392,0,12462,0,2537,0,7539,0,2949,0,12909,0,12060,0,5468,0,684,0,3141,0,722,0,5081,0,1274,0,12732,0,4200,0,15302,0,681,0,7819,0,592,0,6534,0,2021,0,16478,0,8737,0,13364,0,882,0,5397,0,899,0,14656,0,2178,0,14741,0,4227,0,14270,0,1298,0,13929,0,2029,0,15477,0,7482,0,15815,0,4572,0,2521,0,2013,0,5062,0,1804,0,5159,0,6582,0,7130,0,3597,0,10920,0,1611,0,11729,0,1708,0,16903,0,3455,0,16268,0,6640,0,9306,0,1007,0,9369,0,2106,0,19182,0,5037,0,12441,0,4269,0,15919,0,1332,0,15357,0,3512,0,11898,0,14141,0,16101,0,6854,0,2010,0,737,0,3779,0,861,0,11454,0,2880,0,3564,0,3540,0,9057,0,1241,0,12391,0,896,0,8546,0,4629,0,11561,0,5776,0,8129,0,589,0,8218,0,588,0,18728,0,3755,0,12973,0,3149,0,15729,0,758,0,16634,0,754,0,15222,0,11138,0,15871,0,2208,0,4673,0,610,0,10218,0,678,0,15257,0,4146,0,5729,0,3327,0,8377,0,1670,0,19862,0,2321,0,15450,0,5511,0,14054,0,5481,0,5728,0,2888,0,7580,0,1346,0,14384,0,5325,0,16236,0,3950,0,15118,0,3744,0,15306,0,1435,0,14597,0,4070,0,12301,0,15696,0,7617,0,1699,0,2170,0,884,0,4459,0,4567,0,18094,0,3306,0,12742,0,815,0,14926,0,907,0,15016,0,4281,0,15518,0,8368,0,17994,0,1087,0,2358,0,865,0,16281,0,3787,0,15679,0,4596,0,16356,0,1534,0,16584,0,2210,0,16833,0,9697,0,15929,0,4513,0,3277,0,1085,0,9643,0,2187,0,11973,0,6068,0,9199,0,4462,0,8955,0,1629,0,10289,0,3062,0,16481,0,5155,0,15466,0,7066,0,13678,0,2543,0,5273,0,2277,0,16746,0,6213,0,16655,0,3408,0,20304,0,3363,0,18688,0,1985,0,14172,0,12867,0,15154,0,15703,0,4473,0,1020,0,1681,0,886,0,4311,0,4301,0,8952,0,3657,0,5893,0,1147,0,11647,0,1452,0,15886,0,2227,0,4582,0,6644,0,6929,0,1205,0,6220,0,799,0,12415,0,3409,0,15968,0,3877,0,19859,0,2109,0,9689,0,2141,0,14742,0,8830,0,14480,0,2599,0,1817,0,1238,0,7771,0,813,0,19079,0,4410,0,5554,0,2064,0,3687,0,2844,0,17435,0,2256,0,16697,0,4486,0,16199,0,5388,0,8028,0,2763,0,3405,0,2119,0,17426,0,5477,0,13698,0,2786,0,19879,0,2720,0,9098,0,3880,0,18172,0,4833,0,17336,0,12207,0,5116,0,996,0,4935,0,988,0,9888,0,3081,0,6014,0,5371,0,15881,0,1667,0,8405,0,1183,0,15087,0,2366,0,19777,0,7002,0,11963,0,1562,0,7279,0,1128,0,16859,0,1532,0,15762,0,5381,0,14708,0,2065,0,20105,0,2155,0,17158,0,8245,0,17911,0,6318,0,5467,0,1504,0,4100,0,2574,0,17421,0,6810,0,5673,0,2888,0,16636,0,3382,0,8975,0,1831,0,20159,0,4737,0,19550,0,7294,0,6658,0,2781,0,11472,0,3321,0,19397,0,5054,0,18878,0,4722,0,16439,0,2373,0,20430,0,4386,0,11353,0,26526,0,11593,0,3068,0,2866,0,1566,0,5108,0,1070,0,9614,0,4915,0,4939,0,3536,0,7541,0,878,0,20717,0,851,0,6938,0,4395,0,16799,0,7733,0,10137,0,1019,0,9845,0,964,0,15494,0,3955,0,15459,0,3430,0,18863,0,982,0,20120,0,963,0,16876,0,12887,0,14334,0,4200,0,6599,0,1220,0,9222,0,814,0,16942,0,5134,0,5661,0,4898,0,5488,0,1798,0,20258,0,3962,0,17005,0,6178,0,17929,0,5929,0,9365,0,3420,0,7474,0,1971,0,19537,0,5177,0,19003,0,3006,0,16454,0,3788,0,16070,0,2367,0,8664,0,2743,0,9445,0,26358,0,10856,0,1287,0,3555,0,1009,0,5606,0,3622,0,19453,0,5512,0,12453,0,797,0,20634,0,911,0,15427,0,3066,0,17037,0,10275,0,18883,0,2633,0,3913,0,1268,0,19519,0,3371,0,18052,0,5230,0,19291,0,1678,0,19508,0,3172,0,18072,0,10754,0,16625,0,6845,0,3134,0,2298,0,10869,0,2437,0,15580,0,6913,0,12597,0,3381,0,11116,0,3297,0,16762,0,2424,0,18853,0,6715,0,17171,0,9887,0,12743,0,2605,0,8937,0,3140,0,19033,0,7764,0,18347,0,3880,0,20475,0,3682,0,19602,0,3380,0,13044,0,19373,0,10526,0,23124,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_past_rq_init=allocate([-258,0,-318,0,-439,0,-634,0,-656,0,-773,0,-711,0,-502,0,-268,0,-193,0,-2,0,125,0,122,0,-39,0,-9,0,105,0,129,0,283,0,372,0,575,0,-277,0,-324,0,-197,0,-487,0,-445,0,-362,0,-292,0,-27,0,177,0,543,0,342,0,517,0,516,0,130,0,27,0,-104,0,-120,0,-140,0,-74,0,-56,0,-564,0,-943,0,-1520,0,-965,0,-814,0,-526,0,-322,0,-2,0,159,0,657,0,-312,0,-284,0,-386,0,-597,0,-493,0,-526,0,-418,0,-229,0,105,0,449,0,-557,0,-870,0,-1075,0,-919,0,-950,0,-752,0,-709,0,-316,0,62,0,486,0,-314,0,-191,0,-203,0,-330,0,-160,0,-103,0,-51,0,131,0,338,0,515,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_mean_lsf_3=allocate([1546,0,2272,0,3778,0,5488,0,6972,0,8382,0,10047,0,11229,0,12766,0,13714,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_pred_fac_3=allocate([9556,0,10769,0,12571,0,13292,0,14381,0,11651,0,10588,0,9767,0,8593,0,6484,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico1_lsf_3=allocate([6,0,82,0,-131,0,154,0,-56,0,-735,0,183,0,-65,0,-265,0,9,0,-210,0,-361,0,113,0,718,0,1817,0,1010,0,1214,0,1573,0,857,0,1333,0,2276,0,827,0,1568,0,1933,0,717,0,1989,0,2206,0,838,0,1172,0,1823,0,721,0,1e3,0,2154,0,286,0,476,0,1509,0,-247,0,-531,0,230,0,147,0,-82,0,569,0,26,0,-177,0,-944,0,-27,0,-273,0,692,0,-164,0,-264,0,-183,0,224,0,790,0,1039,0,899,0,946,0,601,0,485,0,771,0,1150,0,524,0,677,0,903,0,-140,0,375,0,778,0,410,0,676,0,429,0,301,0,530,0,1009,0,719,0,646,0,38,0,226,0,367,0,40,0,145,0,-45,0,-505,0,290,0,121,0,-121,0,302,0,127,0,166,0,-124,0,-383,0,-956,0,-358,0,-455,0,-977,0,715,0,878,0,894,0,978,0,923,0,211,0,477,0,272,0,64,0,188,0,-78,0,17,0,-143,0,-65,0,38,0,643,0,586,0,621,0,-134,0,-426,0,-651,0,347,0,545,0,2820,0,1188,0,2726,0,2442,0,142,0,-80,0,1735,0,283,0,130,0,461,0,-262,0,-399,0,-1145,0,-411,0,155,0,430,0,329,0,375,0,779,0,53,0,-226,0,-139,0,-129,0,-236,0,1682,0,285,0,744,0,1327,0,738,0,697,0,1664,0,312,0,409,0,266,0,325,0,720,0,135,0,1,0,221,0,453,0,8,0,203,0,145,0,299,0,640,0,760,0,29,0,468,0,638,0,103,0,429,0,379,0,420,0,954,0,932,0,1326,0,1210,0,1258,0,704,0,1012,0,1152,0,-166,0,-444,0,-266,0,-316,0,-130,0,-376,0,191,0,1151,0,1904,0,-240,0,-543,0,-1260,0,-112,0,268,0,1207,0,70,0,1062,0,1583,0,278,0,1360,0,1574,0,-258,0,-272,0,-768,0,19,0,563,0,2240,0,-3,0,-265,0,135,0,-295,0,-591,0,-388,0,140,0,354,0,-206,0,-260,0,-504,0,-795,0,-433,0,-718,0,-1319,0,109,0,331,0,962,0,-429,0,-87,0,652,0,-296,0,426,0,1019,0,-239,0,775,0,851,0,489,0,1334,0,1073,0,-334,0,-332,0,25,0,543,0,1206,0,1807,0,326,0,61,0,727,0,578,0,849,0,1405,0,-208,0,-277,0,329,0,-152,0,64,0,669,0,-434,0,-678,0,-727,0,-454,0,-71,0,251,0,605,0,480,0,254,0,-482,0,11,0,996,0,-289,0,395,0,486,0,722,0,1049,0,1440,0,-30,0,-316,0,-786,0,-106,0,-115,0,-619,0,861,0,1474,0,1412,0,1055,0,1366,0,1184,0,812,0,1237,0,925,0,42,0,-251,0,-576,0,342,0,141,0,-454,0,-168,0,-80,0,1359,0,-342,0,-656,0,-1763,0,100,0,821,0,725,0,990,0,747,0,800,0,332,0,440,0,568,0,663,0,379,0,852,0,112,0,165,0,-369,0,597,0,910,0,282,0,-8,0,834,0,1281,0,-352,0,572,0,695,0,462,0,2246,0,1806,0,345,0,190,0,1374,0,416,0,915,0,2166,0,168,0,-82,0,280,0,-516,0,-446,0,840,0,47,0,533,0,44,0,-362,0,-711,0,-1143,0,22,0,193,0,1472,0,-85,0,233,0,1813,0,-62,0,579,0,1504,0,550,0,944,0,1749,0,723,0,650,0,1148,0,972,0,884,0,1395,0,-425,0,643,0,0,0,1e3,0,952,0,1098,0,249,0,1446,0,672,0,-334,0,-87,0,2172,0,-554,0,1882,0,2672,0,140,0,1826,0,1853,0,920,0,1749,0,2590,0,1076,0,1933,0,2038,0,-137,0,-443,0,-1555,0,1269,0,1174,0,468,0,-493,0,-122,0,1521,0,-451,0,1033,0,1214,0,482,0,1695,0,1118,0,815,0,649,0,384,0,-446,0,-692,0,107,0,-319,0,-605,0,-118,0,-207,0,-505,0,525,0,-468,0,-12,0,2736,0,75,0,1934,0,1305,0,880,0,2358,0,2267,0,1285,0,1575,0,2004,0,-48,0,-304,0,-1186,0,-435,0,-461,0,-251,0,-366,0,-404,0,-547,0,-289,0,-605,0,-597,0,-538,0,-810,0,-165,0,-120,0,3,0,356,0,639,0,1241,0,1502,0,96,0,177,0,750,0,-435,0,-585,0,-1174,0,-356,0,109,0,-79,0,-485,0,288,0,2005,0,9,0,1116,0,731,0,880,0,2134,0,946,0,-265,0,1585,0,1065,0,1157,0,1210,0,843,0,-498,0,-668,0,431,0,374,0,321,0,-229,0,1440,0,2101,0,1381,0,449,0,461,0,1155,0,-105,0,39,0,-384,0,-263,0,367,0,182,0,-371,0,-660,0,773,0,-188,0,1151,0,971,0,1333,0,1632,0,1435,0,774,0,1267,0,1221,0,-482,0,-832,0,-1489,0,-237,0,-210,0,860,0,890,0,1615,0,1064,0,472,0,1062,0,1192,0,185,0,1077,0,989,0,-568,0,-992,0,-1704,0,-449,0,-902,0,-2043,0,-142,0,-377,0,-458,0,-210,0,-554,0,-1029,0,-11,0,1133,0,2265,0,-329,0,-675,0,-893,0,-250,0,657,0,1187,0,519,0,1510,0,1779,0,520,0,539,0,1403,0,527,0,1421,0,1302,0,-563,0,-871,0,-1248,0,-147,0,-463,0,879,0,-76,0,2334,0,2840,0,563,0,2573,0,2385,0,632,0,1926,0,2920,0,719,0,2023,0,1840,0,-545,0,-723,0,1108,0,129,0,-125,0,884,0,1417,0,1632,0,925,0,-94,0,1566,0,1751,0,-341,0,1533,0,1551,0,591,0,395,0,-274,0,-76,0,981,0,2831,0,153,0,2985,0,1844,0,1032,0,2565,0,2749,0,1508,0,2832,0,1879,0,791,0,1199,0,538,0,-190,0,-453,0,1489,0,-278,0,-548,0,1158,0,-245,0,1941,0,2044,0,1024,0,1560,0,1650,0,512,0,253,0,466,0,-62,0,-323,0,1151,0,-473,0,-376,0,507,0,-433,0,1380,0,2162,0,899,0,1943,0,1445,0,134,0,704,0,440,0,460,0,525,0,-28,0,-450,0,279,0,1338,0,0,0,971,0,252,0,-445,0,-627,0,-991,0,-348,0,-602,0,-1424,0,398,0,712,0,1656,0,-107,0,314,0,-178,0,93,0,2226,0,2238,0,518,0,849,0,656,0,-462,0,-711,0,-447,0,174,0,-34,0,1191,0,-119,0,42,0,1005,0,-372,0,274,0,758,0,1036,0,2352,0,1838,0,675,0,1724,0,1498,0,430,0,1286,0,2133,0,-129,0,-439,0,0,0,-373,0,800,0,2144,0,6,0,1587,0,2478,0,478,0,596,0,2128,0,-428,0,-736,0,1505,0,385,0,178,0,980,0,139,0,449,0,1225,0,-526,0,-842,0,-982,0,145,0,1554,0,1242,0,623,0,1448,0,656,0,349,0,1016,0,1482,0,31,0,-280,0,415,0,-316,0,724,0,1641,0,360,0,1058,0,556,0,-436,0,-358,0,1201,0,-355,0,1123,0,1939,0,401,0,1584,0,2248,0,-527,0,-1012,0,355,0,233,0,238,0,2233,0,-550,0,-897,0,-639,0,-365,0,-501,0,1957,0,389,0,1860,0,1621,0,162,0,1132,0,1264,0,-237,0,1174,0,1390,0,-640,0,-411,0,116,0,-228,0,1694,0,2298,0,1639,0,2186,0,2267,0,562,0,1273,0,2658,0,323,0,338,0,1774,0,578,0,1107,0,852,0,22,0,594,0,934,0,-143,0,718,0,446,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico2_lsf_3=allocate([50,0,71,0,-9,0,-338,0,-698,0,-1407,0,102,0,-138,0,-820,0,-310,0,-469,0,-1147,0,414,0,67,0,-267,0,1060,0,814,0,1441,0,1548,0,1360,0,1272,0,1754,0,1895,0,1661,0,2019,0,2133,0,1820,0,1808,0,2318,0,1845,0,644,0,-93,0,454,0,858,0,329,0,-136,0,489,0,-258,0,-128,0,-198,0,-745,0,-41,0,-52,0,-265,0,-985,0,346,0,137,0,479,0,-1741,0,-748,0,-684,0,-1163,0,-1725,0,-367,0,-895,0,-1145,0,-784,0,-488,0,-946,0,-968,0,-85,0,-390,0,-725,0,215,0,-340,0,-171,0,1020,0,916,0,1969,0,564,0,179,0,746,0,662,0,977,0,1734,0,887,0,622,0,914,0,939,0,856,0,1165,0,309,0,688,0,803,0,917,0,161,0,570,0,118,0,-20,0,-283,0,-816,0,-42,0,204,0,-1228,0,-325,0,-462,0,-963,0,-202,0,-143,0,-988,0,-484,0,-361,0,-702,0,-978,0,-477,0,-302,0,-790,0,-1188,0,-100,0,-786,0,-1088,0,-1054,0,-947,0,-1684,0,-202,0,-843,0,-782,0,-1039,0,-1378,0,-901,0,-624,0,-110,0,-85,0,356,0,213,0,-10,0,-493,0,364,0,774,0,425,0,822,0,479,0,-83,0,557,0,520,0,-992,0,-1560,0,-572,0,-603,0,-741,0,-26,0,-502,0,-638,0,-903,0,209,0,306,0,147,0,-316,0,-593,0,-596,0,-85,0,-211,0,-225,0,-918,0,-529,0,117,0,233,0,-439,0,-738,0,1101,0,751,0,633,0,1457,0,1716,0,1511,0,1765,0,1457,0,910,0,1122,0,1156,0,849,0,1354,0,868,0,470,0,-871,0,-1150,0,-1796,0,-871,0,-861,0,-992,0,-118,0,155,0,212,0,-1051,0,-849,0,-606,0,-1117,0,-1849,0,-2750,0,-1019,0,-1427,0,-1869,0,370,0,-184,0,-414,0,959,0,493,0,104,0,958,0,1039,0,543,0,154,0,653,0,201,0,1249,0,507,0,150,0,663,0,503,0,230,0,623,0,777,0,675,0,659,0,88,0,-110,0,843,0,244,0,224,0,382,0,541,0,302,0,724,0,433,0,666,0,1166,0,734,0,341,0,-138,0,20,0,-397,0,-1183,0,-424,0,-46,0,-321,0,-352,0,-124,0,1333,0,1021,0,1080,0,262,0,366,0,723,0,922,0,283,0,-551,0,31,0,-636,0,-611,0,-689,0,-697,0,-415,0,-952,0,-779,0,-201,0,-1329,0,-598,0,-359,0,-953,0,-1285,0,166,0,493,0,305,0,221,0,846,0,703,0,610,0,840,0,936,0,774,0,-723,0,-1324,0,-1261,0,-357,0,-1025,0,-1388,0,-1096,0,-1376,0,-365,0,-1416,0,-1881,0,-608,0,-1798,0,-1727,0,-674,0,-545,0,-1173,0,-703,0,678,0,786,0,148,0,-123,0,696,0,1288,0,644,0,350,0,-10,0,414,0,614,0,15,0,137,0,344,0,-211,0,-814,0,-1512,0,-819,0,-391,0,-930,0,-588,0,47,0,-591,0,-898,0,-909,0,-1097,0,-163,0,-1272,0,-1167,0,-157,0,-1464,0,-1525,0,-389,0,-1274,0,-1188,0,-624,0,671,0,213,0,454,0,124,0,-274,0,-525,0,-729,0,-496,0,-152,0,-1344,0,122,0,135,0,-2905,0,-589,0,-394,0,-1728,0,441,0,-50,0,1476,0,904,0,787,0,316,0,236,0,-440,0,-347,0,217,0,413,0,-911,0,-917,0,121,0,-455,0,-932,0,202,0,-92,0,-465,0,-375,0,488,0,390,0,474,0,876,0,729,0,316,0,-1815,0,-1312,0,-669,0,87,0,962,0,432,0,563,0,-249,0,-1058,0,250,0,285,0,1105,0,1141,0,427,0,696,0,-1038,0,-1664,0,-1582,0,-948,0,346,0,160,0,-309,0,-272,0,-858,0,670,0,624,0,1250,0,-944,0,-408,0,-666,0,-606,0,-320,0,-384,0,-492,0,230,0,65,0,334,0,-50,0,-16,0,-16,0,-690,0,-1397,0,1791,0,1716,0,1399,0,2478,0,2063,0,1404,0,1245,0,1471,0,1426,0,-382,0,-1037,0,-2,0,173,0,-398,0,1145,0,1491,0,2024,0,1801,0,772,0,1274,0,1506,0,1429,0,1735,0,2001,0,1079,0,1218,0,1273,0,-1154,0,-1851,0,-1329,0,-808,0,-1133,0,-1096,0,-451,0,-1033,0,-1722,0,65,0,578,0,-84,0,-1476,0,-2434,0,-1778,0,-765,0,-1366,0,-494,0,-218,0,-594,0,-931,0,337,0,-236,0,562,0,2357,0,2662,0,1938,0,1489,0,1276,0,874,0,189,0,358,0,374,0,-1519,0,-2281,0,-2346,0,-967,0,-1271,0,-2095,0,-628,0,-1188,0,-1542,0,1661,0,1043,0,546,0,565,0,1061,0,732,0,-64,0,-836,0,-434,0,-436,0,-96,0,203,0,1078,0,1216,0,1636,0,907,0,1534,0,986,0,326,0,965,0,845,0,142,0,-84,0,197,0,470,0,2379,0,1570,0,1133,0,470,0,1214,0,395,0,1376,0,1200,0,1125,0,1042,0,348,0,-543,0,-1234,0,-376,0,-215,0,-181,0,481,0,-1947,0,-1621,0,-210,0,-750,0,-1185,0,390,0,29,0,-399,0,27,0,820,0,1236,0,755,0,695,0,979,0,409,0,-174,0,1197,0,1035,0,912,0,1356,0,1846,0,-992,0,-1437,0,484,0,-1485,0,-1700,0,208,0,-412,0,1204,0,1432,0,-271,0,896,0,1144,0,-416,0,1777,0,1434,0,-1696,0,-2644,0,-204,0,-1789,0,-1551,0,1033,0,-1656,0,-1559,0,1303,0,-1253,0,-1589,0,1081,0,-669,0,-1095,0,-66,0,-682,0,320,0,-345,0,659,0,305,0,1069,0,-1292,0,-804,0,-19,0,-1635,0,-1291,0,29,0,-1683,0,-497,0,71,0,-287,0,-7,0,-100,0,-494,0,-962,0,-237,0,852,0,1881,0,1740,0,-1217,0,-1387,0,227,0,-660,0,302,0,373,0,96,0,1087,0,1257,0,-1074,0,-1669,0,160,0,485,0,2076,0,1798,0,-934,0,-220,0,552,0,-596,0,-612,0,237,0,336,0,1720,0,879,0,643,0,629,0,434,0,1267,0,522,0,1633,0,15,0,244,0,-441,0,1475,0,717,0,184,0,1819,0,1590,0,1709,0,988,0,261,0,937,0,2093,0,2345,0,1520,0,2139,0,1858,0,1606,0,-577,0,-579,0,-1203,0,-956,0,135,0,-488,0,-464,0,51,0,-338,0,-629,0,-348,0,-723,0,1146,0,2073,0,1442,0,2192,0,1466,0,911,0,-1444,0,-1572,0,-2278,0,1400,0,710,0,1297,0,1335,0,633,0,928,0,1434,0,2194,0,2594,0,2422,0,2204,0,1881,0,982,0,2242,0,1854,0,380,0,792,0,1145,0,-63,0,-539,0,414,0,-252,0,-964,0,-314,0,-1261,0,-683,0,-780,0,-831,0,-526,0,-1005,0,-1666,0,-1135,0,-424,0,-1611,0,-452,0,-299,0,1268,0,1048,0,642,0,1147,0,853,0,856,0,-675,0,-336,0,139,0,2268,0,1343,0,1418,0,29,0,768,0,797,0,-1224,0,423,0,564,0,-1318,0,-1082,0,245,0,-1302,0,-812,0,573,0,-1298,0,-1617,0,646,0,-968,0,834,0,723,0,993,0,1652,0,2027,0,-191,0,-817,0,432,0,662,0,60,0,198,0,626,0,997,0,1330,0,1648,0,1963,0,1289,0,-1597,0,-93,0,-45,0,-1088,0,37,0,-84,0,1653,0,2607,0,2337,0,1065,0,2040,0,2377,0,1139,0,2326,0,2118,0,859,0,357,0,1510,0,664,0,1227,0,1099,0,479,0,1360,0,912,0,1897,0,1754,0,2019,0,1168,0,1909,0,1784,0,399,0,34,0,256,0,-593,0,-304,0,-1053,0,547,0,1694,0,1407,0,647,0,-99,0,-341,0,1492,0,1647,0,1190,0,38,0,-644,0,-212,0,395,0,846,0,222,0,-704,0,-765,0,-716,0,-724,0,-1964,0,-2804,0,-150,0,291,0,-82,0,1233,0,1459,0,1007,0,-140,0,-155,0,153,0,439,0,297,0,1568,0,-1529,0,-410,0,-636,0,1536,0,455,0,-237,0,-1328,0,-139,0,-260,0,531,0,554,0,868,0,269,0,1264,0,606,0,-233,0,883,0,463,0,742,0,600,0,-120,0,-73,0,421,0,212,0,-439,0,-58,0,804,0,-1286,0,-1241,0,728,0,294,0,-490,0,50,0,-591,0,-905,0,-1254,0,42,0,-687,0,147,0,-25,0,273,0,596,0,-311,0,1213,0,601,0,-754,0,849,0,584,0,429,0,607,0,587,0,-602,0,-166,0,461,0,-796,0,-823,0,777,0,1380,0,910,0,1755,0,119,0,1417,0,972,0,-219,0,-880,0,-1596,0,-1049,0,-1010,0,438,0,-713,0,-1379,0,78,0,0,0,-447,0,-1179,0,-1136,0,-1319,0,-1573,0,2248,0,1767,0,1309,0,946,0,1583,0,1432,0,1150,0,482,0,436,0,-469,0,-1108,0,618,0,-447,0,-966,0,1088,0,-1252,0,-1515,0,-114,0,-1104,0,-2008,0,-579,0,210,0,613,0,497,0,-1975,0,-1437,0,642,0,-1269,0,-856,0,1011,0,-1646,0,-1185,0,1063,0,-1555,0,-672,0,1204,0,-1692,0,-1114,0,623,0,-979,0,-1326,0,-1277,0,539,0,-147,0,894,0,-1354,0,-897,0,-434,0,888,0,475,0,428,0,153,0,-384,0,338,0,-1492,0,-511,0,359,0,-974,0,-1115,0,-470,0,105,0,-550,0,677,0,-937,0,-1145,0,877,0,380,0,-260,0,210,0,1685,0,924,0,1256,0,1775,0,1190,0,1095,0,1419,0,631,0,533,0,627,0,299,0,-347,0,-411,0,-534,0,647,0,-650,0,29,0,-595,0,-378,0,-1367,0,1563,0,1402,0,1121,0,1465,0,1089,0,1410,0,648,0,-2096,0,-1090,0,-6,0,311,0,-194,0,-869,0,-639,0,-831,0,416,0,-1162,0,-1224,0,1349,0,-1247,0,-941,0,1813,0,-2193,0,-1987,0,453,0,-619,0,-1367,0,-956,0,-1606,0,-1972,0,-1507,0,-1175,0,-1057,0,-1104,0,-377,0,601,0,201,0,1876,0,825,0,374,0,-430,0,-1323,0,29,0,-1397,0,-1249,0,-1331,0,-1007,0,-1504,0,960,0,-1401,0,-2009,0,197,0,-1379,0,-1949,0,-236,0,-1077,0,123,0,422,0,615,0,1269,0,546,0,-306,0,1526,0,904,0,1194,0,1788,0,1177,0,-626,0,-884,0,-1526,0,199,0,766,0,1504,0,-1065,0,862,0,197,0,-1034,0,-1773,0,-887,0,-800,0,145,0,599,0,-1134,0,-519,0,626,0,-1205,0,-1926,0,500,0,-910,0,-1041,0,-1395,0,-1476,0,-1567,0,-969,0,-523,0,842,0,34,0,1794,0,646,0,862,0,-1207,0,-1888,0,-1002,0,-78,0,-9,0,-672,0,1044,0,759,0,80,0,-600,0,1139,0,1019,0,57,0,2e3,0,1422,0,-833,0,1414,0,1121,0,-1202,0,1630,0,1260,0,-461,0,1420,0,1244,0,1537,0,975,0,253,0,-283,0,324,0,-359,0,599,0,-195,0,106,0,588,0,62,0,-587,0,-757,0,645,0,205,0,51,0,1201,0,758,0,-1209,0,673,0,-390,0,-624,0,1581,0,941,0,-151,0,1023,0,735,0,2820,0,1301,0,690,0,-302,0,524,0,-99,0,-900,0,-1588,0,-1189,0,1084,0,251,0,238,0,2014,0,1792,0,1010,0,1245,0,1633,0,1741,0,-1227,0,-1540,0,-1208,0,-621,0,456,0,-109,0,40,0,-65,0,788,0,-805,0,-699,0,-1350,0,-583,0,904,0,832,0,-801,0,532,0,594,0,1972,0,1408,0,1351,0,-1177,0,-1880,0,-2114,0,-773,0,568,0,948,0,-1015,0,1079,0,1260,0,-1111,0,482,0,-130,0,1778,0,1044,0,780,0,-1491,0,245,0,912,0,-316,0,-1141,0,-917,0,-536,0,-1442,0,-2346,0,-785,0,-1546,0,-1988,0,-2003,0,257,0,909,0,-1849,0,-633,0,-1209,0,-1538,0,-1918,0,-1054,0,1606,0,2239,0,1576,0,-567,0,-1500,0,-1544,0,-1279,0,195,0,1369,0,-817,0,293,0,1219,0,-525,0,630,0,1197,0,-1698,0,-2425,0,-1840,0,-303,0,731,0,747,0,-1169,0,-251,0,269,0,-950,0,-75,0,1684,0,-1182,0,-453,0,1005,0,-1599,0,585,0,378,0,-2075,0,-571,0,-427,0,-529,0,-1159,0,-1171,0,-283,0,-205,0,-564,0,-796,0,1246,0,717,0,2277,0,927,0,539,0,-454,0,559,0,440,0,-717,0,1460,0,1615,0,-1030,0,1052,0,1610,0,-1169,0,-138,0,847,0,226,0,39,0,-612,0,-1251,0,-106,0,-729,0,-651,0,968,0,1302,0,-714,0,-636,0,1727,0,353,0,1069,0,410,0,-798,0,-156,0,1099,0,-574,0,918,0,446,0,-1310,0,1012,0,466,0,1408,0,1591,0,765,0,1429,0,1380,0,1757,0,1949,0,1956,0,2378,0,1578,0,2047,0,2148,0,916,0,98,0,-7,0,1893,0,1418,0,2141,0,348,0,1405,0,1579,0,152,0,1134,0,1801,0,-267,0,154,0,1395,0,-1166,0,469,0,1054,0,-1142,0,-405,0,-1073,0,-1341,0,-2264,0,-1581,0,-364,0,869,0,1706,0,-1162,0,549,0,1550,0,-1225,0,-1932,0,-1666,0,-1485,0,-1977,0,-2055,0,-1727,0,-906,0,-98,0,-1897,0,233,0,1492,0,892,0,108,0,-331,0,-1728,0,-1170,0,-1700,0,-1060,0,1980,0,1790,0,-1070,0,-1741,0,-1909,0,-11,0,1539,0,1317,0,-1600,0,94,0,497,0,421,0,443,0,-197,0,-1578,0,-349,0,-994,0,-599,0,-539,0,1140,0,-965,0,-1419,0,-129,0,-1341,0,175,0,-447,0,-375,0,1311,0,2055,0,-371,0,-650,0,-307,0,-1073,0,605,0,365,0,-2057,0,-113,0,430,0,652,0,914,0,967,0,-1012,0,-1586,0,-2323,0,1505,0,1248,0,559,0,262,0,-486,0,-401,0,-1727,0,1342,0,1546,0,50,0,56,0,432,0,-330,0,119,0,-604,0,-1517,0,-1080,0,-810,0,946,0,1127,0,1055,0,-1400,0,-1703,0,-1712,0,-1270,0,-704,0,-1317,0,807,0,1821,0,1143,0,2760,0,1606,0,2171,0,1120,0,409,0,-150,0,-147,0,404,0,959,0,2439,0,1911,0,2189,0,-906,0,-141,0,-866,0,-904,0,-142,0,-458,0,-557,0,-708,0,-1679,0,-830,0,-1431,0,-1583,0,-1842,0,-1346,0,-1086,0,-1604,0,-272,0,915,0,-1196,0,772,0,1056,0,-638,0,-1234,0,-1897,0,-500,0,-81,0,-822,0,-1289,0,-1613,0,-735,0,-117,0,785,0,168,0,-1090,0,1133,0,922,0,-1096,0,-746,0,1384,0,287,0,-547,0,-1063,0,-1376,0,-2201,0,-1204,0,-2176,0,-1570,0,-1757,0,-1511,0,-2241,0,-771,0,-1737,0,1099,0,830,0,-1588,0,724,0,1243,0,-1542,0,693,0,805,0,-1690,0,-240,0,1665,0,-1700,0,-4,0,-668,0,2149,0,816,0,1042,0,-818,0,-1841,0,22,0,-764,0,-507,0,449,0,-1151,0,-617,0,289,0,-843,0,-1596,0,-240,0,498,0,-234,0,-657,0,-752,0,480,0,1678,0,-319,0,-481,0,193,0,-811,0,171,0,-119,0,-2128,0,-202,0,-848,0,1717,0,1140,0,1700,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico3_lsf_3=allocate([67,0,-17,0,66,0,-12,0,-1690,0,-581,0,-104,0,-272,0,-1076,0,-1186,0,-1845,0,-376,0,-1140,0,-926,0,-420,0,-58,0,-259,0,-656,0,-1134,0,-553,0,1788,0,1227,0,455,0,129,0,462,0,441,0,-240,0,-528,0,840,0,514,0,130,0,-75,0,1114,0,623,0,153,0,216,0,1068,0,564,0,-6,0,-276,0,1119,0,727,0,190,0,-68,0,704,0,306,0,119,0,-264,0,329,0,61,0,-100,0,156,0,364,0,123,0,183,0,-208,0,-171,0,-123,0,220,0,-65,0,-306,0,-62,0,402,0,17,0,-660,0,-938,0,-266,0,0,0,385,0,235,0,276,0,285,0,320,0,268,0,-336,0,-200,0,-724,0,17,0,-84,0,381,0,-544,0,429,0,494,0,519,0,-117,0,288,0,304,0,329,0,643,0,157,0,701,0,508,0,1200,0,625,0,796,0,608,0,998,0,421,0,492,0,632,0,1204,0,780,0,446,0,132,0,1257,0,844,0,547,0,449,0,829,0,658,0,541,0,470,0,1132,0,1258,0,918,0,639,0,547,0,51,0,423,0,279,0,9,0,392,0,83,0,94,0,542,0,543,0,229,0,-147,0,-198,0,129,0,194,0,-185,0,-863,0,-1321,0,-302,0,30,0,-597,0,-629,0,-19,0,114,0,-900,0,-1081,0,466,0,353,0,-1483,0,-1573,0,15,0,-143,0,-1708,0,-2059,0,-751,0,196,0,-1876,0,-2067,0,-642,0,-258,0,-2335,0,-1470,0,-450,0,-564,0,-584,0,-186,0,-872,0,-414,0,-1805,0,-988,0,-1125,0,-1310,0,-726,0,-1129,0,28,0,169,0,-1039,0,-864,0,-718,0,-246,0,484,0,36,0,-233,0,-49,0,265,0,67,0,289,0,467,0,178,0,543,0,810,0,540,0,84,0,282,0,672,0,703,0,-975,0,-777,0,129,0,287,0,-938,0,-227,0,955,0,595,0,-1617,0,-289,0,836,0,649,0,-1847,0,-215,0,1106,0,718,0,-2034,0,-1085,0,650,0,440,0,-2101,0,-529,0,907,0,575,0,-2011,0,-336,0,670,0,204,0,-2389,0,-692,0,360,0,137,0,-2156,0,-2204,0,-9,0,280,0,-266,0,119,0,39,0,193,0,78,0,-59,0,-120,0,226,0,-975,0,-858,0,-781,0,-1095,0,-619,0,-413,0,-451,0,-842,0,-1216,0,-1321,0,-813,0,-883,0,-1376,0,-1615,0,-394,0,-428,0,-737,0,-1113,0,-549,0,-790,0,-880,0,-975,0,-967,0,-642,0,-985,0,-886,0,-1273,0,-1361,0,-473,0,-804,0,-1401,0,-1407,0,160,0,-265,0,-919,0,-275,0,-248,0,-250,0,-718,0,-380,0,97,0,-103,0,-375,0,-229,0,-415,0,-193,0,-135,0,-555,0,628,0,361,0,119,0,216,0,579,0,364,0,391,0,209,0,634,0,522,0,-154,0,-148,0,526,0,389,0,170,0,33,0,105,0,267,0,64,0,380,0,-1503,0,-1e3,0,-30,0,-369,0,-1070,0,58,0,647,0,223,0,-1520,0,-291,0,621,0,307,0,-1531,0,156,0,762,0,404,0,-2029,0,141,0,734,0,499,0,-1849,0,-650,0,306,0,512,0,-187,0,-104,0,-59,0,438,0,134,0,-230,0,156,0,-186,0,-61,0,-260,0,-16,0,10,0,-569,0,-3,0,-421,0,-297,0,-1725,0,-521,0,-346,0,178,0,-1362,0,-59,0,-44,0,157,0,-2146,0,-461,0,-470,0,-349,0,-2170,0,-1,0,-369,0,-121,0,-1579,0,-373,0,-900,0,-1015,0,-1117,0,-591,0,-613,0,-784,0,-561,0,122,0,-75,0,-449,0,-4,0,-171,0,-123,0,-372,0,192,0,168,0,-76,0,-132,0,252,0,-107,0,340,0,210,0,392,0,509,0,272,0,181,0,-109,0,145,0,218,0,119,0,-416,0,-263,0,485,0,265,0,-181,0,-8,0,-286,0,226,0,-244,0,-218,0,69,0,-290,0,-158,0,191,0,-1,0,-64,0,-592,0,-90,0,213,0,-96,0,255,0,435,0,178,0,-80,0,-369,0,-18,0,-33,0,-80,0,-42,0,415,0,140,0,-222,0,1143,0,651,0,649,0,329,0,767,0,556,0,249,0,235,0,948,0,413,0,442,0,279,0,141,0,339,0,356,0,557,0,-470,0,-170,0,99,0,237,0,-569,0,-800,0,352,0,565,0,282,0,473,0,470,0,332,0,-199,0,-690,0,-1284,0,-917,0,-193,0,-426,0,-800,0,-1122,0,-26,0,-371,0,-490,0,-193,0,637,0,595,0,519,0,330,0,408,0,-115,0,79,0,12,0,477,0,87,0,-103,0,-376,0,-666,0,-347,0,-277,0,-291,0,-510,0,-481,0,169,0,297,0,-829,0,-738,0,-205,0,-171,0,-320,0,-540,0,328,0,283,0,-859,0,-958,0,442,0,-2,0,556,0,686,0,130,0,56,0,1383,0,1012,0,755,0,427,0,612,0,741,0,628,0,553,0,-339,0,-796,0,134,0,277,0,-633,0,-1085,0,-2,0,-246,0,-880,0,-1035,0,-1607,0,-1064,0,-994,0,-474,0,-1138,0,-488,0,-414,0,-795,0,73,0,-206,0,-8,0,-139,0,439,0,204,0,-176,0,-578,0,23,0,131,0,-269,0,-757,0,-191,0,245,0,-109,0,-338,0,112,0,316,0,120,0,-406,0,-118,0,611,0,-180,0,-186,0,-645,0,115,0,-173,0,34,0,-518,0,-489,0,-151,0,61,0,-583,0,-844,0,220,0,-138,0,-681,0,-1020,0,391,0,-17,0,-598,0,-321,0,157,0,-295,0,129,0,155,0,-926,0,-875,0,-987,0,285,0,241,0,-83,0,-125,0,-125,0,620,0,597,0,432,0,92,0,393,0,78,0,409,0,61,0,-393,0,-739,0,-413,0,-748,0,83,0,54,0,361,0,27,0,-1084,0,130,0,-337,0,-694,0,-1565,0,297,0,318,0,-19,0,-1873,0,36,0,51,0,-317,0,-2323,0,-246,0,231,0,-84,0,-2306,0,-783,0,40,0,-179,0,-2233,0,-930,0,-474,0,-462,0,-754,0,-86,0,-288,0,-626,0,-2411,0,-455,0,-63,0,171,0,-1099,0,-1094,0,-26,0,-143,0,-1193,0,-455,0,-406,0,-381,0,-605,0,-210,0,-96,0,-51,0,-580,0,-476,0,-276,0,-15,0,-1195,0,-634,0,-1203,0,-881,0,-378,0,-221,0,-669,0,-952,0,594,0,178,0,-403,0,-676,0,763,0,327,0,601,0,290,0,172,0,300,0,203,0,157,0,-56,0,-336,0,356,0,24,0,-228,0,-296,0,-259,0,-29,0,-186,0,263,0,416,0,14,0,-353,0,373,0,-12,0,-216,0,257,0,96,0,174,0,57,0,-1526,0,-616,0,-954,0,-499,0,-497,0,-152,0,-333,0,125,0,105,0,200,0,179,0,-97,0,-331,0,-224,0,765,0,697,0,760,0,256,0,301,0,59,0,455,0,-85,0,204,0,288,0,-514,0,240,0,251,0,-109,0,256,0,417,0,-34,0,-413,0,101,0,430,0,384,0,156,0,-31,0,-10,0,206,0,426,0,589,0,145,0,143,0,71,0,808,0,906,0,333,0,349,0,986,0,938,0,589,0,331,0,1300,0,824,0,187,0,509,0,1062,0,653,0,379,0,466,0,1462,0,937,0,401,0,274,0,787,0,861,0,265,0,2,0,609,0,553,0,28,0,305,0,926,0,340,0,106,0,386,0,241,0,-267,0,-147,0,225,0,-178,0,-534,0,347,0,502,0,-643,0,-381,0,397,0,30,0,-651,0,-733,0,-435,0,398,0,-407,0,-726,0,-484,0,-248,0,-789,0,-914,0,-438,0,-476,0,-498,0,-390,0,75,0,-295,0,-964,0,-590,0,-606,0,150,0,-121,0,-49,0,-155,0,-78,0,935,0,550,0,389,0,38,0,-321,0,127,0,424,0,315,0,-285,0,-113,0,283,0,259,0,658,0,203,0,322,0,486,0,903,0,505,0,748,0,417,0,611,0,423,0,555,0,512,0,239,0,-83,0,-578,0,-19,0,-339,0,-731,0,349,0,13,0,-934,0,-1399,0,-114,0,-360,0,107,0,692,0,182,0,90,0,-1243,0,-1538,0,-1551,0,-725,0,-568,0,-903,0,-1363,0,-525,0,-517,0,-853,0,-861,0,-1004,0,-168,0,-690,0,-835,0,63,0,-137,0,-556,0,-547,0,144,0,-286,0,-817,0,485,0,319,0,-147,0,-408,0,526,0,246,0,-347,0,-434,0,297,0,-28,0,-290,0,-471,0,-1110,0,-1285,0,-460,0,-359,0,-988,0,-794,0,1347,0,1299,0,690,0,523,0,1216,0,1068,0,1094,0,757,0,825,0,1140,0,752,0,494,0,1252,0,1365,0,1195,0,898,0,521,0,1053,0,532,0,432,0,-334,0,-216,0,-313,0,-263,0,-160,0,52,0,-472,0,-155,0,127,0,136,0,-380,0,44,0,851,0,410,0,-162,0,-489,0,123,0,-255,0,-796,0,-667,0,1090,0,917,0,789,0,493,0,1397,0,1197,0,558,0,202,0,-51,0,-118,0,-342,0,-701,0,83,0,108,0,-42,0,-441,0,61,0,95,0,287,0,256,0,-27,0,89,0,524,0,531,0,351,0,227,0,592,0,545,0,697,0,155,0,-164,0,307,0,638,0,274,0,-489,0,-50,0,754,0,240,0,-166,0,-124,0,-116,0,-579,0,-1212,0,-63,0,190,0,-295,0,-1040,0,-1296,0,147,0,-376,0,-177,0,-113,0,841,0,1241,0,1051,0,668,0,2,0,293,0,551,0,304,0,-1096,0,-953,0,-248,0,376,0,-750,0,-965,0,87,0,516,0,-275,0,-516,0,689,0,391,0,-379,0,-643,0,876,0,594,0,-390,0,-1013,0,-645,0,573,0,-107,0,-568,0,-689,0,-826,0,-1025,0,-27,0,-328,0,-203,0,861,0,749,0,548,0,233,0,-1660,0,-1043,0,451,0,108,0,-660,0,-620,0,430,0,236,0,21,0,-396,0,-1158,0,-631,0,1372,0,1298,0,967,0,577,0,1125,0,1125,0,589,0,454,0,-323,0,-865,0,-467,0,153,0,-468,0,-699,0,-804,0,-509,0,-392,0,-718,0,-204,0,-35,0,-603,0,-1093,0,-567,0,-162,0,-505,0,-1004,0,-102,0,350,0,219,0,224,0,423,0,252,0,395,0,591,0,608,0,363,0,-746,0,-96,0,373,0,172,0,171,0,295,0,714,0,339,0,233,0,77,0,107,0,277,0,157,0,153,0,-499,0,-356,0,1547,0,1073,0,576,0,494,0,-292,0,-339,0,-504,0,-592,0,-903,0,-72,0,-619,0,-481,0,-1594,0,-1117,0,-567,0,-254,0,-793,0,-507,0,-564,0,-291,0,-492,0,-532,0,502,0,560,0,-382,0,427,0,600,0,230,0,-227,0,477,0,251,0,75,0,285,0,842,0,813,0,476,0,-1310,0,-1333,0,186,0,377,0,-587,0,-917,0,643,0,381,0,-1186,0,-553,0,411,0,82,0,-1127,0,-820,0,-174,0,-540,0,-604,0,119,0,543,0,205,0,-380,0,657,0,909,0,567,0,112,0,-298,0,-374,0,114,0,-857,0,-251,0,56,0,159,0,401,0,345,0,-34,0,-140,0,-111,0,-607,0,41,0,614,0,355,0,-114,0,-77,0,474,0,578,0,56,0,1450,0,924,0,1098,0,1420,0,741,0,400,0,246,0,22,0,588,0,313,0,-121,0,327,0,831,0,472,0,-1138,0,-608,0,856,0,552,0,-1241,0,-1072,0,638,0,600,0,-358,0,254,0,-333,0,-303,0,-646,0,739,0,358,0,74,0,1226,0,1671,0,1221,0,849,0,2241,0,1624,0,983,0,636,0,1841,0,1477,0,749,0,384,0,350,0,263,0,87,0,128,0,-1902,0,-941,0,-144,0,-64,0,-1734,0,-255,0,288,0,-31,0,-2644,0,-1238,0,366,0,235,0,-1643,0,-1092,0,-1344,0,-304,0,-541,0,-1075,0,-1116,0,123,0,-1178,0,-252,0,-816,0,-180,0,-1016,0,533,0,565,0,233,0,-487,0,-430,0,-188,0,334,0,867,0,1236,0,534,0,171,0,-1590,0,-1607,0,635,0,630,0,-2196,0,310,0,924,0,412,0,-2358,0,-328,0,956,0,529,0,-2639,0,-377,0,630,0,278,0,-2602,0,317,0,799,0,299,0,-2406,0,133,0,340,0,31,0,-2156,0,-1468,0,131,0,125,0,-1184,0,-490,0,-139,0,46,0,-744,0,447,0,891,0,564,0,67,0,-451,0,646,0,604,0,-553,0,-429,0,-876,0,396,0,162,0,-66,0,1305,0,915,0,479,0,579,0,1088,0,794,0,450,0,278,0,566,0,324,0,-1057,0,-154,0,148,0,-177,0,-2545,0,168,0,1070,0,592,0,-2351,0,-42,0,819,0,345,0,-2344,0,-707,0,721,0,250,0,-2175,0,-1497,0,-309,0,122,0,-78,0,-73,0,120,0,173,0,-4,0,262,0,-263,0,-261,0,-431,0,-64,0,-405,0,-732,0,-2609,0,116,0,-83,0,-193,0,-1525,0,-944,0,-477,0,-725,0,-508,0,307,0,170,0,172,0,832,0,417,0,832,0,686,0,-225,0,177,0,894,0,818,0,-482,0,-389,0,1279,0,1039,0,-383,0,201,0,-350,0,40,0,730,0,635,0,226,0,526,0,503,0,462,0,338,0,398,0,535,0,714,0,40,0,-282,0,1482,0,1471,0,1085,0,731,0,1561,0,1072,0,909,0,693,0,1419,0,1282,0,889,0,879,0,1153,0,728,0,1186,0,840,0,-226,0,1130,0,949,0,689,0,-494,0,-986,0,-1556,0,-128,0,-568,0,-721,0,-713,0,-26,0,317,0,524,0,70,0,135,0,-405,0,-865,0,-1766,0,-652,0,-174,0,-801,0,885,0,773,0,-153,0,-91,0,1099,0,751,0,-506,0,-1149,0,853,0,646,0,241,0,782,0,519,0,539,0,1853,0,1700,0,1101,0,684,0,-1249,0,-1486,0,-464,0,188,0,-893,0,-1409,0,-1312,0,-341,0,-135,0,438,0,-175,0,18,0,1111,0,976,0,319,0,208,0,-1430,0,-1768,0,83,0,458,0,-530,0,-1e3,0,307,0,129,0,-840,0,-15,0,-29,0,-356,0,-911,0,-924,0,-1147,0,-242,0,-119,0,-528,0,127,0,-133,0,-761,0,-765,0,190,0,-83,0,-315,0,895,0,522,0,231,0,-222,0,102,0,-63,0,-428,0,316,0,699,0,379,0,70,0,25,0,716,0,314,0,-108,0,507,0,874,0,566,0,238,0,108,0,941,0,519,0,195,0,425,0,-60,0,-427,0,257,0,139,0,-103,0,-630,0,446,0,334,0,370,0,412,0,48,0,-172,0,-690,0,-283,0,557,0,187,0,-286,0,158,0,483,0,140,0,270,0,-344,0,-631,0,924,0,579,0,-116,0,132,0,142,0,466,0,-68,0,-64,0,230,0,-145,0,-302,0,-542,0,-803,0,-912,0,1018,0,737,0,-773,0,1015,0,630,0,297,0,-2596,0,95,0,445,0,336,0,-2122,0,491,0,510,0,191,0,-1253,0,161,0,-2,0,-324,0,-1450,0,-633,0,-712,0,-105,0,-842,0,-254,0,-411,0,100,0,-640,0,-290,0,1010,0,763,0,-650,0,313,0,1169,0,730,0,140,0,505,0,1030,0,766,0,772,0,287,0,1067,0,823,0,495,0,749,0,305,0,323,0,-164,0,462,0,78,0,399,0,-342,0,-874,0,69,0,597,0,-16,0,620,0,621,0,337,0,-138,0,-444,0,-265,0,218,0,84,0,-450,0,953,0,666,0,-222,0,-803,0,541,0,604,0,-921,0,-1376,0,244,0,116,0,-841,0,-723,0,630,0,588,0,140,0,663,0,294,0,368,0,935,0,1046,0,881,0,759,0,1746,0,1464,0,916,0,628,0,436,0,963,0,281,0,1,0,-119,0,74,0,542,0,213,0,1,0,-567,0,301,0,241,0,260,0,435,0,222,0,396,0,936,0,957,0,1108,0,703,0,510,0,506,0,808,0,478,0,601,0,694,0,960,0,620,0,972,0,741,0,980,0,600,0,834,0,717,0,767,0,684,0,643,0,972,0,935,0,638,0,501,0,661,0,720,0,851,0,-105,0,-632,0,-303,0,-117,0,-429,0,130,0,789,0,442,0,-522,0,-188,0,704,0,373,0,-759,0,42,0,814,0,523,0,-531,0,-1137,0,373,0,578,0,-682,0,-1203,0,-455,0,285,0,-1163,0,-1577,0,-1098,0,44,0,81,0,-82,0,712,0,363,0,477,0,246,0,954,0,622,0,1604,0,1622,0,1277,0,891,0,1409,0,859,0,924,0,892,0,774,0,1041,0,947,0,1142,0,40,0,-546,0,-75,0,288,0,-616,0,-106,0,-697,0,-26,0,-169,0,-160,0,-891,0,-739,0,-279,0,-384,0,-1029,0,-350,0,1781,0,1308,0,1046,0,816,0,1580,0,1533,0,1472,0,1178,0,1505,0,1076,0,1216,0,899,0,890,0,904,0,564,0,654,0,920,0,692,0,1021,0,856,0,-493,0,132,0,177,0,505,0,71,0,195,0,-28,0,97,0,456,0,351,0,-164,0,88,0,439,0,278,0,-40,0,350,0,1395,0,949,0,234,0,-95,0,-805,0,-472,0,38,0,-163,0,367,0,-98,0,489,0,523,0,1025,0,1178,0,1212,0,906,0,319,0,1314,0,814,0,461,0,-123,0,-543,0,-804,0,447,0,-748,0,-324,0,-897,0,-1127,0,-737,0,-501,0,-789,0,-713,0,715,0,777,0,1239,0,922,0,1949,0,1939,0,1368,0,865,0,730,0,880,0,758,0,388,0,-871,0,454,0,17,0,-251,0,-381,0,-810,0,-1583,0,239,0,-521,0,-966,0,-792,0,259,0,-890,0,-1358,0,-770,0,-73,0,166,0,349,0,-212,0,323,0,-840,0,-301,0,473,0,435,0,-679,0,-464,0,728,0,351,0,-156,0,-199,0,667,0,432,0,29,0,-252,0,415,0,480,0,-731,0,-379,0,145,0,559,0,-528,0,-631,0,-1158,0,-159,0,445,0,273,0,123,0,639,0,373,0,-126,0,800,0,568,0,84,0,-162,0,720,0,712,0,-830,0,-536,0,-185,0,222,0,408,0,452,0,501,0,771,0,-897,0,-1355,0,-67,0,442,0,-792,0,-1406,0,566,0,602,0,167,0,-326,0,509,0,330,0,-95,0,-626,0,-730,0,-344,0,1668,0,1217,0,779,0,455,0,1316,0,828,0,584,0,719,0,404,0,-31,0,1013,0,789,0,89,0,107,0,891,0,549,0,871,0,1581,0,917,0,671,0,866,0,1479,0,1289,0,854,0,391,0,1068,0,1122,0,812,0,78,0,-562,0,345,0,563,0,429,0,-103,0,417,0,787,0,-122,0,-437,0,411,0,788,0,-913,0,-417,0,602,0,754,0,-226,0,-16,0,151,0,760,0,-700,0,118,0,-104,0,-14,0,-1128,0,48,0,284,0,393,0,-390,0,-419,0,-639,0,-116,0,-910,0,306,0,316,0,-13,0,1207,0,984,0,821,0,669,0,-1195,0,-693,0,140,0,-213,0,-884,0,-416,0,-199,0,-558,0,-616,0,245,0,-404,0,-664,0,262,0,56,0,-617,0,-724,0,-85,0,-491,0,-320,0,-656,0,-570,0,-831,0,-129,0,-528,0,-1506,0,-63,0,-367,0,-385,0,-358,0,-321,0,4,0,51,0,-366,0,-214,0,319,0,511,0,146,0,671,0,-17,0,-291,0,-110,0,464,0,-139,0,-496,0,-202,0,220,0,-312,0,-631,0,-660,0,-73,0,-655,0,-820,0,-662,0,-653,0,-1288,0,-857,0,-430,0,-953,0,-959,0,-264,0,-49,0,-468,0,-72,0,-381,0,-350,0,-563,0,-193,0,-407,0,55,0,-408,0,-803,0,11,0,-309,0,649,0,188,0,-198,0,-512,0,461,0,-79,0,-458,0,-1318,0,-263,0,-134,0,-523,0,-1657,0,-435,0,-495,0,-765,0,57,0,-347,0,-414,0,434,0,-1141,0,-242,0,-664,0,-857,0,34,0,-68,0,-707,0,-338,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_mr515_3_lsf=allocate([419,0,163,0,-30,0,-262,0,-455,0,-789,0,-1430,0,-721,0,1006,0,664,0,269,0,25,0,619,0,260,0,183,0,96,0,-968,0,-1358,0,-388,0,135,0,-693,0,835,0,456,0,154,0,1105,0,703,0,569,0,363,0,1625,0,1326,0,985,0,748,0,-220,0,219,0,76,0,-208,0,-1455,0,-1662,0,49,0,149,0,-964,0,-172,0,-752,0,-336,0,625,0,209,0,-250,0,-66,0,-1017,0,-838,0,-2,0,317,0,-2168,0,-1485,0,-138,0,123,0,-1876,0,-2099,0,-521,0,85,0,-967,0,-366,0,-695,0,-881,0,-921,0,-1011,0,-763,0,-949,0,-124,0,-256,0,-352,0,-660,0,178,0,463,0,354,0,304,0,-1744,0,-591,0,-282,0,79,0,-2249,0,175,0,867,0,499,0,-138,0,-180,0,-181,0,-21,0,-2291,0,-1241,0,-460,0,-520,0,-771,0,451,0,-10,0,-308,0,271,0,-65,0,4,0,214,0,-279,0,-435,0,-43,0,-348,0,-670,0,35,0,-65,0,-211,0,806,0,535,0,85,0,297,0,57,0,239,0,722,0,493,0,225,0,661,0,840,0,547,0,-540,0,-376,0,14,0,349,0,469,0,721,0,331,0,162,0,-544,0,-752,0,-62,0,-10,0,398,0,-88,0,724,0,701,0,-19,0,-533,0,-94,0,601,0,136,0,-71,0,-681,0,-747,0,-166,0,-344,0,261,0,-50,0,161,0,-52,0,485,0,337,0,-1675,0,50,0,190,0,-93,0,-2282,0,-231,0,-194,0,-82,0,-95,0,-595,0,-154,0,128,0,894,0,501,0,588,0,457,0,-345,0,206,0,122,0,110,0,-631,0,-227,0,-569,0,3,0,408,0,239,0,397,0,226,0,-197,0,-2,0,128,0,491,0,1281,0,904,0,292,0,215,0,538,0,306,0,259,0,509,0,-677,0,-1047,0,13,0,321,0,-679,0,-588,0,-358,0,-212,0,-558,0,243,0,646,0,479,0,486,0,342,0,634,0,532,0,107,0,802,0,331,0,136,0,-112,0,-398,0,-1031,0,-286,0,-326,0,-705,0,288,0,272,0,1299,0,1144,0,1178,0,860,0,-423,0,121,0,-385,0,-148,0,-295,0,-302,0,-834,0,-819,0,16,0,-24,0,-201,0,-476,0,555,0,91,0,-245,0,294,0,-38,0,-379,0,-962,0,-1221,0,-1191,0,-1518,0,-273,0,-395,0,-390,0,-1013,0,-645,0,573,0,-1843,0,-1030,0,505,0,468,0,744,0,947,0,609,0,493,0,-689,0,-1172,0,-628,0,-135,0,-1026,0,195,0,411,0,196,0,1582,0,1147,0,575,0,337,0,-1239,0,-777,0,-648,0,-142,0,595,0,825,0,967,0,735,0,-1206,0,-970,0,-81,0,-342,0,-745,0,13,0,-72,0,375,0,454,0,19,0,1407,0,921,0,-1647,0,-172,0,861,0,562,0,928,0,1537,0,1063,0,740,0,-2472,0,-952,0,264,0,82,0,-502,0,-965,0,-1334,0,123,0,867,0,1236,0,534,0,171,0,-2320,0,-460,0,780,0,363,0,-1190,0,-617,0,252,0,-61,0,-174,0,34,0,1011,0,788,0,-2333,0,247,0,423,0,153,0,-16,0,-355,0,262,0,449,0,-1576,0,-1073,0,-544,0,-371,0,-615,0,-305,0,1051,0,805,0,687,0,528,0,6,0,-182,0,935,0,875,0,1002,0,809,0,199,0,257,0,126,0,76,0,-584,0,-1138,0,599,0,556,0,-1105,0,-1391,0,-1591,0,-519,0,-977,0,-1325,0,108,0,347,0,-722,0,-975,0,365,0,101,0,-145,0,681,0,249,0,-153,0,0,0,-334,0,-570,0,159,0,412,0,285,0,-336,0,-617,0,-953,0,-966,0,887,0,689,0,-1251,0,84,0,-185,0,-398,0,-592,0,433,0,1044,0,653,0,85,0,329,0,-40,0,361,0,-433,0,-705,0,466,0,574,0,-154,0,654,0,592,0,290,0,-167,0,72,0,349,0,175,0,674,0,297,0,977,0,720,0,1235,0,1204,0,757,0,488,0,-400,0,-269,0,538,0,372,0,-1350,0,-1387,0,-1194,0,-91,0,1262,0,876,0,775,0,700,0,-599,0,-38,0,-430,0,-722,0,1976,0,1630,0,991,0,608,0,111,0,276,0,-226,0,-96,0,-947,0,-388,0,-11,0,-7,0,-303,0,-531,0,-839,0,338,0,1734,0,1710,0,1405,0,1013,0,-516,0,-855,0,-645,0,210,0,-688,0,-416,0,513,0,230,0,-822,0,-637,0,-1146,0,-320,0,-952,0,-658,0,-694,0,183,0,-114,0,-623,0,818,0,674,0,-191,0,-204,0,731,0,635,0,51,0,1221,0,883,0,576,0,-954,0,-431,0,826,0,598,0,-342,0,-755,0,-900,0,-407,0,-1126,0,-354,0,-206,0,-512,0,-547,0,-810,0,-357,0,-620,0,66,0,515,0,-73,0,-410,0,-872,0,-945,0,-1444,0,-1227,0,191,0,-17,0,-544,0,-231,0,-1540,0,-544,0,-901,0,-886,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_mr795_1_lsf=allocate([-890,0,-1550,0,-2541,0,-819,0,-970,0,175,0,-826,0,-1234,0,-762,0,-599,0,-22,0,634,0,-811,0,-987,0,-902,0,-323,0,203,0,26,0,-383,0,-235,0,-781,0,-399,0,1262,0,906,0,-932,0,-1399,0,-1380,0,-624,0,93,0,87,0,-414,0,-539,0,-691,0,37,0,633,0,510,0,-387,0,-476,0,-1330,0,399,0,66,0,263,0,-407,0,-49,0,-335,0,-417,0,1041,0,1865,0,-779,0,-1089,0,-1440,0,-746,0,-858,0,832,0,-581,0,-759,0,-371,0,-673,0,-506,0,2088,0,-560,0,-634,0,-1179,0,271,0,241,0,14,0,-438,0,-244,0,-397,0,463,0,1202,0,1047,0,-606,0,-797,0,-1438,0,-51,0,-323,0,481,0,-224,0,-584,0,-527,0,494,0,881,0,682,0,-433,0,-306,0,-1002,0,554,0,659,0,222,0,171,0,-160,0,-353,0,681,0,1798,0,1565,0,-852,0,-1181,0,-1695,0,-336,0,-666,0,114,0,-581,0,-756,0,-744,0,-195,0,375,0,497,0,-465,0,-804,0,-1098,0,154,0,282,0,-131,0,-50,0,-191,0,-719,0,323,0,732,0,1542,0,-722,0,-819,0,-1404,0,105,0,-250,0,185,0,-178,0,-502,0,-742,0,321,0,510,0,1111,0,-323,0,-567,0,-966,0,127,0,484,0,338,0,-160,0,52,0,-338,0,732,0,1367,0,1554,0,-626,0,-802,0,-1696,0,-286,0,-586,0,676,0,-695,0,-343,0,-370,0,-490,0,295,0,1893,0,-630,0,-574,0,-1014,0,-80,0,645,0,-69,0,-6,0,-318,0,-364,0,782,0,1450,0,1038,0,-313,0,-733,0,-1395,0,120,0,60,0,477,0,-264,0,-585,0,-123,0,711,0,1245,0,633,0,-91,0,-355,0,-1016,0,771,0,758,0,261,0,253,0,81,0,-474,0,930,0,2215,0,1720,0,-808,0,-1099,0,-1925,0,-560,0,-782,0,169,0,-804,0,-1074,0,-188,0,-626,0,-55,0,1405,0,-694,0,-716,0,-1194,0,-660,0,354,0,329,0,-514,0,-55,0,-543,0,366,0,1033,0,1182,0,-658,0,-959,0,-1357,0,-55,0,-184,0,93,0,-605,0,-286,0,-662,0,404,0,449,0,827,0,-286,0,-350,0,-1263,0,628,0,306,0,227,0,-16,0,147,0,-623,0,186,0,923,0,2146,0,-674,0,-890,0,-1606,0,-443,0,-228,0,339,0,-369,0,-790,0,-409,0,231,0,86,0,1469,0,-448,0,-581,0,-1061,0,594,0,450,0,-177,0,-124,0,-170,0,-447,0,671,0,1159,0,1404,0,-476,0,-667,0,-1511,0,-77,0,-138,0,716,0,-177,0,-372,0,-381,0,451,0,934,0,915,0,-250,0,-432,0,-822,0,272,0,828,0,446,0,26,0,19,0,-31,0,698,0,1692,0,2168,0,-646,0,-977,0,-1924,0,-179,0,-473,0,268,0,-379,0,-745,0,-691,0,11,0,127,0,1033,0,-488,0,-917,0,-825,0,61,0,323,0,135,0,147,0,-145,0,-686,0,685,0,786,0,1682,0,-506,0,-848,0,-1297,0,35,0,90,0,222,0,-23,0,-346,0,-670,0,455,0,591,0,1287,0,-203,0,-593,0,-1086,0,652,0,352,0,437,0,39,0,63,0,-457,0,841,0,1265,0,2105,0,-520,0,-882,0,-1584,0,-328,0,-711,0,1421,0,-596,0,-342,0,-70,0,209,0,173,0,1928,0,-423,0,-598,0,-921,0,421,0,605,0,-38,0,-2,0,-245,0,-127,0,896,0,1969,0,1135,0,-379,0,-518,0,-1579,0,173,0,118,0,753,0,-55,0,-381,0,-52,0,985,0,1021,0,753,0,-2,0,-291,0,-891,0,753,0,992,0,423,0,264,0,131,0,-196,0,895,0,2274,0,2543,0,-635,0,-1088,0,-2499,0,-529,0,-982,0,526,0,-764,0,-830,0,-548,0,-436,0,316,0,599,0,-675,0,-940,0,-746,0,-57,0,236,0,-11,0,-201,0,-81,0,-798,0,16,0,845,0,1558,0,-737,0,-985,0,-1212,0,-468,0,17,0,290,0,-279,0,-584,0,-700,0,183,0,822,0,705,0,-265,0,-492,0,-1187,0,421,0,152,0,468,0,-390,0,166,0,-268,0,39,0,1550,0,1868,0,-635,0,-966,0,-1571,0,-453,0,-492,0,910,0,-284,0,-1027,0,-75,0,-181,0,-133,0,1852,0,-445,0,-624,0,-1174,0,420,0,367,0,-49,0,-389,0,-212,0,-169,0,707,0,1073,0,1208,0,-539,0,-710,0,-1449,0,83,0,-163,0,484,0,-236,0,-543,0,-355,0,338,0,1175,0,814,0,-246,0,-309,0,-958,0,606,0,760,0,60,0,166,0,-8,0,-163,0,-306,0,1849,0,2563,0,-747,0,-1025,0,-1783,0,-419,0,-446,0,209,0,-718,0,-566,0,-534,0,-506,0,693,0,857,0,-463,0,-697,0,-1082,0,325,0,431,0,-206,0,-15,0,-8,0,-763,0,545,0,919,0,1518,0,-611,0,-783,0,-1313,0,256,0,-55,0,208,0,-165,0,-348,0,-662,0,321,0,680,0,930,0,-326,0,-429,0,-951,0,484,0,446,0,570,0,-197,0,72,0,-73,0,909,0,1455,0,1741,0,-563,0,-737,0,-1974,0,-124,0,-416,0,718,0,-478,0,-404,0,-314,0,-16,0,446,0,1636,0,-551,0,-537,0,-750,0,-58,0,638,0,214,0,55,0,-185,0,-271,0,1148,0,1301,0,1212,0,-483,0,-671,0,-1264,0,117,0,285,0,543,0,-204,0,-391,0,-111,0,513,0,1538,0,854,0,-114,0,-190,0,-978,0,877,0,595,0,464,0,260,0,260,0,-311,0,748,0,2283,0,2216,0,-517,0,-945,0,-2171,0,-326,0,-708,0,378,0,-812,0,-691,0,-232,0,-560,0,687,0,1409,0,-732,0,-690,0,-836,0,-359,0,645,0,386,0,-265,0,62,0,-678,0,145,0,1644,0,1208,0,-555,0,-988,0,-1233,0,-78,0,14,0,114,0,-327,0,-358,0,-489,0,392,0,677,0,697,0,-201,0,-236,0,-1140,0,693,0,449,0,178,0,-243,0,256,0,-433,0,611,0,1385,0,2456,0,-612,0,-901,0,-1464,0,-307,0,-17,0,499,0,-315,0,-667,0,-254,0,256,0,428,0,1463,0,-486,0,-422,0,-1056,0,655,0,370,0,18,0,-102,0,-185,0,-276,0,755,0,1578,0,1335,0,-488,0,-603,0,-1418,0,182,0,-93,0,870,0,-73,0,-458,0,-348,0,835,0,862,0,957,0,-282,0,-333,0,-746,0,547,0,839,0,428,0,273,0,-89,0,13,0,940,0,1708,0,2576,0,-418,0,-1084,0,-1758,0,-44,0,-358,0,259,0,-497,0,-643,0,-560,0,99,0,557,0,961,0,-421,0,-766,0,-917,0,295,0,326,0,184,0,175,0,15,0,-626,0,532,0,878,0,1981,0,-443,0,-768,0,-1275,0,221,0,156,0,268,0,39,0,-363,0,-505,0,695,0,772,0,1140,0,-162,0,-459,0,-912,0,709,0,444,0,658,0,25,0,303,0,-312,0,1268,0,1410,0,1715,0,-297,0,-766,0,-1836,0,-263,0,-108,0,1070,0,-406,0,-13,0,-129,0,57,0,438,0,2734,0,-374,0,-487,0,-835,0,304,0,696,0,164,0,104,0,-235,0,5,0,1611,0,1900,0,1399,0,-229,0,-582,0,-1325,0,405,0,192,0,817,0,-87,0,-438,0,111,0,1028,0,1199,0,993,0,68,0,-175,0,-934,0,1033,0,1117,0,451,0,478,0,200,0,-248,0,2127,0,2696,0,2042,0,-835,0,-1323,0,-2131,0,-799,0,-692,0,466,0,-812,0,-1032,0,-469,0,-622,0,288,0,920,0,-701,0,-841,0,-1070,0,-411,0,512,0,8,0,-390,0,-91,0,-744,0,-30,0,1043,0,1161,0,-822,0,-1148,0,-1156,0,-294,0,-46,0,110,0,-411,0,-374,0,-678,0,214,0,531,0,668,0,-406,0,-420,0,-1194,0,487,0,232,0,303,0,-318,0,91,0,-472,0,123,0,1232,0,2445,0,-722,0,-952,0,-1495,0,-738,0,-675,0,1332,0,-543,0,-606,0,-211,0,-95,0,-98,0,1508,0,-549,0,-514,0,-1193,0,473,0,211,0,73,0,-288,0,-112,0,-389,0,537,0,1332,0,1258,0,-567,0,-755,0,-1545,0,71,0,-283,0,632,0,-170,0,-481,0,-493,0,681,0,1002,0,817,0,-356,0,-331,0,-877,0,419,0,706,0,346,0,241,0,-34,0,-326,0,377,0,1950,0,1883,0,-727,0,-1075,0,-1625,0,-233,0,-543,0,116,0,-524,0,-806,0,-585,0,-73,0,478,0,729,0,-288,0,-925,0,-1143,0,173,0,447,0,-52,0,68,0,-229,0,-606,0,449,0,529,0,1797,0,-591,0,-875,0,-1363,0,183,0,-144,0,324,0,-103,0,-452,0,-666,0,623,0,488,0,1176,0,-238,0,-511,0,-1004,0,326,0,552,0,458,0,136,0,108,0,-319,0,626,0,1343,0,1883,0,-490,0,-646,0,-1730,0,-186,0,-449,0,984,0,-738,0,-76,0,-170,0,-550,0,755,0,2560,0,-496,0,-510,0,-947,0,210,0,694,0,-52,0,84,0,-322,0,-199,0,1090,0,1625,0,1224,0,-376,0,-603,0,-1396,0,343,0,74,0,632,0,-175,0,-502,0,-32,0,972,0,1332,0,734,0,52,0,-295,0,-1113,0,1065,0,918,0,160,0,393,0,107,0,-397,0,1214,0,2649,0,1741,0,-632,0,-1201,0,-1891,0,-719,0,-277,0,353,0,-651,0,-880,0,-122,0,-211,0,209,0,1338,0,-562,0,-714,0,-1059,0,-208,0,388,0,159,0,-320,0,-61,0,-551,0,293,0,1092,0,1443,0,-648,0,-865,0,-1253,0,-49,0,-143,0,305,0,-401,0,-227,0,-585,0,561,0,532,0,927,0,-117,0,-443,0,-1188,0,507,0,436,0,292,0,-79,0,233,0,-458,0,671,0,1025,0,2396,0,-633,0,-842,0,-1525,0,-308,0,-286,0,640,0,-373,0,-621,0,-407,0,418,0,253,0,1305,0,-315,0,-581,0,-1137,0,572,0,685,0,-281,0,61,0,-68,0,-371,0,991,0,1101,0,1498,0,-493,0,-683,0,-1362,0,-47,0,164,0,704,0,-256,0,-314,0,-268,0,631,0,949,0,1052,0,-118,0,-348,0,-833,0,68,0,1180,0,568,0,152,0,117,0,34,0,1113,0,1902,0,2239,0,-601,0,-959,0,-1706,0,-143,0,-489,0,480,0,-332,0,-655,0,-574,0,54,0,353,0,1192,0,-462,0,-652,0,-796,0,150,0,549,0,112,0,195,0,-111,0,-515,0,679,0,1108,0,1647,0,-558,0,-749,0,-1217,0,-9,0,272,0,341,0,-53,0,-265,0,-535,0,489,0,843,0,1298,0,-120,0,-482,0,-1032,0,632,0,543,0,408,0,179,0,306,0,-526,0,1124,0,1464,0,2244,0,-417,0,-786,0,-1562,0,-224,0,-384,0,1364,0,-377,0,-459,0,-25,0,385,0,489,0,2174,0,-332,0,-651,0,-829,0,544,0,553,0,61,0,22,0,-113,0,-89,0,1128,0,1725,0,1524,0,-216,0,-373,0,-1653,0,161,0,316,0,908,0,-165,0,-222,0,-67,0,1362,0,1175,0,789,0,73,0,-252,0,-767,0,738,0,932,0,616,0,362,0,246,0,-126,0,787,0,2654,0,3027,0,-691,0,-1106,0,-2190,0,-565,0,-588,0,524,0,-590,0,-979,0,-490,0,-263,0,397,0,982,0,-577,0,-837,0,-945,0,-22,0,435,0,-49,0,-190,0,-118,0,-629,0,-88,0,1240,0,1513,0,-636,0,-1051,0,-1019,0,-291,0,189,0,259,0,-257,0,-470,0,-629,0,145,0,945,0,894,0,-326,0,-364,0,-1094,0,543,0,260,0,630,0,-202,0,189,0,-209,0,357,0,1379,0,2091,0,-569,0,-1075,0,-1449,0,-714,0,-239,0,919,0,-420,0,-705,0,-84,0,-109,0,-114,0,2407,0,-413,0,-529,0,-1177,0,482,0,368,0,131,0,-186,0,-72,0,-131,0,861,0,1255,0,1220,0,-611,0,-658,0,-1341,0,227,0,-121,0,631,0,-176,0,-489,0,-218,0,745,0,1175,0,957,0,-321,0,-148,0,-936,0,671,0,966,0,216,0,340,0,-3,0,-143,0,469,0,1848,0,2437,0,-729,0,-961,0,-1683,0,-213,0,-254,0,321,0,-511,0,-438,0,-521,0,-126,0,725,0,903,0,-340,0,-685,0,-1032,0,316,0,480,0,20,0,23,0,-89,0,-551,0,353,0,1051,0,1789,0,-544,0,-757,0,-1364,0,298,0,-25,0,436,0,-100,0,-392,0,-519,0,467,0,754,0,1078,0,-210,0,-398,0,-1078,0,620,0,658,0,630,0,33,0,147,0,-178,0,921,0,1687,0,1921,0,-325,0,-528,0,-1978,0,2,0,-285,0,910,0,-371,0,-490,0,-230,0,0,0,597,0,2010,0,-496,0,-395,0,-834,0,37,0,945,0,245,0,181,0,-160,0,-144,0,1481,0,1373,0,1357,0,-355,0,-601,0,-1270,0,298,0,322,0,672,0,-193,0,-336,0,77,0,1089,0,1533,0,922,0,177,0,-39,0,-1125,0,996,0,781,0,536,0,456,0,366,0,-432,0,1415,0,2440,0,2279,0,-466,0,-758,0,-2325,0,-303,0,-509,0,387,0,-727,0,-557,0,66,0,-145,0,643,0,1248,0,-544,0,-676,0,-916,0,-225,0,862,0,588,0,-152,0,40,0,-533,0,423,0,1423,0,1558,0,-572,0,-843,0,-1145,0,-128,0,85,0,461,0,-238,0,-257,0,-584,0,605,0,748,0,861,0,24,0,-202,0,-1409,0,797,0,487,0,303,0,-181,0,364,0,-182,0,616,0,1378,0,2942,0,-494,0,-852,0,-1441,0,-292,0,61,0,812,0,-84,0,-723,0,-182,0,555,0,532,0,1506,0,-365,0,-493,0,-1057,0,822,0,588,0,11,0,-14,0,-18,0,-230,0,1001,0,1401,0,1451,0,-474,0,-569,0,-1292,0,302,0,62,0,1062,0,-70,0,-376,0,-222,0,982,0,974,0,1149,0,-196,0,-234,0,-795,0,479,0,1098,0,499,0,362,0,58,0,70,0,1147,0,2069,0,2857,0,-487,0,-878,0,-1824,0,73,0,-288,0,348,0,-358,0,-500,0,-508,0,199,0,721,0,1242,0,-78,0,-697,0,-795,0,361,0,536,0,196,0,374,0,110,0,-735,0,847,0,1051,0,1896,0,-366,0,-713,0,-1182,0,315,0,320,0,429,0,72,0,-215,0,-450,0,759,0,886,0,1363,0,-30,0,-428,0,-834,0,861,0,627,0,796,0,118,0,468,0,-279,0,1355,0,1883,0,1893,0,-188,0,-642,0,-1612,0,63,0,-175,0,1198,0,-418,0,-211,0,51,0,414,0,587,0,2601,0,-234,0,-557,0,-858,0,424,0,889,0,222,0,136,0,-101,0,83,0,1413,0,2278,0,1383,0,-84,0,-445,0,-1389,0,414,0,313,0,1045,0,29,0,-343,0,65,0,1552,0,1647,0,980,0,183,0,-91,0,-829,0,1273,0,1413,0,360,0,553,0,272,0,-107,0,1587,0,3149,0,2603,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_mean_lsf_5=allocate([1384,0,2077,0,3420,0,5108,0,6742,0,8122,0,9863,0,11092,0,12714,0,13701,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico1_lsf_5=allocate([-451,0,-1065,0,-529,0,-1305,0,-450,0,-756,0,-497,0,-863,0,-384,0,-619,0,-413,0,-669,0,-317,0,-538,0,-331,0,-556,0,-414,0,-508,0,-424,0,-378,0,-274,0,-324,0,-434,0,-614,0,-226,0,-500,0,-232,0,-514,0,-263,0,-377,0,-298,0,-410,0,-151,0,-710,0,-174,0,-818,0,-149,0,-412,0,-156,0,-429,0,-288,0,-462,0,-186,0,-203,0,-170,0,-302,0,-191,0,-321,0,-131,0,-147,0,-297,0,-395,0,-228,0,-214,0,-245,0,-192,0,-67,0,-316,0,-71,0,-327,0,-104,0,-205,0,-94,0,-183,0,-143,0,-38,0,-193,0,-95,0,16,0,-76,0,-124,0,-248,0,23,0,-237,0,24,0,-244,0,18,0,-136,0,44,0,-111,0,-33,0,-24,0,-25,0,0,0,149,0,19,0,23,0,-143,0,158,0,-169,0,174,0,-181,0,133,0,-55,0,165,0,-26,0,111,0,84,0,98,0,75,0,87,0,183,0,-115,0,-11,0,-8,0,130,0,11,0,170,0,254,0,77,0,205,0,17,0,183,0,112,0,262,0,194,0,202,0,287,0,95,0,189,0,-42,0,-105,0,234,0,179,0,39,0,186,0,163,0,345,0,332,0,199,0,299,0,161,0,-54,0,285,0,-78,0,281,0,-133,0,141,0,-182,0,111,0,249,0,341,0,271,0,364,0,93,0,403,0,75,0,391,0,92,0,510,0,-138,0,220,0,-185,0,-29,0,-34,0,361,0,-115,0,320,0,3,0,554,0,99,0,286,0,218,0,591,0,-245,0,406,0,-268,0,453,0,0,0,580,0,25,0,606,0,275,0,532,0,148,0,450,0,-73,0,739,0,-285,0,518,0,-288,0,94,0,-203,0,674,0,-140,0,-74,0,205,0,714,0,-114,0,299,0,176,0,923,0,182,0,557,0,240,0,705,0,-16,0,513,0,485,0,593,0,293,0,384,0,451,0,617,0,-38,0,50,0,563,0,529,0,303,0,209,0,459,0,363,0,433,0,452,0,450,0,454,0,367,0,606,0,477,0,741,0,432,0,353,0,368,0,267,0,361,0,716,0,273,0,583,0,453,0,166,0,510,0,172,0,201,0,629,0,274,0,191,0,568,0,639,0,302,0,298,0,634,0,387,0,643,0,350,0,587,0,560,0,612,0,565,0,600,0,788,0,487,0,672,0,512,0,1015,0,321,0,333,0,357,0,854,0,-125,0,413,0,474,0,712,0,17,0,-151,0,564,0,285,0,270,0,-241,0,971,0,889,0,489,0,220,0,510,0,896,0,549,0,924,0,327,0,825,0,290,0,911,0,540,0,1108,0,158,0,805,0,199,0,957,0,511,0,730,0,100,0,874,0,13,0,791,0,435,0,632,0,676,0,972,0,249,0,900,0,467,0,1218,0,781,0,1074,0,585,0,785,0,-23,0,669,0,267,0,1043,0,619,0,1084,0,615,0,1145,0,622,0,905,0,916,0,1049,0,80,0,331,0,584,0,1075,0,89,0,639,0,988,0,961,0,770,0,720,0,798,0,699,0,492,0,447,0,899,0,627,0,271,0,1188,0,725,0,1333,0,87,0,603,0,832,0,1603,0,616,0,1127,0,890,0,1505,0,1e3,0,1156,0,866,0,1009,0,995,0,827,0,1149,0,858,0,817,0,1450,0,773,0,1320,0,500,0,1389,0,312,0,1153,0,-20,0,1084,0,64,0,1283,0,2,0,1172,0,399,0,1869,0,514,0,1706,0,502,0,1636,0,886,0,1522,0,416,0,600,0,1131,0,1350,0,1275,0,1390,0,889,0,1795,0,914,0,1766,0,227,0,1183,0,1250,0,1826,0,505,0,1854,0,919,0,2353,0,-199,0,431,0,152,0,1735,0,-213,0,-28,0,392,0,1334,0,-153,0,-52,0,978,0,1151,0,-323,0,-400,0,813,0,1703,0,-136,0,84,0,1449,0,2015,0,-331,0,-143,0,-137,0,1192,0,-256,0,534,0,-157,0,1031,0,-307,0,-439,0,542,0,731,0,-329,0,-420,0,-97,0,616,0,-362,0,-168,0,-322,0,366,0,-247,0,-110,0,-211,0,89,0,-196,0,-309,0,20,0,59,0,-364,0,-463,0,-286,0,89,0,-336,0,175,0,-432,0,141,0,-379,0,-190,0,-434,0,-196,0,-79,0,150,0,-278,0,-227,0,-280,0,166,0,-555,0,-422,0,-155,0,541,0,-366,0,54,0,-29,0,-83,0,-301,0,-774,0,186,0,628,0,-397,0,-264,0,242,0,293,0,-197,0,-585,0,124,0,410,0,53,0,-133,0,10,0,340,0,-570,0,-1065,0,65,0,-446,0,68,0,-493,0,383,0,937,0,-357,0,-711,0,-359,0,-250,0,-677,0,-1068,0,292,0,-26,0,363,0,6,0,607,0,1313,0,-127,0,-10,0,1513,0,1886,0,713,0,972,0,1469,0,2181,0,1443,0,2016,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico2_lsf_5=allocate([-1631,0,-1600,0,-1796,0,-2290,0,-1027,0,-1770,0,-1100,0,-2025,0,-1277,0,-1388,0,-1367,0,-1534,0,-947,0,-1461,0,-972,0,-1524,0,-999,0,-1222,0,-1020,0,-1172,0,-815,0,-987,0,-992,0,-1371,0,-1216,0,-1006,0,-1289,0,-1094,0,-744,0,-1268,0,-755,0,-1293,0,-862,0,-923,0,-905,0,-984,0,-678,0,-1051,0,-685,0,-1050,0,-1087,0,-985,0,-1062,0,-679,0,-989,0,-641,0,-1127,0,-976,0,-762,0,-654,0,-890,0,-806,0,-833,0,-1091,0,-706,0,-629,0,-621,0,-806,0,-640,0,-812,0,-775,0,-634,0,-779,0,-543,0,-996,0,-565,0,-1075,0,-580,0,-546,0,-611,0,-572,0,-619,0,-760,0,-290,0,-879,0,-526,0,-823,0,-462,0,-795,0,-253,0,-553,0,-415,0,-589,0,-439,0,-533,0,-340,0,-692,0,-935,0,-505,0,-772,0,-702,0,-1131,0,-263,0,-306,0,-971,0,-483,0,-445,0,-74,0,-555,0,-548,0,-614,0,-129,0,-693,0,-234,0,-396,0,-246,0,-475,0,-250,0,-265,0,-404,0,-376,0,-514,0,-417,0,-510,0,-300,0,-313,0,-334,0,-664,0,-463,0,-814,0,-386,0,-704,0,-337,0,-615,0,-234,0,-201,0,-233,0,-239,0,-167,0,-567,0,-203,0,-619,0,-147,0,-415,0,-115,0,-352,0,-166,0,-750,0,-171,0,-761,0,-270,0,-879,0,-264,0,-903,0,-367,0,-744,0,43,0,-475,0,14,0,-653,0,43,0,-670,0,11,0,-448,0,-59,0,-521,0,-126,0,-119,0,-155,0,-613,0,-42,0,-863,0,-27,0,-931,0,136,0,-483,0,183,0,-468,0,55,0,-298,0,55,0,-304,0,313,0,-609,0,313,0,-720,0,322,0,-167,0,100,0,-541,0,-3,0,-119,0,-111,0,-187,0,233,0,-236,0,260,0,-234,0,26,0,-165,0,134,0,-45,0,-40,0,-549,0,360,0,-203,0,378,0,-388,0,450,0,-383,0,275,0,20,0,182,0,-103,0,246,0,-111,0,431,0,37,0,462,0,-146,0,487,0,-157,0,-284,0,-59,0,503,0,-184,0,24,0,53,0,-3,0,54,0,122,0,259,0,333,0,66,0,484,0,104,0,436,0,68,0,195,0,116,0,190,0,206,0,269,0,-9,0,482,0,352,0,382,0,285,0,399,0,277,0,452,0,256,0,69,0,186,0,13,0,297,0,-13,0,259,0,-95,0,30,0,56,0,394,0,196,0,425,0,205,0,456,0,281,0,577,0,15,0,191,0,375,0,290,0,407,0,576,0,-56,0,227,0,544,0,405,0,0,0,549,0,-92,0,528,0,-229,0,351,0,-245,0,338,0,-362,0,435,0,167,0,527,0,-75,0,302,0,91,0,824,0,129,0,599,0,496,0,679,0,186,0,749,0,153,0,737,0,-281,0,600,0,-348,0,615,0,-236,0,769,0,41,0,881,0,38,0,890,0,-220,0,841,0,-357,0,883,0,-393,0,903,0,-634,0,474,0,-444,0,850,0,-175,0,678,0,-493,0,242,0,-519,0,785,0,-714,0,582,0,-541,0,366,0,-543,0,434,0,-597,0,500,0,-765,0,222,0,-702,0,917,0,-743,0,962,0,-869,0,501,0,-899,0,548,0,-379,0,200,0,-435,0,157,0,-819,0,214,0,-861,0,157,0,-614,0,40,0,-632,0,94,0,-883,0,-54,0,-741,0,516,0,-501,0,298,0,-614,0,-171,0,-870,0,-161,0,-865,0,-23,0,-818,0,93,0,-1015,0,-267,0,-662,0,-359,0,-549,0,2,0,-442,0,-121,0,-377,0,0,0,-227,0,33,0,-414,0,-126,0,-129,0,212,0,-934,0,34,0,-1082,0,-282,0,-1119,0,-268,0,-710,0,-825,0,-420,0,-191,0,-1076,0,-928,0,-917,0,-93,0,-628,0,-358,0,97,0,7,0,-206,0,-393,0,-101,0,24,0,-203,0,38,0,-168,0,83,0,-599,0,-423,0,-279,0,426,0,-700,0,118,0,-75,0,206,0,-981,0,-673,0,-680,0,417,0,-367,0,37,0,-279,0,474,0,-129,0,-318,0,319,0,296,0,-626,0,-39,0,343,0,602,0,-696,0,-39,0,-303,0,940,0,104,0,233,0,-380,0,137,0,-36,0,269,0,-75,0,-214,0,120,0,43,0,-529,0,-477,0,459,0,164,0,-202,0,-229,0,-49,0,-167,0,609,0,792,0,98,0,-220,0,915,0,148,0,293,0,283,0,869,0,91,0,575,0,394,0,326,0,-78,0,717,0,67,0,365,0,-323,0,616,0,-36,0,731,0,27,0,619,0,238,0,632,0,273,0,448,0,99,0,801,0,476,0,869,0,273,0,685,0,64,0,789,0,72,0,1021,0,217,0,793,0,459,0,734,0,360,0,646,0,480,0,360,0,322,0,429,0,464,0,638,0,430,0,756,0,363,0,1e3,0,404,0,683,0,528,0,602,0,615,0,655,0,413,0,946,0,687,0,937,0,602,0,904,0,604,0,555,0,737,0,786,0,662,0,467,0,654,0,362,0,589,0,929,0,710,0,498,0,478,0,415,0,420,0,693,0,883,0,813,0,683,0,781,0,925,0,913,0,939,0,726,0,732,0,491,0,853,0,531,0,948,0,734,0,963,0,315,0,808,0,761,0,755,0,1144,0,760,0,655,0,1076,0,826,0,1057,0,1091,0,838,0,1003,0,808,0,1047,0,1133,0,659,0,1101,0,992,0,1050,0,1074,0,1075,0,971,0,694,0,1226,0,1054,0,571,0,841,0,884,0,1404,0,1379,0,1096,0,1080,0,861,0,1231,0,735,0,1284,0,760,0,1272,0,991,0,1367,0,1053,0,1257,0,700,0,1050,0,534,0,988,0,453,0,1264,0,599,0,1140,0,679,0,1621,0,815,0,1384,0,521,0,1317,0,393,0,1564,0,805,0,1448,0,686,0,1068,0,648,0,875,0,307,0,1083,0,361,0,1047,0,317,0,1417,0,964,0,675,0,571,0,1152,0,79,0,1114,0,-47,0,1530,0,311,0,1721,0,314,0,1166,0,689,0,514,0,-94,0,349,0,282,0,1412,0,328,0,1025,0,487,0,-65,0,57,0,805,0,970,0,36,0,62,0,769,0,-263,0,791,0,-346,0,637,0,699,0,-137,0,620,0,534,0,541,0,-735,0,194,0,711,0,300,0,-268,0,-863,0,926,0,769,0,-708,0,-428,0,506,0,174,0,-892,0,-630,0,435,0,547,0,-1435,0,-258,0,621,0,471,0,-1018,0,-1368,0,-393,0,521,0,-920,0,-686,0,-25,0,20,0,-982,0,-1156,0,340,0,9,0,-1558,0,-1135,0,-352,0,48,0,-1579,0,-402,0,-887,0,6,0,-1156,0,-888,0,-548,0,-352,0,-1643,0,-1168,0,-159,0,610,0,-2024,0,-963,0,-225,0,193,0,-1656,0,-1960,0,-245,0,-493,0,-964,0,-1680,0,-936,0,-635,0,-1299,0,-1744,0,-1388,0,-604,0,-1540,0,-835,0,-1397,0,-135,0,-1588,0,-290,0,-1670,0,-712,0,-2011,0,-1632,0,-1663,0,-27,0,-2258,0,-811,0,-1157,0,184,0,-1265,0,189,0,-1367,0,586,0,-2011,0,201,0,-790,0,712,0,-1210,0,3,0,-1033,0,808,0,-1251,0,830,0,-111,0,635,0,-1636,0,447,0,-463,0,-949,0,-445,0,-928,0,-504,0,-1162,0,-501,0,-1211,0,144,0,-351,0,-372,0,-1052,0,-283,0,-1059,0,-279,0,-1123,0,-575,0,-1438,0,-587,0,-1614,0,-935,0,-984,0,229,0,690,0,-921,0,-719,0,-403,0,1362,0,-685,0,-465,0,874,0,397,0,-509,0,-46,0,317,0,1334,0,-485,0,456,0,813,0,439,0,-411,0,339,0,898,0,1067,0,-425,0,46,0,1441,0,497,0,-909,0,-800,0,1465,0,1046,0,-254,0,-321,0,1430,0,1165,0,68,0,350,0,1034,0,666,0,370,0,11,0,1311,0,790,0,143,0,232,0,1041,0,1562,0,-114,0,663,0,1616,0,1078,0,454,0,579,0,1275,0,1040,0,-76,0,909,0,752,0,1067,0,153,0,512,0,348,0,1214,0,614,0,385,0,1843,0,808,0,269,0,1034,0,203,0,1086,0,652,0,1017,0,1783,0,1130,0,429,0,1327,0,387,0,1384,0,-49,0,1183,0,-72,0,1215,0,-416,0,1001,0,544,0,1749,0,-352,0,1223,0,-502,0,1199,0,-589,0,569,0,-227,0,1630,0,-142,0,1578,0,-230,0,1715,0,-714,0,1288,0,-838,0,1398,0,1131,0,1357,0,-208,0,1232,0,437,0,965,0,-929,0,818,0,811,0,1410,0,859,0,1507,0,164,0,1212,0,1387,0,1793,0,484,0,1874,0,456,0,2063,0,996,0,1170,0,1326,0,1402,0,1316,0,1360,0,1135,0,1262,0,1234,0,1618,0,1361,0,1768,0,1421,0,1227,0,1584,0,1347,0,854,0,672,0,1685,0,1566,0,1139,0,1270,0,2016,0,1825,0,1773,0,1581,0,1532,0,1460,0,1487,0,946,0,1659,0,1021,0,1744,0,1212,0,1392,0,977,0,1772,0,1161,0,1826,0,1164,0,1718,0,1429,0,1973,0,1591,0,1185,0,864,0,2132,0,1061,0,1799,0,814,0,1838,0,757,0,2104,0,1315,0,2054,0,1258,0,2113,0,915,0,2331,0,930,0,1467,0,1147,0,2590,0,1439,0,2245,0,1744,0,2090,0,1620,0,2358,0,1454,0,2666,0,1506,0,1876,0,1837,0,2070,0,1975,0,1739,0,1577,0,682,0,1289,0,1584,0,2045,0,1454,0,2098,0,2498,0,2004,0,2711,0,2066,0,726,0,1588,0,2756,0,2336,0,228,0,847,0,2456,0,1659,0,36,0,301,0,1942,0,1957,0,-446,0,-96,0,2154,0,1396,0,1533,0,1101,0,14,0,608,0,-923,0,-732,0,1383,0,1982,0,1345,0,952,0,-680,0,321,0,1281,0,1268,0,-1594,0,365,0,941,0,946,0,-1737,0,-822,0,2374,0,2787,0,1821,0,2788,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico3_lsf_5=allocate([-1812,0,-2275,0,-1879,0,-2537,0,-1640,0,-1848,0,-1695,0,-2004,0,-1220,0,-1912,0,-1221,0,-2106,0,-1559,0,-1588,0,-1573,0,-1556,0,-1195,0,-1615,0,-1224,0,-1727,0,-1359,0,-1151,0,-1616,0,-1948,0,-1274,0,-1391,0,-1305,0,-1403,0,-1607,0,-1179,0,-1676,0,-1311,0,-1443,0,-1478,0,-1367,0,-898,0,-1256,0,-1059,0,-1331,0,-1134,0,-982,0,-1133,0,-1149,0,-1504,0,-1080,0,-1308,0,-1020,0,-1183,0,-980,0,-1486,0,-967,0,-1495,0,-988,0,-922,0,-1047,0,-1077,0,-838,0,-1179,0,-858,0,-1222,0,-1131,0,-1041,0,-1064,0,-767,0,-872,0,-1157,0,-701,0,-880,0,-706,0,-906,0,-774,0,-1016,0,-578,0,-1080,0,-801,0,-1478,0,-591,0,-1111,0,-592,0,-1146,0,-713,0,-1388,0,-640,0,-1376,0,-597,0,-1059,0,-416,0,-903,0,-686,0,-832,0,-661,0,-708,0,-444,0,-868,0,-490,0,-921,0,-374,0,-776,0,-619,0,-1170,0,-585,0,-549,0,-769,0,-795,0,-435,0,-659,0,-530,0,-741,0,-498,0,-837,0,-357,0,-597,0,-279,0,-871,0,-243,0,-887,0,-282,0,-665,0,-280,0,-667,0,-165,0,-560,0,-394,0,-903,0,-362,0,-410,0,-448,0,-583,0,-409,0,-574,0,-313,0,-357,0,-637,0,-548,0,-570,0,-436,0,-896,0,-504,0,-382,0,-757,0,-58,0,-481,0,-165,0,-618,0,-191,0,-374,0,-234,0,-382,0,-222,0,-683,0,-25,0,-480,0,-418,0,-359,0,-730,0,-353,0,-324,0,-157,0,-432,0,-322,0,-394,0,-303,0,-284,0,-104,0,-601,0,-289,0,-556,0,-196,0,-588,0,-150,0,-659,0,-608,0,-473,0,-24,0,-68,0,-448,0,-474,0,-8,0,-506,0,-45,0,-748,0,-184,0,-844,0,-252,0,-901,0,-91,0,-584,0,-97,0,-652,0,138,0,-764,0,-131,0,-678,0,-12,0,-670,0,165,0,-259,0,-3,0,-840,0,-107,0,-909,0,37,0,-992,0,44,0,-854,0,-415,0,-839,0,13,0,-1001,0,-271,0,-1026,0,-309,0,-798,0,-478,0,-832,0,-488,0,-943,0,168,0,-1112,0,-387,0,-1185,0,-101,0,-1183,0,-40,0,-941,0,-316,0,-1030,0,-770,0,-1044,0,-625,0,-1081,0,-538,0,-1224,0,-299,0,-1312,0,-436,0,-1197,0,-663,0,-1167,0,-161,0,-1216,0,-690,0,-1237,0,-831,0,-1432,0,-720,0,-1403,0,-493,0,-898,0,-740,0,-922,0,-801,0,-1102,0,-402,0,-1579,0,-964,0,-1061,0,-638,0,-1269,0,-1438,0,-1499,0,-934,0,-1502,0,-895,0,-1598,0,-564,0,-1723,0,-717,0,-606,0,-597,0,-1166,0,-1085,0,-1369,0,-468,0,-1946,0,-1493,0,-1838,0,-953,0,-1932,0,-931,0,-1499,0,-188,0,-1635,0,-421,0,-1457,0,-338,0,-1448,0,-22,0,-1942,0,-422,0,-2006,0,-249,0,-496,0,-114,0,-1910,0,-755,0,-1289,0,174,0,-1451,0,-109,0,-482,0,-257,0,-1221,0,-508,0,-1617,0,151,0,-1694,0,208,0,-654,0,107,0,-1651,0,29,0,-1141,0,279,0,-1215,0,306,0,-1228,0,-506,0,-730,0,-175,0,-1236,0,-101,0,-969,0,551,0,-870,0,278,0,-823,0,315,0,-563,0,376,0,-1051,0,228,0,-507,0,280,0,-599,0,281,0,-758,0,253,0,-305,0,379,0,-755,0,-134,0,-611,0,660,0,-824,0,536,0,-817,0,646,0,-413,0,49,0,-341,0,177,0,-453,0,526,0,-482,0,589,0,-71,0,339,0,-657,0,264,0,-244,0,295,0,-237,0,315,0,-387,0,569,0,-506,0,-9,0,-377,0,14,0,-160,0,661,0,-216,0,40,0,-308,0,-46,0,95,0,214,0,-242,0,167,0,-86,0,192,0,-56,0,27,0,-76,0,31,0,36,0,309,0,-106,0,-182,0,-113,0,74,0,-441,0,-22,0,23,0,139,0,81,0,-11,0,44,0,15,0,-87,0,-137,0,-118,0,-207,0,-158,0,-58,0,272,0,-92,0,-156,0,-441,0,8,0,-136,0,128,0,-221,0,101,0,-218,0,40,0,-197,0,-76,0,-456,0,9,0,-445,0,33,0,-423,0,226,0,60,0,73,0,-222,0,156,0,-399,0,280,0,-318,0,245,0,-341,0,166,0,-499,0,339,0,-190,0,327,0,-219,0,325,0,-137,0,-89,0,-596,0,100,0,-627,0,144,0,-677,0,487,0,28,0,252,0,-391,0,214,0,-41,0,282,0,-28,0,99,0,-286,0,331,0,49,0,459,0,-388,0,565,0,-369,0,436,0,28,0,336,0,-9,0,397,0,-167,0,618,0,34,0,596,0,-17,0,561,0,-140,0,299,0,79,0,522,0,125,0,203,0,2,0,244,0,288,0,255,0,211,0,175,0,82,0,596,0,187,0,517,0,108,0,381,0,255,0,365,0,297,0,497,0,352,0,327,0,-82,0,25,0,210,0,371,0,245,0,261,0,3,0,545,0,449,0,140,0,294,0,44,0,295,0,212,0,347,0,244,0,494,0,331,0,528,0,201,0,307,0,349,0,411,0,613,0,284,0,614,0,413,0,464,0,322,0,624,0,397,0,97,0,200,0,-160,0,384,0,149,0,362,0,495,0,525,0,269,0,585,0,33,0,491,0,-121,0,433,0,427,0,611,0,498,0,516,0,171,0,443,0,497,0,666,0,440,0,275,0,566,0,575,0,146,0,639,0,155,0,670,0,-33,0,173,0,212,0,696,0,-166,0,601,0,-191,0,695,0,-489,0,503,0,175,0,742,0,214,0,476,0,372,0,1083,0,578,0,530,0,586,0,777,0,425,0,874,0,315,0,841,0,374,0,848,0,-165,0,565,0,35,0,991,0,-39,0,1062,0,329,0,712,0,786,0,840,0,645,0,795,0,661,0,676,0,571,0,918,0,632,0,1079,0,673,0,817,0,318,0,388,0,874,0,1012,0,564,0,848,0,880,0,620,0,557,0,479,0,671,0,453,0,692,0,468,0,840,0,642,0,844,0,645,0,506,0,428,0,897,0,567,0,837,0,387,0,962,0,499,0,691,0,561,0,939,0,926,0,783,0,296,0,790,0,268,0,1028,0,530,0,874,0,329,0,548,0,143,0,675,0,291,0,503,0,66,0,1041,0,359,0,786,0,97,0,805,0,33,0,837,0,470,0,511,0,49,0,1092,0,327,0,1174,0,323,0,3,0,242,0,872,0,474,0,689,0,429,0,1329,0,678,0,1042,0,620,0,1109,0,664,0,321,0,193,0,889,0,950,0,1153,0,874,0,893,0,635,0,877,0,862,0,948,0,913,0,1293,0,665,0,1320,0,639,0,997,0,793,0,1402,0,1030,0,1176,0,1012,0,1110,0,959,0,1410,0,925,0,1403,0,915,0,543,0,862,0,1116,0,1222,0,835,0,1190,0,835,0,1190,0,959,0,1148,0,1147,0,1376,0,1300,0,1193,0,1415,0,1231,0,1335,0,1341,0,746,0,1092,0,1711,0,1283,0,1389,0,1073,0,1334,0,1566,0,1153,0,1475,0,1645,0,1137,0,1825,0,1220,0,1056,0,1382,0,1521,0,1730,0,1632,0,1545,0,1620,0,1542,0,855,0,1596,0,865,0,1667,0,693,0,885,0,1716,0,1519,0,1167,0,1296,0,2209,0,1760,0,1952,0,1493,0,2020,0,1482,0,1534,0,1866,0,1694,0,2008,0,1566,0,748,0,1761,0,825,0,294,0,1392,0,1084,0,2058,0,621,0,1315,0,365,0,1287,0,198,0,1028,0,488,0,1408,0,249,0,403,0,1014,0,1561,0,324,0,363,0,1645,0,1044,0,193,0,367,0,2034,0,1859,0,-251,0,579,0,750,0,994,0,-243,0,30,0,1325,0,879,0,-28,0,-169,0,624,0,917,0,-453,0,159,0,186,0,1370,0,-614,0,6,0,537,0,392,0,-94,0,-291,0,781,0,229,0,-128,0,-298,0,245,0,491,0,-701,0,-648,0,972,0,789,0,-501,0,-640,0,178,0,255,0,-365,0,-390,0,-255,0,317,0,-958,0,-294,0,-191,0,228,0,-775,0,-447,0,157,0,-237,0,-657,0,-720,0,-407,0,92,0,-117,0,-611,0,334,0,-230,0,-679,0,-1084,0,-144,0,-317,0,-901,0,-861,0,-738,0,-360,0,-85,0,-727,0,-90,0,-787,0,100,0,-22,0,-391,0,-263,0,-56,0,-73,0,-337,0,-754,0,5,0,-189,0,-706,0,-624,0,89,0,-344,0,-135,0,-1113,0,-353,0,-237,0,-684,0,-1135,0,-275,0,-1102,0,-269,0,-1203,0,152,0,145,0,-722,0,-1232,0,49,0,80,0,-1248,0,-776,0,-248,0,391,0,-732,0,-547,0,469,0,218,0,-255,0,-864,0,69,0,366,0,-166,0,-485,0,-688,0,191,0,-1212,0,-1196,0,-170,0,-169,0,-1308,0,-1631,0,321,0,470,0,-1419,0,-1243,0,-64,0,272,0,-1361,0,-248,0,492,0,565,0,-721,0,-609,0,195,0,485,0,-573,0,-133,0,427,0,202,0,-171,0,-118,0,199,0,575,0,2,0,-31,0,694,0,755,0,-1366,0,-39,0,552,0,557,0,-489,0,271,0,680,0,537,0,13,0,-453,0,855,0,954,0,-133,0,-52,0,-81,0,738,0,-1169,0,637,0,1055,0,1059,0,-95,0,676,0,1259,0,1081,0,489,0,305,0,-449,0,954,0,-534,0,996,0,-969,0,866,0,-1058,0,1059,0,-1294,0,618,0,-1416,0,617,0,-458,0,1366,0,-159,0,1821,0,-774,0,-528,0,-14,0,1110,0,-1202,0,-901,0,-772,0,433,0,-1256,0,-1255,0,-1011,0,-302,0,-602,0,-585,0,-759,0,-1618,0,-760,0,-1549,0,-840,0,-1921,0,-816,0,-539,0,-1769,0,-2235,0,-227,0,-36,0,-2034,0,-1831,0,-2107,0,-1126,0,-2471,0,-1816,0,-1470,0,252,0,-2701,0,-415,0,-571,0,-467,0,1509,0,1554,0,2180,0,1975,0,2326,0,2020,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico4_lsf_5=allocate([-1857,0,-1681,0,-1857,0,-1755,0,-2056,0,-1150,0,-2134,0,-1654,0,-1619,0,-1099,0,-1704,0,-1131,0,-1345,0,-1608,0,-1359,0,-1638,0,-1338,0,-1293,0,-1325,0,-1265,0,-1664,0,-1649,0,-1487,0,-851,0,-1346,0,-1832,0,-1413,0,-2188,0,-1282,0,-681,0,-1785,0,-1649,0,-966,0,-1082,0,-1183,0,-1676,0,-1054,0,-1073,0,-1142,0,-1158,0,-1207,0,-744,0,-1274,0,-997,0,-934,0,-1383,0,-927,0,-1416,0,-1010,0,-1305,0,-783,0,-955,0,-1049,0,-900,0,-993,0,-817,0,-737,0,-823,0,-972,0,-1189,0,-738,0,-1094,0,-738,0,-1154,0,-784,0,-801,0,-810,0,-786,0,-892,0,-520,0,-1e3,0,-818,0,-644,0,-965,0,-577,0,-882,0,-541,0,-694,0,-671,0,-917,0,-595,0,-642,0,-646,0,-615,0,-956,0,-621,0,-925,0,-515,0,-727,0,-483,0,-815,0,-485,0,-840,0,-578,0,-440,0,-713,0,-578,0,-325,0,-657,0,-670,0,-386,0,-570,0,-441,0,-666,0,-514,0,-787,0,-392,0,-529,0,-522,0,-453,0,-487,0,-423,0,-616,0,-585,0,-617,0,-157,0,-662,0,-268,0,-680,0,-348,0,-322,0,-323,0,-632,0,-444,0,-304,0,-430,0,-332,0,-458,0,-277,0,-468,0,-659,0,-793,0,-319,0,-636,0,-227,0,-554,0,-373,0,-347,0,-334,0,-210,0,-456,0,-192,0,-530,0,-242,0,-216,0,-198,0,-366,0,-370,0,-338,0,-161,0,-409,0,-748,0,-107,0,-380,0,-294,0,-643,0,-223,0,-665,0,-234,0,-741,0,-141,0,-496,0,-130,0,-510,0,-139,0,-327,0,-172,0,-305,0,-306,0,-580,0,-164,0,-263,0,-262,0,-172,0,-67,0,-402,0,31,0,-366,0,-10,0,-436,0,-86,0,-527,0,71,0,-377,0,-22,0,-609,0,-12,0,-678,0,-67,0,-319,0,63,0,-191,0,35,0,-181,0,-39,0,-242,0,126,0,-167,0,-140,0,-544,0,155,0,-297,0,174,0,-297,0,38,0,-8,0,117,0,-380,0,197,0,-452,0,240,0,-522,0,223,0,-103,0,110,0,-187,0,87,0,-155,0,169,0,-47,0,157,0,26,0,-83,0,-100,0,128,0,80,0,209,0,-62,0,6,0,7,0,22,0,5,0,318,0,-20,0,248,0,-45,0,-200,0,-63,0,156,0,-69,0,250,0,-183,0,369,0,-126,0,-113,0,-76,0,-142,0,-122,0,-64,0,-254,0,-31,0,35,0,-177,0,-71,0,-7,0,171,0,93,0,27,0,108,0,212,0,-330,0,-209,0,-123,0,-70,0,-279,0,95,0,-96,0,20,0,-188,0,-61,0,-314,0,87,0,-300,0,-78,0,-354,0,-134,0,11,0,122,0,-140,0,122,0,-275,0,152,0,-293,0,140,0,-82,0,138,0,-321,0,-111,0,-480,0,-156,0,-359,0,76,0,-254,0,-40,0,-635,0,-96,0,-522,0,79,0,-507,0,8,0,-268,0,303,0,-539,0,68,0,-446,0,61,0,-522,0,306,0,111,0,189,0,-435,0,122,0,-379,0,166,0,-571,0,-398,0,-632,0,-74,0,-747,0,-95,0,-455,0,194,0,-952,0,83,0,-798,0,192,0,-755,0,192,0,-781,0,-162,0,-619,0,234,0,-663,0,-297,0,-488,0,-109,0,-964,0,-132,0,-838,0,-68,0,-843,0,58,0,-1112,0,-86,0,-805,0,-299,0,-944,0,-253,0,-778,0,-50,0,-965,0,-549,0,-352,0,-98,0,-992,0,-343,0,-1117,0,-315,0,-1117,0,-307,0,-1155,0,-374,0,-637,0,-230,0,-1166,0,-43,0,-1299,0,-100,0,-925,0,-393,0,-1274,0,-600,0,-689,0,-130,0,-1479,0,-312,0,-1321,0,-254,0,-1464,0,-442,0,-1292,0,-613,0,-1261,0,-503,0,-1501,0,-368,0,-1322,0,26,0,-1432,0,-66,0,-1743,0,-161,0,-1644,0,-467,0,-1760,0,-548,0,-1393,0,-568,0,-1556,0,-871,0,-1495,0,-1034,0,-1387,0,-571,0,-1917,0,-528,0,-1783,0,-123,0,-1897,0,-231,0,-2054,0,-323,0,-2052,0,-906,0,-1976,0,-567,0,-1917,0,-620,0,-2047,0,-989,0,-1077,0,-370,0,-2031,0,-704,0,-2355,0,-749,0,-2740,0,-1089,0,-1909,0,159,0,-2012,0,248,0,-626,0,-123,0,-2339,0,-962,0,-669,0,-408,0,-1379,0,-1174,0,-452,0,-364,0,-1044,0,-735,0,-132,0,183,0,-1620,0,-752,0,-547,0,-307,0,-777,0,-1261,0,-98,0,41,0,-880,0,-1091,0,-257,0,97,0,-1602,0,-1833,0,31,0,-26,0,-644,0,-561,0,-180,0,-546,0,-385,0,-1095,0,-410,0,-802,0,-414,0,-827,0,-457,0,-970,0,-490,0,-1109,0,-215,0,-916,0,-144,0,-937,0,-493,0,-1269,0,-517,0,-1507,0,181,0,101,0,-332,0,-889,0,-836,0,-937,0,-559,0,-429,0,-629,0,-547,0,-183,0,-337,0,-545,0,-82,0,-250,0,-286,0,5,0,-132,0,-348,0,-252,0,-293,0,-472,0,-158,0,100,0,-29,0,197,0,-236,0,-424,0,-861,0,-213,0,-140,0,-7,0,-427,0,-443,0,187,0,-97,0,-684,0,-736,0,-293,0,258,0,-368,0,-152,0,-150,0,392,0,-609,0,175,0,-142,0,299,0,-138,0,152,0,-119,0,329,0,-486,0,-52,0,293,0,198,0,-183,0,117,0,175,0,331,0,-58,0,-274,0,231,0,300,0,-288,0,330,0,-305,0,372,0,-111,0,409,0,-9,0,423,0,83,0,256,0,67,0,367,0,-19,0,248,0,91,0,113,0,-35,0,406,0,-191,0,154,0,238,0,296,0,5,0,197,0,141,0,221,0,313,0,198,0,211,0,421,0,244,0,334,0,88,0,426,0,-243,0,454,0,202,0,552,0,-5,0,403,0,291,0,185,0,219,0,301,0,251,0,138,0,128,0,69,0,197,0,288,0,-140,0,-61,0,188,0,361,0,197,0,598,0,442,0,273,0,290,0,143,0,472,0,482,0,157,0,370,0,415,0,321,0,372,0,385,0,402,0,552,0,155,0,24,0,550,0,263,0,-11,0,21,0,360,0,227,0,147,0,-254,0,424,0,97,0,366,0,-13,0,375,0,141,0,449,0,232,0,396,0,507,0,474,0,272,0,701,0,324,0,362,0,-47,0,587,0,148,0,543,0,69,0,400,0,-51,0,561,0,59,0,220,0,-10,0,352,0,147,0,206,0,211,0,653,0,185,0,563,0,297,0,565,0,284,0,594,0,121,0,766,0,192,0,398,0,118,0,642,0,434,0,233,0,264,0,481,0,467,0,129,0,-165,0,699,0,239,0,90,0,26,0,342,0,474,0,-55,0,27,0,388,0,94,0,-172,0,0,0,725,0,379,0,-60,0,337,0,370,0,465,0,95,0,319,0,806,0,595,0,78,0,260,0,497,0,851,0,210,0,560,0,458,0,574,0,-464,0,202,0,497,0,625,0,-202,0,152,0,48,0,712,0,-20,0,566,0,100,0,715,0,455,0,468,0,411,0,605,0,319,0,646,0,195,0,615,0,401,0,538,0,680,0,739,0,201,0,667,0,434,0,954,0,454,0,425,0,646,0,491,0,606,0,681,0,416,0,508,0,497,0,822,0,426,0,815,0,660,0,647,0,628,0,716,0,697,0,466,0,618,0,457,0,685,0,460,0,365,0,309,0,721,0,567,0,836,0,601,0,609,0,300,0,825,0,459,0,943,0,687,0,681,0,533,0,915,0,598,0,591,0,243,0,876,0,451,0,874,0,420,0,786,0,317,0,732,0,220,0,922,0,317,0,1108,0,367,0,531,0,466,0,1028,0,649,0,1053,0,615,0,1034,0,553,0,829,0,602,0,1021,0,799,0,927,0,803,0,878,0,763,0,799,0,496,0,1373,0,773,0,585,0,770,0,803,0,930,0,1099,0,793,0,1222,0,862,0,1209,0,895,0,1025,0,727,0,772,0,845,0,1172,0,1115,0,867,0,1021,0,830,0,1013,0,841,0,910,0,506,0,703,0,1239,0,1077,0,620,0,819,0,1196,0,1083,0,1155,0,1081,0,1142,0,907,0,1547,0,1121,0,1309,0,648,0,1343,0,612,0,1484,0,988,0,1479,0,937,0,985,0,1328,0,955,0,1341,0,429,0,910,0,841,0,1338,0,564,0,1179,0,412,0,1156,0,1427,0,1320,0,1434,0,1330,0,640,0,760,0,1726,0,1410,0,190,0,555,0,1073,0,1005,0,426,0,257,0,839,0,980,0,235,0,231,0,1520,0,1167,0,109,0,293,0,1014,0,1569,0,305,0,142,0,1148,0,539,0,-291,0,-108,0,1213,0,972,0,22,0,-216,0,667,0,828,0,-482,0,438,0,453,0,1431,0,-581,0,-422,0,789,0,387,0,-358,0,-454,0,174,0,780,0,-36,0,-372,0,390,0,-134,0,-629,0,160,0,-306,0,751,0,-1258,0,-331,0,177,0,522,0,-248,0,574,0,-251,0,639,0,-531,0,407,0,-596,0,394,0,-419,0,789,0,-617,0,801,0,-986,0,399,0,-857,0,727,0,-7,0,518,0,-703,0,310,0,-1143,0,-24,0,-1002,0,287,0,-960,0,363,0,-1299,0,312,0,-1534,0,245,0,-1557,0,305,0,28,0,153,0,-859,0,-175,0,-33,0,332,0,-1398,0,-154,0,212,0,410,0,-593,0,-197,0,-1092,0,-704,0,-904,0,-65,0,282,0,367,0,-918,0,-686,0,345,0,93,0,-258,0,-357,0,696,0,644,0,-693,0,-28,0,448,0,493,0,-273,0,193,0,527,0,546,0,-243,0,-513,0,384,0,-136,0,273,0,-353,0,512,0,-142,0,537,0,-198,0,941,0,750,0,83,0,248,0,578,0,861,0,-56,0,592,0,842,0,44,0,892,0,24,0,33,0,890,0,-16,0,982,0,831,0,1398,0,1535,0,1898,0,1716,0,1376,0,1948,0,1465,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_dico5_lsf_5=allocate([-1002,0,-929,0,-1096,0,-1203,0,-641,0,-931,0,-604,0,-961,0,-779,0,-673,0,-835,0,-788,0,-416,0,-664,0,-458,0,-766,0,-652,0,-521,0,-662,0,-495,0,-1023,0,-509,0,-1023,0,-428,0,-444,0,-552,0,-368,0,-449,0,-479,0,-211,0,-1054,0,-903,0,-316,0,-249,0,-569,0,-591,0,-569,0,-275,0,-541,0,-191,0,-716,0,-188,0,-842,0,-264,0,-333,0,-248,0,-318,0,-228,0,-275,0,1,0,-567,0,-228,0,-115,0,-221,0,-238,0,-374,0,-197,0,-507,0,-222,0,-579,0,-258,0,-432,0,-61,0,-244,0,-345,0,2,0,-338,0,39,0,-215,0,-169,0,-58,0,0,0,-56,0,-6,0,-203,0,-131,0,1,0,-186,0,-5,0,-211,0,6,0,-380,0,11,0,-418,0,-116,0,131,0,-134,0,113,0,89,0,-4,0,71,0,-2,0,-19,0,-192,0,262,0,24,0,189,0,151,0,-133,0,-109,0,186,0,-153,0,166,0,-219,0,37,0,139,0,193,0,171,0,337,0,124,0,158,0,-61,0,141,0,226,0,-13,0,190,0,231,0,34,0,354,0,109,0,316,0,201,0,244,0,164,0,330,0,-85,0,390,0,-84,0,254,0,327,0,257,0,335,0,491,0,147,0,476,0,105,0,54,0,77,0,437,0,370,0,421,0,314,0,449,0,342,0,329,0,126,0,673,0,292,0,571,0,388,0,243,0,193,0,653,0,320,0,621,0,280,0,194,0,380,0,517,0,581,0,45,0,323,0,111,0,422,0,489,0,395,0,734,0,534,0,622,0,546,0,486,0,502,0,318,0,572,0,189,0,550,0,385,0,422,0,-157,0,153,0,-125,0,382,0,-197,0,386,0,-263,0,334,0,228,0,697,0,-188,0,1,0,51,0,297,0,-507,0,213,0,-376,0,397,0,-24,0,255,0,-547,0,89,0,-502,0,-94,0,387,0,179,0,-620,0,68,0,-684,0,112,0,-642,0,-350,0,-260,0,172,0,-438,0,-324,0,264,0,648,0,-964,0,-4,0,-1121,0,7,0,-134,0,134,0,-1133,0,-306,0,143,0,96,0,-420,0,-497,0,-1221,0,-350,0,-1527,0,-685,0,-161,0,72,0,873,0,691,0,732,0,283,0,921,0,353,0,334,0,475,0,1095,0,821,0,864,0,524,0,843,0,497,0,714,0,711,0,788,0,750,0,1076,0,714,0,1204,0,753,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_table_gain_highrates=allocate([577,0,662,0,-2692,0,-16214,0,806,0,1836,0,-1185,0,-7135,0,3109,0,1052,0,-2008,0,-12086,0,4181,0,1387,0,-1600,0,-9629,0,2373,0,1425,0,-1560,0,-9394,0,3248,0,1985,0,-1070,0,-6442,0,1827,0,2320,0,-840,0,-5056,0,941,0,3314,0,-313,0,-1885,0,2351,0,2977,0,-471,0,-2838,0,3616,0,2420,0,-777,0,-4681,0,3451,0,3096,0,-414,0,-2490,0,2955,0,4301,0,72,0,434,0,1848,0,4500,0,139,0,836,0,3884,0,5416,0,413,0,2484,0,1187,0,7210,0,835,0,5030,0,3083,0,9e3,0,1163,0,7002,0,7384,0,883,0,-2267,0,-13647,0,5962,0,1506,0,-1478,0,-8900,0,5155,0,2134,0,-963,0,-5800,0,7944,0,2009,0,-1052,0,-6335,0,6507,0,2250,0,-885,0,-5327,0,7670,0,2752,0,-588,0,-3537,0,5952,0,3016,0,-452,0,-2724,0,4898,0,3764,0,-125,0,-751,0,6989,0,3588,0,-196,0,-1177,0,8174,0,3978,0,-43,0,-260,0,6064,0,4404,0,107,0,645,0,7709,0,5087,0,320,0,1928,0,5523,0,6021,0,569,0,3426,0,7769,0,7126,0,818,0,4926,0,6060,0,7938,0,977,0,5885,0,5594,0,11487,0,1523,0,9172,0,10581,0,1356,0,-1633,0,-9831,0,9049,0,1597,0,-1391,0,-8380,0,9794,0,2035,0,-1033,0,-6220,0,8946,0,2415,0,-780,0,-4700,0,10296,0,2584,0,-681,0,-4099,0,9407,0,2734,0,-597,0,-3595,0,8700,0,3218,0,-356,0,-2144,0,9757,0,3395,0,-277,0,-1669,0,10177,0,3892,0,-75,0,-454,0,9170,0,4528,0,148,0,891,0,10152,0,5004,0,296,0,1781,0,9114,0,5735,0,497,0,2993,0,10500,0,6266,0,628,0,3782,0,10110,0,7631,0,919,0,5534,0,8844,0,8727,0,1117,0,6728,0,8956,0,12496,0,1648,0,9921,0,12924,0,976,0,-2119,0,-12753,0,11435,0,1755,0,-1252,0,-7539,0,12138,0,2328,0,-835,0,-5024,0,11388,0,2368,0,-810,0,-4872,0,10700,0,3064,0,-429,0,-2580,0,12332,0,2861,0,-530,0,-3192,0,11722,0,3327,0,-307,0,-1848,0,11270,0,3700,0,-150,0,-904,0,10861,0,4413,0,110,0,663,0,12082,0,4533,0,150,0,902,0,11283,0,5205,0,354,0,2132,0,11960,0,6305,0,637,0,3837,0,11167,0,7534,0,900,0,5420,0,12128,0,8329,0,1049,0,6312,0,10969,0,10777,0,1429,0,8604,0,10300,0,17376,0,2135,0,12853,0,13899,0,1681,0,-1316,0,-7921,0,12580,0,2045,0,-1026,0,-6179,0,13265,0,2439,0,-766,0,-4610,0,14033,0,2989,0,-465,0,-2802,0,13452,0,3098,0,-413,0,-2482,0,12396,0,3658,0,-167,0,-1006,0,13510,0,3780,0,-119,0,-713,0,12880,0,4272,0,62,0,374,0,13533,0,4861,0,253,0,1523,0,12667,0,5457,0,424,0,2552,0,13854,0,6106,0,590,0,3551,0,13031,0,6483,0,678,0,4084,0,13557,0,7721,0,937,0,5639,0,12957,0,9311,0,1213,0,7304,0,13714,0,11551,0,1532,0,9221,0,12591,0,15206,0,1938,0,11667,0,15113,0,1540,0,-1445,0,-8700,0,15072,0,2333,0,-832,0,-5007,0,14527,0,2511,0,-723,0,-4352,0,14692,0,3199,0,-365,0,-2197,0,15382,0,3560,0,-207,0,-1247,0,14133,0,3960,0,-50,0,-300,0,15102,0,4236,0,50,0,298,0,14332,0,4824,0,242,0,1454,0,14846,0,5451,0,422,0,2542,0,15306,0,6083,0,584,0,3518,0,14329,0,6888,0,768,0,4623,0,15060,0,7689,0,930,0,5602,0,14406,0,9426,0,1231,0,7413,0,15387,0,9741,0,1280,0,7706,0,14824,0,14271,0,1844,0,11102,0,13600,0,24939,0,2669,0,16067,0,16396,0,1969,0,-1082,0,-6517,0,16817,0,2832,0,-545,0,-3283,0,15713,0,2843,0,-539,0,-3248,0,16104,0,3336,0,-303,0,-1825,0,16384,0,3963,0,-49,0,-294,0,16940,0,4579,0,165,0,992,0,15711,0,4599,0,171,0,1030,0,16222,0,5448,0,421,0,2537,0,16832,0,6382,0,655,0,3945,0,15745,0,7141,0,821,0,4944,0,16326,0,7469,0,888,0,5343,0,16611,0,8624,0,1100,0,6622,0,17028,0,10418,0,1379,0,8303,0,15905,0,11817,0,1565,0,9423,0,16878,0,14690,0,1887,0,11360,0,16515,0,20870,0,2406,0,14483,0,18142,0,2083,0,-999,0,-6013,0,19401,0,3178,0,-375,0,-2257,0,17508,0,3426,0,-264,0,-1589,0,20054,0,4027,0,-25,0,-151,0,18069,0,4249,0,54,0,326,0,18952,0,5066,0,314,0,1890,0,17711,0,5402,0,409,0,2461,0,19835,0,6192,0,610,0,3676,0,17950,0,7014,0,795,0,4784,0,21318,0,7877,0,966,0,5816,0,17910,0,9289,0,1210,0,7283,0,19144,0,9290,0,1210,0,7284,0,20517,0,11381,0,1510,0,9089,0,18075,0,14485,0,1866,0,11234,0,19999,0,17882,0,2177,0,13108,0,18842,0,32764,0,3072,0,18494,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_table_gain_lowrates=allocate([10813,0,28753,0,2879,0,17333,0,20480,0,2785,0,-570,0,-3431,0,18841,0,6594,0,703,0,4235,0,6225,0,7413,0,876,0,5276,0,17203,0,10444,0,1383,0,8325,0,21626,0,1269,0,-1731,0,-10422,0,21135,0,4423,0,113,0,683,0,11304,0,1556,0,-1430,0,-8609,0,19005,0,12820,0,1686,0,10148,0,17367,0,2498,0,-731,0,-4398,0,17858,0,4833,0,244,0,1472,0,9994,0,2498,0,-731,0,-4398,0,17530,0,7864,0,964,0,5802,0,14254,0,1884,0,-1147,0,-6907,0,15892,0,3153,0,-387,0,-2327,0,6717,0,1802,0,-1213,0,-7303,0,18186,0,20193,0,2357,0,14189,0,18022,0,3031,0,-445,0,-2678,0,16711,0,5857,0,528,0,3181,0,8847,0,4014,0,-30,0,-180,0,15892,0,8970,0,1158,0,6972,0,18022,0,1392,0,-1594,0,-9599,0,16711,0,4096,0,0,0,0,0,8192,0,655,0,-2708,0,-16305,0,15237,0,13926,0,1808,0,10884,0,14254,0,3112,0,-406,0,-2444,0,14090,0,4669,0,193,0,1165,0,5406,0,2703,0,-614,0,-3697,0,13434,0,6553,0,694,0,4180,0,12451,0,901,0,-2237,0,-13468,0,12451,0,2662,0,-637,0,-3833,0,3768,0,655,0,-2708,0,-16305,0,14745,0,23511,0,2582,0,15543,0,19169,0,2457,0,-755,0,-4546,0,20152,0,5079,0,318,0,1913,0,6881,0,4096,0,0,0,0,0,20480,0,8560,0,1089,0,6556,0,19660,0,737,0,-2534,0,-15255,0,19005,0,4259,0,58,0,347,0,7864,0,2088,0,-995,0,-5993,0,11468,0,12288,0,1623,0,9771,0,15892,0,1474,0,-1510,0,-9090,0,15728,0,4628,0,180,0,1086,0,9175,0,1433,0,-1552,0,-9341,0,16056,0,7004,0,793,0,4772,0,14827,0,737,0,-2534,0,-15255,0,15073,0,2252,0,-884,0,-5321,0,5079,0,1228,0,-1780,0,-10714,0,13271,0,17326,0,2131,0,12827,0,16547,0,2334,0,-831,0,-5002,0,15073,0,5816,0,518,0,3118,0,3932,0,3686,0,-156,0,-938,0,14254,0,8601,0,1096,0,6598,0,16875,0,778,0,-2454,0,-14774,0,15073,0,3809,0,-107,0,-646,0,6062,0,614,0,-2804,0,-16879,0,9338,0,9256,0,1204,0,7251,0,13271,0,1761,0,-1247,0,-7508,0,13271,0,3522,0,-223,0,-1343,0,2457,0,1966,0,-1084,0,-6529,0,11468,0,5529,0,443,0,2668,0,10485,0,737,0,-2534,0,-15255,0,11632,0,3194,0,-367,0,-2212,0,1474,0,778,0,-2454,0,-14774,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_sqrt_l_tbl=allocate([16384,0,16888,0,17378,0,17854,0,18318,0,18770,0,19212,0,19644,0,20066,0,20480,0,20886,0,21283,0,21674,0,22058,0,22435,0,22806,0,23170,0,23530,0,23884,0,24232,0,24576,0,24915,0,25249,0,25580,0,25905,0,26227,0,26545,0,26859,0,27170,0,27477,0,27780,0,28081,0,28378,0,28672,0,28963,0,29251,0,29537,0,29819,0,30099,0,30377,0,30652,0,30924,0,31194,0,31462,0,31727,0,31991,0,32252,0,32511,0,32767,0,32767,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_window_200_40=allocate([2621,0,2623,0,2629,0,2638,0,2651,0,2668,0,2689,0,2713,0,2741,0,2772,0,2808,0,2847,0,2890,0,2936,0,2986,0,3040,0,3097,0,3158,0,3223,0,3291,0,3363,0,3438,0,3517,0,3599,0,3685,0,3774,0,3867,0,3963,0,4063,0,4166,0,4272,0,4382,0,4495,0,4611,0,4731,0,4853,0,4979,0,5108,0,5240,0,5376,0,5514,0,5655,0,5800,0,5947,0,6097,0,6250,0,6406,0,6565,0,6726,0,6890,0,7057,0,7227,0,7399,0,7573,0,7750,0,7930,0,8112,0,8296,0,8483,0,8672,0,8863,0,9057,0,9252,0,9450,0,9650,0,9852,0,10055,0,10261,0,10468,0,10677,0,10888,0,11101,0,11315,0,11531,0,11748,0,11967,0,12187,0,12409,0,12632,0,12856,0,13082,0,13308,0,13536,0,13764,0,13994,0,14225,0,14456,0,14688,0,14921,0,15155,0,15389,0,15624,0,15859,0,16095,0,16331,0,16568,0,16805,0,17042,0,17279,0,17516,0,17754,0,17991,0,18228,0,18465,0,18702,0,18939,0,19175,0,19411,0,19647,0,19882,0,20117,0,20350,0,20584,0,20816,0,21048,0,21279,0,21509,0,21738,0,21967,0,22194,0,22420,0,22644,0,22868,0,23090,0,23311,0,23531,0,23749,0,23965,0,24181,0,24394,0,24606,0,24816,0,25024,0,25231,0,25435,0,25638,0,25839,0,26037,0,26234,0,26428,0,26621,0,26811,0,26999,0,27184,0,27368,0,27548,0,27727,0,27903,0,28076,0,28247,0,28415,0,28581,0,28743,0,28903,0,29061,0,29215,0,29367,0,29515,0,29661,0,29804,0,29944,0,30081,0,30214,0,30345,0,30472,0,30597,0,30718,0,30836,0,30950,0,31062,0,31170,0,31274,0,31376,0,31474,0,31568,0,31659,0,31747,0,31831,0,31911,0,31988,0,32062,0,32132,0,32198,0,32261,0,32320,0,32376,0,32428,0,32476,0,32521,0,32561,0,32599,0,32632,0,32662,0,32688,0,32711,0,32729,0,32744,0,32755,0,32763,0,32767,0,32767,0,32741,0,32665,0,32537,0,32359,0,32129,0,31850,0,31521,0,31143,0,30716,0,30242,0,29720,0,29151,0,28538,0,27879,0,27177,0,26433,0,25647,0,24821,0,23957,0,23055,0,22117,0,21145,0,20139,0,19102,0,18036,0,16941,0,15820,0,14674,0,13505,0,12315,0,11106,0,9879,0,8637,0,7381,0,6114,0,4838,0,3554,0,2264,0,971,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_window_160_80=allocate([2621,0,2624,0,2633,0,2648,0,2668,0,2695,0,2727,0,2765,0,2809,0,2859,0,2915,0,2976,0,3043,0,3116,0,3194,0,3279,0,3368,0,3464,0,3565,0,3671,0,3783,0,3900,0,4023,0,4151,0,4285,0,4423,0,4567,0,4716,0,4870,0,5029,0,5193,0,5362,0,5535,0,5714,0,5897,0,6084,0,6277,0,6473,0,6674,0,6880,0,7089,0,7303,0,7521,0,7742,0,7968,0,8197,0,8430,0,8667,0,8907,0,9151,0,9398,0,9648,0,9902,0,10158,0,10417,0,10680,0,10945,0,11212,0,11482,0,11755,0,12030,0,12307,0,12586,0,12867,0,13150,0,13435,0,13722,0,14010,0,14299,0,14590,0,14882,0,15175,0,15469,0,15764,0,16060,0,16356,0,16653,0,16950,0,17248,0,17546,0,17844,0,18141,0,18439,0,18736,0,19033,0,19330,0,19625,0,19920,0,20214,0,20507,0,20799,0,21090,0,21380,0,21668,0,21954,0,22239,0,22522,0,22803,0,23083,0,23360,0,23635,0,23907,0,24177,0,24445,0,24710,0,24972,0,25231,0,25488,0,25741,0,25991,0,26238,0,26482,0,26722,0,26959,0,27192,0,27422,0,27647,0,27869,0,28087,0,28300,0,28510,0,28715,0,28916,0,29113,0,29305,0,29493,0,29676,0,29854,0,30028,0,30197,0,30361,0,30519,0,30673,0,30822,0,30966,0,31105,0,31238,0,31366,0,31489,0,31606,0,31718,0,31825,0,31926,0,32021,0,32111,0,32195,0,32273,0,32346,0,32413,0,32475,0,32530,0,32580,0,32624,0,32662,0,32695,0,32721,0,32742,0,32756,0,32765,0,32767,0,32767,0,32756,0,32720,0,32661,0,32578,0,32471,0,32341,0,32188,0,32012,0,31813,0,31592,0,31349,0,31084,0,30798,0,30492,0,30165,0,29818,0,29453,0,29068,0,28666,0,28247,0,27810,0,27358,0,26891,0,26408,0,25913,0,25404,0,24883,0,24350,0,23807,0,23255,0,22693,0,22124,0,21548,0,20965,0,20378,0,19786,0,19191,0,18593,0,17994,0,17395,0,16796,0,16199,0,15604,0,15012,0,14424,0,13842,0,13265,0,12696,0,12135,0,11582,0,11039,0,10507,0,9986,0,9477,0,8981,0,8499,0,8031,0,7579,0,7143,0,6723,0,6321,0,5937,0,5571,0,5225,0,4898,0,4591,0,4305,0,4041,0,3798,0,3577,0,3378,0,3202,0,3048,0,2918,0,2812,0,2729,0,2669,0,2633,0,2621,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);_window_232_8=allocate([2621,0,2623,0,2627,0,2634,0,2644,0,2656,0,2671,0,2689,0,2710,0,2734,0,2760,0,2789,0,2821,0,2855,0,2893,0,2933,0,2975,0,3021,0,3069,0,3120,0,3173,0,3229,0,3288,0,3350,0,3414,0,3481,0,3550,0,3622,0,3697,0,3774,0,3853,0,3936,0,4021,0,4108,0,4198,0,4290,0,4385,0,4482,0,4582,0,4684,0,4788,0,4895,0,5004,0,5116,0,5230,0,5346,0,5464,0,5585,0,5708,0,5833,0,5960,0,6090,0,6221,0,6355,0,6491,0,6629,0,6769,0,6910,0,7054,0,7200,0,7348,0,7498,0,7649,0,7803,0,7958,0,8115,0,8274,0,8434,0,8597,0,8761,0,8926,0,9093,0,9262,0,9432,0,9604,0,9778,0,9952,0,10129,0,10306,0,10485,0,10665,0,10847,0,11030,0,11214,0,11399,0,11586,0,11773,0,11962,0,12152,0,12342,0,12534,0,12727,0,12920,0,13115,0,13310,0,13506,0,13703,0,13901,0,14099,0,14298,0,14497,0,14698,0,14898,0,15100,0,15301,0,15504,0,15706,0,15909,0,16112,0,16316,0,16520,0,16724,0,16928,0,17132,0,17337,0,17541,0,17746,0,17950,0,18155,0,18359,0,18564,0,18768,0,18972,0,19175,0,19379,0,19582,0,19785,0,19987,0,20189,0,20390,0,20591,0,20792,0,20992,0,21191,0,21390,0,21588,0,21785,0,21981,0,22177,0,22372,0,22566,0,22759,0,22951,0,23143,0,23333,0,23522,0,23710,0,23897,0,24083,0,24268,0,24451,0,24633,0,24814,0,24994,0,25172,0,25349,0,25525,0,25699,0,25871,0,26042,0,26212,0,26380,0,26546,0,26711,0,26874,0,27035,0,27195,0,27353,0,27509,0,27664,0,27816,0,27967,0,28115,0,28262,0,28407,0,28550,0,28691,0,28830,0,28967,0,29102,0,29234,0,29365,0,29493,0,29619,0,29743,0,29865,0,29985,0,30102,0,30217,0,30330,0,30440,0,30548,0,30654,0,30757,0,30858,0,30956,0,31052,0,31146,0,31237,0,31326,0,31412,0,31495,0,31576,0,31655,0,31730,0,31804,0,31874,0,31942,0,32008,0,32071,0,32131,0,32188,0,32243,0,32295,0,32345,0,32392,0,32436,0,32477,0,32516,0,32552,0,32585,0,32615,0,32643,0,32668,0,32690,0,32709,0,32726,0,32740,0,32751,0,32759,0,32765,0,32767,0,32767,0,32097,0,30112,0,26895,0,22576,0,17333,0,11380,0,4962,0],["i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0,"i16",0],ALLOC_STATIC);STRING_TABLE.__str529=allocate([68,101,99,111,100,101,114,0],"i8",ALLOC_STATIC);__gm_=allocate(468,["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0],ALLOC_STATIC);_mparams=allocate(24,"i32",ALLOC_STATIC);STRING_TABLE.__str1=allocate([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str12=allocate([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);STRING_TABLE.__str2=allocate([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",ALLOC_STATIC);__ZSt7nothrow=allocate([undef],"i8",ALLOC_STATIC);__ZL13__new_handler=allocate(1,"void ()*",ALLOC_STATIC);__ZTVSt9bad_alloc=allocate([0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,6,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);allocate(1,"void*",ALLOC_STATIC);STRING_TABLE.__str3=allocate([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0],"i8",ALLOC_STATIC);__ZTVSt20bad_array_new_length=allocate([0,0,0,0,0,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],ALLOC_STATIC);allocate(1,"void*",ALLOC_STATIC);STRING_TABLE.__str14=allocate([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",ALLOC_STATIC);STRING_TABLE.__ZTSSt9bad_alloc=allocate([83,116,57,98,97,100,95,97,108,108,111,99,0],"i8",ALLOC_STATIC);__ZTISt9bad_alloc=allocate(12,"*",ALLOC_STATIC);STRING_TABLE.__ZTSSt20bad_array_new_length=allocate([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",ALLOC_STATIC);__ZTISt20bad_array_new_length=allocate(12,"*",ALLOC_STATIC);HEAP32[_bitno>>2]=_bitno_MR475|0;HEAP32[_bitno+4>>2]=_bitno_MR515|0;HEAP32[_bitno+8>>2]=_bitno_MR59|0;HEAP32[_bitno+12>>2]=_bitno_MR67|0;HEAP32[_bitno+16>>2]=_bitno_MR74|0;HEAP32[_bitno+20>>2]=_bitno_MR795|0;HEAP32[_bitno+24>>2]=_bitno_MR102|0;HEAP32[_bitno+28>>2]=_bitno_MR122|0;HEAP32[_bitno+32>>2]=_bitno_MRDTX|0;HEAP32[_reorderBits>>2]=_reorderBits_MR475|0;HEAP32[_reorderBits+4>>2]=_reorderBits_MR515|0;HEAP32[_reorderBits+8>>2]=_reorderBits_MR59|0;HEAP32[_reorderBits+12>>2]=_reorderBits_MR67|0;HEAP32[_reorderBits+16>>2]=_reorderBits_MR74|0;HEAP32[_reorderBits+20>>2]=_reorderBits_MR795|0;HEAP32[_reorderBits+24>>2]=_reorderBits_MR102|0;HEAP32[_reorderBits+28>>2]=_reorderBits_MR122|0;HEAP32[__ZTVSt9bad_alloc+4>>2]=__ZTISt9bad_alloc;HEAP32[__ZTVSt20bad_array_new_length+4>>2]=__ZTISt20bad_array_new_length;__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([2,0,0,0,0],["i8*",0,0,0,0],ALLOC_STATIC);HEAP32[__ZTISt9bad_alloc>>2]=__ZTVN10__cxxabiv120__si_class_type_infoE+8|0;HEAP32[__ZTISt9bad_alloc+4>>2]=STRING_TABLE.__ZTSSt9bad_alloc|0;HEAP32[__ZTISt9bad_alloc+8>>2]=__ZTISt9exception;HEAP32[__ZTISt20bad_array_new_length>>2]=__ZTVN10__cxxabiv120__si_class_type_infoE+8|0;HEAP32[__ZTISt20bad_array_new_length+4>>2]=STRING_TABLE.__ZTSSt20bad_array_new_length|0;HEAP32[__ZTISt20bad_array_new_length+8>>2]=__ZTISt9bad_alloc;__ZNSt9bad_allocC1Ev=14;__ZNSt9bad_allocD1Ev=16;__ZNSt20bad_array_new_lengthC1Ev=18;__ZNSt20bad_array_new_lengthD1Ev=20;__ZNSt20bad_array_new_lengthD2Ev=16;FUNCTION_TABLE=[0,0,__ZNSt9bad_allocD2Ev,0,__ZNSt9bad_allocD0Ev,0,__ZNKSt9bad_alloc4whatEv,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthD0Ev,0,__ZNKSt20bad_array_new_length4whatEv,0,__ZNSt9bad_allocC2Ev,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthC2Ev,0,__ZNSt9bad_allocD2Ev,0];Module["FUNCTION_TABLE"]=FUNCTION_TABLE;function run(args){args=args||Module["arguments"];initRuntime();var ret=null;if(Module["_main"]){ret=Module.callMain(args);exitRuntime()}return ret}Module["run"]=run;if(Module["preRun"]){Module["preRun"]()}if(!Module["noInitialRun"]){var ret=run()}if(Module["postRun"]){Module["postRun"]()}Module["generateStructInfo"]=Runtime.generateStructInfo;Module["Decoder_Interface_init"]=_Decoder_Interface_init;Module["Decoder_Interface_Decode"]=_Decoder_Interface_Decode;Module["Decoder_Interface_exit"]=_Decoder_Interface_exit;Module["Encoder_Interface_init"]=_Encoder_Interface_init;Module["Encoder_Interface_Encode"]=_Encoder_Interface_Encode;Module["Encoder_Interface_exit"]=_Encoder_Interface_exit;return Module}();